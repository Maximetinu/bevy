var searchIndex = JSON.parse('{\
"bevy":{"doc":"","t":"DDAAALLLLLLAALLLLLLAALLLLALLLLAALLLLAAAALLALLLLLLLLLLAAAAAAAAAAAALLALLLLLLALLALLAADDDEDDDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNEEIDDNNNENNNNENNNNNNNNNNNNNENNNNNNNNNNNNNNDNNNNNNNNENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNSSNNNNNNNNNNNNNNNNNNENNNNNSNNNNNNNNENNNNNNNNNNNNNNNNNNENENNNNNNNNNNNNNNNNNNNDDDDGNNNNSNNENNNNNNNNNNDNNNNNNNDNNNNENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNDNNENNNNNNNNNNNNNNNNNNNNEEENDDNNNNNNNNNDNNNNDNNNNNNNNNNDNENNNNNSSSSLLLMLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLMMMMMMMMDDDNDNENENNNDNLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLMLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDENNNDNMMMNDDIYDNGYNDDDNDDDNIIDIEDDDDNDEDDDDDDLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLALLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMDLLLLLLLLLLMMLLLLLLLLMLLLLLLDYDDDDIIDDDDDDDDKKLLLMLLLMLMNIQYIIEDDEDEINNEDDNNDEDDIIGNNSENENNNIDQNNNESNNDNNDDENNNDDNNNNNNDNDNNNNNNNNNNNENNEEDDNNQNNDDNNEEDNNINNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMKKLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLKKLLLLOOLLLALLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAKLMALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKKKLLLLLLLALLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMNNNIEDDDEEDIIEIINNNDDDDNNNNGGNNNNNNNDGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLALLLLLLLLLMMLMAKLKLKLLLLLMKKKKKKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLKLLLKLLLMMMMMMMMMRDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDNENLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLEEGDIDNNNNRGNNDDDILLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLKLMLLMMKLMMKLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMNIYIEEEDDDENNNNNNNNENNNMKKMKMKKKKKMMMMMMMMNDDNNNNNNNINNNNNENNNDDENNNNNNNQIDEEENNNDEDNENQNNNENDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLKKLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMQIIQQDQLLLLLLLLLLLLLLLLLLLLLLLKKLLLLKLLNIGDDDIDDISIQQNSQDSSNSNDGEDSNNIQIDDDEDLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMKLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLMKLLLLLMLLLLLLLLLLLLLLLLLLLLLKLLLMLKLLALLLLLLLLLLLLMKKLLLKLLKLLMLLLLMMMKLLLMKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLMMLLLLLLLLLLLLLLLLLKGDIDDIQQDDGDDDMKMKMKMMKMKMKKMMMKMKLKMMDDDDDDIYDDDDIYLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMMMMLLMMLLLLLLLLLMALLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLDDDDDDMMMMMMMMDDLLLLLLAALLLLLALLLLAAALALLLLLLLLALLLLLLLAALLLLLLLLLLLLLALAALLLALLLLLLLLALLRDDDLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMMLLLLLLLLLLLLLLLLLLLNEDDDNSSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDENNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLRDDDDDLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLMMMMLLLLLLLMLLLLLLLLLLLLLLLLLLMLLLLLLMLLMLFLLLLLLLLLLLLLLLLLLLLMLLLLLMALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLMLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLRAARRRRRRRRRDRRDDEDNDNDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMFMLLLLLLLLLLLLLLLMLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLMMMLLLLLLLLLLLLLMMMLLLLLLMMMLFLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLMALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMFFMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLRAARRRRRRRRRRRRRRRRDRRRDLLLLLLLLMMLLLLLLLLALLLLMMLLLLMMLLLLMMLLLLMMLLLLLLLLLLLLLLLLAMMLLLLLLLLLLLLLLLLRDDDSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLADDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLRFDNDDDDDNNNENLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDMMMMMMMMMMMMMMMMMMMMMMMMMDDDRDRDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLMMLLLLLLLLLMMLLLLLLLLLMMLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLAMLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNENNNNNNEDDDDDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSDDDDDDSDSSSDDRSIDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLMLLLLLLLLLLKLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLMLLIENNLLLLLLLLLFLLLLLLLLLLLKLLLLLLLOAAAAAAAAAAAAAADDDDDDDSDSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIYDDDILLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLRIIQRDDDDDDLLLLLLLKLLLLLLLLLLLLLLKLKLKLLLLKLLKLLLLLLLLIYDDDDIDDSSNDQENDDDMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDISDLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIYDDDDDDGGDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDIYDDIYIDIIDDDDIYDDDIDDQQQIIIIDDDDDDDDDQQDQDDDIDDDDDDIYDDQDIYQIQIIYDDDLLLLLLLFFFKFKLLKLLKKFLLKFMKKFMLLFFKKKKLKKKKLKFFLLLFFFFFFFFKLLLFLKKLKKFFFLMKFKFDIDDDDDIFKKKDDNDIDDQDDDSSQNNNNNNNDDDENEGDDDEDGQIQDDIYLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDIDDDDDLLLMMMLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLMMMKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLMLLMMLLLMMMKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDGGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNGDGGGINNDNNNENNNNIIIEDNDDDNEEGDDDGDEDDIYDNQNNDNDDIYNGGDIYGGDNNNLLLLLLLMLLLLLLLLLLLFLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLFLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLMMMFFFFFFFFFFFFFFFFFDDDDDIDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLMKMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIDGDIIDDDDIDDIIGDDQQQQQDDDDIQQDDDDQQQQQDQQDGDIINEDDDDDIYDINDDQQDIQIDDNDDIYIGDDDKLLLKKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLKLLLLLLLLLLLLLLLLLLLLLLLLKLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLKLLLLKLLLLLLLLLLLLLLLLLLLLLALLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMKKLLLLLLLKKLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLGGGGGGRDDDIDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLMMLLLLLLLLLLLLMLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLALLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDMMMMMMMMMNNNNDNEDDDDDDNNNNNNNNLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLLLLLLMMMMMMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLMLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLMDDIINDNNDDDDDIEDIDDDDDDDDDKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFMMKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKLLLLLLLLLLLLLLFMLLKKLLLLLLLLLLLLLLLLLLKKKKKLLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKMMMMMMMDEDDDSSNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLALLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFNNDENDDENNNNNNNNNNNNDDDEDDDEEDEDDEDDNNNNNNNNNSNNNNNNNNNNNNNSNNNNNSNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNEDNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNDNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMNNNEDDEDNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLMMMMNNNNNNNNNNDNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNDDEDEDNNNNDNNNNNNNNNNNNNNNENNNNNNNNNNNNNNNNENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNDNNNNNNNNNNNNNNNNNDDNNNNNNNNNNNNNNNNNNNNNNMMMMMMMMMNNNENNNDDEDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLOOLLLLLOOMLLLOOLLLLLLMLALOOLLLLLOOOOOOOOOOOOSSSSSSSSSSDDDDDDDDDDDDDDDDDESSDDDSSSSSSSSSSSSSDDDDSSSSSSSSSSSSSSSSSSSSDDDDSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSDDDSSDDDDDDDDQQIDQQDIDQQISSSSSSSSSSSSSNNSSSSSSSSSSNNSSSSSSSSSSSSSSSSSSSSSSSSSNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAAFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFMMMMMLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAAFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKKKLLLLLLLLLLKLLLKLLLKLLLKLLLKLLLKKKLLLLLLLLLLKLLLKKKLLLLLLLLLLKKKLLLLLLLLLLKKLLLLLLLKKKLLLLLLLLLLKLLLKKKLLLLLLLLLLKKKLLLLLLLLLLKKLLLLLLLKKLLLLLLLKLLLKKLLLLLLLKKLLLLLLLKKLLLLLLLKKLLLLLLLLLLLKLLLKLLLKLLLKLLLKLLLKKKLLLLLLLLLLKLLLKKKLLLLLLLLLLKKKLLLLLLLLLLKKLLLLLLLKKKLLLLLLLLLLKLLLKKKLLLLLLLLLLKKKLLLLLLLLLLKKLLLLLLLKLLLLLLLLLLLLLKKLLLLLLLKKLLLLLLLKKLLLLLLLKKLLLLLLLKLLLKLLLKLLLKLLLKLLLKKLLLLLLLKLLLKKLLLLLLLKKLLLLLLLKKLLLLLLLKKLLLLLLLKLLLKKLLLLLLLKKLLLLLLLKKLLLLLLLKKLLLLLLLKLLLKKLLLLLLLKKLLLLLLLKKLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKKKLLLLLLLLLLKLLLKLLLKLLLKLLLKLLLKKKLLLLLLLLLLKLLLKKKLLLLLLLLLLKKKLLLLLLLLLLKKLLLLLLLKKKLLLLLLLLLLKLLLKKKLLLLLLLLLLKKKLLLLLLLLLLKKLLLLLLLKKLLLLLLLKLLLKKLLLLLLLKKLLLLLLLKKLLLLLLLKKKLLLLLLLLLLKLLLKLLLKLLLKLLLKLLLKKKLLLLLLLLLLKLLLKKKLLLLLLLLLLKKKLLLLLLLLLLKKLLLLLLLKKKLLLLLLLLLLKLLLKKKLLLLLLLLLLKKKLLLLLLLLLLKKLLLLLLLKKLLLLLLLKLLLKKLLLLLLLKKLLLLLLLKKLLLLLLLKKLLLLLLLKLLLKLLLKLLLKLLLKLLLKKLLLLLLLKLLLKKLLLLLLLKKLLLLLLLKKLLLLLLLKKLLLLLLLKLLLKKLLLLLLLKKLLLLLLLKKLLLLLLLKKLLLLLLLKLLLKKLLLLLLLKKLLLLLLLKKLLLLLLLMMMMMMMMMMMMMMMMMMMKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKKLLLLLLLKLLLKLLLKLLLKLLLKLLLKKLLLLLLLKLLLKKLLLLLLLKKLLLLLLLKKLLLLLLLKKLLLLLLLKLLLKKLLLLLLLKKLLLLLLLKKLLLLLLLKKLLLLLLLKLLLKKLLLLLLLKKLLLLLLLKKLLLLLLLKKLLLLLLLKLLLKLLLKLLLKLLLKLLLKKLLLLLLLKLLLKKLLLLLLLKKLLLLLLLKKLLLLLLLKKLLLLLLLKLLLKKLLLLLLLKKLLLLLLLKKLLLLLLLKKLLLLLLLKLLLKKLLLLLLLKKLLLLLLLKKLLLLLLLKKLLLLLLLKLLLKLLLKLLLKLLLKLLLKKLLLLLLLKLLLKKLLLLLLLKKLLLLLLLKKLLLLLLLKKLLLLLLLKLLLKKLLLLLLLKKLLLLLLLKKLLLLLLLKKLLLLLLLKLLLKKLLLLLLLKKLLLLLLLKKLLLLLLLDDDDDSSSSSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMDDDDIDDILLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSSSDDSSSSSSSSSSSSSDDDDSSSSSSSSSSSSSSSSSSSSSSSSSDDDDDSSSSSSSSSSSSSSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDDDFFFFFFFMMMMMMMMMMMMMMMMMMMMMMMMMMSSSDDDSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDFFFMMMMMMMMMDDDDDDIDEDDDDDDDDDDDDDDDDQQIDQQIDQQINNNNNNMMMMMMMMKMMMMKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKMMMMMMMMMMMMMKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKLKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKLLKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKMMMMMMMMMMMMMKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKMMMMMMMMMKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKQQIQQIQQIKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKLKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKLLKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKSSSSSSSSSSSSDDDSSSSSSSSSSSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDFFFMMMMMMMMMSSSSSSSNNNEDNNNSSSSSSNRRSDDDDDNNEEDDNDNSSSSSSSSSSSSSSSDNNDDDDGSSDNNDDDDDDSSRRNEDDDNDDDDDDDEDDSNNNEDNNRRSRSRSRRRRRRRSRSSSSSNIDIDDDDDDDNNDDDDDDDDDDDDNSSSSSNDDSNNERRRRRRRRRRRRRRRRSEGDNDDDNDDDDDDDDDDSRNGDDDSRSSSSSRSRDDEDDDDDDDEDDDENDDNDDDDDDNSSSSSSSSSSSSSSSRNNNNDDDDDDNMFMLLLLMLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLMLMMMMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLFLMMFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLMMMMLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLMLMMMLLLLMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMFFLLLLFFFLLFMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMFLLLLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLLLLLLLMMLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLMMMMMMMMMMMMMMMMMMMMMMMLLLMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLMMMMMMMMMMMMMMMMAFFFFFFFFFMMLLLLMMLLLMMLMLLMFFFMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLMLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMFMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMLLLLLLLLLMMMLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFFFMLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMRRRDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLMFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLARNEDNNDDDNNEDNNIDDNNNEGDDNNDDDDMLMMMMMMMMMMMMMMLMLLMMMMMMMMMMMMLMMMMMMMMMMMMMMMMMMMMMLMMMMMMMLLMMMMMMMMMMMMMMLMMMMMMMLMMMMMMMMMMMMMMMMMDRDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNDDNNNNDDNNEEENNENNDDDDDDNDDNNIYIEEEDDDNNNDNGDIDDNNNNNNNNNDNDDDDNDNNNNNNDNNIIIIYDDNNDNDDDDDNDNNNNNNNNNNDDDDDNNNEDGNNNNNDNIYNINNNNNNNNDIDNDEDDNNNNNNDIQQNNNNNDDNNYYDDDIIIEDDNENNYIEDDDNNNNNNNNNNNDDDDDDNNEIYDDDNNNDNNNNNNNNNNNNNNNNNNNNNNNNNNEDNNDDNENNNNNNNNEEDDNDIYINDDEDEDIIIDDDNDDNNNNEDEDENNEDNDNDINNNNNNDDDDDDDEDQQNNNNDQDNDEIIIINNNEEENNNNNNNNNNNNNEENDDNNNNNNNNNNNNNNDNNNDNDDDIDDNNENNDNNNEDNNNEDENENDNNNNDNNNNDNNNNNDDNNDDNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNDDDNNDNDNNNQQDDENNNEDQDDNNGNNNNNDDGNDININDDEDDNDDNNNNNNNEDNNNNDDDNDIDDDDIYDDDDIDDNNDDNDDNDDDIYNNNNNNNNNNNNNNNNNNNDNNNNNNDDDEDDDDNNNNQDNNNNNNNNNNNNNDDDDDDDDDDNNNNNNNDDDIYNQNNNNNNNIDNNNNIQIIYNNDDDNDEDEDDDDDDDEDDDDDDINIIYDNDDDDDDDDDNNNNENDNNNNEEDDDQQIDQQIDQQINNDDEDNNNNNNNNNNNNNNNNNNNNDDDEDDDDDNNNNNNNNNNNENNNNMMKKMLLMMMMLMLLLLMMLFFKFKFKMKKKKMMMMMMMMMMMLLXMMMMMMKKMMKMMMMMMMMMMMMMLLMKMMLKMMMKKKMMMMMMMMMMMMMMKMMMLMMMMMMMFMLOOKMFMMLLMLLMMMMMKKFMMMMMMMLMMMMKFLLMMKMMMMMMMFOOMMMMKKKKKKKKMMLMMMMMMMMMMMMMMMMMMMMMMMMMMMLMMKKMMMMMMMKKKKKKMMMMMMMMMMMMMMMMMMMMMMMMMMMMMFMMMMMMMMMMLLFMMFOOMMMMMMMMMMMMMMMMKKKMKKMMMMKKKKMMKLKLKKKLKKKKMMMMMKMMMMMMKMMLMMMMMMMMMMMMMMMMMMMMMMMMMLMKLLMKMMMMMMMMFMMFLMLMMMMMMMMMMLMLKMMMLKMMMMMMMLLKMMMMMMKKMMMMLMKKLKKLLLKXMKKKKKKKKKMKLMMMFFFFFFFFMMMMMMKLLLFLKMMMMMMMMLKLKKLKKKKKKKMMMMMMMMMMMAKMMMMMLMKMMMMFFFKMMMMMMALLMMMMMMMMMMMMMMMMMMMMMKLMMMMOOMMMMMMMMMMMMMMMMMKMMKLLKMFKMLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMKMMMMMMFOOMMMMMMMMMKKMMKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKMMMMMMMMMMMMMMKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKLKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKLLKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKMMMMMMMMMMMMMMKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKMMMMMMMMMMMMMMKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNDDEDDDNDDDDDDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLFFFFFFFDIDDDDDILLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFKLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDINNNNDDDDDDDDDIEINNNNDDIYIIIIIINNINNNNDDINNNNDDDDNDIYDDDEEIEEDINNNNNNNNDDSINNNNNNNNDDINNNNDDDIEIYDDDDIYIINNNDDDNNNNDEDEELKLLLLLLLFFFFKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKKKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFLLLLLLLLLLLLLLLLLLLLLLLLLKKKKLLLLLLKKLLLLLLLKKLLKKKKLLLLLLLLLKKKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLMKKKLLLLKLKLKKKLLLLLLKKKLLLLLLKKKLLLLKLLLLLLLLLLLKLLLLLLLOOOOOLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLKLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKKLLLLLLLLLLKKKKLLLLLLLLKKKLLLFFFFFFFLLLLLLLLLLLLLLLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLKLLLLLLLKLKLLLLLKLLLLLLLKLLLLLLLKLLLLLLLLLLLLLLLLLKLLLLLLLKLLLLLLLXKLLLLLLLKLLLLLLLLLKKLLLALKLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLAFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLKLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLKLLKLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMIDGIILLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIYIIIIYDDDIDIIIYKKKKKKKKLLLLKKKKKKKKKMKKKKKKKLKKLKLLKKLKKLLLKXLKKLLLKDNIDDDNDDEDDDDDDDDDMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLMMMMMMMMMMLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDGGDGQDILLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLNNDNDRRDNNNNNNNNNNNDNDNDELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLALLLLLLLLLLLLALLOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAAALLLLLLLLLLLLLLLLLLLLLLAALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAALLAAALAMAAAOAAALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLQQIDQQQLLLFLLLLLLLLLLKLLLLLLLLLLLLLFNNDDEDIDDDDDNNNNNDDDDENDNDEEDENDDDNNDNNNNLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLFLKLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLMMMMMMLLMMMLMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMMLLLLLLLLLLLLLLLLLLLLLLMFMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMSSSSSSSSSSNESSSSSSEDNSSDNNSSSSSSSSSSNNSSSISSSSSSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMDDIYDQQQDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIDDQQLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIYDQLLLLLLLLLLLFKLLLLLLLLLLLLLLLLRDDDLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLARSSSSSSSSNNNNEEDRNEDNNNDDDDGNNNDNNENNNNNNNNNNNNNNNNNNNNNNNNNNNNNRDEILLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLALMMLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLMLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLMMMSRDDEDDDNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLMLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDEDSNNSDDNDNDDENNDNDENNNNNDDDEDNMMLLLMLLMMLMLLLLMMMLMLLLLLMMMMMMLLLLLLMMMMLMMMMMMMMMMMLMLLLLMMMMMMLMMMMMMMMMMMMMMMMDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLQDQEDQIIDDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKFKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNENNEDDNNNDSNNENNNNNNNNNNNNNNINDNEEDENDIDEDDENNNNDDEEENNNNNIDQNLLLKKKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLMLLLLLLLLMLLLLKKLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMIIIDDDNQQIIEDDDQNDDQLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLKMLLLLLLLLLLLLLLKKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLKFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSSSNENNIYEINNSNNNNNNNNNNNNNNNNNDDDDDDDDDEEDEEDNDNNNGNDEGDDGDDDSSSSSSDDEDNNNNDDDGENNDDDNDNDNNNNNNNNNNNNNQNNNNNNNNNDNDNNDDDDNNNNNDDDDDDDDDDDNNNNNNNDSENENNNNNNNNNNNNNDNESNNEDINNNSSSSSGDGDDDNNENNIIINNNQQQNNNNNNNESSENNNNDSNNNNNSNNNNNNNDDESNNEDEEDDNNEDDENDSNNNNNNNNNNNNNSSSSDDDDDNNNDDDDNDNDNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNSSSDNNNNEDDDEDENDEDDNEEIEEDIYNNNNNNNNNNNNNEIDIEDIDNNNNNNNDNEDNNDNENDSDNEGEEDEDDNNNDEDNNNSNNNNNNNNNNNNNDNNNNDSSSNNNDDEDEDDDNNNNNSNNLLLLLMMMMLLLLMMMLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLMMMMMMMMLLLLLMMLKMLLLLLMMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMMLLLLLLLLMMLLLLLLLLMLLLLMMLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLMMLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLALMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLMLMLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMLMMMMMMLLLMMMMMMMMMMMMMMMMMLMMMMMMMMMMMMMMMMLMMMMMLLMMMMLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLMMLLLMLLMMLLLLLMMMLLLLMMLLLLLLLLLLLLLMMAMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMLLLLMLMLLLLMMKKKLLLMMMMMMMMMLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLMMLLMMMMMMMMMMMMMMMMDIDDSIIYDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOOOOLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLDIINIDEDIDGDDIDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLKMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLKLKLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLKMMIIIIKKKOIIOKKIIIIKKKOONDNNNNDDDDEDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMSSNSSDSSNSSSSENNNSNSNSSSSSNNSSSSSSESESSSSSSSSSSSSSSSSSSSSSSNDDDELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLMMLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMSNSNINDDDEENNDNSNDENDDDDDNNDNNNNNDNDENDNNNEEDEDDEENNNNNNNNNNNSNNNNNNNNNNNRNNRDEINNNENNINLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMFFLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLFFFFLLLLLLLLMLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLMMLLLLLLLLLMLLLLLLLLLLMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNDDDDSSNNDGEDDNDDNNNSSNNNRSDDDDDDDEDDNENDDDLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLMMLMMFFMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLMMMMAMLLLLLLLLLLLLLLLLLLLLLLLLAMLLLLNNNNNDGDDNNNDEDDNENDFFMMFMMDDDDDMMMMMFMMMAMMMMMMMDGDDDDLLLLLLLLLLLLLLLMMLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNDDDDDDNNNNNDDEDDDEDEDNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMALLLLLLLLLLLMMMFFAFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLMLLLMMMMMMMNNDDDDDEDNMMMMMMMMMMMMMMMRRDDRRRDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLENNNSRNNNDDDDGNSSDGDDNDDDSSDRRRRRRRSSIDDDDDDDDDDDDDDDSSSSNSDDDDDDRDDDDDDDDDDDDDDESSSSSSSSSSSSSSSSSSSSSDDEGDNNNSSNLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLMMLMLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLMLLMMMLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMAFFFFLFFLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLMMMLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNENNNNLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLDGDDDDDDMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMDDDIIIDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLALLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDIIILLFLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLNNENNDDDDDNDEDDNNNNDNDDDDEEDDDDDDDDNSNELLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFMFMMMLLLLLLLLLLLLLLLLLLLLLMMLMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFMLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNDNNNDDEEDDMMMMMMMMMMMMMMMMMMNNDNNNNDNDDDDDDEDEEDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLFFDNDNDDEDSDDINELLLLLLLLLLLLLLLLLLLLLLLLAALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLALLLLLLLLLLLLLLLLLLLLMLLALLLLLKLLLLLLLLLLLLLLLDIDLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLMKKLLLLLLLLLLLLDSSDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLENNNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFNEEENNNNNNNEDNNNNNDDNNNNNNNNNNNDNSSSSSSSSSSSSSSSSSSSSSSNNNNDNEEGDNNNNNNNNDDNNDNENNNNNNNNENENNNEDEDENNENNNEEENDENNNNNEINNNENDDDDDNNNNDNDENNNNENNNNNDEDNNNNNDDNNNNNNNNNNNNNNNNNNDNDRDDDDDDDDDDDDEDNNEENNNNNSSEMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLFLALMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMLLLMMLMMMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLMMLLMLLLLMMMLKLALLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAAMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLMMLLLLLMMMFLLLFMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLMMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLLMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAMMLLMMDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLFRAREDNDNINKMRDDDDDLLLLLLLLLLLLLLLMMMMMMMLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLMMMMMMMMMMLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMLLLLLLLLLMMMMMFDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLDNGEDDGGDGDDGGDGSSSSSSSSDNDDGIDSGGNDSLLOOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLFLLLLLLLLLLLOOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALKLLFLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLALLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLFNNIDDDELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAAALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMGDEEDDDDDDDDNNNDDDDDEDDNNNDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLDDEDDDDDNDDDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDEDDDDDNDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIIKKKKDDDDDDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLEEEIDNNIQNNELLLLALALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAALLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLKLLLLALLLLLLLLLLLLLLLLLLLLLALLALLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLALLLLLLALLLLLLLGDDDDIDDGDDDGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIDDIDIDDDFLLLLLLLLLLLLLLLLLLAFAFLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLLLLLLLAFALLLLLLLLLLLLLLLAFAFLLLLLLLLLLLLLLLLLLLFFFKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFLFFFFLAAFFLALKFKFLLLLLLLLKLFAFFLLLLLLLLLLFALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKFDLLLFLLLLLLLMLLFLLLLLLLLLMLLLLLLLFDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLFFFFFFFFDDDLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLFLLLLLLLLLLLLLLFFFDGGDDDDIDDGDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIIIINEIDINLKLLLLLLLLLLLLLLLLLLLLLLLLLLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLKKLLLLLLLLLLLLLKLLKMMMMEDNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLGGDDDDDDDDDDDIIDDDDDDGDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLKLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMDDGDDDDDDDIDDGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLGDDIDDDGDDIGILLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKLLLLKLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKFDDDGGEEQDIDDNQDNGDGGGEQLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKMMMKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLGDDDDDDDIIDDDDGDGDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLQNDNNEINIDEDNIDDDDQQIIQQQQQQIINIIIIIIIIIIIQQQQIIDDDDDQQQQIIQQQNDDDDDDNIIIDQQKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLKLKLLLLLLKLLLKLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLKLKLLLKLLLLLLLLLLLLLLLKLLLKLLKLLLKLLLLLLLLLLLKLLLKLKLLLLLLLLLLKLMMMKLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKLLLLLLLLLLLLLLLLLLLLLKLKKLFDLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLYISDSDSDIDDDISISLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLOOLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLKLOKLLLLLLLLLLLLLLLLLLLLOOAKLOLOKLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOOLLLLLALXLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLAKLOLLLLLLLKLLLLLLLLKKLLLKLLLKAOOALLLLLLLLLLLOOLLLLLLLLLLLLLLLLLLLLLLLLLLLOOLIDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLFFLKLLLLLLLLLLLLLLDDDDLLLLLLLLLLLLLLLFLLLLLLFFLLLLLLLLFDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIDDDDDDIDILLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIDDILLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDRSSSSSDDDDSDDSSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIDDDDDDLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDILLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLKLKLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLKLKLLLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFNNNNENNNNNNNNNNNENNNNNDDEEDDNNNNNNNDNNENNENNNNNNNENNNDNNNENNNNNNNDNNNNNNNNNNENNDNDDDNNNNNNNNNDNNNDDDDDDDEEDDEEDDDDEDNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMFFMLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMAMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMLMMMMMMMMMMMMNNNNNNNNNNNNNDEDDNNNNNNENNNNNNENENNNNNNNNNNNNDNNNNNNNNDDDEDNNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNNNEDDDALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLMLLLLLLLLLLLLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLMLLLLLLLLLMFMFMMDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["DefaultPlugins","MinimalPlugins","a11y","animation","app","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","asset","audio","borrow","borrow","borrow_mut","borrow_mut","build","build","core","core_pipeline","deref","deref","deref_mut","deref_mut","diagnostic","downcast","downcast","drop","drop","dynamic_plugin","ecs","from","from","from_sample_","from_sample_","gilrs","gizmos","gltf","hierarchy","init","init","input","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_sample","into_sample","log","math","pbr","prelude","ptr","reflect","render","scene","sprite","tasks","text","time","to_sample_","to_sample_","transform","try_from","try_from","try_into","try_into","type_id","type_id","ui","upcast","upcast","utils","vzip","vzip","window","winit","AccessibilityNode","AccessibilityPlugin","AccessibilityRequested","AccessibilitySystem","ActionRequest","Focus","ManageAccessibilityUpdates","Update","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","component_ids","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","dyn_clone","dyn_eq","dyn_hash","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_components","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_world","from_world","from_world","get","get","get_components","hash","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_configs","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_system_set","null_value","null_value","null_value","set","set","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Abbr","Action","ActionData","ActionHandler","ActionRequest","Affine","Alert","AlertDialog","Application","AriaCurrent","Article","Ascending","Assertive","Audio","AutoComplete","Banner","Blockquote","Blur","Both","BottomToTop","Button","Canvas","Caption","Caret","Cell","Center","Check","CheckBox","Checked","Circle","Click","ClickAncestor","Code","Collapse","ColorWell","Column","ColumnHeader","ComboBox","Comment","Complementary","ContentDeletion","ContentInfo","ContentInsertion","CustomAction","CustomAction","CustomAction","Dashed","Date","DateInput","DateTimeInput","Decrement","Default","DefaultActionVerb","DefaultButton","Definition","Descending","DescriptionList","DescriptionListDetail","DescriptionListTerm","Details","Dialog","Dialog","Directory","Disc","DisclosureTriangle","DocAbstract","DocAcknowledgements","DocAfterword","DocAppendix","DocBackLink","DocBiblioEntry","DocBiblioRef","DocBibliography","DocChapter","DocColophon","DocConclusion","DocCover","DocCredit","DocCredits","DocDedication","DocEndnote","DocEndnotes","DocEpigraph","DocEpilogue","DocErrata","DocExample","DocFootnote","DocForeword","DocGlossRef","DocGlossary","DocIndex","DocIntroduction","DocNoteRef","DocNotice","DocPageBreak","DocPageFooter","DocPageHeader","DocPageList","DocPart","DocPreface","DocPrologue","DocPullquote","DocQna","DocSubtitle","DocTip","DocToc","Document","Dotted","Double","EditableComboBox","EmailInput","EmbeddedObject","Emphasis","Expand","FLIP_X","FLIP_Y","False","False","Feed","Figure","FigureCaption","Focus","Focus","Footer","FooterAsNonLandmark","Form","GenericContainer","Grammar","GraphicsDocument","GraphicsObject","GraphicsSymbol","Grid","Grid","Group","HasPopup","Header","HeaderAsNonLandmark","Heading","HideTooltip","Horizontal","IDENTITY","Iframe","IframePresentational","Image","Image","ImeCandidate","Increment","Inline","InlineTextBox","Invalid","Jump","Justify","Keyboard","LayoutTable","LayoutTableCell","LayoutTableRow","Left","LeftToRight","Legend","LineBreak","Link","List","List","ListBox","ListBoxOption","ListGrid","ListItem","ListMarker","ListStyle","Listbox","Live","Location","Log","Main","Mark","Marquee","Math","Menu","Menu","MenuBar","MenuItem","MenuItemCheckBox","MenuItemRadio","MenuListOption","MenuListPopup","Meter","Mixed","MonthInput","MultilineTextInput","Navigation","Node","NodeBuilder","NodeClassSet","NodeId","NodeIdContent","Note","NumberInput","Numeric","NumericValue","ORIGIN","Off","Open","Orientation","Other","Other","Page","Pane","Paragraph","PasswordInput","PdfActionableHighlight","PdfRoot","PhoneNumberInput","PluginObject","Point","Polite","Portal","Pre","Press","ProgressIndicator","RadioButton","RadioGroup","Rect","Region","ReplaceSelectedText","Right","RightToLeft","Role","RootWebArea","Row","RowGroup","RowHeader","Ruby","RubyAnnotation","ScrollBackward","ScrollBar","ScrollDown","ScrollForward","ScrollIntoView","ScrollLeft","ScrollRight","ScrollTargetRect","ScrollToPoint","ScrollToPoint","ScrollUp","ScrollView","Search","SearchInput","Section","Select","SetScrollOffset","SetScrollOffset","SetSequentialFocusNavigationStartingPoint","SetTextSelection","SetTextSelection","SetValue","ShowContextMenu","ShowTooltip","Size","Slider","Solid","SortDirection","Spelling","SpinButton","Splitter","Square","StaticText","Status","Step","Strong","Subscript","Suggestion","Superscript","SvgRoot","Switch","Tab","TabList","TabPanel","Table","TableHeaderContainer","Term","Terminal","TextAlign","TextDecoration","TextDirection","TextInput","TextPosition","TextSelection","Time","Time","TimeInput","Timer","TitleBar","ToggleButton","Toolbar","Tooltip","TopToBottom","Tree","Tree","Tree","TreeGrid","TreeItem","TreeUpdate","True","True","True","True","Uncheck","Unknown","Unselect","Unsorted","UrlInput","Value","Vec2","Vertical","VerticalOffset","Video","Wavy","WebView","WeekInput","Window","ZERO","ZERO","ZERO","ZERO","abs","access_key","access_key","action","active_descendant","active_descendant","add","add","add","add","add","add_action","add_assign","add_assign","add_assign","add_assign","anchor","app_name","area","aria_current","aria_current","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_coeffs","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","auto_complete","auto_complete","background_color","background_color","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds","bounds","build","character_index","character_lengths","character_lengths","character_positions","character_positions","character_widths","character_widths","checked","checked","children","children","class_name","class_name","clear_access_key","clear_actions","clear_active_descendant","clear_aria_current","clear_auto_complete","clear_background_color","clear_bold","clear_bounds","clear_busy","clear_character_lengths","clear_character_positions","clear_character_widths","clear_checked","clear_children","clear_class_name","clear_clips_children","clear_color_value","clear_controls","clear_custom_actions","clear_default_action_verb","clear_described_by","clear_description","clear_details","clear_disabled","clear_error_message","clear_expanded","clear_flow_to","clear_font_family","clear_font_size","clear_font_weight","clear_foreground_color","clear_has_popup","clear_hidden","clear_hierarchical_level","clear_hovered","clear_html_tag","clear_in_page_link_target","clear_inner_html","clear_invalid","clear_is_grammar_error","clear_is_line_breaking_object","clear_is_page_breaking_object","clear_is_search_match","clear_is_spelling_error","clear_is_suggestion","clear_italic","clear_keyboard_shortcut","clear_labelled_by","clear_language","clear_linked","clear_list_style","clear_live","clear_live_atomic","clear_max_numeric_value","clear_member_of","clear_min_numeric_value","clear_modal","clear_multiselectable","clear_name","clear_next_on_line","clear_numeric_value","clear_numeric_value_jump","clear_numeric_value_step","clear_orientation","clear_overline","clear_placeholder","clear_popup_for","clear_position_in_set","clear_previous_on_line","clear_radio_group","clear_read_only","clear_required","clear_role_description","clear_scroll_x","clear_scroll_x_max","clear_scroll_x_min","clear_scroll_y","clear_scroll_y_max","clear_scroll_y_min","clear_selected","clear_size_of_set","clear_sort_direction","clear_state_description","clear_strikethrough","clear_table_cell_column_index","clear_table_cell_column_span","clear_table_cell_row_index","clear_table_cell_row_span","clear_table_column_count","clear_table_column_header","clear_table_column_index","clear_table_header","clear_table_row_count","clear_table_row_header","clear_table_row_index","clear_text_align","clear_text_direction","clear_text_selection","clear_tooltip","clear_touch_transparent","clear_transform","clear_underline","clear_url","clear_value","clear_vertical_offset","clear_visited","clear_word_lengths","clips_children","clips_children","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","cmp","cmp","color_value","color_value","compare","compare","contains","controls","controls","custom_actions","custom_actions","data","default","default","default","default","default","default","default","default","default_action_verb","default_action_verb","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","described_by","described_by","description","description","description","details","details","determinant","div","div","div_assign","div_assign","do_action","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","error_message","error_message","flow_to","flow_to","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","focus","focus","font_family","font_family","font_size","font_size","font_weight","font_weight","foreground_color","foreground_color","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_origin_size","from_points","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","has_popup","has_popup","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","height","height","hierarchical_level","hierarchical_level","html_tag","html_tag","id","in_page_link_target","in_page_link_target","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner_html","inner_html","intersect","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","invalid","invalid","inverse","is_bold","is_bold","is_busy","is_busy","is_disabled","is_disabled","is_empty","is_expanded","is_expanded","is_finite","is_grammar_error","is_grammar_error","is_hidden","is_hidden","is_hovered","is_hovered","is_italic","is_italic","is_line_breaking_object","is_line_breaking_object","is_linked","is_linked","is_live_atomic","is_live_atomic","is_modal","is_modal","is_multiselectable","is_multiselectable","is_nan","is_page_breaking_object","is_page_breaking_object","is_read_only","is_read_only","is_required","is_required","is_search_match","is_search_match","is_selected","is_selected","is_spelling_error","is_spelling_error","is_suggestion","is_suggestion","is_touch_transparent","is_touch_transparent","is_visited","is_visited","keyboard_shortcut","keyboard_shortcut","labelled_by","labelled_by","language","language","list_style","list_style","live","live","lock_global","map_unit_square","max_numeric_value","max_numeric_value","max_x","max_y","member_of","member_of","min_numeric_value","min_numeric_value","min_x","min_y","mul","mul","mul","mul","mul_assign","mul_assign","mul_assign","name","name","neg","new","new","new","new","new","new","new","new","next_on_line","next_on_line","node","nodes","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","numeric_value","numeric_value","numeric_value_jump","numeric_value_jump","numeric_value_step","numeric_value_step","orientation","orientation","origin","overline","overline","partial_cmp","partial_cmp","placeholder","placeholder","popup_for","popup_for","position_in_set","position_in_set","previous_on_line","previous_on_line","push_child","push_controlled","push_custom_action","push_described_by","push_detail","push_flow_to","push_labelled_by","push_to_radio_group","radio_group","radio_group","remove_action","role","role","role_description","role_description","root","rotate","scale","scale_non_uniform","scroll_x","scroll_x","scroll_x_max","scroll_x_max","scroll_x_min","scroll_x_min","scroll_y","scroll_y","scroll_y_max","scroll_y_max","scroll_y_min","scroll_y_min","set_access_key","set_active_descendant","set_aria_current","set_auto_complete","set_background_color","set_bold","set_bounds","set_busy","set_character_lengths","set_character_positions","set_character_widths","set_checked","set_children","set_class_name","set_clips_children","set_color_value","set_controls","set_custom_actions","set_default_action_verb","set_described_by","set_description","set_details","set_disabled","set_error_message","set_expanded","set_flow_to","set_font_family","set_font_size","set_font_weight","set_foreground_color","set_has_popup","set_hidden","set_hierarchical_level","set_hovered","set_html_tag","set_in_page_link_target","set_inner_html","set_invalid","set_is_grammar_error","set_is_line_breaking_object","set_is_page_breaking_object","set_is_search_match","set_is_spelling_error","set_is_suggestion","set_italic","set_keyboard_shortcut","set_labelled_by","set_language","set_linked","set_list_style","set_live","set_live_atomic","set_max_numeric_value","set_member_of","set_min_numeric_value","set_modal","set_multiselectable","set_name","set_next_on_line","set_numeric_value","set_numeric_value_jump","set_numeric_value_step","set_orientation","set_overline","set_placeholder","set_popup_for","set_position_in_set","set_previous_on_line","set_radio_group","set_read_only","set_required","set_role","set_role_description","set_scroll_x","set_scroll_x_max","set_scroll_x_min","set_scroll_y","set_scroll_y_max","set_scroll_y_min","set_selected","set_size_of_set","set_sort_direction","set_state_description","set_strikethrough","set_table_cell_column_index","set_table_cell_column_span","set_table_cell_row_index","set_table_cell_row_span","set_table_column_count","set_table_column_header","set_table_column_index","set_table_header","set_table_row_count","set_table_row_header","set_table_row_index","set_text_align","set_text_direction","set_text_selection","set_tooltip","set_touch_transparent","set_transform","set_underline","set_url","set_value","set_vertical_offset","set_visited","set_word_lengths","size","size_of_set","size_of_set","sort_direction","sort_direction","state_description","state_description","strikethrough","strikethrough","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","supports_action","supports_action","table_cell_column_index","table_cell_column_index","table_cell_column_span","table_cell_column_span","table_cell_row_index","table_cell_row_index","table_cell_row_span","table_cell_row_span","table_column_count","table_column_count","table_column_header","table_column_header","table_column_index","table_column_index","table_header","table_header","table_row_count","table_row_count","table_row_header","table_row_header","table_row_index","table_row_index","target","text_align","text_align","text_direction","text_direction","text_selection","text_selection","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_point","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_size","to_vec2","to_vec2","toolkit_name","toolkit_version","tooltip","tooltip","transform","transform","transform_rect_bbox","translate","tree","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","underline","underline","union","union_pt","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","url","url","value","value","vertical_offset","vertical_offset","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","width","width","with_origin","with_size","word_lengths","word_lengths","x","x","x0","x1","y","y","y0","y1","AnimationClip","AnimationPlayer","AnimationPlugin","Count","EntityPath","Forever","Keyframes","Never","RepeatAnimation","Rotation","Scale","Translation","VariableCurve","Weights","add_curve_to_path","animation_clip","animation_player","apply","apply","apply","apply","apply","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","asset_type_name","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone","clone","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","compatible_with","completions","component_ids","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","curves","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","duration","dyn_eq","dyn_hash","elapsed","eq","equivalent","equivalent","equivalent","equivalent","field","field","field","field","field","field","field_at","field_at","field_at","field_at","field_at","field_at","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_len","field_len","field_len","field_len","field_len","field_len","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_components","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_world","from_world","from_world","from_world","from_world","get_components","get_curves","get_curves_by_path","get_field","get_field","get_field","get_field","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","hash","index_of","index_of","init","init","init","init","init","init","init","insert","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_finished","is_paused","is_playback_reversed","is_playing_clip","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","keyframe_timestamps","keyframes","module_path","module_path","module_path","module_path","module_path","module_path","name_at","name_at","name_at","name_at","name_at","name_at","null_value","null_value","null_value","null_value","null_value","parts","pause","play","play_with_transition","prelude","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_hash","reflect_hash","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","repeat","repeat_mode","replay","resume","seek_time","seek_to","set","set","set","set","set","set","set_repeat","set_speed","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","speed","start","start_with_transition","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_info","type_info","type_info","type_info","type_info","type_info","type_path","type_path","type_path","type_path","type_path","type_path","upcast","upcast","upcast","upcast","upcast","upcast","upcast","variant_index","variant_index","variant_name","variant_name","variant_type","variant_type","visit_dependencies","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AnimationClip","AnimationPlayer","AnimationPlugin","EntityPath","Keyframes","Rotation","Scale","Translation","VariableCurve","Weights","keyframe_timestamps","keyframes","parts","Adding","App","AppExit","AppLabel","AppLabel","AppLabelId","Cleaned","CreatePlugin","DynamicPlugin","Finished","First","FixedUpdate","Last","Loop","Main","MainScheduleOrder","MainSchedulePlugin","Once","Plugin","PluginGroup","PluginGroupBuilder","Plugins","PluginsState","PostStartup","PostUpdate","PreStartup","PreUpdate","Ready","RunFixedUpdateLoop","RunMode","ScheduleRunnerPlugin","SpawnScene","Startup","StateTransition","SubApp","Update","add","add_after","add_audio_source","add_before","add_event","add_plugins","add_render_command","add_render_graph_edge","add_render_graph_edges","add_render_graph_node","add_render_sub_graph","add_schedule","add_state","add_systems","allow_ambiguous_component","allow_ambiguous_resource","app","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_label","as_label","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_str","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","ci_testing","cleanup","cleanup","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","configure_schedules","configure_set","configure_sets","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","disable","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast_mut","downcast_rc","downcast_ref","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_clone","dyn_clone","dyn_clone","dyn_clone","dyn_clone","dyn_clone","dyn_clone","dyn_clone","dyn_clone","dyn_clone","dyn_clone","dyn_clone","dyn_clone","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","edit_schedule","empty","enable","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extract","finish","finish","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_world","from_world","from_world","from_world","from_world","get_added_plugins","get_schedule","get_schedule_mut","get_sub_app","get_sub_app_mut","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init_asset","init_asset_loader","init_non_send_resource","init_resource","init_schedule","insert_after","insert_non_send_resource","insert_resource","insert_sub_app","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is","is_plugin_added","is_unique","labels","load_plugin","main_schedule_label","name","name","new","new","null_value","null_value","null_value","null_value","null_value","plugins_state","prelude","preregister_asset_loader","ready","register_asset_loader","register_asset_processor","register_asset_reflect","register_asset_source","register_diagnostic","register_type","register_type_data","remove_sub_app","run","run","run_loop","run_main","run_mode","run_once","runner","set","set","set_default_asset_processor","set_runner","start","sub_app","sub_app_mut","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","world","wait","CiTestingConfig","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","deref","deref_mut","deserialize","downcast","drop","exit_after","frame_time","from","from_sample_","init","into","into_any","into_any_arc","into_any_rc","into_sample","screenshot_frames","to_sample_","try_from","try_into","type_id","upcast","vzip","App","DynamicPlugin","First","FixedUpdate","Last","Main","Plugin","PluginGroup","PostStartup","PostUpdate","PreStartup","PreUpdate","SpawnScene","Startup","StateTransition","Update","build","build","cleanup","finish","is_unique","main_schedule_label","name","name","ready","runner","set","world","Added","Asset","Asset","Asset","AssetApp","AssetContainer","AssetEvent","AssetEvents","AssetHandleProvider","AssetId","AssetIndex","AssetLoadError","AssetLoader","AssetLoaderError","AssetMetaReadError","AssetMode","AssetPath","AssetPlugin","AssetReaderError","AssetReaderError","AssetServer","AssetServerMode","Assets","AssetsMutIterator","AsyncReadExt","AsyncWriteExt","BoxedFuture","CannotLoadIgnoredAsset","CannotLoadProcessedAsset","DEFAULT_UUID","DependencyLoadState","DeserializeMeta","DeserializeMetaError","DeserializeMetaError","DeserializeMinimal","DeserializeSettings","ErasedAssetLoader","ErasedLoadedAsset","Error","Failed","Failed","Failed","Handle","INVALID_UUID","Index","Index","InvalidGenerationError","InvalidSourceSyntax","Io","LoadContext","LoadDirectError","LoadState","Loaded","Loaded","Loaded","LoadedAsset","LoadedFolder","LoadedWithDependencies","Loading","Loading","Loading","MissingAssetHash","MissingAssetLoaderForExtension","MissingAssetLoaderForExtensionError","MissingAssetLoaderForTypeName","MissingAssetLoaderForTypeNameError","MissingAssetSourceError","MissingAssetSourceError","MissingLabel","MissingLabel","MissingProcessedAssetReaderError","MissingProcessedAssetReaderError","MissingSource","Modified","NotLoaded","NotLoaded","NotLoaded","ParseAssetPathError","Processed","Processed","ReadAssetBytesError","RecursiveDependencyLoadState","ReflectAsset","ReflectHandle","Removed","RequestedHandleTypeMismatch","Settings","Strong","Strong","StrongHandle","TrackAssets","Unprocessed","Unprocessed","UntypedAssetId","UntypedHandle","UpdateAssets","Uuid","Uuid","VisitAssetDependencies","Weak","Weak","add","add","add","add_labeled_asset","add_loaded_labeled_asset","apply","apply","apply","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_ref","as_ref","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","asset_events","asset_path","asset_type_id","asset_type_id","asset_type_id","asset_type_name","asset_type_name","asset_type_name","asset_type_name","assets_resource_type_id","begin_labeled_asset","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxed_reader","boxed_writer","build","bytes","chain","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_dynamic","clone_dynamic","clone_dynamic","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_owned","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_value","clone_value","clone_value","clone_value","clone_weak","clone_weak","close","cmp","cmp","cmp","cmp","cmp","cmp","compare","compare","compare","compare","compare","compare","component_ids","component_ids","component_ids","component_ids","contains","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","debug","default","default","default","default","default","default_meta","dependency","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize_meta","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast_handle_untyped","downcast_mut","downcast_rc","downcast_ref","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_clone","dyn_clone","dyn_clone","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","embedded_asset","embedded_path","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","error","extensions","extensions","extract","extract_component","field","field","field","field_at","field_at","field_at","field_at_mut","field_at_mut","field_at_mut","field_len","field_len","field_len","field_mut","field_mut","field_mut","file_path","finish","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_components","from_components","from_components","from_components","from_fd","from_filelike","from_into_filelike","from_into_socketlike","from_path","from_reflect","from_reflect","from_reflect","from_reflect","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_socketlike","from_type","from_type","from_world","from_world","from_world","from_world","from_world","get","get","get","get_asset_loader_with_extension","get_asset_loader_with_type_name","get_components","get_components","get_components","get_components","get_field","get_field_mut","get_full_extension","get_handle","get_handle_provider","get_handle_untyped","get_id_handle","get_id_handle_untyped","get_label_handle","get_labeled","get_load_state","get_load_states","get_mut","get_mut","get_or_insert_with","get_path","get_path_asset_loader","get_recursive_dependency_load_state","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_source","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_unchecked_mut","handle_internal_asset_events","handle_type_id","handles","has_labeled_asset","hash","hash","hash","hash","hash","hash","hash","hash","hash","id","id","ids","ids","in_current_span","in_current_span","in_current_span","in_current_span","in_current_span","in_current_span","in_current_span","in_current_span","index_of","index_of","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init_asset","init_asset_loader","insert","insert","insert","insert","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_configs","into_iter","into_owned","into_reflect","into_reflect","into_reflect","into_reflect","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_system_set","invalid","io","is","is_added","is_empty","is_empty","is_loaded_with_dependencies","is_modified","is_removed","is_strong","is_weak","iter","iter_fields","iter_fields","iter_fields","iter_labels","iter_mut","label","label_cow","labeled_asset_scope","len","len","load","load","load","load","load_direct","load_folder","load_internal_asset","load_internal_binary_asset","load_state","load_with_settings","load_with_settings","meta","meta_transform","mode","mode","module_path","module_path","module_path","module_path","module_path","module_path","name_at","name_at","name_at","new","new_with_dependencies","next","null_value","null_value","null_value","null_value","null_value","parent","parse","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","path","path","path","path","prelude","preregister_asset_loader","preregister_loader","processed_file_path","processor","read","read_asset_bytes","read_exact","read_to_end","read_to_string","read_vectored","recursive_dependency_load_state","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_hash","reflect_hash","reflect_hash","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","register_asset","register_asset_loader","register_asset_processor","register_asset_reflect","register_asset_source","register_loader","reload","remove","remove","remove_label","remove_untracked","reserve_handle","saver","serialize","serialize","set","set","set","set","set_default_asset_processor","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","source","source","source","source","take","take","take_label","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","track_assets","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_parse","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_info","type_info","type_info","type_info","type_name","type_name","type_path","type_path","type_path","type_path","type_path","type_path","typed","typed","typed","typed_debug_checked","typed_debug_checked","typed_unchecked","typed_unchecked","untyped","untyped","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","variant_index","variant_index","variant_name","variant_name","variant_type","variant_type","visit_dependencies","visit_dependencies","visit_dependencies","visit_dependencies","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","watch_for_changes_override","weak_from_u128","with_label","with_source","without_label","write","write_all","write_vectored","id","id","id","id","index","marker","uuid","actual_asset_name","base_path","error","error","label","loader_name","loader_name","path","path","path","path","path","requested","index","type_id","type_id","uuid","AddedAsset","AddedFolder","AddedMeta","AssetReader","AssetReaderError","AssetSource","AssetSourceBuilder","AssetSourceBuilders","AssetSourceEvent","AssetSourceId","AssetSources","AssetWatcher","AssetWriter","AssetWriterError","AsyncReadExt","AsyncWriteExt","Default","Io","Io","MissingAssetSourceError","MissingAssetWriterError","MissingProcessedAssetReaderError","MissingProcessedAssetWriterError","ModifiedAsset","ModifiedMeta","Name","NotFound","PathStream","Reader","RemovedAsset","RemovedFolder","RemovedMeta","RemovedUnknown","RenamedAsset","RenamedFolder","RenamedMeta","VecReader","Writer","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxed_reader","boxed_writer","build","build","build_sources","bytes","chain","clone","clone","clone_into","clone_into","clone_owned","clone_type_data","clone_type_data","close","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_eq","dyn_hash","embedded","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","event_receiver","file","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_world","from_world","from_world","gate_on_processor","gate_on_processor","gated","get","get_default_reader","get_default_watcher","get_default_writer","get_mut","hash","id","ids","in_current_span","in_current_span","in_current_span","in_current_span","in_current_span","in_current_span","init","init","init","init","init","init","init","init","init","init","init","init","init","init_default_source","insert","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_owned","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_directory","iter","iter_mut","iter_processed","iter_processed_mut","memory","new","new","null_value","null_value","null_value","platform_default","poll_read","processed_event_receiver","processed_reader","processed_reader","processed_watcher","processed_writer","processed_writer","processor_gated","read","read","read_directory","read_exact","read_meta","read_meta_bytes","read_to_end","read_to_string","read_vectored","reader","reader","remove","remove_assets_in_directory","remove_directory","remove_empty_directory","remove_meta","rename","rename_meta","should_process","source","source","take","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","watcher","with_processed_reader","with_processed_watcher","with_processed_writer","with_reader","with_watcher","with_writer","write","write","write_all","write_bytes","write_meta","write_meta_bytes","write_vectored","writer","writer","is_meta","new","new","new","old","old","old","path","EMBEDDED","EmbeddedAssetRegistry","EmbeddedWatcher","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","from","from","from_sample_","from_sample_","from_world","init","init","insert_asset","insert_meta","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_sample","into_sample","new","null_value","register_source","to_sample_","to_sample_","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","FileAssetReader","FileAssetWriter","FileWatcher","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","drop","drop","drop","from","from","from","from_sample_","from_sample_","from_sample_","get_base_path","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","is_directory","new","new","new","read","read_directory","read_meta","remove","remove_assets_in_directory","remove_directory","remove_empty_directory","remove_meta","rename","rename_meta","root_path","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","vzip","vzip","vzip","write","write_meta","GateOpener","GatedReader","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","clone_type_data","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","from","from","from_sample_","from_sample_","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_sample","into_sample","is_directory","new","open","read","read_directory","read_meta","to_owned","to_sample_","to_sample_","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","Data","Dir","DirStream","MemoryAssetReader","Static","Value","Vec","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_world","from_world","get_asset","get_dir","get_metadata","get_or_insert_dir","init","init","init","init","init","insert_asset","insert_asset_text","insert_meta","insert_meta_text","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","is_directory","new","null_value","null_value","path","poll_next","read","read_directory","read_meta","root","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","ProcessorGatedReader","TransactionLockedReader","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","from","from","from_sample_","from_sample_","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_sample","into_sample","is_directory","new","poll_read","read","read_directory","read_meta","to_sample_","to_sample_","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","AssetAction","AssetActionMinimal","AssetHash","AssetMeta","AssetMetaDyn","AssetMetaMinimal","Ignore","Ignore","Load","Load","META_FORMAT_VERSION","MetaTransform","Process","Process","ProcessDependencyInfo","ProcessedInfo","ProcessedInfoMinimal","Settings","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","asset","asset","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast_mut","downcast_mut","downcast_rc","downcast_rc","downcast_ref","downcast_ref","drop","drop","drop","drop","drop","drop","drop","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","from","from","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_world","full_hash","full_hash","hash","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is","is","loader_settings","loader_settings","loader_settings_mut","loader_settings_mut","meta_format_version","new","null_value","path","process_dependencies","processed_info","processed_info","processed_info","processed_info","processed_info_mut","processed_info_mut","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","loader","processor","settings","settings","loader","processor","Added","Asset","Asset","AssetApp","AssetEvent","AssetId","AssetMode","AssetPlugin","AssetServer","Assets","Handle","Index","LoadedWithDependencies","Modified","Processed","Removed","Strong","Strong","Unprocessed","UntypedHandle","Uuid","Weak","Weak","file_path","init_asset","init_asset_loader","mode","preregister_asset_loader","processed_file_path","register_asset_loader","register_asset_processor","register_asset_reflect","register_asset_source","set_default_asset_processor","watch_for_changes_override","id","id","id","id","index","marker","uuid","AssetLoadError","AssetProcessor","AssetProcessorData","AssetReaderError","AssetSaveError","AssetWriterError","DeserializeMetaError","DuplicateTransaction","EndedMissingTransaction","EntryErrors","ErasedProcessor","ExtensionRequired","Failed","FailedToReadDestinationPaths","FailedToReadSourcePaths","Finished","InitializeError","Initializing","InvalidLine","Io","LoadAndSave","LoadAndSaveSettings","LogEntryError","MissingAssetLoaderForExtension","MissingAssetLoaderForTypeName","MissingAssetWriterError","MissingProcessedAssetReaderError","MissingProcessedAssetWriterError","MissingProcessor","NonExistent","OutputLoader","Process","ProcessContext","ProcessError","ProcessResult","ProcessStatus","Processed","Processed","Processing","ProcessorAssetInfos","ProcessorState","ProcessorTransactionLog","ReadAssetMetaError","ReadLogError","ReadLogError","Settings","SkippedNotChanged","UnfinishedTransaction","UnrecoverableError","ValidateLogError","ValidateLogError","WriteLogError","WrongMetaType","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","asset_bytes","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","default","default","default_meta","default_meta","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize_meta","deserialize_meta","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_fd","from_filelike","from_into_filelike","from_into_socketlike","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_socketlike","from_world","from_world","get_default_processor","get_processor","get_source","get_state","in_current_span","in_current_span","in_current_span","in_current_span","in_current_span","in_current_span","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","listen_for_source_change_events","load_source_asset","loader_settings","new","new","null_value","null_value","process","process","process","process","process_assets","register_processor","saver_settings","serialize","server","set_default_processor","source","source","source","source","sources","start","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wait_until_finished","wait_until_initialized","wait_until_processed","err","err","err","path","path","path","Asset","AssetSaver","ErasedAssetSaver","Error","OutputLoader","SavedAsset","Settings","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","deref","deref","deref_mut","downcast","drop","from","from_loaded","from_sample_","get","get_erased_labeled","get_labeled","init","into","into_any","into_any_arc","into_any_rc","into_sample","iter_labels","save","save","to_sample_","try_from","try_into","type_id","type_name","upcast","vzip","Absolute","AddAudioSource","AudioBundle","AudioLoader","AudioPlugin","AudioSink","AudioSinkPlayback","AudioSource","AudioSourceBundle","CpalSample","DESPAWN","Decodable","Decoder","DecoderItem","Despawn","EQUILIBRIUM","Float","GlobalVolume","IDENTITY","LOOP","Loop","ONCE","Once","Pitch","PitchBundle","PlaybackMode","PlaybackSettings","REMOVE","Relative","Remove","Sample","Signed","Source","SpatialAudioSink","SpatialListener","SpatialScale","Volume","VolumeLevel","add_amp","add_audio_source","amplify","amplify","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_ref","asset_type_id","asset_type_name","asset_type_name","asset_type_name","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffered","build","bytes","channels","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","component_ids","component_ids","component_ids","component_ids","convert_samples","crate_name","crate_name","current_frame_len","decoder","decoder","decoder","default","default","default","default","default","default","default","default","default","default_meta","delay","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize_meta","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","duration","empty","empty","empty","encode_hex","encode_hex_upper","extensions","extensions","fade_in","fmt","fmt","fmt","fmt","fmt","fmt","fmt","frequency","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_components","from_components","from_components","from_components","from_sample","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","get","get_components","get_components","get_components","get_components","global_volume","high_pass","high_pass_with_q","init","init","init","init","init","init","init","init","init","init","init","init","init","init","insert","insert","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_paused","is_paused","is_paused","left_ear_offset","lerp","load","load","low_pass","low_pass_with_q","mix","mode","module_path","module_path","mul_amp","new","new","new","new","new","new_2d","new_absolute","new_relative","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","pausable","pause","pause","pause","paused","paused","periodic_access","play","play","play","prelude","reflect_crate_name","reflect_crate_name","reflect_module_path","reflect_module_path","reflect_short_type_path","reflect_short_type_path","reflect_type_ident","reflect_type_ident","reflect_type_path","reflect_type_path","repeat_infinite","reverb","right_ear_offset","sample_rate","saturating_add","set_ears_position","set_emitter_position","set_listener_position","set_speed","set_speed","set_speed","set_volume","set_volume","set_volume","settings","short_type_path","short_type_path","skip_duration","skippable","source","spatial","spatial_scale","speed","speed","speed","speed","speed","stop","stop","stop","stoppable","take_crossfade_with","take_duration","to_float_sample","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_signed_sample","toggle","total_duration","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_ident","type_ident","type_name","type_path","type_path","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","visit_dependencies","visit_dependencies","volume","volume","volume","volume","volume","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_spatial","with_speed","with_volume","zero_value","AudioBundle","AudioSink","AudioSinkPlayback","AudioSource","AudioSourceBundle","Decodable","Decoder","DecoderItem","GlobalVolume","Pitch","PitchBundle","PlaybackSettings","SpatialAudioSink","SpatialListener","bytes","decoder","duration","empty","frequency","is_paused","left_ear_offset","mode","pause","paused","play","right_ear_offset","set_speed","set_volume","settings","source","spatial","speed","speed","stop","toggle","volume","volume","volume","DebugName","DebugNameItem","FrameCount","FrameCountPlugin","Name","NonSendMarker","Pod","Pod","TaskPoolOptions","TaskPoolPlugin","TaskPoolThreadAssignmentPolicy","TypeRegistrationPlugin","Zeroable","Zeroable","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_ref","as_reflect","as_reflect_mut","as_str","async_compute","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","bytes_of","cast_slice","clone","clone","clone","clone","clone_dynamic","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_value","cmp","compare","component_ids","compute","crate_name","create_default_pools","debug","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_hash","entity","entity","eq","equivalent","equivalent","equivalent","equivalent","erased_serialize","fetch","field","field_at","field_at_mut","field_len","field_mut","filter_fetch","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_components","from_reflect","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_world","from_world","from_world","from_world","from_world","from_world","get_components","get_field","get_field_mut","get_represented_type_info","get_type_registration","hash","init","init","init","init","init","init","init","init","init","init","init_fetch","init_state","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_reflect","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","io","iter_fields","matches_component_set","max_threads","max_total_threads","min_threads","min_total_threads","module_path","mutate","name","name","name_at","new","null_value","null_value","null_value","null_value","null_value","null_value","partial_cmp","percent","prelude","reflect_crate_name","reflect_module_path","reflect_mut","reflect_owned","reflect_partial_eq","reflect_ref","reflect_short_type_path","reflect_type_ident","reflect_type_path","serialize","set","set","set_archetype","set_table","short_type_path","shrink","task_pool_options","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_ident","type_info","type_path","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update_archetype_component_access","update_component_access","update_frame_count","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_num_threads","zeroed","DebugName","FrameCountPlugin","Name","TaskPoolOptions","TaskPoolPlugin","TypeRegistrationPlugin","async_compute","compute","entity","io","max_total_threads","min_total_threads","name","task_pool_options","CorePipelinePlugin","Skybox","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","blit","bloom","borrow","borrow","borrow_mut","borrow_mut","build","clear_color","clone","clone_into","clone_type_data","component_ids","contrast_adaptive_sharpening","core_2d","core_3d","default","deferred","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","experimental","extract_component","from","from","from_components","from_sample_","from_sample_","from_world","fullscreen_vertex_shader","fxaa","get_components","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_sample","into_sample","msaa_writeback","null_value","prelude","prepass","to_owned","to_sample_","to_sample_","tonemapping","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","upscaling","vzip","vzip","BLIT_SHADER_HANDLE","BlitPipeline","BlitPipelineKey","BlitPlugin","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","blend_state","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","clone","clone_into","clone_type_data","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","drop","drop","drop","dyn_eq","dyn_hash","eq","equivalent","equivalent","equivalent","equivalent","finish","from","from","from","from_sample_","from_sample_","from_sample_","from_world","hash","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","sampler","samples","specialize","texture_bind_group","texture_format","to_owned","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","vzip","vzip","vzip","Additive","BloomCompositeMode","BloomPlugin","BloomPrefilterSettings","BloomSettings","EnergyConserving","NATURAL","OLD_SCHOOL","SCREEN_BLUR","apply","apply","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_reflect","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","as_reflect_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone_dynamic","clone_dynamic","clone_dynamic","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_value","clone_value","clone_value","component_ids","composite_mode","crate_name","crate_name","crate_name","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","drop","drop","drop","drop","dyn_eq","dyn_hash","eq","equivalent","equivalent","equivalent","equivalent","extract_component","field","field","field","field_at","field_at","field_at","field_at_mut","field_at_mut","field_at_mut","field_len","field_len","field_len","field_mut","field_mut","field_mut","finish","from","from","from","from","from_components","from_reflect","from_reflect","from_reflect","from_sample_","from_sample_","from_sample_","from_sample_","from_world","from_world","get_components","get_field","get_field","get_field_mut","get_field_mut","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_type_registration","get_type_registration","get_type_registration","hash","high_pass_frequency","index_of","init","init","init","init","intensity","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_reflect","into_reflect","into_reflect","into_sample","into_sample","into_sample","into_sample","iter_fields","iter_fields","iter_fields","low_frequency_boost","low_frequency_boost_curvature","module_path","module_path","module_path","name_at","name_at","name_at","null_value","null_value","prefilter_settings","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_hash","reflect_module_path","reflect_module_path","reflect_module_path","reflect_mut","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_ref","reflect_ref","reflect_ref","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_path","reflect_type_path","reflect_type_path","set","set","set","short_type_path","short_type_path","short_type_path","threshold","threshold_softness","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_ident","type_ident","type_ident","type_info","type_info","type_info","type_path","type_path","type_path","upcast","upcast","upcast","upcast","variant_index","variant_name","variant_type","vzip","vzip","vzip","vzip","ClearColor","ClearColorConfig","Custom","Default","None","apply","apply","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_dynamic","clone_dynamic","clone_into","clone_into","clone_type_data","clone_type_data","clone_value","clone_value","crate_name","crate_name","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","downcast","downcast","drop","drop","erased_serialize","extract_resource","field","field","field_at","field_at_mut","field_len","field_len","field_mut","field_mut","fmt","fmt","from","from","from_reflect","from_reflect","from_sample_","from_sample_","from_world","from_world","get_field","get_field_mut","get_represented_type_info","get_represented_type_info","get_type_registration","get_type_registration","index_of","init","init","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_reflect","into_reflect","into_sample","into_sample","iter_fields","iter_fields","module_path","module_path","name_at","null_value","null_value","reflect_crate_name","reflect_crate_name","reflect_hash","reflect_module_path","reflect_module_path","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_ref","reflect_ref","reflect_short_type_path","reflect_short_type_path","reflect_type_ident","reflect_type_ident","reflect_type_path","reflect_type_path","serialize","set","set","short_type_path","short_type_path","to_owned","to_owned","to_sample_","to_sample_","try_from","try_from","try_into","try_into","type_id","type_id","type_ident","type_ident","type_info","type_info","type_path","type_path","upcast","upcast","variant_index","variant_name","variant_type","vzip","vzip","CASNode","CASPipeline","CASPipelineKey","CASPlugin","ContrastAdaptiveSharpeningSettings","DenoiseCAS","ViewCASPipeline","apply","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone_dynamic","clone_dynamic","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_value","clone_value","component_ids","component_ids","component_ids","crate_name","crate_name","default","default","denoise","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_hash","enabled","eq","equivalent","equivalent","equivalent","equivalent","extract_component","field","field","field_at","field_at_mut","field_len","field_len","field_mut","field_mut","finish","from","from","from","from","from","from","from","from_components","from_components","from_components","from_reflect","from_reflect","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_world","from_world","from_world","from_world","get_components","get_components","get_components","get_field","get_field","get_field_mut","get_field_mut","get_represented_type_info","get_represented_type_info","get_type_registration","get_type_registration","hash","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_reflect","into_reflect","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","iter_fields","iter_fields","module_path","module_path","name_at","null_value","null_value","reflect_crate_name","reflect_crate_name","reflect_module_path","reflect_module_path","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_ref","reflect_ref","reflect_short_type_path","reflect_short_type_path","reflect_type_ident","reflect_type_ident","reflect_type_path","reflect_type_path","run","set","set","sharpening_strength","short_type_path","short_type_path","specialize","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_ident","type_ident","type_info","type_info","type_path","type_path","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update","vzip","vzip","vzip","vzip","vzip","vzip","vzip","CORE_2D","Camera2d","Camera2dBundle","Core2dPlugin","MainPass2dNode","Transparent2d","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_reflect","as_reflect_mut","batch_range","batch_range","batch_range_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","cached_pipeline","camera","camera_2d","camera_render_graph","clear_color","clone","clone_dynamic","clone_into","clone_type_data","clone_value","component_ids","crate_name","deband_dither","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","draw_function","draw_function","drop","drop","drop","drop","drop","dynamic_offset","dynamic_offset","dynamic_offset_mut","entity","entity","extract_component","extract_core_2d_camera_phases","field","field_at","field_at_mut","field_len","field_mut","from","from","from","from","from","from_components","from_reflect","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_world","from_world","from_world","frustum","get_components","get_field","get_field_mut","get_represented_type_info","get_type_registration","global_transform","graph","init","init","init","init","init","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_reflect","into_sample","into_sample","into_sample","into_sample","into_sample","iter_fields","module_path","name_at","new_with_far","null_value","null_value","pipeline","projection","reflect_crate_name","reflect_module_path","reflect_mut","reflect_owned","reflect_partial_eq","reflect_ref","reflect_short_type_path","reflect_type_ident","reflect_type_path","run","set","short_type_path","sort","sort_key","sort_key","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","tonemapping","transform","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_ident","type_info","type_path","upcast","upcast","upcast","upcast","upcast","update","visible_entities","vzip","vzip","vzip","vzip","vzip","NAME","input","node","VIEW_ENTITY","BLOOM","CONTRAST_ADAPTIVE_SHARPENING","END_MAIN_PASS_POST_PROCESSING","FXAA","MAIN_PASS","MSAA_WRITEBACK","TONEMAPPING","UPSCALING","AlphaMask3d","CORE_3D","CORE_3D_DEPTH_FORMAT","Camera3d","Camera3dBundle","Camera3dDepthLoadOp","Camera3dDepthTextureUsage","Clear","Core3dPlugin","Load","MainOpaquePass3dNode","MainTransparentPass3dNode","Opaque3d","Transparent3d","apply","apply","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_reflect","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","as_reflect_mut","batch_range","batch_range","batch_range","batch_range","batch_range","batch_range","batch_range_mut","batch_range_mut","batch_range_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","cached_pipeline","cached_pipeline","cached_pipeline","camera","camera_3d","camera_render_graph","check_msaa","clear_color","clone","clone","clone","clone_dynamic","clone_dynamic","clone_dynamic","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_value","clone_value","clone_value","color_grading","component_ids","crate_name","crate_name","crate_name","default","default","default","default","default","depth_load_op","depth_texture_usages","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","distance","distance","distance","dither","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","draw_function","draw_function","draw_function","draw_function","draw_function","draw_function","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dynamic_offset","dynamic_offset","dynamic_offset","dynamic_offset","dynamic_offset","dynamic_offset","dynamic_offset_mut","dynamic_offset_mut","dynamic_offset_mut","entity","entity","entity","entity","entity","entity","erased_serialize","extract_camera_prepass_phase","extract_component","extract_core_3d_camera_phases","field","field","field","field_at","field_at","field_at_mut","field_at_mut","field_len","field_len","field_len","field_mut","field_mut","field_mut","fmt","from","from","from","from","from","from","from","from","from","from","from","from_components","from_reflect","from_reflect","from_reflect","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_world","from_world","from_world","from_world","from_world","frustum","get_components","get_field","get_field","get_field_mut","get_field_mut","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_type_registration","get_type_registration","get_type_registration","global_transform","graph","index_of","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_reflect","into_reflect","into_reflect","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","iter_fields","iter_fields","iter_fields","module_path","module_path","module_path","name_at","name_at","null_value","null_value","null_value","null_value","null_value","pipeline","pipeline","pipeline","prepare_core_3d_depth_textures","prepare_prepass_textures","projection","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_hash","reflect_module_path","reflect_module_path","reflect_module_path","reflect_mut","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_ref","reflect_ref","reflect_ref","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_path","reflect_type_path","reflect_type_path","run","run","serialize","set","set","set","short_type_path","short_type_path","short_type_path","sort","sort","sort","sort_key","sort_key","sort_key","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","tonemapping","transform","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_ident","type_ident","type_ident","type_info","type_info","type_info","type_path","type_path","type_path","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","variant_index","variant_name","variant_type","visible_entities","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","NAME","input","node","VIEW_ENTITY","BLOOM","CONTRAST_ADAPTIVE_SHARPENING","COPY_DEFERRED_LIGHTING_ID","DEFERRED_PREPASS","END_MAIN_PASS","END_MAIN_PASS_POST_PROCESSING","END_PREPASSES","FXAA","MAIN_OPAQUE_PASS","MAIN_TRANSPARENT_PASS","MSAA_WRITEBACK","PREPASS","START_MAIN_PASS","TONEMAPPING","UPSCALING","AlphaMask3dDeferred","DEFERRED_LIGHTING_PASS_ID_DEPTH_FORMAT","DEFERRED_LIGHTING_PASS_ID_FORMAT","DEFERRED_PREPASS_FORMAT","Opaque3dDeferred","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","batch_range","batch_range","batch_range","batch_range","batch_range_mut","batch_range_mut","borrow","borrow","borrow_mut","borrow_mut","cached_pipeline","cached_pipeline","copy_lighting_id","deref","deref","deref_mut","deref_mut","distance","distance","downcast","downcast","draw_function","draw_function","draw_function","draw_function","drop","drop","dynamic_offset","dynamic_offset","dynamic_offset","dynamic_offset","dynamic_offset_mut","dynamic_offset_mut","entity","entity","entity","entity","from","from","from_sample_","from_sample_","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_sample","into_sample","node","pipeline_id","pipeline_id","sort","sort","sort_key","sort_key","to_sample_","to_sample_","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","COPY_DEFERRED_LIGHTING_ID_SHADER_HANDLE","CopyDeferredLightingIdNode","CopyDeferredLightingIdPlugin","DeferredLightingIdDepthTexture","NAME","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","component_ids","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","drop","drop","drop","finish","from","from","from","from_components","from_sample_","from_sample_","from_sample_","from_world","get_components","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","null_value","run","texture","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","vzip","vzip","vzip","DeferredGBufferPrepassNode","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","default","deref","deref_mut","downcast","drop","from","from_sample_","from_world","init","into","into_any","into_any_arc","into_any_rc","into_sample","null_value","run","to_sample_","try_from","try_into","type_id","upcast","vzip","taa","TemporalAntiAliasBundle","TemporalAntiAliasPlugin","TemporalAntiAliasSettings","apply","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_reflect","as_reflect_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","clone","clone_dynamic","clone_into","clone_type_data","clone_value","component_ids","crate_name","default","default","depth_prepass","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","drop","drop","drop","field","field_at","field_at_mut","field_len","field_mut","finish","from","from","from","from_components","from_reflect","from_sample_","from_sample_","from_sample_","from_world","from_world","get_components","get_field","get_field_mut","get_represented_type_info","get_type_registration","init","init","init","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_reflect","into_sample","into_sample","into_sample","iter_fields","jitter","module_path","motion_vector_prepass","name_at","null_value","null_value","reflect_crate_name","reflect_module_path","reflect_mut","reflect_owned","reflect_partial_eq","reflect_ref","reflect_short_type_path","reflect_type_ident","reflect_type_path","reset","set","settings","short_type_path","to_owned","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_ident","type_info","type_path","upcast","upcast","upcast","vzip","vzip","vzip","FULLSCREEN_SHADER_HANDLE","fullscreen_shader_vertex_state","CameraFxaaPipeline","Extreme","Fxaa","FxaaNode","FxaaPipeline","FxaaPipelineKey","FxaaPlugin","High","Low","Medium","Sensitivity","Ultra","apply","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_dyn_eq","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone_dynamic","clone_dynamic","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_value","clone_value","component_ids","component_ids","crate_name","crate_name","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_eq","dyn_hash","dyn_hash","edge_threshold","edge_threshold_min","enabled","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extract_component","field","field","field_at","field_at","field_at_mut","field_at_mut","field_len","field_len","field_mut","field_mut","finish","from","from","from","from","from","from","from","from_components","from_components","from_reflect","from_reflect","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_world","from_world","from_world","get_components","get_components","get_field","get_field_mut","get_represented_type_info","get_represented_type_info","get_str","get_type_registration","get_type_registration","hash","hash","index_of","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_reflect","into_reflect","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","iter_fields","iter_fields","module_path","module_path","name_at","name_at","null_value","null_value","pipeline_id","prepare_fxaa_pipelines","reflect_crate_name","reflect_crate_name","reflect_hash","reflect_module_path","reflect_module_path","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_ref","reflect_ref","reflect_short_type_path","reflect_short_type_path","reflect_type_ident","reflect_type_ident","reflect_type_path","reflect_type_path","run","set","set","short_type_path","short_type_path","specialize","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_ident","type_ident","type_info","type_info","type_path","type_path","upcast","upcast","upcast","upcast","upcast","upcast","upcast","variant_index","variant_name","variant_type","vzip","vzip","vzip","vzip","vzip","vzip","vzip","MsaaWritebackBlitPipeline","MsaaWritebackNode","MsaaWritebackPlugin","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","component_ids","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","drop","drop","drop","from","from","from","from_components","from_sample_","from_sample_","from_sample_","from_world","get_components","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","run","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","update","vzip","vzip","vzip","Camera2d","Camera2dBundle","Camera3d","Camera3dBundle","ClearColor","camera","camera","camera_2d","camera_3d","camera_render_graph","camera_render_graph","clear_color","clear_color","color_grading","deband_dither","depth_load_op","depth_texture_usages","dither","frustum","frustum","global_transform","global_transform","projection","projection","tonemapping","tonemapping","transform","transform","visible_entities","visible_entities","AlphaMask3dPrepass","DeferredPrepass","DepthPrepass","MOTION_VECTOR_PREPASS_FORMAT","MotionVectorPrepass","NORMAL_PREPASS_FORMAT","NormalPrepass","Opaque3dPrepass","ViewPrepassTextures","apply","apply","apply","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","batch_range","batch_range","batch_range","batch_range","batch_range_mut","batch_range_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cached_pipeline","cached_pipeline","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_value","clone_value","clone_value","clone_value","component_ids","component_ids","component_ids","component_ids","component_ids","crate_name","crate_name","crate_name","crate_name","default","default","default","default","deferred","deferred_lighting_pass_id","depth","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","distance","distance","downcast","downcast","downcast","downcast","downcast","downcast","downcast","draw_function","draw_function","draw_function","draw_function","drop","drop","drop","drop","drop","drop","drop","dynamic_offset","dynamic_offset","dynamic_offset","dynamic_offset","dynamic_offset_mut","dynamic_offset_mut","entity","entity","entity","entity","field","field","field","field","field_at","field_at","field_at","field_at","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_len","field_len","field_len","field_len","field_mut","field_mut","field_mut","field_mut","from","from","from","from","from","from","from","from_components","from_components","from_components","from_components","from_components","from_reflect","from_reflect","from_reflect","from_reflect","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_world","from_world","from_world","from_world","get_components","get_components","get_components","get_components","get_components","get_field","get_field","get_field","get_field","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_type_registration","get_type_registration","get_type_registration","get_type_registration","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_reflect","into_reflect","into_reflect","into_reflect","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","iter_fields","iter_fields","iter_fields","iter_fields","module_path","module_path","module_path","module_path","motion_vectors","name_at","name_at","name_at","name_at","node","normal","null_value","null_value","null_value","null_value","pipeline_id","pipeline_id","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","set","set","set","set","short_type_path","short_type_path","short_type_path","short_type_path","size","sort","sort","sort_key","sort_key","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_ident","type_ident","type_ident","type_ident","type_info","type_info","type_info","type_info","type_path","type_path","type_path","type_path","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","PrepassNode","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","default","deref","deref_mut","downcast","drop","from","from_sample_","from_world","init","into","into_any","into_any_arc","into_any_rc","into_sample","null_value","run","to_sample_","try_from","try_into","type_id","upcast","vzip","AcesFitted","AgX","BlenderFilmic","DebandDither","Disabled","Enabled","None","Reinhard","ReinhardLuminance","SomewhatBoringDisplayTransform","Tonemapping","TonemappingLuts","TonemappingNode","TonemappingPipeline","TonemappingPipelineKey","TonemappingPlugin","TonyMcMapface","ViewTonemappingPipeline","apply","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone","clone_dynamic","clone_dynamic","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_value","clone_value","component_ids","component_ids","component_ids","crate_name","crate_name","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extract_component","extract_component","extract_resource","field","field","field_at","field_at","field_at_mut","field_at_mut","field_len","field_len","field_mut","field_mut","finish","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_components","from_components","from_components","from_reflect","from_reflect","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_world","from_world","from_world","from_world","get_components","get_components","get_components","get_lut_bind_group_layout_entries","get_lut_bindings","get_represented_type_info","get_represented_type_info","get_type_registration","get_type_registration","hash","hash","hash","index_of","index_of","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_reflect","into_reflect","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_enabled","iter_fields","iter_fields","lut_placeholder","module_path","module_path","name_at","name_at","null_value","null_value","null_value","prepare_view_tonemapping_pipelines","reflect_crate_name","reflect_crate_name","reflect_hash","reflect_hash","reflect_module_path","reflect_module_path","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_ref","reflect_ref","reflect_short_type_path","reflect_short_type_path","reflect_type_ident","reflect_type_ident","reflect_type_path","reflect_type_path","run","set","set","short_type_path","short_type_path","specialize","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_ident","type_ident","type_info","type_info","type_path","type_path","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","variant_index","variant_index","variant_name","variant_name","variant_type","variant_type","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","UpscalingNode","UpscalingPlugin","ViewUpscalingPipeline","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","component_ids","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","drop","drop","drop","from","from","from","from_components","from_sample_","from_sample_","from_sample_","from_world","get_components","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","null_value","run","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","vzip","vzip","vzip","CPU_USAGE","Diagnostic","DiagnosticId","DiagnosticMeasurement","Diagnostics","DiagnosticsPlugin","DiagnosticsStore","ENTITY_COUNT","EntityCountDiagnosticsPlugin","FPS","FRAME_COUNT","FRAME_TIME","FrameTimeDiagnosticsPlugin","LogDiagnosticsPlugin","MAX_DIAGNOSTIC_NAME_WIDTH","MEM_USAGE","RegisterDiagnostic","SystemInformationDiagnosticsPlugin","add","add_measurement","add_measurement","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","average","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","clear_history","clone","clone_into","clone_type_data","cmp","compare","debug","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","diagnostic_system","diagnostic_system","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","duration","dyn_eq","dyn_hash","eq","equivalent","equivalent","equivalent","equivalent","filter","filtered","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_u128","from_world","from_world","from_world","from_world","from_world","from_world","from_world","get","get_max_history_length","get_measurement","get_mut","get_param","hash","history_len","id","init","init","init","init","init","init","init","init","init","init","init_state","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_enabled","iter","iter_mut","measurement","measurements","name","new","new_archetype","null_value","null_value","null_value","null_value","null_value","null_value","null_value","partial_cmp","register_diagnostic","smoothed","suffix","time","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","value","value","values","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wait_duration","with_smoothing_factor","with_suffix","DynamicPluginExt","DynamicPluginLoadError","Library","Plugin","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","deref","deref_mut","downcast","drop","dynamically_load_plugin","fmt","fmt","from","from_sample_","in_current_span","init","into","into_any","into_any_arc","into_any_rc","into_sample","load_plugin","to_sample_","to_string","try_from","try_into","type_id","upcast","vzip","all_tuples","archetype","bundle","change_detection","component","entity","event","prelude","query","reflect","removal_detection","schedule","storage","system","world","Archetype","ArchetypeComponentId","ArchetypeEntity","ArchetypeGeneration","ArchetypeId","ArchetypeRow","Archetypes","EMPTY","Edges","INVALID","INVALID","archetype_components_len","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_dyn_eq","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","cmp","compare","components","contains","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","edges","empty","entities","entity","entity_table_row","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_world","generation","get","get_add_bundle","get_archetype_component_id","get_param","get_remove_bundle","get_sparse_set_index","get_storage_type","get_take_bundle","hash","hash","id","index","index","index","index","index_mut","init","init","init","init","init","init","init","init","init_state","initial","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_empty","iter","len","len","new","new","null_value","partial_cmp","sparse_set_components","sparse_set_index","table_components","table_id","table_row","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Bundle","Bundle","BundleId","BundleInfo","Bundles","DynamicBundle","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","clone_type_data","components","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","drop","drop","drop","dyn_eq","dyn_hash","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from","from","from_sample_","from_sample_","from_sample_","from_world","get","get_id","get_param","get_sparse_set_index","hash","id","index","init","init","init","init_state","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","null_value","sparse_set_index","to_owned","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","vzip","vzip","vzip","CHECK_TICK_THRESHOLD","DetectChanges","DetectChangesMut","Inner","MAX_CHANGE_AGE","Mut","MutUntyped","NonSendMut","Ref","Res","ResMut","as_any","as_any_mut","as_bind_group_shader_type","as_mut","as_ref","borrow","borrow_mut","bypass_change_detection","bypass_change_detection","deref","deref_mut","downcast","drop","fmt","from","from_sample_","init","into","into_any","into_any_rc","into_inner","into_sample","is_added","is_added","is_changed","is_changed","last_changed","last_changed","map_unchanged","reborrow","replace_if_neq","set_changed","set_changed","set_if_neq","set_last_changed","set_last_changed","to_sample_","try_from","try_into","type_id","upcast","vzip","with_type","Component","Component","ComponentDescriptor","ComponentId","ComponentIdFor","ComponentInfo","ComponentStorage","ComponentTicks","Components","MAX","STORAGE_TYPE","SparseSet","SparseStorage","Storage","StorageType","Table","TableStorage","Tick","TickCells","added","added_tick","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","changed","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","cmp","compare","component_id","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_eq","dyn_eq","dyn_hash","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_world","from_world","get","get","get_id","get_info","get_info_unchecked","get_name","get_param","get_param","get_resource_id","get_sparse_set_index","hash","id","index","init","init","init","init","init","init","init","init","init","init","init","init_component","init_component_with_descriptor","init_non_send","init_resource","init_state","init_state","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_added","is_changed","is_empty","is_newer_than","is_send_and_sync","iter","last_changed_tick","layout","len","name","name","new","new","new","new_archetype","new_resource","new_with_layout","null_value","null_value","partial_cmp","resource_id","set","set_changed","sparse_set_index","storage_type","storage_type","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Entities","Entity","EntityLocation","EntityMapper","MapEntities","PLACEHOLDER","ReserveEntitiesIterator","alloc","alloc_at","apply","archetype_id","archetype_row","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_reflect","as_reflect_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","clone_value","cmp","compare","contains","crate_name","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","dyn_eq","dyn_hash","eq","eq","equivalent","equivalent","equivalent","equivalent","erased_serialize","fetch","flush","flush_and_reserve_invalid_assuming_no_entities","flush_as_invalid","fmt","fmt","fmt","free","from","from","from","from","from","from","from_bits","from_raw","from_reflect","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","generation","get","get_map","get_map_mut","get_or_reserve","get_param","get_represented_type_info","get_sparse_set_index","get_type_registration","hash","index","init","init","init","init","init","init_fetch","init_state","init_state","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_reflect","into_sample","into_sample","into_sample","into_sample","into_sample","is_empty","len","map_entities","matches_component_set","module_path","next","partial_cmp","reflect_crate_name","reflect_hash","reflect_module_path","reflect_mut","reflect_owned","reflect_partial_eq","reflect_ref","reflect_short_type_path","reflect_type_ident","reflect_type_path","reserve","reserve_entities","reserve_entity","resolve_from_id","serialize","set","set_archetype","set_table","short_type_path","shrink","size_hint","sparse_set_index","table_id","table_row","to_bits","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","total_count","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_ident","type_info","type_path","upcast","upcast","upcast","upcast","upcast","update_archetype_component_access","update_component_access","vzip","vzip","vzip","vzip","vzip","world_scope","Event","Event","EventId","EventIterator","EventIteratorWithId","EventReader","EventWriter","Events","ManualEventIterator","ManualEventIteratorWithId","ManualEventReader","apply","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clone","clone_into","clone_type_data","cmp","compare","count","count","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drain","drop","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_hash","eq","equivalent","equivalent","equivalent","equivalent","event_update_condition","event_update_system","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_world","from_world","get_event","get_param","get_param","get_reader","get_reader_current","hash","id","init","init","init","init","init","init","init","init_state","init_state","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_empty","is_empty","is_empty","iter","iter","iter_current_update_events","iter_with_id","iter_with_id","last","last","len","len","len","len","len","missed_events","new","new_archetype","new_archetype","next","next","nth","nth","null_value","null_value","oldest_event_count","oldest_id","partial_cmp","read","read","read_with_id","read_with_id","send","send","send_batch","send_default","send_default","size_hint","size_hint","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update","update_drain","vzip","vzip","vzip","vzip","vzip","vzip","vzip","without_id","Added","AnyOf","AppTypeRegistry","Bundle","Bundle","Changed","Commands","Component","Component","Condition","Deferred","DetectChanges","DetectChangesMut","Entity","EntityMut","EntityRef","EntityWorldMut","Event","Event","EventReader","EventWriter","Events","FromWorld","Has","In","In","In","Inner","IntoSystem","IntoSystemConfigs","IntoSystemSet","IntoSystemSetConfigs","Local","Mut","NextState","NonSend","NonSendMut","OnEnter","OnExit","OnTransition","Or","Out","Out","ParallelCommands","Param","ParamSet","Query","QueryState","ReadOnlySystem","Ref","ReflectComponent","ReflectResource","RemovedComponents","Res","ResMut","Resource","Resource","Schedule","Schedules","Set","State","States","States","Storage","System","System","SystemParamFunction","SystemSet","SystemSet","With","Without","World","after","after","ambiguous_with","ambiguous_with","ambiguous_with_all","ambiguous_with_all","and_then","any_component_removed","any_with_component","apply_deferred","apply_deferred","apply_state_transition","archetype_component_access","before","before","bypass_change_detection","chain","chain","check_change_tick","component_access","dbg","default_system_sets","distributive_run_if","dyn_clone","error","from","from_world","get_last_run","ignore","ignored_scheduling_ambiguities","in_set","in_set","in_state","info","initialize","into_system","into_system_set","is_added","is_anonymous","is_changed","is_exclusive","is_send","last_changed","map","name","not","on_event","or_else","pipe","replace_if_neq","resource_added","resource_changed","resource_changed_or_removed","resource_equals","resource_exists","resource_exists_and_changed","resource_exists_and_equals","resource_removed","run","run","run_if","run_if","run_once","run_readonly","run_unsafe","set_changed","set_if_neq","set_last_changed","set_last_run","state_changed","state_exists","state_exists_and_equals","system_type","to","type_id","unwrap","update_archetype_component_access","warn","Aligned","IsAligned","OwningPtr","Ptr","PtrMut","ThinSlicePtr","Unaligned","UnsafeCellDeref","dangling_with_align","deref","deref_mut","read","Access","Added","AliasedMutability","AnyOf","ArchetypeFilter","BatchingStrategy","Changed","Fetch","FilteredAccess","FilteredAccessSet","Has","IS_ARCHETYPAL","IS_DENSE","Item","MissingComponent","MissingReadAccess","MissingWriteAccess","MultipleEntities","NoEntities","NoSuchEntity","NoSuchEntity","NopWorldQuery","Or","QueryCombinationIter","QueryComponentError","QueryDoesNotMatch","QueryEntityError","QueryItem","QueryIter","QueryManyIter","QueryParIter","QuerySingleError","QueryState","ROQueryItem","ReadOnly","ReadOnlyWorldQuery","State","With","Without","WorldQuery","WorldQuery","access","access_mut","add","add_read","add_read","add_write","add_write","and_with","and_without","append_or","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_nop","as_readonly","batch_size_limits","batches_per_thread","batches_per_thread","batching_strategy","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","combined_access","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_eq","dyn_eq","dyn_eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend","extend","extend","extend_access","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch_next","fetch_next","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","fixed","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each","for_each","for_each_mut","for_each_mut","for_each_unchecked","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_world","from_world","from_world","from_world","get","get_component_unchecked_mut","get_conflicts","get_conflicts","get_conflicts","get_conflicts_single","get_manual","get_many","get_many_mut","get_mut","get_param","get_single","get_single_mut","get_single_unchecked","get_single_unchecked_manual","get_unchecked","grow","has_any_read","has_any_write","has_read","has_read_all","has_write","has_write_all","in_current_span","in_current_span","in_current_span","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","into_iter","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_compatible","is_compatible","is_compatible","is_empty","iter","iter_combinations","iter_combinations_mut","iter_combinations_unchecked","iter_manual","iter_many","iter_many_manual","iter_many_mut","iter_mut","iter_unchecked","len","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","max_batch_size","min_batch_size","new","new","new","new_archetype","next","next","next","null_value","null_value","null_value","par_iter","par_iter_mut","read_all","read_all","reads","reads_and_writes","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","single","single_mut","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetypes","update_archetypes_unsafe_world_cell","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","validate_world","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write_all","write_all","writes","AppTypeRegistry","ReflectBundle","ReflectBundleFns","ReflectCommandExt","ReflectComponent","ReflectComponentFns","ReflectMapEntities","ReflectResource","ReflectResourceFns","apply","apply","apply","apply","apply","apply","apply_or_insert","apply_or_insert","apply_or_insert","apply_or_insert","apply_or_insert","apply_or_insert","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","contains","contains","copy","copy","copy","copy","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","fn_pointers","fn_pointers","fn_pointers","from","from","from","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_type","from_type","from_type","from_type","from_world","from_world","from_world","from_world","from_world","init","init","init","init","init","init","init","init","insert","insert","insert","insert","insert","insert","insert_reflect","insert_reflect_with_registry","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","map_all_entities","map_entities","new","new","new","new","new","new","null_value","reflect","reflect","reflect","reflect","reflect_mut","reflect_mut","reflect_mut","reflect_unchecked_mut","reflect_unchecked_mut","reflect_unchecked_mut","reflect_unchecked_mut","remove","remove","remove","remove","remove","remove","remove_reflect","remove_reflect_with_registry","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","RemovedComponentEntity","RemovedComponentEvents","RemovedComponentReader","RemovedComponents","RemovedIter","RemovedIterWithId","apply","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone_into","clone_type_data","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","drop","drop","drop","drop","events","fmt","fmt","fmt","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_world","from_world","get","get_param","get_param","init","init","init","init","init_state","init_state","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","is_empty","iter","iter_with_id","len","new","new_archetype","null_value","null_value","read","read_with_id","reader","reader_mut","reader_mut_with_events","send","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","update","vzip","vzip","vzip","vzip","Ambiguity","AndThen","AnonymousSet","BoxedCondition","BoxedScheduleLabel","BoxedSystemSet","Condition","Configs","CrossDependency","Dag","DependencyCycle","DependencyLoop","Error","ExecutorKind","HierarchyCycle","HierarchyLoop","HierarchyRedundancy","Ignore","IntoSystemConfigs","IntoSystemSet","IntoSystemSetConfigs","LogLevel","MainThreadExecutor","MultiThreaded","MultiThreadedExecutor","NextState","NodeConfig","NodeConfig","NodeConfigs","NodeId","NotSystem","OnEnter","OnExit","OnTransition","OrElse","Schedule","ScheduleBuildError","ScheduleBuildSettings","ScheduleGraph","ScheduleLabel","ScheduleLabel","Schedules","Set","Set","SetsHaveOrderButIntersect","Simple","SimpleExecutor","SingleThreaded","SingleThreadedExecutor","State","States","States","System","SystemConfig","SystemConfigs","SystemSchedule","SystemSet","SystemSet","SystemSetConfig","SystemSetConfigs","SystemTypeSet","SystemTypeSetAmbiguity","Uninitialized","Warn","add_systems","after","after","after","after","allow_ambiguous_component","allow_ambiguous_resource","ambiguity_detection","ambiguous_with","ambiguous_with","ambiguous_with","ambiguous_with","ambiguous_with_all","ambiguous_with_all","ambiguous_with_all","ambiguous_with_all","and_then","apply","apply","apply_deferred","apply_deferred","apply_state_transition","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_ref","as_ref","as_ref","as_ref","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","before","before","before","before","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_schedule","cached_topsort","chain","chain","chain","chain","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_dynamic","clone_dynamic","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_value","clone_value","cmp","common_conditions","compare","configure_schedules","configure_set","configure_sets","conflicting_systems","conflicts_to_string","contains","crate_name","crate_name","default","default","default","default","default","default","default","default","default","default","default","default","default","dependency","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","distributive_run_if","distributive_run_if","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_clone","dyn_clone","dyn_clone","dyn_clone","dyn_clone","dyn_clone","dyn_clone","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","field","field","field_len","field_len","field_mut","field_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_reflect","from_reflect","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","get","get","get_build_settings","get_executor_kind","get_field","get_field","get_field_mut","get_field_mut","get_mut","get_represented_type_info","get_represented_type_info","get_set_at","get_system_at","get_type_registration","get_type_registration","graph","graph","graph_mut","hash","hash","hash","hash","hash","hash","hash","hash","hierarchy","hierarchy_detection","ignored_scheduling_ambiguities","in_current_span","in_set","in_set","in_set","in_set","in_set_dyn","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","initialize","initialize","inner_type_id","insert","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_configs","into_configs","into_reflect","into_reflect","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_system_set","into_system_set","into_system_set","is_anonymous","is_anonymous","is_set","is_system","iter","iter_fields","iter_fields","iter_ignored_ambiguities","iter_mut","module_path","module_path","new","new","new","new","new","new","new","new","new","new","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","or_else","partial_cmp","print_ignored_ambiguities","reflect_crate_name","reflect_crate_name","reflect_module_path","reflect_module_path","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_ref","reflect_ref","reflect_short_type_path","reflect_short_type_path","reflect_type_ident","reflect_type_ident","reflect_type_path","reflect_type_path","remove","remove_entry","report_sets","run","run_enter_schedule","run_if","run_if","run_if","run_if","run_if_dyn","set","set","set","set_apply_final_deferred","set_at","set_build_settings","set_executor_kind","short_type_path","short_type_path","system_at","system_sets","system_type","system_type","systems","to","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_ident","type_ident","type_info","type_info","type_path","type_path","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","use_shortnames","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","chained","collective_conditions","configs","any_component_removed","any_with_component","in_state","not","on_event","resource_added","resource_changed","resource_changed_or_removed","resource_equals","resource_exists","resource_exists_and_changed","resource_exists_and_equals","resource_removed","run_once","state_changed","state_exists","state_exists_and_equals","Column","ComponentSparseSet","ResourceData","Resources","SparseSet","SparseSetIndex","SparseSets","Storages","Table","TableId","TableRow","Tables","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clear","clear","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","component_count","contains","contains","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_eq","empty","entities","entity_capacity","entity_count","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_world","from_world","from_world","from_world","from_world","get","get","get","get","get","get","get_added_tick","get_added_tick","get_added_tick_unchecked","get_added_ticks_slice","get_changed_tick","get_changed_tick","get_changed_tick_unchecked","get_changed_ticks_slice","get_column","get_data","get_data","get_data_mut","get_data_ptr","get_data_slice","get_data_unchecked","get_mut","get_or_insert_with","get_sparse_set_index","get_ticks","get_ticks","get_ticks","get_ticks_unchecked","get_with_ticks","has_column","id","index","index","index","index_mut","indices","init","init","init","init","init","init","init","init","init","init","init","insert","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_present","item_layout","iter","iter","iter","iter","iter","iter_mut","len","len","len","len","len","len","new","new","new","non_send_resources","null_value","null_value","null_value","null_value","null_value","remove","resources","sparse_set_index","sparse_sets","tables","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","values","values_mut","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_capacity","Adapt","AdapterSystem","BoxedSystem","CombinatorSystem","Combine","Command","CommandQueue","Commands","Deferred","Despawn","EntityCommand","EntityCommands","ExclusiveFunctionSystem","ExclusiveSystemParam","ExclusiveSystemParamFunction","ExclusiveSystemParamItem","FunctionSystem","In","In","In","In","In","In","InitResource","Insert","InsertOrSpawnBatch","InsertResource","IntoSystem","Item","Item","Local","LogComponents","NonSend","NonSendMut","Out","Out","Out","Out","Out","ParallelCommands","Param","Param","ParamSet","PipeSystem","Query","ReadOnlySystem","ReadOnlySystemParam","Recursive","RegisteredSystemError","Remove","RemoveResource","RemovedSystem","Res","ResMut","Resource","Resource","RunSystem","RunSystemOnce","SelfRemove","Spawn","SpawnBatch","State","State","StaticSystemParam","System","System","SystemBuffer","SystemChangeTick","SystemId","SystemIdNotRegistered","SystemMeta","SystemName","SystemParam","SystemParam","SystemParamFunction","SystemParamItem","SystemState","TryInsert","WithEntity","adapt","add","add","add_child","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply_deferred","apply_deferred","apply_deferred","apply_deferred","apply_deferred","archetype_component_access","archetype_component_access","archetype_component_access","archetype_component_access","archetype_component_access","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_deref_mut","as_deref_mut","as_dyn_eq","as_mut","as_mut","as_ref","as_ref","as_ref","as_ref","assert_is_read_only_system","assert_is_system","assert_system_does_not_conflict","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bundle","bundle","bundle","bundles_iter","bundles_iter","bypass_change_detection","bypass_change_detection","check_change_tick","check_change_tick","check_change_tick","check_change_tick","check_change_tick","clear_children","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","combine","command_scope","commands","component","component_access","component_access","component_access","component_access","component_access","component_mut","contains","default","default_system_sets","default_system_sets","default_system_sets","default_system_sets","default_system_sets","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","despawn","despawn_descendants","despawn_recursive","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_hash","entity","entity","entity","entity","entity","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each","for_each_mut","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_world","from_world","get","get","get_component","get_component_mut","get_component_unchecked_mut","get_entity","get_inner","get_last_run","get_last_run","get_last_run","get_last_run","get_last_run","get_manual","get_manual_mut","get_many","get_many_mut","get_mut","get_mut","get_or_spawn","get_param","get_param","get_param","get_param","get_param","get_param","get_param","get_param","get_param","get_param","get_param","get_param","get_param","get_param","get_param","get_param","get_param","get_param","get_param","get_param","get_param","get_param","get_param","get_param","get_single","get_single_mut","get_unchecked","get_unchecked_manual","hash","id","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init_resource","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","initialize","initialize","initialize","initialize","initialize","initialized","insert","insert_children","insert_or_spawn_batch","insert_reflect","insert_reflect_with_registry","insert_resource","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_configs","into_configs","into_configs","into_configs","into_inner","into_inner","into_inner","into_inner","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_system","into_system","into_system","into_system","into_system","is_added","is_added","is_added","is_added","is_changed","is_changed","is_changed","is_changed","is_empty","is_exclusive","is_exclusive","is_exclusive","is_exclusive","is_exclusive","is_send","is_send","is_send","is_send","is_send","is_send","iter","iter_ancestors","iter_combinations","iter_combinations_mut","iter_combinations_unsafe","iter_descendants","iter_inner","iter_many","iter_many_mut","iter_many_unsafe","iter_mut","iter_unsafe","last_changed","last_changed","last_changed","last_run","lifetimeless","log_components","many","many_mut","map","map_unchanged","map_unchanged","matches_world","meta","name","name","name","name","name","name","name","new","new","new","new","new","new","new","new","new_archetype","new_archetype","new_archetype","new_archetype","new_archetype","new_archetype","new_archetype","new_archetype","new_archetype","new_archetype","new_archetype","new_archetype","new_archetype","new_from_entities","null_value","p0","p0","p0","p0","p0","p0","p0","p0","p1","p1","p1","p1","p1","p1","p1","p2","p2","p2","p2","p2","p2","p3","p3","p3","p3","p3","p4","p4","p4","p4","p5","p5","p5","p6","p6","p7","par_iter","par_iter_mut","pipe","push","push_children","reborrow","reborrow","remove","remove_children","remove_parent","remove_parent_in_place","remove_reflect","remove_reflect_with_registry","remove_resource","replace_children","resource","run","run","run","run","run","run","run_readonly","run_system","run_system_once","run_system_once_with","run_unsafe","run_unsafe","run_unsafe","run_unsafe","run_unsafe","set_changed","set_changed","set_last_changed","set_last_changed","set_last_run","set_last_run","set_last_run","set_last_run","set_last_run","set_non_send","set_parent","set_parent_in_place","single","single_mut","spawn","spawn_batch","spawn_empty","system","this_run","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_readonly","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_insert","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetypes","update_archetypes_unsafe_world_cell","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_children","with_entity","Read","SCommands","SQuery","SRes","SResMut","Write","CHECK_TICK_THRESHOLD","EntityMut","EntityRef","EntityWorldMut","FromWorld","Mut","Ref","SpawnBatchIter","World","WorldBorrow","WorldBorrowMut","WorldCell","WorldId","add_child","add_schedule","allow_ambiguous_component","allow_ambiguous_resource","archetype","archetype","archetype","archetypes","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_deref_mut","as_dyn_eq","as_mut","as_readonly","as_ref","as_ref","as_unsafe_world_cell","as_unsafe_world_cell_readonly","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bundles","bypass_change_detection","cell","change_tick","check_change_ticks","clear_all","clear_entities","clear_resources","clear_trackers","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","component_id","components","contains","contains","contains","contains_id","contains_id","contains_id","contains_non_send","contains_resource","contains_type_id","contains_type_id","contains_type_id","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","despawn","despawn","despawn_descendants","despawn_recursive","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_hash","entities","entities_mut","entity","entity_mut","eq","equivalent","equivalent","equivalent","equivalent","error","fetch","fetch","fetch","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_world","from_world","from_world","get","get","get","get","get_by_id","get_by_id","get_by_id","get_by_id","get_change_ticks","get_change_ticks","get_change_ticks","get_change_ticks_by_id","get_change_ticks_by_id","get_change_ticks_by_id","get_entity","get_entity_mut","get_many_entities","get_many_entities_mut","get_mut","get_mut","get_mut","get_mut_by_id","get_mut_by_id","get_mut_by_id","get_non_send_by_id","get_non_send_mut_by_id","get_non_send_resource","get_non_send_resource","get_non_send_resource_mut","get_non_send_resource_mut","get_or_spawn","get_param","get_param","get_ref","get_ref","get_ref","get_resource","get_resource","get_resource_by_id","get_resource_mut","get_resource_mut","get_resource_mut_by_id","get_resource_or_insert_with","get_sparse_set_index","hash","id","id","id","id","increment_change_tick","init","init","init","init","init","init","init","init","init","init","init","init_component","init_component_with_descriptor","init_fetch","init_fetch","init_fetch","init_non_send_resource","init_resource","init_state","init_state","init_state","init_state","init_state","insert","insert_by_id","insert_by_ids","insert_children","insert_non_send_by_id","insert_non_send_resource","insert_or_spawn_batch","insert_resource","insert_resource_by_id","inspect_entity","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_inner","into_inner","into_iter","into_iter","into_iter","into_iter","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_world_mut","is_added","is_added","is_changed","is_changed","is_resource_added","is_resource_changed","iter_entities","iter_entities_mut","last_change_tick","last_changed","last_changed","len","location","location","location","many_entities","many_entities_mut","map","map_unchanged","matches_component_set","matches_component_set","matches_component_set","new","new","new","new","next","non_send_resource","non_send_resource","non_send_resource_mut","non_send_resource_mut","null_value","push_children","query","query_filtered","read_change_tick","reborrow","reborrow","register_system","remove","remove_children","remove_non_send_by_id","remove_non_send_resource","remove_parent","remove_resource","remove_resource_by_id","remove_system","removed","removed_components","removed_with_id","resource","resource","resource_mut","resource_mut","resource_scope","run_schedule","run_system","run_system_once_with","schedule_scope","send_event","send_event","send_event_batch","send_event_batch","send_event_default","send_event_default","set_archetype","set_archetype","set_archetype","set_changed","set_last_changed","set_parent","set_table","set_table","set_table","shrink","shrink","shrink","size_hint","sparse_set_index","spawn","spawn_batch","spawn_empty","storages","take","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_run_schedule","try_schedule_scope","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unsafe_world_cell","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_component_access","update_component_access","update_component_access","update_location","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_children","world","world_mut","world_scope","TryRunScheduleError","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","deref","deref_mut","downcast","drop","fmt","fmt","from","from_sample_","in_current_span","init","into","into_any","into_any_arc","into_any_rc","into_sample","to_sample_","to_string","try_from","try_into","type_id","upcast","vzip","UnsafeEntityCell","UnsafeWorldCell","archetype","archetypes","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","bundles","change_tick","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","components","contains","contains_id","contains_type_id","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","entities","fmt","from","from","from_sample_","from_sample_","get","get_by_id","get_change_ticks","get_change_ticks_by_id","get_entity","get_mut","get_mut_by_id","get_non_send_resource","get_non_send_resource_by_id","get_non_send_resource_mut","get_non_send_resource_mut_by_id","get_ref","get_resource","get_resource_by_id","get_resource_mut","get_resource_mut_by_id","id","id","increment_change_tick","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_sample","into_sample","last_change_tick","location","removed_components","storages","to_owned","to_owned","to_sample_","to_sample_","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","world","world","world_metadata","world_mut","GilrsPlugin","RumbleSystem","as_any","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","borrow","borrow","borrow_mut","borrow_mut","build","clone","clone_into","clone_type_data","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","dyn_clone","dyn_eq","dyn_hash","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from","from_sample_","from_sample_","from_world","hash","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_configs","into_sample","into_sample","into_system_set","null_value","to_owned","to_sample_","to_sample_","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","AabbGizmo","AabbGizmoConfig","GizmoConfig","GizmoPlugin","aabb","apply","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_reflect","as_reflect_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone_dynamic","clone_into","clone_into","clone_type_data","clone_type_data","clone_value","color","component_ids","crate_name","default","default","default","default_color","depth_bias","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","draw_all","drop","drop","drop","drop","enabled","field","field_at","field_at_mut","field_len","field_mut","finish","fmt","from","from","from","from","from_components","from_reflect","from_sample_","from_sample_","from_sample_","from_sample_","from_world","from_world","from_world","get_components","get_field","get_field_mut","get_represented_type_info","get_type_registration","gizmos","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_reflect","into_sample","into_sample","into_sample","into_sample","iter_fields","line_perspective","line_width","module_path","name_at","null_value","null_value","null_value","prelude","reflect_crate_name","reflect_module_path","reflect_mut","reflect_owned","reflect_partial_eq","reflect_ref","reflect_short_type_path","reflect_type_ident","reflect_type_path","render_layers","set","short_type_path","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_ident","type_info","type_path","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","Arc2dBuilder","Circle2dBuilder","CircleBuilder","Gizmos","SphereBuilder","apply","arc_2d","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","circle","circle_2d","circle_segments","cuboid","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","get_param","init","init","init","init","init","init_state","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","line","line_2d","line_gradient","line_gradient_2d","linestrip","linestrip_2d","linestrip_gradient","linestrip_gradient_2d","new_archetype","ray","ray_2d","ray_gradient","ray_gradient_2d","rect","rect_2d","segments","segments","segments","sphere","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","AabbGizmo","AabbGizmoConfig","GizmoConfig","Gizmos","aabb","color","default_color","depth_bias","draw_all","enabled","line_perspective","line_width","render_layers","AssetLoadError","Base64Decode","BufferFormatUnsupported","GenerateTangentsError","Gltf","Gltf","GltfError","GltfExtras","GltfLoader","GltfMesh","GltfNode","GltfPlugin","GltfPrimitive","ImageError","InvalidImageMimeType","Io","MissingAnimationSampler","MissingBlob","MorphTarget","ReadAssetBytesError","UnsupportedPrimitive","add_custom_vertex_attribute","animations","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_reflect","as_reflect_mut","asset_type_id","asset_type_name","asset_type_name","asset_type_name","asset_type_name","asset_type_name","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","children","clone","clone","clone","clone","clone_dynamic","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_value","component_ids","crate_name","crate_name","crate_name","crate_name","crate_name","custom_vertex_attributes","default","default","default_meta","default_scene","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize_meta","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","extensions","extensions","extras","extras","extras","field","field_at","field_at_mut","field_len","field_mut","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_components","from_reflect","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_world","from_world","get_components","get_field","get_field_mut","get_represented_type_info","get_type_registration","in_current_span","init","init","init","init","init","init","init","init","insert","insert","insert","insert","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_reflect","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","iter_fields","load","load","material","material_extras","materials","mesh","mesh","meshes","module_path","module_path","module_path","module_path","module_path","name_at","named_animations","named_materials","named_meshes","named_nodes","named_scenes","nodes","null_value","null_value","primitives","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_mut","reflect_owned","reflect_partial_eq","reflect_ref","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","scenes","set","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","source","supported_compressed_formats","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_string","transform","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_ident","type_ident","type_ident","type_ident","type_ident","type_info","type_name","type_path","type_path","type_path","type_path","type_path","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","value","visit_dependencies","visit_dependencies","visit_dependencies","visit_dependencies","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","mode","AddChild","AncestorIter","BuildChildren","BuildWorldChildren","ChildAdded","ChildBuilder","ChildMoved","ChildRemoved","Children","ClearChildren","DescendantIter","DespawnChildrenRecursive","DespawnRecursive","DespawnRecursiveExt","HierarchyEvent","HierarchyPlugin","HierarchyQueryExt","InsertChildren","Parent","PushChildren","RemoveChildren","RemoveParent","ReplaceChildren","ReportHierarchyIssue","ValidParentCheckPlugin","WorldChildBuilder","add_child","add_child","add_command","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","as_slice","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","check_hierarchy_component_has_valid_parent","child","child","clear_children","clone","clone_dynamic","clone_dynamic","clone_into","clone_type_data","clone_value","clone_value","component_ids","component_ids","crate_name","crate_name","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","despawn_descendants","despawn_recursive","despawn_with_children_recursive","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_eq","enabled","entity","entity","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","field","field","field_len","field_len","field_mut","field_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_components","from_components","from_reflect","from_reflect","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_world","from_world","from_world","from_world","from_world","get","get_components","get_components","get_field","get_field","get_field_mut","get_field_mut","get_represented_type_info","get_represented_type_info","get_type_registration","get_type_registration","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","insert_children","insert_children","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","into_iter","into_reflect","into_reflect","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","iter_ancestors","iter_descendants","iter_fields","iter_fields","map_entities","map_entities","module_path","module_path","new","new","new","next","next","null_value","null_value","null_value","on_hierarchy_reports_enabled","parent","parent_entity","parent_entity","push_children","push_children","reflect_crate_name","reflect_crate_name","reflect_module_path","reflect_module_path","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_ref","reflect_ref","reflect_short_type_path","reflect_short_type_path","reflect_type_ident","reflect_type_ident","reflect_type_path","reflect_type_path","remove_children","remove_children","remove_parent","remove_parent","replace_children","set","set","set_parent","set_parent","short_type_path","short_type_path","sort_by","sort_by_cached_key","sort_by_key","sort_unstable_by","sort_unstable_by_key","spawn","spawn","spawn_empty","spawn_empty","swap","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_ident","type_ident","type_info","type_info","type_path","type_path","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_children","with_children","child","child","child","new_parent","parent","parent","previous_parent","Axis","ButtonState","Input","InputPlugin","InputSystem","MAX","MIN","Pressed","Released","any_just_pressed","any_just_released","any_pressed","apply","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_dyn_eq","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clear","clear_just_pressed","clear_just_released","clone","clone","clone","clone_dynamic","clone_dynamic","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_value","clone_value","common_conditions","crate_name","crate_name","debug","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","devices","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","dyn_clone","dyn_eq","dyn_eq","dyn_hash","dyn_hash","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","field","field","field_at","field_at","field_at_mut","field_at_mut","field_len","field_len","field_mut","field_mut","fmt","fmt","fmt","fmt","from","from","from","from","from","from_reflect","from_reflect","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_world","from_world","from_world","gamepad","get","get_field","get_field_mut","get_just_pressed","get_just_released","get_pressed","get_represented_type_info","get_represented_type_info","get_type_registration","get_type_registration","get_unclamped","hash","hash","index_of","init","init","init","init","init","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_configs","into_reflect","into_reflect","into_sample","into_sample","into_sample","into_sample","into_sample","into_system_set","is_pressed","iter_fields","iter_fields","just_pressed","just_released","keyboard","module_path","module_path","mouse","name_at","name_at","null_value","null_value","null_value","prelude","press","pressed","reflect_crate_name","reflect_crate_name","reflect_hash","reflect_module_path","reflect_module_path","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_ref","reflect_ref","reflect_short_type_path","reflect_short_type_path","reflect_type_ident","reflect_type_ident","reflect_type_path","reflect_type_path","release","release_all","remove","reset","reset_all","serialize","set","set","set","short_type_path","short_type_path","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","touch","touchpad","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_ident","type_ident","type_info","type_info","type_path","type_path","upcast","upcast","upcast","upcast","upcast","variant_index","variant_name","variant_type","vzip","vzip","vzip","vzip","vzip","input_just_pressed","input_just_released","input_pressed","input_toggle_active","Add","Axis","AxisSettings","AxisSettingsError","Button","ButtonAxisSettings","ButtonSettings","ButtonSettingsError","C","Connected","Connection","DPadDown","DPadLeft","DPadRight","DPadUp","DeadZoneLowerBoundOutOfRange","DeadZoneUpperBoundGreaterThanLiveZoneUpperBound","DeadZoneUpperBoundOutOfRange","Disconnected","East","Gamepad","GamepadAxis","GamepadAxisChangedEvent","GamepadAxisType","GamepadButton","GamepadButtonChangedEvent","GamepadButtonInput","GamepadButtonType","GamepadConnection","GamepadConnectionEvent","GamepadEvent","GamepadInfo","GamepadRumbleIntensity","GamepadRumbleRequest","GamepadSettings","Gamepads","LeftStickX","LeftStickY","LeftThumb","LeftTrigger","LeftTrigger2","LeftZ","LiveZoneLowerBoundGreaterThanDeadZoneLowerBound","LiveZoneLowerBoundOutOfRange","LiveZoneUpperBoundOutOfRange","MAX","Mode","North","Other","Other","PressThresholdOutOfRange","ReleaseThresholdGreaterThanPressThreshold","ReleaseThresholdOutOfRange","RightStickX","RightStickY","RightThumb","RightTrigger","RightTrigger2","RightZ","STRONG_MAX","Select","South","Start","Stop","Threshold","WEAK_MAX","West","Z","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","axis_settings","axis_type","axis_type","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","button","button_axis_settings","button_settings","button_type","button_type","clamp","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","connected","connection","contains","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","deadzone_lowerbound","deadzone_upperbound","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","default","default","default","default","default","default_axis_settings","default_button_axis_settings","default_button_settings","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","disconnected","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","filter","filter","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_world","from_world","from_world","from_world","from_world","gamepad","gamepad","gamepad","gamepad","gamepad","gamepad","gamepad_axis_event_system","gamepad_button_event_system","gamepad_connection_system","gamepad_event_system","get_axis_settings","get_button_axis_settings","get_button_settings","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","hash","hash","hash","hash","hash","high","id","in_current_span","in_current_span","index_of","index_of","index_of","index_of","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","iter","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","livezone_lowerbound","livezone_upperbound","low","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","name","name","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","new","new","new","new","new","new","new","new","null_value","null_value","null_value","null_value","null_value","press_threshold","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","release_threshold","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set_deadzone_lowerbound","set_deadzone_upperbound","set_livezone_lowerbound","set_livezone_upperbound","set_press_threshold","set_release_threshold","set_threshold","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","state","strong_motor","strong_motor","threshold","threshold","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_set_deadzone_lowerbound","try_set_deadzone_upperbound","try_set_livezone_lowerbound","try_set_livezone_upperbound","try_set_press_threshold","try_set_release_threshold","try_set_threshold","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","value","value","variant_index","variant_index","variant_index","variant_index","variant_name","variant_name","variant_name","variant_name","variant_type","variant_type","variant_type","variant_type","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weak_motor","weak_motor","deadzone_lowerbound","deadzone_upperbound","livezone_lowerbound","livezone_upperbound","press_threshold","release_threshold","duration","gamepad","gamepad","intensity","A","AbntC1","AbntC2","AltLeft","AltRight","Apostrophe","Apps","Asterisk","At","Ax","B","Back","Backslash","BracketLeft","BracketRight","C","Calculator","Capital","Caret","Colon","Comma","Compose","ControlLeft","ControlRight","Convert","Copy","Cut","D","Delete","Down","E","End","Equals","Escape","F","F1","F10","F11","F12","F13","F14","F15","F16","F17","F18","F19","F2","F20","F21","F22","F23","F24","F3","F4","F5","F6","F7","F8","F9","G","Grave","H","Home","I","Insert","J","K","Kana","Kanji","Key0","Key1","Key2","Key3","Key4","Key5","Key6","Key7","Key8","Key9","KeyCode","KeyboardInput","L","Left","M","Mail","MediaSelect","MediaStop","Minus","Mute","MyComputer","N","NavigateBackward","NavigateForward","NextTrack","NoConvert","Numlock","Numpad0","Numpad1","Numpad2","Numpad3","Numpad4","Numpad5","Numpad6","Numpad7","Numpad8","Numpad9","NumpadAdd","NumpadComma","NumpadDecimal","NumpadDivide","NumpadEnter","NumpadEquals","NumpadMultiply","NumpadSubtract","O","Oem102","P","PageDown","PageUp","Paste","Pause","Period","PlayPause","Plus","Power","PrevTrack","Q","R","Return","Right","S","ScanCode","Scroll","Semicolon","ShiftLeft","ShiftRight","Slash","Sleep","Snapshot","Space","Stop","SuperLeft","SuperRight","Sysrq","T","Tab","U","Underline","Unlabeled","Up","V","VolumeDown","VolumeUp","W","Wake","WebBack","WebFavorites","WebForward","WebHome","WebRefresh","WebSearch","WebStop","X","Y","Yen","Z","apply","apply","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_dyn_eq","as_reflect","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","as_reflect_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_dynamic","clone_dynamic","clone_dynamic","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_value","clone_value","clone_value","cmp","cmp","compare","compare","crate_name","crate_name","crate_name","debug","debug","debug","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","downcast","downcast","downcast","drop","drop","drop","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","field","field","field","field_at","field_at","field_at_mut","field_at_mut","field_len","field_len","field_len","field_mut","field_mut","field_mut","fmt","fmt","fmt","from","from","from","from_reflect","from_reflect","from_reflect","from_sample_","from_sample_","from_sample_","get_field","get_field","get_field_mut","get_field_mut","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_type_registration","get_type_registration","get_type_registration","hash","hash","index_of","init","init","init","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_reflect","into_reflect","into_reflect","into_sample","into_sample","into_sample","iter_fields","iter_fields","iter_fields","key_code","keyboard_input_system","module_path","module_path","module_path","name_at","name_at","partial_cmp","partial_cmp","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_hash","reflect_hash","reflect_module_path","reflect_module_path","reflect_module_path","reflect_mut","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_ref","reflect_ref","reflect_ref","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_path","reflect_type_path","reflect_type_path","scan_code","serialize","serialize","serialize","set","set","set","short_type_path","short_type_path","short_type_path","state","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_ident","type_ident","type_ident","type_info","type_info","type_info","type_path","type_path","type_path","upcast","upcast","upcast","variant_index","variant_name","variant_type","vzip","vzip","vzip","window","Left","Line","Middle","MouseButton","MouseButtonInput","MouseMotion","MouseScrollUnit","MouseWheel","Other","Pixel","Right","apply","apply","apply","apply","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","button","clone","clone","clone","clone","clone","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_value","clone_value","clone_value","clone_value","clone_value","crate_name","crate_name","crate_name","crate_name","crate_name","debug","debug","debug","debug","debug","delta","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","dyn_eq","dyn_eq","dyn_eq","dyn_hash","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","field","field","field","field","field","field_at","field_at","field_at","field_at","field_at","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_len","field_len","field_len","field_len","field_len","field_mut","field_mut","field_mut","field_mut","field_mut","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","get_field","get_field","get_field","get_field_mut","get_field_mut","get_field_mut","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","hash","index_of","index_of","init","init","init","init","init","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_sample","into_sample","into_sample","into_sample","into_sample","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","module_path","module_path","module_path","module_path","module_path","mouse_button_input_system","name_at","name_at","name_at","name_at","name_at","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_hash","reflect_hash","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","serialize","serialize","serialize","serialize","serialize","set","set","set","set","set","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","state","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_ident","type_ident","type_ident","type_ident","type_ident","type_info","type_info","type_info","type_info","type_info","type_path","type_path","type_path","type_path","type_path","unit","upcast","upcast","upcast","upcast","upcast","variant_index","variant_index","variant_name","variant_name","variant_type","variant_type","vzip","vzip","vzip","vzip","vzip","window","window","x","y","A","AbntC1","AbntC2","AltLeft","AltRight","Apostrophe","Apps","Asterisk","At","Ax","Axis","B","Back","Backslash","BracketLeft","BracketRight","C","C","Calculator","Capital","Caret","Colon","Comma","Compose","ControlLeft","ControlRight","Convert","Copy","Cut","D","DPadDown","DPadLeft","DPadRight","DPadUp","Delete","Down","E","East","End","Equals","Escape","F","F1","F10","F11","F12","F13","F14","F15","F16","F17","F18","F19","F2","F20","F21","F22","F23","F24","F3","F4","F5","F6","F7","F8","F9","G","Gamepad","GamepadAxis","GamepadAxisType","GamepadButton","GamepadButtonType","Gamepads","Grave","H","Home","I","Input","Insert","J","K","Kana","Kanji","Key0","Key1","Key2","Key3","Key4","Key5","Key6","Key7","Key8","Key9","KeyCode","L","Left","Left","LeftStickX","LeftStickY","LeftThumb","LeftTrigger","LeftTrigger2","LeftZ","M","Mail","MediaSelect","MediaStop","Middle","Minus","Mode","MouseButton","Mute","MyComputer","N","NavigateBackward","NavigateForward","NextTrack","NoConvert","North","Numlock","Numpad0","Numpad1","Numpad2","Numpad3","Numpad4","Numpad5","Numpad6","Numpad7","Numpad8","Numpad9","NumpadAdd","NumpadComma","NumpadDecimal","NumpadDivide","NumpadEnter","NumpadEquals","NumpadMultiply","NumpadSubtract","O","Oem102","Other","Other","Other","P","PageDown","PageUp","Paste","Pause","Period","PlayPause","Plus","Power","PrevTrack","Q","R","Return","Right","Right","RightStickX","RightStickY","RightThumb","RightTrigger","RightTrigger2","RightZ","S","ScanCode","Scroll","Select","Semicolon","ShiftLeft","ShiftRight","Slash","Sleep","Snapshot","South","Space","Start","Stop","SuperLeft","SuperRight","Sysrq","T","Tab","TouchInput","Touches","U","Underline","Unlabeled","Up","V","VolumeDown","VolumeUp","W","Wake","WebBack","WebFavorites","WebForward","WebHome","WebRefresh","WebSearch","WebStop","West","X","Y","Yen","Z","Z","axis_type","button_type","force","gamepad","gamepad","id","id","phase","position","Calibrated","Canceled","Ended","ForceTouch","Moved","Normalized","Started","Touch","TouchInput","TouchPhase","Touches","any_just_canceled","any_just_pressed","any_just_released","apply","apply","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_reflect","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","as_reflect_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_dynamic","clone_dynamic","clone_dynamic","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_value","clone_value","clone_value","crate_name","crate_name","crate_name","debug","debug","debug","default","delta","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","distance","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","dyn_eq","dyn_hash","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","field","field","field","field_at","field_at","field_at","field_at_mut","field_at_mut","field_at_mut","field_len","field_len","field_len","field_mut","field_mut","field_mut","first_pressed_position","fmt","fmt","fmt","fmt","fmt","force","force","from","from","from","from","from","from","from_reflect","from_reflect","from_reflect","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_world","get_field","get_field_mut","get_pressed","get_released","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_type_registration","get_type_registration","get_type_registration","hash","id","id","index_of","index_of","init","init","init","init","init","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_reflect","into_reflect","into_reflect","into_sample","into_sample","into_sample","into_sample","into_sample","iter","iter_fields","iter_fields","iter_fields","iter_just_canceled","iter_just_pressed","iter_just_released","just_canceled","just_pressed","just_released","module_path","module_path","module_path","name_at","name_at","name_at","null_value","phase","position","position","previous_force","previous_position","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_hash","reflect_hash","reflect_module_path","reflect_module_path","reflect_module_path","reflect_mut","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_ref","reflect_ref","reflect_ref","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_path","reflect_type_path","reflect_type_path","serialize","serialize","serialize","set","set","set","short_type_path","short_type_path","short_type_path","start_force","start_position","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","touch_screen_input_system","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_ident","type_ident","type_ident","type_info","type_info","type_info","type_path","type_path","type_path","upcast","upcast","upcast","upcast","upcast","variant_index","variant_index","variant_name","variant_name","variant_type","variant_type","vzip","vzip","vzip","vzip","vzip","altitude_angle","force","max_possible_force","TouchpadMagnify","TouchpadRotate","apply","apply","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_dynamic","clone_dynamic","clone_into","clone_into","clone_type_data","clone_type_data","clone_value","clone_value","crate_name","crate_name","debug","debug","deref","deref","deref_mut","deref_mut","deserialize","deserialize","downcast","downcast","drop","drop","eq","eq","erased_serialize","erased_serialize","field","field","field_len","field_len","field_mut","field_mut","fmt","fmt","from","from","from_reflect","from_reflect","from_sample_","from_sample_","get_field","get_field","get_field_mut","get_field_mut","get_represented_type_info","get_represented_type_info","get_type_registration","get_type_registration","init","init","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_reflect","into_reflect","into_sample","into_sample","iter_fields","iter_fields","module_path","module_path","reflect_crate_name","reflect_crate_name","reflect_module_path","reflect_module_path","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_ref","reflect_ref","reflect_short_type_path","reflect_short_type_path","reflect_type_ident","reflect_type_ident","reflect_type_path","reflect_type_path","serialize","serialize","set","set","short_type_path","short_type_path","to_owned","to_owned","to_sample_","to_sample_","try_from","try_from","try_into","try_into","type_id","type_id","type_ident","type_ident","type_info","type_info","type_path","type_path","upcast","upcast","vzip","vzip","Level","LogPlugin","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","build","debug","debug_span","default","deref","deref_mut","downcast","drop","error","error_span","filter","from","from_sample_","from_world","info","info_span","init","into","into_any","into_any_arc","into_any_rc","into_sample","level","null_value","prelude","to_sample_","trace","trace_span","try_from","try_into","type_id","upcast","vzip","warn","warn_span","debug","debug_span","error","error_span","info","info_span","trace","trace_span","warn","warn_span","AXES","AXES","AXES","AXES","AXES","AXES","AXES","AXES","AXES","AXES","Affine2","Affine3","Affine3A","BVec2","BVec3","BVec3A","BVec4","BVec4A","DAffine2","DAffine3","DMat2","DMat3","DMat4","DQuat","DVec2","DVec3","DVec4","EulerRot","FALSE","FALSE","I64Vec2","I64Vec3","I64Vec4","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IDENTITY","INFINITY","INFINITY","INFINITY","INFINITY","IRect","IVec2","IVec3","IVec4","MAX","MAX","MAX","MAX","MAX","MAX","MAX","MAX","MAX","MAX","MIN","MIN","MIN","MIN","MIN","MIN","MIN","MIN","MIN","MIN","Mat2","Mat3","Mat3A","Mat4","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NEG_INFINITY","NEG_INFINITY","NEG_INFINITY","NEG_INFINITY","NEG_ONE","NEG_ONE","NEG_ONE","NEG_ONE","NEG_ONE","NEG_ONE","NEG_ONE","NEG_W","NEG_W","NEG_X","NEG_X","NEG_X","NEG_X","NEG_X","NEG_X","NEG_X","NEG_Y","NEG_Y","NEG_Y","NEG_Y","NEG_Y","NEG_Y","NEG_Y","NEG_Z","NEG_Z","NEG_Z","NEG_Z","NEG_Z","ONE","ONE","ONE","ONE","ONE","ONE","ONE","ONE","ONE","ONE","Quat","Ray","Rect","TRUE","TRUE","U64Vec2","U64Vec3","U64Vec4","URect","UVec2","UVec3","UVec4","Vec2","Vec2","Vec2","Vec2Swizzles","Vec3","Vec3","Vec3","Vec3A","Vec3Swizzles","Vec4","Vec4","Vec4","Vec4Swizzles","W","W","W","X","X","X","X","X","X","X","X","X","X","XYZ","XZY","Y","Y","Y","Y","Y","Y","Y","Y","Y","Y","YXZ","YZX","Z","Z","Z","Z","Z","Z","Z","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZXY","ZYX","abs","abs","abs","abs","abs","abs","abs","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_mat2","add_mat3","add_mat3","add_mat4","all","all","angle_between","angle_between","angle_between","angle_between","any","any","any_orthogonal_vector","any_orthogonal_vector","any_orthonormal_pair","any_orthonormal_pair","any_orthonormal_vector","any_orthonormal_vector","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dmat3","as_dvec2","as_dvec2","as_dvec3","as_dvec3","as_dvec3","as_dvec4","as_dvec4","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_f32","as_i64vec2","as_i64vec2","as_i64vec3","as_i64vec3","as_i64vec3","as_i64vec4","as_i64vec4","as_irect","as_irect","as_ivec2","as_ivec2","as_ivec2","as_ivec3","as_ivec3","as_ivec3","as_ivec3","as_ivec4","as_ivec4","as_ivec4","as_mat2","as_mat3","as_mat4","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_rect","as_rect","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_u64vec2","as_u64vec2","as_u64vec3","as_u64vec3","as_u64vec3","as_u64vec4","as_u64vec4","as_urect","as_urect","as_uvec2","as_uvec2","as_uvec2","as_uvec3","as_uvec3","as_uvec3","as_uvec3","as_uvec4","as_uvec4","as_uvec4","as_vec2","as_vec2","as_vec2","as_vec3","as_vec3","as_vec3","as_vec3a","as_vec3a","as_vec3a","as_vec4","as_vec4","as_vec4","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitmask","bitmask","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bool","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","ceil","ceil","ceil","ceil","center","center","center","clamp","clamp","clamp","clamp","clamp","clamp","clamp","clamp","clamp","clamp","clamp_length","clamp_length","clamp_length","clamp_length","clamp_length_max","clamp_length_max","clamp_length_max","clamp_length_max","clamp_length_min","clamp_length_min","clamp_length_min","clamp_length_min","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","cmpeq","cmpeq","cmpeq","cmpeq","cmpeq","cmpeq","cmpeq","cmpeq","cmpeq","cmpeq","cmpge","cmpge","cmpge","cmpge","cmpge","cmpge","cmpge","cmpge","cmpge","cmpge","cmpgt","cmpgt","cmpgt","cmpgt","cmpgt","cmpgt","cmpgt","cmpgt","cmpgt","cmpgt","cmple","cmple","cmple","cmple","cmple","cmple","cmple","cmple","cmple","cmple","cmplt","cmplt","cmplt","cmplt","cmplt","cmplt","cmplt","cmplt","cmplt","cmplt","cmpne","cmpne","cmpne","cmpne","cmpne","cmpne","cmpne","cmpne","cmpne","cmpne","col","col","col","col","col_mut","col_mut","col_mut","col_mut","conjugate","contains","contains","contains","copysign","copysign","copysign","copysign","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","cross","cross","cross","cross","cubic_splines","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","determinant","determinant","determinant","determinant","direction","distance","distance","distance","distance","distance_squared","distance_squared","distance_squared","distance_squared","distance_squared","distance_squared","distance_squared","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_euclid","div_euclid","div_euclid","div_euclid","div_euclid","div_euclid","div_euclid","dmat2","dmat3","dmat4","dot","dot","dot","dot","dot","dot","dot","dot","dot","dot","dot","dot_into_vec","dot_into_vec","dot_into_vec","dot_into_vec","dot_into_vec","dot_into_vec","dot_into_vec","dot_into_vec","dot_into_vec","dot_into_vec","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","dquat","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dvec2","dvec3","dvec4","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","exp","exp","exp","exp","extend","extend","extend","extend","extend","extend","extend","f32","f64","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","floor","floor","floor","floor","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fract","fract","fract","fract","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_affine3","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle_translation","from_angle_translation","from_array","from_array","from_array","from_array","from_array","from_array","from_array","from_array","from_array","from_array","from_array","from_axis_angle","from_axis_angle","from_axis_angle","from_axis_angle","from_axis_angle","from_axis_angle","from_center_half_size","from_center_half_size","from_center_half_size","from_center_size","from_center_size","from_center_size","from_cols","from_cols","from_cols","from_cols","from_cols","from_cols","from_cols","from_cols","from_cols_array","from_cols_array","from_cols_array","from_cols_array","from_cols_array","from_cols_array","from_cols_array","from_cols_array","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_slice","from_cols_slice","from_cols_slice","from_cols_slice","from_cols_slice","from_cols_slice","from_cols_slice","from_cols_slice","from_corners","from_corners","from_corners","from_diagonal","from_diagonal","from_diagonal","from_diagonal","from_euler","from_euler","from_euler","from_euler","from_mat2","from_mat2","from_mat2","from_mat2","from_mat2_translation","from_mat2_translation","from_mat3","from_mat3","from_mat3","from_mat3","from_mat3","from_mat3","from_mat3","from_mat3_translation","from_mat3_translation","from_mat3a","from_mat4","from_mat4","from_mat4","from_mat4","from_mat4","from_quat","from_quat","from_quat","from_quat","from_quat","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_rotation_arc","from_rotation_arc_2d","from_rotation_arc_colinear","from_rotation_translation","from_rotation_translation","from_rotation_translation","from_rotation_x","from_rotation_x","from_rotation_x","from_rotation_x","from_rotation_x","from_rotation_x","from_rotation_y","from_rotation_y","from_rotation_y","from_rotation_y","from_rotation_y","from_rotation_y","from_rotation_z","from_rotation_z","from_rotation_z","from_rotation_z","from_rotation_z","from_rotation_z","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_scale","from_scale","from_scale","from_scale","from_scale","from_scale","from_scale","from_scale_angle","from_scale_angle_translation","from_scale_angle_translation","from_scale_angle_translation","from_scale_angle_translation","from_scale_rotation_translation","from_scale_rotation_translation","from_scale_rotation_translation","from_scaled_axis","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_translation","from_translation","from_translation","from_translation","from_translation","from_translation","from_translation","from_vec4","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_xyzw","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_point","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","half_size","half_size","half_size","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","height","height","height","i32","i64","i64vec2","i64vec3","i64vec4","index","index","index","index","index","index","index","index","index","index","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inset","inset","inset","intersect","intersect","intersect","intersect_plane","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","inverse","inverse","inverse","inverse","inverse","inverse","inverse","inverse","inverse","inverse_transpose_3x3","is_empty","is_empty","is_empty","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan_mask","is_nan_mask","is_nan_mask","is_nan_mask","is_near_identity","is_negative_bitmask","is_negative_bitmask","is_negative_bitmask","is_negative_bitmask","is_negative_bitmask","is_negative_bitmask","is_negative_bitmask","is_normalized","is_normalized","is_normalized","is_normalized","is_normalized","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","ivec2","ivec3","ivec4","length","length","length","length","length","length_recip","length_recip","length_recip","length_recip","length_recip","length_squared","length_squared","length_squared","length_squared","length_squared","length_squared","length_squared","length_squared","length_squared","length_squared","length_squared","lerp","lerp","lerp","lerp","lerp","look_at_lh","look_at_lh","look_at_lh","look_at_rh","look_at_rh","look_at_rh","look_to_lh","look_to_lh","look_to_lh","look_to_rh","look_to_rh","look_to_rh","mat2","mat3","mat3a","mat4","matrix2","matrix2","matrix3","matrix3","matrix3","max","max","max","max","max","max","max","max","max","max","max","max","max","max_element","max_element","max_element","max_element","max_element","max_element","max_element","max_element","max_element","max_element","min","min","min","min","min","min","min","min","min","min","min","min","min","min_element","min_element","min_element","min_element","min_element","min_element","min_element","min_element","min_element","min_element","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul_add","mul_add","mul_add","mul_add","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_mat2","mul_mat3","mul_mat3","mul_mat4","mul_quat","mul_scalar","mul_scalar","mul_scalar","mul_scalar","mul_vec2","mul_vec3","mul_vec3","mul_vec3","mul_vec3a","mul_vec4","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","neg","neg","neg","neg","neg","neg","neg","neg","neg","neg","neg","neg","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","normalize","normalize","normalize","normalize","normalize","normalize_or_zero","normalize_or_zero","normalize_or_zero","normalize_or_zero","not","not","not","not","not","not","not","not","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","origin","orthographic_lh","orthographic_rh","orthographic_rh_gl","perp","perp","perp_dot","perp_dot","perspective_infinite_lh","perspective_infinite_reverse_lh","perspective_infinite_reverse_rh","perspective_infinite_rh","perspective_lh","perspective_rh","perspective_rh_gl","powf","powf","powf","powf","prelude","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","project_onto","project_onto","project_onto","project_onto","project_onto_normalized","project_onto_normalized","project_onto_normalized","project_onto_normalized","project_point3","quat","recip","recip","recip","recip","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reject_from","reject_from","reject_from","reject_from","reject_from_normalized","reject_from_normalized","reject_from_normalized","reject_from_normalized","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_euclid","rem_euclid","rem_euclid","rem_euclid","rem_euclid","rem_euclid","rem_euclid","rotate","rotate","round","round","round","round","row","row","row","row","saturating_add","saturating_add","saturating_add","saturating_add","saturating_add","saturating_add","saturating_div","saturating_div","saturating_div","saturating_div","saturating_div","saturating_div","saturating_mul","saturating_mul","saturating_mul","saturating_mul","saturating_mul","saturating_mul","saturating_sub","saturating_sub","saturating_sub","saturating_sub","saturating_sub","saturating_sub","select","select","select","select","select","select","select","select","select","select","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","signum","signum","signum","signum","signum","signum","signum","size","size","size","slerp","splat","splat","splat","splat","splat","splat","splat","splat","splat","splat","splat","splat","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_mat2","sub_mat3","sub_mat3","sub_mat4","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","swizzles","test","test","to_array","to_array","to_array","to_array","to_array","to_array","to_array","to_array","to_array","to_array","to_array","to_axis_angle","to_cols_array","to_cols_array","to_cols_array","to_cols_array","to_cols_array","to_cols_array","to_cols_array","to_cols_array","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_euler","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_scale_angle_translation","to_scale_angle_translation","to_scale_rotation_translation","to_scale_rotation_translation","to_scale_rotation_translation","to_scaled_axis","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_transpose","transform_point","transform_point2","transform_point2","transform_point2","transform_point2","transform_point3","transform_point3","transform_point3","transform_point3a","transform_vector2","transform_vector2","transform_vector2","transform_vector2","transform_vector3","transform_vector3","transform_vector3","transform_vector3a","translation","translation","translation","translation","translation","transpose","transpose","transpose","transpose","trunc","trunc","trunc","trunc","truncate","truncate","truncate","truncate","truncate","truncate","truncate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_normalize","try_normalize","try_normalize","try_normalize","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","u32","u64","u64vec2","u64vec3","u64vec4","union","union","union","union_point","union_point","union_point","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","uvec2","uvec3","uvec4","vec2","vec3","vec3a","vec4","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","w","w","w","w","w","w","w","w_axis","w_axis","width","width","width","wrapping_add","wrapping_add","wrapping_add","wrapping_add","wrapping_add","wrapping_add","wrapping_div","wrapping_div","wrapping_div","wrapping_div","wrapping_div","wrapping_div","wrapping_mul","wrapping_mul","wrapping_mul","wrapping_mul","wrapping_mul","wrapping_mul","wrapping_sub","wrapping_sub","wrapping_sub","wrapping_sub","wrapping_sub","wrapping_sub","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","ww","ww","ww","ww","www","www","www","www","wwww","wwww","wwww","wwww","wwwx","wwwx","wwwx","wwwx","wwwy","wwwy","wwwy","wwwy","wwwz","wwwz","wwwz","wwwz","wwx","wwx","wwx","wwx","wwxw","wwxw","wwxw","wwxw","wwxx","wwxx","wwxx","wwxx","wwxy","wwxy","wwxy","wwxy","wwxz","wwxz","wwxz","wwxz","wwy","wwy","wwy","wwy","wwyw","wwyw","wwyw","wwyw","wwyx","wwyx","wwyx","wwyx","wwyy","wwyy","wwyy","wwyy","wwyz","wwyz","wwyz","wwyz","wwz","wwz","wwz","wwz","wwzw","wwzw","wwzw","wwzw","wwzx","wwzx","wwzx","wwzx","wwzy","wwzy","wwzy","wwzy","wwzz","wwzz","wwzz","wwzz","wx","wx","wx","wx","wxw","wxw","wxw","wxw","wxww","wxww","wxww","wxww","wxwx","wxwx","wxwx","wxwx","wxwy","wxwy","wxwy","wxwy","wxwz","wxwz","wxwz","wxwz","wxx","wxx","wxx","wxx","wxxw","wxxw","wxxw","wxxw","wxxx","wxxx","wxxx","wxxx","wxxy","wxxy","wxxy","wxxy","wxxz","wxxz","wxxz","wxxz","wxy","wxy","wxy","wxy","wxyw","wxyw","wxyw","wxyw","wxyx","wxyx","wxyx","wxyx","wxyy","wxyy","wxyy","wxyy","wxyz","wxyz","wxyz","wxyz","wxz","wxz","wxz","wxz","wxzw","wxzw","wxzw","wxzw","wxzx","wxzx","wxzx","wxzx","wxzy","wxzy","wxzy","wxzy","wxzz","wxzz","wxzz","wxzz","wy","wy","wy","wy","wyw","wyw","wyw","wyw","wyww","wyww","wyww","wyww","wywx","wywx","wywx","wywx","wywy","wywy","wywy","wywy","wywz","wywz","wywz","wywz","wyx","wyx","wyx","wyx","wyxw","wyxw","wyxw","wyxw","wyxx","wyxx","wyxx","wyxx","wyxy","wyxy","wyxy","wyxy","wyxz","wyxz","wyxz","wyxz","wyy","wyy","wyy","wyy","wyyw","wyyw","wyyw","wyyw","wyyx","wyyx","wyyx","wyyx","wyyy","wyyy","wyyy","wyyy","wyyz","wyyz","wyyz","wyyz","wyz","wyz","wyz","wyz","wyzw","wyzw","wyzw","wyzw","wyzx","wyzx","wyzx","wyzx","wyzy","wyzy","wyzy","wyzy","wyzz","wyzz","wyzz","wyzz","wz","wz","wz","wz","wzw","wzw","wzw","wzw","wzww","wzww","wzww","wzww","wzwx","wzwx","wzwx","wzwx","wzwy","wzwy","wzwy","wzwy","wzwz","wzwz","wzwz","wzwz","wzx","wzx","wzx","wzx","wzxw","wzxw","wzxw","wzxw","wzxx","wzxx","wzxx","wzxx","wzxy","wzxy","wzxy","wzxy","wzxz","wzxz","wzxz","wzxz","wzy","wzy","wzy","wzy","wzyw","wzyw","wzyw","wzyw","wzyx","wzyx","wzyx","wzyx","wzyy","wzyy","wzyy","wzyy","wzyz","wzyz","wzyz","wzyz","wzz","wzz","wzz","wzz","wzzw","wzzw","wzzw","wzzw","wzzx","wzzx","wzzx","wzzx","wzzy","wzzy","wzzy","wzzy","wzzz","wzzz","wzzz","wzzz","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x_axis","x_axis","x_axis","x_axis","x_axis","x_axis","xw","xw","xw","xw","xww","xww","xww","xww","xwww","xwww","xwww","xwww","xwwx","xwwx","xwwx","xwwx","xwwy","xwwy","xwwy","xwwy","xwwz","xwwz","xwwz","xwwz","xwx","xwx","xwx","xwx","xwxw","xwxw","xwxw","xwxw","xwxx","xwxx","xwxx","xwxx","xwxy","xwxy","xwxy","xwxy","xwxz","xwxz","xwxz","xwxz","xwy","xwy","xwy","xwy","xwyw","xwyw","xwyw","xwyw","xwyx","xwyx","xwyx","xwyx","xwyy","xwyy","xwyy","xwyy","xwyz","xwyz","xwyz","xwyz","xwz","xwz","xwz","xwz","xwzw","xwzw","xwzw","xwzw","xwzx","xwzx","xwzx","xwzx","xwzy","xwzy","xwzy","xwzy","xwzz","xwzz","xwzz","xwzz","xx","xx","xx","xx","xx","xx","xx","xx","xx","xx","xx","xx","xx","xxw","xxw","xxw","xxw","xxww","xxww","xxww","xxww","xxwx","xxwx","xxwx","xxwx","xxwy","xxwy","xxwy","xxwy","xxwz","xxwz","xxwz","xxwz","xxx","xxx","xxx","xxx","xxx","xxx","xxx","xxx","xxx","xxx","xxx","xxx","xxx","xxxw","xxxw","xxxw","xxxw","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxy","xxxy","xxxy","xxxy","xxxy","xxxy","xxxy","xxxy","xxxy","xxxy","xxxy","xxxy","xxxy","xxxz","xxxz","xxxz","xxxz","xxxz","xxxz","xxxz","xxxz","xxxz","xxy","xxy","xxy","xxy","xxy","xxy","xxy","xxy","xxy","xxy","xxy","xxy","xxy","xxyw","xxyw","xxyw","xxyw","xxyx","xxyx","xxyx","xxyx","xxyx","xxyx","xxyx","xxyx","xxyx","xxyx","xxyx","xxyx","xxyx","xxyy","xxyy","xxyy","xxyy","xxyy","xxyy","xxyy","xxyy","xxyy","xxyy","xxyy","xxyy","xxyy","xxyz","xxyz","xxyz","xxyz","xxyz","xxyz","xxyz","xxyz","xxyz","xxz","xxz","xxz","xxz","xxz","xxz","xxz","xxz","xxz","xxzw","xxzw","xxzw","xxzw","xxzx","xxzx","xxzx","xxzx","xxzx","xxzx","xxzx","xxzx","xxzx","xxzy","xxzy","xxzy","xxzy","xxzy","xxzy","xxzy","xxzy","xxzy","xxzz","xxzz","xxzz","xxzz","xxzz","xxzz","xxzz","xxzz","xxzz","xy","xy","xy","xy","xy","xy","xy","xy","xy","xy","xy","xy","xy","xyw","xyw","xyw","xyw","xyww","xyww","xyww","xyww","xywx","xywx","xywx","xywx","xywy","xywy","xywy","xywy","xywz","xywz","xywz","xywz","xyx","xyx","xyx","xyx","xyx","xyx","xyx","xyx","xyx","xyx","xyx","xyx","xyx","xyxw","xyxw","xyxw","xyxw","xyxx","xyxx","xyxx","xyxx","xyxx","xyxx","xyxx","xyxx","xyxx","xyxx","xyxx","xyxx","xyxx","xyxy","xyxy","xyxy","xyxy","xyxy","xyxy","xyxy","xyxy","xyxy","xyxy","xyxy","xyxy","xyxy","xyxz","xyxz","xyxz","xyxz","xyxz","xyxz","xyxz","xyxz","xyxz","xyy","xyy","xyy","xyy","xyy","xyy","xyy","xyy","xyy","xyy","xyy","xyy","xyy","xyyw","xyyw","xyyw","xyyw","xyyx","xyyx","xyyx","xyyx","xyyx","xyyx","xyyx","xyyx","xyyx","xyyx","xyyx","xyyx","xyyx","xyyy","xyyy","xyyy","xyyy","xyyy","xyyy","xyyy","xyyy","xyyy","xyyy","xyyy","xyyy","xyyy","xyyz","xyyz","xyyz","xyyz","xyyz","xyyz","xyyz","xyyz","xyyz","xyz","xyz","xyz","xyz","xyz","xyz","xyz","xyz","xyz","xyz","xyzw","xyzw","xyzw","xyzw","xyzx","xyzx","xyzx","xyzx","xyzx","xyzx","xyzx","xyzx","xyzx","xyzy","xyzy","xyzy","xyzy","xyzy","xyzy","xyzy","xyzy","xyzy","xyzz","xyzz","xyzz","xyzz","xyzz","xyzz","xyzz","xyzz","xyzz","xz","xz","xz","xz","xz","xz","xz","xz","xz","xzw","xzw","xzw","xzw","xzww","xzww","xzww","xzww","xzwx","xzwx","xzwx","xzwx","xzwy","xzwy","xzwy","xzwy","xzwz","xzwz","xzwz","xzwz","xzx","xzx","xzx","xzx","xzx","xzx","xzx","xzx","xzx","xzxw","xzxw","xzxw","xzxw","xzxx","xzxx","xzxx","xzxx","xzxx","xzxx","xzxx","xzxx","xzxx","xzxy","xzxy","xzxy","xzxy","xzxy","xzxy","xzxy","xzxy","xzxy","xzxz","xzxz","xzxz","xzxz","xzxz","xzxz","xzxz","xzxz","xzxz","xzy","xzy","xzy","xzy","xzy","xzy","xzy","xzy","xzy","xzyw","xzyw","xzyw","xzyw","xzyx","xzyx","xzyx","xzyx","xzyx","xzyx","xzyx","xzyx","xzyx","xzyy","xzyy","xzyy","xzyy","xzyy","xzyy","xzyy","xzyy","xzyy","xzyz","xzyz","xzyz","xzyz","xzyz","xzyz","xzyz","xzyz","xzyz","xzz","xzz","xzz","xzz","xzz","xzz","xzz","xzz","xzz","xzzw","xzzw","xzzw","xzzw","xzzx","xzzx","xzzx","xzzx","xzzx","xzzx","xzzx","xzzx","xzzx","xzzy","xzzy","xzzy","xzzy","xzzy","xzzy","xzzy","xzzy","xzzy","xzzz","xzzz","xzzz","xzzz","xzzz","xzzz","xzzz","xzzz","xzzz","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y_axis","y_axis","y_axis","y_axis","y_axis","y_axis","yw","yw","yw","yw","yww","yww","yww","yww","ywww","ywww","ywww","ywww","ywwx","ywwx","ywwx","ywwx","ywwy","ywwy","ywwy","ywwy","ywwz","ywwz","ywwz","ywwz","ywx","ywx","ywx","ywx","ywxw","ywxw","ywxw","ywxw","ywxx","ywxx","ywxx","ywxx","ywxy","ywxy","ywxy","ywxy","ywxz","ywxz","ywxz","ywxz","ywy","ywy","ywy","ywy","ywyw","ywyw","ywyw","ywyw","ywyx","ywyx","ywyx","ywyx","ywyy","ywyy","ywyy","ywyy","ywyz","ywyz","ywyz","ywyz","ywz","ywz","ywz","ywz","ywzw","ywzw","ywzw","ywzw","ywzx","ywzx","ywzx","ywzx","ywzy","ywzy","ywzy","ywzy","ywzz","ywzz","ywzz","ywzz","yx","yx","yx","yx","yx","yx","yx","yx","yx","yx","yx","yx","yx","yxw","yxw","yxw","yxw","yxww","yxww","yxww","yxww","yxwx","yxwx","yxwx","yxwx","yxwy","yxwy","yxwy","yxwy","yxwz","yxwz","yxwz","yxwz","yxx","yxx","yxx","yxx","yxx","yxx","yxx","yxx","yxx","yxx","yxx","yxx","yxx","yxxw","yxxw","yxxw","yxxw","yxxx","yxxx","yxxx","yxxx","yxxx","yxxx","yxxx","yxxx","yxxx","yxxx","yxxx","yxxx","yxxx","yxxy","yxxy","yxxy","yxxy","yxxy","yxxy","yxxy","yxxy","yxxy","yxxy","yxxy","yxxy","yxxy","yxxz","yxxz","yxxz","yxxz","yxxz","yxxz","yxxz","yxxz","yxxz","yxy","yxy","yxy","yxy","yxy","yxy","yxy","yxy","yxy","yxy","yxy","yxy","yxy","yxyw","yxyw","yxyw","yxyw","yxyx","yxyx","yxyx","yxyx","yxyx","yxyx","yxyx","yxyx","yxyx","yxyx","yxyx","yxyx","yxyx","yxyy","yxyy","yxyy","yxyy","yxyy","yxyy","yxyy","yxyy","yxyy","yxyy","yxyy","yxyy","yxyy","yxyz","yxyz","yxyz","yxyz","yxyz","yxyz","yxyz","yxyz","yxyz","yxz","yxz","yxz","yxz","yxz","yxz","yxz","yxz","yxz","yxzw","yxzw","yxzw","yxzw","yxzx","yxzx","yxzx","yxzx","yxzx","yxzx","yxzx","yxzx","yxzx","yxzy","yxzy","yxzy","yxzy","yxzy","yxzy","yxzy","yxzy","yxzy","yxzz","yxzz","yxzz","yxzz","yxzz","yxzz","yxzz","yxzz","yxzz","yy","yy","yy","yy","yy","yy","yy","yy","yy","yy","yy","yy","yy","yyw","yyw","yyw","yyw","yyww","yyww","yyww","yyww","yywx","yywx","yywx","yywx","yywy","yywy","yywy","yywy","yywz","yywz","yywz","yywz","yyx","yyx","yyx","yyx","yyx","yyx","yyx","yyx","yyx","yyx","yyx","yyx","yyx","yyxw","yyxw","yyxw","yyxw","yyxx","yyxx","yyxx","yyxx","yyxx","yyxx","yyxx","yyxx","yyxx","yyxx","yyxx","yyxx","yyxx","yyxy","yyxy","yyxy","yyxy","yyxy","yyxy","yyxy","yyxy","yyxy","yyxy","yyxy","yyxy","yyxy","yyxz","yyxz","yyxz","yyxz","yyxz","yyxz","yyxz","yyxz","yyxz","yyy","yyy","yyy","yyy","yyy","yyy","yyy","yyy","yyy","yyy","yyy","yyy","yyy","yyyw","yyyw","yyyw","yyyw","yyyx","yyyx","yyyx","yyyx","yyyx","yyyx","yyyx","yyyx","yyyx","yyyx","yyyx","yyyx","yyyx","yyyy","yyyy","yyyy","yyyy","yyyy","yyyy","yyyy","yyyy","yyyy","yyyy","yyyy","yyyy","yyyy","yyyz","yyyz","yyyz","yyyz","yyyz","yyyz","yyyz","yyyz","yyyz","yyz","yyz","yyz","yyz","yyz","yyz","yyz","yyz","yyz","yyzw","yyzw","yyzw","yyzw","yyzx","yyzx","yyzx","yyzx","yyzx","yyzx","yyzx","yyzx","yyzx","yyzy","yyzy","yyzy","yyzy","yyzy","yyzy","yyzy","yyzy","yyzy","yyzz","yyzz","yyzz","yyzz","yyzz","yyzz","yyzz","yyzz","yyzz","yz","yz","yz","yz","yz","yz","yz","yz","yz","yzw","yzw","yzw","yzw","yzww","yzww","yzww","yzww","yzwx","yzwx","yzwx","yzwx","yzwy","yzwy","yzwy","yzwy","yzwz","yzwz","yzwz","yzwz","yzx","yzx","yzx","yzx","yzx","yzx","yzx","yzx","yzx","yzxw","yzxw","yzxw","yzxw","yzxx","yzxx","yzxx","yzxx","yzxx","yzxx","yzxx","yzxx","yzxx","yzxy","yzxy","yzxy","yzxy","yzxy","yzxy","yzxy","yzxy","yzxy","yzxz","yzxz","yzxz","yzxz","yzxz","yzxz","yzxz","yzxz","yzxz","yzy","yzy","yzy","yzy","yzy","yzy","yzy","yzy","yzy","yzyw","yzyw","yzyw","yzyw","yzyx","yzyx","yzyx","yzyx","yzyx","yzyx","yzyx","yzyx","yzyx","yzyy","yzyy","yzyy","yzyy","yzyy","yzyy","yzyy","yzyy","yzyy","yzyz","yzyz","yzyz","yzyz","yzyz","yzyz","yzyz","yzyz","yzyz","yzz","yzz","yzz","yzz","yzz","yzz","yzz","yzz","yzz","yzzw","yzzw","yzzw","yzzw","yzzx","yzzx","yzzx","yzzx","yzzx","yzzx","yzzx","yzzx","yzzx","yzzy","yzzy","yzzy","yzzy","yzzy","yzzy","yzzy","yzzy","yzzy","yzzz","yzzz","yzzz","yzzz","yzzz","yzzz","yzzz","yzzz","yzzz","z","z","z","z","z","z","z","z","z","z","z","z","z","z","z_axis","z_axis","z_axis","z_axis","z_axis","zw","zw","zw","zw","zww","zww","zww","zww","zwww","zwww","zwww","zwww","zwwx","zwwx","zwwx","zwwx","zwwy","zwwy","zwwy","zwwy","zwwz","zwwz","zwwz","zwwz","zwx","zwx","zwx","zwx","zwxw","zwxw","zwxw","zwxw","zwxx","zwxx","zwxx","zwxx","zwxy","zwxy","zwxy","zwxy","zwxz","zwxz","zwxz","zwxz","zwy","zwy","zwy","zwy","zwyw","zwyw","zwyw","zwyw","zwyx","zwyx","zwyx","zwyx","zwyy","zwyy","zwyy","zwyy","zwyz","zwyz","zwyz","zwyz","zwz","zwz","zwz","zwz","zwzw","zwzw","zwzw","zwzw","zwzx","zwzx","zwzx","zwzx","zwzy","zwzy","zwzy","zwzy","zwzz","zwzz","zwzz","zwzz","zx","zx","zx","zx","zx","zx","zx","zx","zx","zxw","zxw","zxw","zxw","zxww","zxww","zxww","zxww","zxwx","zxwx","zxwx","zxwx","zxwy","zxwy","zxwy","zxwy","zxwz","zxwz","zxwz","zxwz","zxx","zxx","zxx","zxx","zxx","zxx","zxx","zxx","zxx","zxxw","zxxw","zxxw","zxxw","zxxx","zxxx","zxxx","zxxx","zxxx","zxxx","zxxx","zxxx","zxxx","zxxy","zxxy","zxxy","zxxy","zxxy","zxxy","zxxy","zxxy","zxxy","zxxz","zxxz","zxxz","zxxz","zxxz","zxxz","zxxz","zxxz","zxxz","zxy","zxy","zxy","zxy","zxy","zxy","zxy","zxy","zxy","zxyw","zxyw","zxyw","zxyw","zxyx","zxyx","zxyx","zxyx","zxyx","zxyx","zxyx","zxyx","zxyx","zxyy","zxyy","zxyy","zxyy","zxyy","zxyy","zxyy","zxyy","zxyy","zxyz","zxyz","zxyz","zxyz","zxyz","zxyz","zxyz","zxyz","zxyz","zxz","zxz","zxz","zxz","zxz","zxz","zxz","zxz","zxz","zxzw","zxzw","zxzw","zxzw","zxzx","zxzx","zxzx","zxzx","zxzx","zxzx","zxzx","zxzx","zxzx","zxzy","zxzy","zxzy","zxzy","zxzy","zxzy","zxzy","zxzy","zxzy","zxzz","zxzz","zxzz","zxzz","zxzz","zxzz","zxzz","zxzz","zxzz","zy","zy","zy","zy","zy","zy","zy","zy","zy","zyw","zyw","zyw","zyw","zyww","zyww","zyww","zyww","zywx","zywx","zywx","zywx","zywy","zywy","zywy","zywy","zywz","zywz","zywz","zywz","zyx","zyx","zyx","zyx","zyx","zyx","zyx","zyx","zyx","zyxw","zyxw","zyxw","zyxw","zyxx","zyxx","zyxx","zyxx","zyxx","zyxx","zyxx","zyxx","zyxx","zyxy","zyxy","zyxy","zyxy","zyxy","zyxy","zyxy","zyxy","zyxy","zyxz","zyxz","zyxz","zyxz","zyxz","zyxz","zyxz","zyxz","zyxz","zyy","zyy","zyy","zyy","zyy","zyy","zyy","zyy","zyy","zyyw","zyyw","zyyw","zyyw","zyyx","zyyx","zyyx","zyyx","zyyx","zyyx","zyyx","zyyx","zyyx","zyyy","zyyy","zyyy","zyyy","zyyy","zyyy","zyyy","zyyy","zyyy","zyyz","zyyz","zyyz","zyyz","zyyz","zyyz","zyyz","zyyz","zyyz","zyz","zyz","zyz","zyz","zyz","zyz","zyz","zyz","zyz","zyzw","zyzw","zyzw","zyzw","zyzx","zyzx","zyzx","zyzx","zyzx","zyzx","zyzx","zyzx","zyzx","zyzy","zyzy","zyzy","zyzy","zyzy","zyzy","zyzy","zyzy","zyzy","zyzz","zyzz","zyzz","zyzz","zyzz","zyzz","zyzz","zyzz","zyzz","zz","zz","zz","zz","zz","zz","zz","zz","zz","zzw","zzw","zzw","zzw","zzww","zzww","zzww","zzww","zzwx","zzwx","zzwx","zzwx","zzwy","zzwy","zzwy","zzwy","zzwz","zzwz","zzwz","zzwz","zzx","zzx","zzx","zzx","zzx","zzx","zzx","zzx","zzx","zzxw","zzxw","zzxw","zzxw","zzxx","zzxx","zzxx","zzxx","zzxx","zzxx","zzxx","zzxx","zzxx","zzxy","zzxy","zzxy","zzxy","zzxy","zzxy","zzxy","zzxy","zzxy","zzxz","zzxz","zzxz","zzxz","zzxz","zzxz","zzxz","zzxz","zzxz","zzy","zzy","zzy","zzy","zzy","zzy","zzy","zzy","zzy","zzyw","zzyw","zzyw","zzyw","zzyx","zzyx","zzyx","zzyx","zzyx","zzyx","zzyx","zzyx","zzyx","zzyy","zzyy","zzyy","zzyy","zzyy","zzyy","zzyy","zzyy","zzyy","zzyz","zzyz","zzyz","zzyz","zzyz","zzyz","zzyz","zzyz","zzyz","zzz","zzz","zzz","zzz","zzz","zzz","zzz","zzz","zzz","zzzw","zzzw","zzzw","zzzw","zzzx","zzzx","zzzx","zzzx","zzzx","zzzx","zzzx","zzzx","zzzx","zzzy","zzzy","zzzy","zzzy","zzzy","zzzy","zzzy","zzzy","zzzy","zzzz","zzzz","zzzz","zzzz","zzzz","zzzz","zzzz","zzzz","zzzz","BVec2","BVec3","BVec3A","BVec4","BVec4A","FALSE","FALSE","FALSE","TRUE","TRUE","TRUE","all","all","all","any","any","any","apply","apply","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_reflect","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","as_reflect_mut","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitmask","bitmask","bitmask","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_dynamic","clone_dynamic","clone_dynamic","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_value","clone_value","clone_value","crate_name","crate_name","crate_name","debug","debug","debug","default","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","downcast","downcast","downcast","drop","drop","drop","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","field","field","field","field_at","field_at","field_at","field_at_mut","field_at_mut","field_at_mut","field_len","field_len","field_len","field_mut","field_mut","field_mut","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from_reflect","from_reflect","from_reflect","from_sample_","from_sample_","from_sample_","from_world","from_world","from_world","get_field","get_field","get_field","get_field_mut","get_field_mut","get_field_mut","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_type_registration","get_type_registration","get_type_registration","hash","hash","hash","init","init","init","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_reflect","into_reflect","into_reflect","into_sample","into_sample","into_sample","iter_fields","iter_fields","iter_fields","module_path","module_path","module_path","name_at","name_at","name_at","new","new","new","not","not","not","null_value","null_value","null_value","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_module_path","reflect_module_path","reflect_module_path","reflect_mut","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_ref","reflect_ref","reflect_ref","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_path","reflect_type_path","reflect_type_path","serialize","serialize","serialize","set","set","set","set","set","set","short_type_path","short_type_path","short_type_path","splat","splat","splat","test","test","test","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_string","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_ident","type_ident","type_ident","type_info","type_info","type_info","type_path","type_path","type_path","upcast","upcast","upcast","vzip","vzip","vzip","w","x","x","x","y","y","y","z","z","BSpline","CardinalSpline","CubicBezier","CubicCurve","CubicGenerator","CubicSegment","Hermite","Point","acceleration","acceleration","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","default","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","ease","eq","eq","fmt","fmt","from","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_world","from_world","init","init","init","init","init","init","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","iter_accelerations","iter_positions","iter_samples","iter_velocities","new","new","new","new","new_bezier","new_catmull_rom","null_value","null_value","position","position","segments","to_curve","to_curve","to_curve","to_curve","to_curve","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","velocity","velocity","vzip","vzip","vzip","vzip","vzip","vzip","AXES","AXES","AXES","Affine2","Affine3A","IDENTITY","IDENTITY","IDENTITY","IDENTITY","INFINITY","INFINITY","INFINITY","MAX","MAX","MAX","MIN","MIN","MIN","Mat2","Mat3","Mat3A","Mat4","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NEG_INFINITY","NEG_INFINITY","NEG_INFINITY","NEG_ONE","NEG_ONE","NEG_ONE","NEG_W","NEG_X","NEG_X","NEG_X","NEG_Y","NEG_Y","NEG_Y","NEG_Z","NEG_Z","ONE","ONE","ONE","Quat","Vec2","Vec3","Vec3A","Vec4","W","X","X","X","Y","Y","Y","Z","Z","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","abs","abs","abs","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","add","add","add","add","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_mat2","add_mat3","add_mat4","angle_between","angle_between","angle_between","any_orthogonal_vector","any_orthonormal_pair","any_orthonormal_vector","apply","apply","apply","apply","apply","apply","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dmat2","as_dmat3","as_dmat4","as_dvec2","as_dvec3","as_dvec4","as_f64","as_i64vec2","as_i64vec3","as_i64vec4","as_ivec2","as_ivec3","as_ivec4","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut_parts","as_mut_parts","as_mut_parts","as_mut_parts","as_mut_parts","as_mut_parts","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref_parts","as_ref_parts","as_ref_parts","as_ref_parts","as_ref_parts","as_ref_parts","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_u64vec2","as_u64vec3","as_u64vec4","as_uvec2","as_uvec3","as_uvec4","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","ceil","ceil","ceil","clamp","clamp","clamp","clamp_length","clamp_length","clamp_length","clamp_length_max","clamp_length_max","clamp_length_max","clamp_length_min","clamp_length_min","clamp_length_min","clone","clone","clone","clone","clone","clone","clone","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","cmpeq","cmpeq","cmpeq","cmpge","cmpge","cmpge","cmpgt","cmpgt","cmpgt","cmple","cmple","cmple","cmplt","cmplt","cmplt","cmpne","cmpne","cmpne","col","col","col","col_mut","col_mut","col_mut","conjugate","copysign","copysign","copysign","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","create_from","create_from","create_from","create_from","create_from","create_from","cross","debug","debug","debug","debug","debug","debug","debug","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","determinant","determinant","determinant","distance","distance","distance","distance_squared","distance_squared","distance_squared","div","div","div","div","div","div","div","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_euclid","div_euclid","div_euclid","dot","dot","dot","dot","dot_into_vec","dot_into_vec","dot_into_vec","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","exp","exp","exp","extend","extend","field","field","field","field","field","field","field","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","floor","floor","floor","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fract","fract","fract","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_affine3","from_angle","from_angle","from_angle","from_array","from_array","from_array","from_array","from_axis_angle","from_axis_angle","from_axis_angle","from_cols","from_cols","from_cols","from_cols_array","from_cols_array","from_cols_array","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_slice","from_cols_slice","from_cols_slice","from_diagonal","from_diagonal","from_diagonal","from_euler","from_euler","from_euler","from_mat2","from_mat3","from_mat3","from_mat3","from_mat3a","from_mat3a","from_mat3a","from_mat4","from_mat4","from_parts","from_parts","from_parts","from_parts","from_parts","from_parts","from_quat","from_quat","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_rotation_arc","from_rotation_arc_2d","from_rotation_arc_colinear","from_rotation_translation","from_rotation_x","from_rotation_x","from_rotation_x","from_rotation_y","from_rotation_y","from_rotation_y","from_rotation_z","from_rotation_z","from_rotation_z","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_scale","from_scale","from_scale_angle","from_scale_angle_translation","from_scale_rotation_translation","from_scaled_axis","from_slice","from_slice","from_slice","from_slice","from_translation","from_translation","from_vec4","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_xyzw","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","index","index","index","index_mut","index_mut","index_mut","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","inverse","inverse","inverse","inverse","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan_mask","is_nan_mask","is_nan_mask","is_near_identity","is_negative_bitmask","is_negative_bitmask","is_negative_bitmask","is_normalized","is_normalized","is_normalized","is_normalized","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","length","length","length","length","length_recip","length_recip","length_recip","length_recip","length_squared","length_squared","length_squared","length_squared","lerp","lerp","lerp","lerp","look_at_lh","look_at_rh","look_to_lh","look_to_rh","mat2","mat3","mat3a","mat4","matrix2","matrix3","max","max","max","max_element","max_element","max_element","min","min","min","min_element","min_element","min_element","module_path","module_path","module_path","module_path","module_path","module_path","module_path","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul_add","mul_add","mul_add","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_mat2","mul_mat3","mul_mat4","mul_quat","mul_scalar","mul_scalar","mul_scalar","mul_vec2","mul_vec3","mul_vec3","mul_vec3a","mul_vec3a","mul_vec4","name_at","name_at","name_at","name_at","name_at","name_at","name_at","neg","neg","neg","neg","neg","neg","neg","new","new","new","normalize","normalize","normalize","normalize","normalize_or_zero","normalize_or_zero","normalize_or_zero","null_value","null_value","null_value","null_value","null_value","null_value","null_value","orthographic_lh","orthographic_rh","orthographic_rh_gl","perp","perp_dot","perspective_infinite_lh","perspective_infinite_reverse_lh","perspective_infinite_reverse_rh","perspective_infinite_rh","perspective_lh","perspective_rh","perspective_rh_gl","powf","powf","powf","product","product","product","product","product","product","product","product","product","product","product","product","product","product","project_onto","project_onto","project_onto","project_onto_normalized","project_onto_normalized","project_onto_normalized","project_point3","quat","read_from","read_from","read_from","read_from","read_from","read_from","recip","recip","recip","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reject_from","reject_from","reject_from","reject_from_normalized","reject_from_normalized","reject_from_normalized","rem","rem","rem","rem","rem","rem","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_euclid","rem_euclid","rem_euclid","rotate","round","round","round","row","row","row","select","select","select","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set","set","set","set","set","set","set","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","signum","signum","signum","slerp","splat","splat","splat","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_mat2","sub_mat3","sub_mat4","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","to_array","to_array","to_array","to_array","to_axis_angle","to_cols_array","to_cols_array","to_cols_array","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_euler","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_scale_rotation_translation","to_scaled_axis","to_string","to_string","to_string","to_string","to_string","to_string","to_string","transform_point","transform_point2","transform_point3","transform_point3a","transform_vector2","transform_vector3","transform_vector3a","translation","translation","transpose","transpose","transpose","trunc","trunc","trunc","truncate","truncate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_normalize","try_normalize","try_normalize","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_path","type_path","type_path","type_path","type_path","type_path","type_path","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vec2","vec3","vec3a","vec4","vzip","vzip","vzip","vzip","vzip","vzip","vzip","w_axis","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_into","write_into","write_into","write_into","write_into","write_into","write_to_slice","write_to_slice","write_to_slice","write_to_slice","ww","www","wwww","wwwx","wwwy","wwwz","wwx","wwxw","wwxx","wwxy","wwxz","wwy","wwyw","wwyx","wwyy","wwyz","wwz","wwzw","wwzx","wwzy","wwzz","wx","wxw","wxww","wxwx","wxwy","wxwz","wxx","wxxw","wxxx","wxxy","wxxz","wxy","wxyw","wxyx","wxyy","wxyz","wxz","wxzw","wxzx","wxzy","wxzz","wy","wyw","wyww","wywx","wywy","wywz","wyx","wyxw","wyxx","wyxy","wyxz","wyy","wyyw","wyyx","wyyy","wyyz","wyz","wyzw","wyzx","wyzy","wyzz","wz","wzw","wzww","wzwx","wzwy","wzwz","wzx","wzxw","wzxx","wzxy","wzxz","wzy","wzyw","wzyx","wzyy","wzyz","wzz","wzzw","wzzx","wzzy","wzzz","x","x","x_axis","x_axis","x_axis","xw","xww","xwww","xwwx","xwwy","xwwz","xwx","xwxw","xwxx","xwxy","xwxz","xwy","xwyw","xwyx","xwyy","xwyz","xwz","xwzw","xwzx","xwzy","xwzz","xx","xx","xx","xxw","xxww","xxwx","xxwy","xxwz","xxx","xxx","xxx","xxxw","xxxx","xxxx","xxxx","xxxy","xxxy","xxxy","xxxz","xxxz","xxy","xxy","xxy","xxyw","xxyx","xxyx","xxyx","xxyy","xxyy","xxyy","xxyz","xxyz","xxz","xxz","xxzw","xxzx","xxzx","xxzy","xxzy","xxzz","xxzz","xy","xy","xy","xyw","xyww","xywx","xywy","xywz","xyx","xyx","xyx","xyxw","xyxx","xyxx","xyxx","xyxy","xyxy","xyxy","xyxz","xyxz","xyy","xyy","xyy","xyyw","xyyx","xyyx","xyyx","xyyy","xyyy","xyyy","xyyz","xyyz","xyz","xyz","xyz","xyzw","xyzx","xyzx","xyzy","xyzy","xyzz","xyzz","xz","xz","xzw","xzww","xzwx","xzwy","xzwz","xzx","xzx","xzxw","xzxx","xzxx","xzxy","xzxy","xzxz","xzxz","xzy","xzy","xzyw","xzyx","xzyx","xzyy","xzyy","xzyz","xzyz","xzz","xzz","xzzw","xzzx","xzzx","xzzy","xzzy","xzzz","xzzz","y","y","y_axis","y_axis","y_axis","yw","yww","ywww","ywwx","ywwy","ywwz","ywx","ywxw","ywxx","ywxy","ywxz","ywy","ywyw","ywyx","ywyy","ywyz","ywz","ywzw","ywzx","ywzy","ywzz","yx","yx","yx","yxw","yxww","yxwx","yxwy","yxwz","yxx","yxx","yxx","yxxw","yxxx","yxxx","yxxx","yxxy","yxxy","yxxy","yxxz","yxxz","yxy","yxy","yxy","yxyw","yxyx","yxyx","yxyx","yxyy","yxyy","yxyy","yxyz","yxyz","yxz","yxz","yxzw","yxzx","yxzx","yxzy","yxzy","yxzz","yxzz","yy","yy","yy","yyw","yyww","yywx","yywy","yywz","yyx","yyx","yyx","yyxw","yyxx","yyxx","yyxx","yyxy","yyxy","yyxy","yyxz","yyxz","yyy","yyy","yyy","yyyw","yyyx","yyyx","yyyx","yyyy","yyyy","yyyy","yyyz","yyyz","yyz","yyz","yyzw","yyzx","yyzx","yyzy","yyzy","yyzz","yyzz","yz","yz","yzw","yzww","yzwx","yzwy","yzwz","yzx","yzx","yzxw","yzxx","yzxx","yzxy","yzxy","yzxz","yzxz","yzy","yzy","yzyw","yzyx","yzyx","yzyy","yzyy","yzyz","yzyz","yzz","yzz","yzzw","yzzx","yzzx","yzzy","yzzy","yzzz","yzzz","z","z_axis","z_axis","z_axis","zw","zww","zwww","zwwx","zwwy","zwwz","zwx","zwxw","zwxx","zwxy","zwxz","zwy","zwyw","zwyx","zwyy","zwyz","zwz","zwzw","zwzx","zwzy","zwzz","zx","zx","zxw","zxww","zxwx","zxwy","zxwz","zxx","zxx","zxxw","zxxx","zxxx","zxxy","zxxy","zxxz","zxxz","zxy","zxy","zxyw","zxyx","zxyx","zxyy","zxyy","zxyz","zxyz","zxz","zxz","zxzw","zxzx","zxzx","zxzy","zxzy","zxzz","zxzz","zy","zy","zyw","zyww","zywx","zywy","zywz","zyx","zyx","zyxw","zyxx","zyxx","zyxy","zyxy","zyxz","zyxz","zyy","zyy","zyyw","zyyx","zyyx","zyyy","zyyy","zyyz","zyyz","zyz","zyz","zyzw","zyzx","zyzx","zyzy","zyzy","zyzz","zyzz","zz","zz","zzw","zzww","zzwx","zzwy","zzwz","zzx","zzx","zzxw","zzxx","zzxx","zzxy","zzxy","zzxz","zzxz","zzy","zzy","zzyw","zzyx","zzyx","zzyy","zzyy","zzyz","zzyz","zzz","zzz","zzzw","zzzx","zzzx","zzzy","zzzy","zzzz","zzzz","DAffine2","DAffine3","DMat2","DMat3","DMat4","DQuat","DVec2","DVec3","DVec4","dmat2","dmat3","dmat4","dquat","dvec2","dvec3","dvec4","matrix2","matrix3","translation","translation","w","w","w_axis","x","x","x","x","x_axis","x_axis","x_axis","y","y","y","y","y_axis","y_axis","y_axis","z","z","z","z_axis","z_axis","AXES","AXES","AXES","IVec2","IVec3","IVec4","MAX","MAX","MAX","MIN","MIN","MIN","NEG_ONE","NEG_ONE","NEG_ONE","NEG_W","NEG_X","NEG_X","NEG_X","NEG_Y","NEG_Y","NEG_Y","NEG_Z","NEG_Z","ONE","ONE","ONE","W","X","X","X","Y","Y","Y","Z","Z","ZERO","ZERO","ZERO","abs","abs","abs","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","apply","apply","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dvec2","as_dvec3","as_dvec4","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_i64vec2","as_i64vec3","as_i64vec4","as_mut","as_mut","as_mut","as_mut_parts","as_mut_parts","as_mut_parts","as_ref","as_ref","as_ref","as_ref_parts","as_ref_parts","as_ref_parts","as_reflect","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_u64vec2","as_u64vec3","as_u64vec4","as_uvec2","as_uvec3","as_uvec4","as_vec2","as_vec3","as_vec3a","as_vec4","bitand","bitand","bitand","bitand","bitand","bitand","bitor","bitor","bitor","bitor","bitor","bitor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clamp","clamp","clamp","clone","clone","clone","clone_dynamic","clone_dynamic","clone_dynamic","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_value","clone_value","clone_value","cmpeq","cmpeq","cmpeq","cmpge","cmpge","cmpge","cmpgt","cmpgt","cmpgt","cmple","cmple","cmple","cmplt","cmplt","cmplt","cmpne","cmpne","cmpne","crate_name","crate_name","crate_name","create_from","create_from","create_from","cross","debug","debug","debug","default","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","distance_squared","distance_squared","distance_squared","div","div","div","div","div","div","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_euclid","div_euclid","div_euclid","dot","dot","dot","dot_into_vec","dot_into_vec","dot_into_vec","downcast","downcast","downcast","drop","drop","drop","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","extend","extend","field","field","field","field_at","field_at","field_at","field_at_mut","field_at_mut","field_at_mut","field_len","field_len","field_len","field_mut","field_mut","field_mut","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_array","from_array","from_array","from_parts","from_parts","from_parts","from_reflect","from_reflect","from_reflect","from_sample_","from_sample_","from_sample_","from_slice","from_slice","from_slice","from_world","from_world","from_world","get_field","get_field","get_field","get_field_mut","get_field_mut","get_field_mut","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_type_registration","get_type_registration","get_type_registration","hash","hash","hash","index","index","index","index_mut","index_mut","index_mut","init","init","init","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_reflect","into_reflect","into_reflect","into_sample","into_sample","into_sample","is_negative_bitmask","is_negative_bitmask","is_negative_bitmask","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","iter_fields","iter_fields","iter_fields","ivec2","ivec3","ivec4","length_squared","length_squared","length_squared","max","max","max","max_element","max_element","max_element","min","min","min","min_element","min_element","min_element","module_path","module_path","module_path","mul","mul","mul","mul","mul","mul","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","name_at","name_at","name_at","neg","neg","neg","new","new","new","not","not","not","null_value","null_value","null_value","perp","perp_dot","product","product","product","product","product","product","read_from","read_from","read_from","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_hash","reflect_hash","reflect_hash","reflect_module_path","reflect_module_path","reflect_module_path","reflect_mut","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_ref","reflect_ref","reflect_ref","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_path","reflect_type_path","reflect_type_path","rem","rem","rem","rem","rem","rem","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_euclid","rem_euclid","rem_euclid","rotate","saturating_add","saturating_add","saturating_add","saturating_div","saturating_div","saturating_div","saturating_mul","saturating_mul","saturating_mul","saturating_sub","saturating_sub","saturating_sub","select","select","select","serialize","serialize","serialize","set","set","set","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","short_type_path","short_type_path","short_type_path","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","signum","signum","signum","splat","splat","splat","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sum","sum","sum","sum","sum","sum","to_array","to_array","to_array","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_string","to_string","to_string","truncate","truncate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_ident","type_ident","type_ident","type_info","type_info","type_info","type_path","type_path","type_path","upcast","upcast","upcast","vzip","vzip","vzip","w","wrapping_add","wrapping_add","wrapping_add","wrapping_div","wrapping_div","wrapping_div","wrapping_mul","wrapping_mul","wrapping_mul","wrapping_sub","wrapping_sub","wrapping_sub","write_into","write_into","write_into","write_to_slice","write_to_slice","write_to_slice","ww","www","wwww","wwwx","wwwy","wwwz","wwx","wwxw","wwxx","wwxy","wwxz","wwy","wwyw","wwyx","wwyy","wwyz","wwz","wwzw","wwzx","wwzy","wwzz","wx","wxw","wxww","wxwx","wxwy","wxwz","wxx","wxxw","wxxx","wxxy","wxxz","wxy","wxyw","wxyx","wxyy","wxyz","wxz","wxzw","wxzx","wxzy","wxzz","wy","wyw","wyww","wywx","wywy","wywz","wyx","wyxw","wyxx","wyxy","wyxz","wyy","wyyw","wyyx","wyyy","wyyz","wyz","wyzw","wyzx","wyzy","wyzz","wz","wzw","wzww","wzwx","wzwy","wzwz","wzx","wzxw","wzxx","wzxy","wzxz","wzy","wzyw","wzyx","wzyy","wzyz","wzz","wzzw","wzzx","wzzy","wzzz","x","x","x","xw","xww","xwww","xwwx","xwwy","xwwz","xwx","xwxw","xwxx","xwxy","xwxz","xwy","xwyw","xwyx","xwyy","xwyz","xwz","xwzw","xwzx","xwzy","xwzz","xx","xx","xx","xxw","xxww","xxwx","xxwy","xxwz","xxx","xxx","xxx","xxxw","xxxx","xxxx","xxxx","xxxy","xxxy","xxxy","xxxz","xxxz","xxy","xxy","xxy","xxyw","xxyx","xxyx","xxyx","xxyy","xxyy","xxyy","xxyz","xxyz","xxz","xxz","xxzw","xxzx","xxzx","xxzy","xxzy","xxzz","xxzz","xy","xy","xy","xyw","xyww","xywx","xywy","xywz","xyx","xyx","xyx","xyxw","xyxx","xyxx","xyxx","xyxy","xyxy","xyxy","xyxz","xyxz","xyy","xyy","xyy","xyyw","xyyx","xyyx","xyyx","xyyy","xyyy","xyyy","xyyz","xyyz","xyz","xyz","xyzw","xyzx","xyzx","xyzy","xyzy","xyzz","xyzz","xz","xz","xzw","xzww","xzwx","xzwy","xzwz","xzx","xzx","xzxw","xzxx","xzxx","xzxy","xzxy","xzxz","xzxz","xzy","xzy","xzyw","xzyx","xzyx","xzyy","xzyy","xzyz","xzyz","xzz","xzz","xzzw","xzzx","xzzx","xzzy","xzzy","xzzz","xzzz","y","y","y","yw","yww","ywww","ywwx","ywwy","ywwz","ywx","ywxw","ywxx","ywxy","ywxz","ywy","ywyw","ywyx","ywyy","ywyz","ywz","ywzw","ywzx","ywzy","ywzz","yx","yx","yx","yxw","yxww","yxwx","yxwy","yxwz","yxx","yxx","yxx","yxxw","yxxx","yxxx","yxxx","yxxy","yxxy","yxxy","yxxz","yxxz","yxy","yxy","yxy","yxyw","yxyx","yxyx","yxyx","yxyy","yxyy","yxyy","yxyz","yxyz","yxz","yxz","yxzw","yxzx","yxzx","yxzy","yxzy","yxzz","yxzz","yy","yy","yy","yyw","yyww","yywx","yywy","yywz","yyx","yyx","yyx","yyxw","yyxx","yyxx","yyxx","yyxy","yyxy","yyxy","yyxz","yyxz","yyy","yyy","yyy","yyyw","yyyx","yyyx","yyyx","yyyy","yyyy","yyyy","yyyz","yyyz","yyz","yyz","yyzw","yyzx","yyzx","yyzy","yyzy","yyzz","yyzz","yz","yz","yzw","yzww","yzwx","yzwy","yzwz","yzx","yzx","yzxw","yzxx","yzxx","yzxy","yzxy","yzxz","yzxz","yzy","yzy","yzyw","yzyx","yzyx","yzyy","yzyy","yzyz","yzyz","yzz","yzz","yzzw","yzzx","yzzx","yzzy","yzzy","yzzz","yzzz","z","z","zw","zww","zwww","zwwx","zwwy","zwwz","zwx","zwxw","zwxx","zwxy","zwxz","zwy","zwyw","zwyx","zwyy","zwyz","zwz","zwzw","zwzx","zwzy","zwzz","zx","zx","zxw","zxww","zxwx","zxwy","zxwz","zxx","zxx","zxxw","zxxx","zxxx","zxxy","zxxy","zxxz","zxxz","zxy","zxy","zxyw","zxyx","zxyx","zxyy","zxyy","zxyz","zxyz","zxz","zxz","zxzw","zxzx","zxzx","zxzy","zxzy","zxzz","zxzz","zy","zy","zyw","zyww","zywx","zywy","zywz","zyx","zyx","zyxw","zyxx","zyxx","zyxy","zyxy","zyxz","zyxz","zyy","zyy","zyyw","zyyx","zyyx","zyyy","zyyy","zyyz","zyyz","zyz","zyz","zyzw","zyzx","zyzx","zyzy","zyzy","zyzz","zyzz","zz","zz","zzw","zzww","zzwx","zzwy","zzwz","zzx","zzx","zzxw","zzxx","zzxx","zzxy","zzxy","zzxz","zzxz","zzy","zzy","zzyw","zzyx","zzyx","zzyy","zzyy","zzyz","zzyz","zzz","zzz","zzzw","zzzx","zzzx","zzzy","zzzy","zzzz","zzzz","I64Vec2","I64Vec3","I64Vec4","i64vec2","i64vec3","i64vec4","w","x","x","x","y","y","y","z","z","BSpline","BVec2","BVec3","BVec4","CardinalSpline","CubicBezier","CubicGenerator","CubicSegment","EulerRot","Hermite","IRect","IVec2","IVec3","IVec4","Mat2","Mat3","Mat4","Quat","Ray","Rect","URect","UVec2","UVec3","UVec4","Vec2","Vec2","Vec2","Vec2Swizzles","Vec3","Vec3","Vec3","Vec3Swizzles","Vec4","Vec4","Vec4","Vec4Swizzles","XYZ","XZY","YXZ","YZX","ZXY","ZYX","direction","max","max","max","min","min","min","origin","to_curve","w","w","w","w_axis","ww","www","wwww","wwwx","wwwy","wwwz","wwx","wwxw","wwxx","wwxy","wwxz","wwy","wwyw","wwyx","wwyy","wwyz","wwz","wwzw","wwzx","wwzy","wwzz","wx","wxw","wxww","wxwx","wxwy","wxwz","wxx","wxxw","wxxx","wxxy","wxxz","wxy","wxyw","wxyx","wxyy","wxyz","wxz","wxzw","wxzx","wxzy","wxzz","wy","wyw","wyww","wywx","wywy","wywz","wyx","wyxw","wyxx","wyxy","wyxz","wyy","wyyw","wyyx","wyyy","wyyz","wyz","wyzw","wyzx","wyzy","wyzz","wz","wzw","wzww","wzwx","wzwy","wzwz","wzx","wzxw","wzxx","wzxy","wzxz","wzy","wzyw","wzyx","wzyy","wzyz","wzz","wzzw","wzzx","wzzy","wzzz","x","x","x","x","x","x","x","x","x","x","x","x_axis","x_axis","xw","xww","xwww","xwwx","xwwy","xwwz","xwx","xwxw","xwxx","xwxy","xwxz","xwy","xwyw","xwyx","xwyy","xwyz","xwz","xwzw","xwzx","xwzy","xwzz","xx","xx","xx","xxw","xxww","xxwx","xxwy","xxwz","xxx","xxx","xxx","xxxw","xxxx","xxxx","xxxx","xxxy","xxxy","xxxy","xxxz","xxxz","xxy","xxy","xxy","xxyw","xxyx","xxyx","xxyx","xxyy","xxyy","xxyy","xxyz","xxyz","xxz","xxz","xxzw","xxzx","xxzx","xxzy","xxzy","xxzz","xxzz","xy","xy","xy","xyw","xyww","xywx","xywy","xywz","xyx","xyx","xyx","xyxw","xyxx","xyxx","xyxx","xyxy","xyxy","xyxy","xyxz","xyxz","xyy","xyy","xyy","xyyw","xyyx","xyyx","xyyx","xyyy","xyyy","xyyy","xyyz","xyyz","xyz","xyz","xyzw","xyzx","xyzx","xyzy","xyzy","xyzz","xyzz","xz","xz","xzw","xzww","xzwx","xzwy","xzwz","xzx","xzx","xzxw","xzxx","xzxx","xzxy","xzxy","xzxz","xzxz","xzy","xzy","xzyw","xzyx","xzyx","xzyy","xzyy","xzyz","xzyz","xzz","xzz","xzzw","xzzx","xzzx","xzzy","xzzy","xzzz","xzzz","y","y","y","y","y","y","y","y","y","y","y","y_axis","y_axis","yw","yww","ywww","ywwx","ywwy","ywwz","ywx","ywxw","ywxx","ywxy","ywxz","ywy","ywyw","ywyx","ywyy","ywyz","ywz","ywzw","ywzx","ywzy","ywzz","yx","yx","yx","yxw","yxww","yxwx","yxwy","yxwz","yxx","yxx","yxx","yxxw","yxxx","yxxx","yxxx","yxxy","yxxy","yxxy","yxxz","yxxz","yxy","yxy","yxy","yxyw","yxyx","yxyx","yxyx","yxyy","yxyy","yxyy","yxyz","yxyz","yxz","yxz","yxzw","yxzx","yxzx","yxzy","yxzy","yxzz","yxzz","yy","yy","yy","yyw","yyww","yywx","yywy","yywz","yyx","yyx","yyx","yyxw","yyxx","yyxx","yyxx","yyxy","yyxy","yyxy","yyxz","yyxz","yyy","yyy","yyy","yyyw","yyyx","yyyx","yyyx","yyyy","yyyy","yyyy","yyyz","yyyz","yyz","yyz","yyzw","yyzx","yyzx","yyzy","yyzy","yyzz","yyzz","yz","yz","yzw","yzww","yzwx","yzwy","yzwz","yzx","yzx","yzxw","yzxx","yzxx","yzxy","yzxy","yzxz","yzxz","yzy","yzy","yzyw","yzyx","yzyx","yzyy","yzyy","yzyz","yzyz","yzz","yzz","yzzw","yzzx","yzzx","yzzy","yzzy","yzzz","yzzz","z","z","z","z","z","z","z","z_axis","z_axis","zw","zww","zwww","zwwx","zwwy","zwwz","zwx","zwxw","zwxx","zwxy","zwxz","zwy","zwyw","zwyx","zwyy","zwyz","zwz","zwzw","zwzx","zwzy","zwzz","zx","zx","zxw","zxww","zxwx","zxwy","zxwz","zxx","zxx","zxxw","zxxx","zxxx","zxxy","zxxy","zxxz","zxxz","zxy","zxy","zxyw","zxyx","zxyx","zxyy","zxyy","zxyz","zxyz","zxz","zxz","zxzw","zxzx","zxzx","zxzy","zxzy","zxzz","zxzz","zy","zy","zyw","zyww","zywx","zywy","zywz","zyx","zyx","zyxw","zyxx","zyxx","zyxy","zyxy","zyxz","zyxz","zyy","zyy","zyyw","zyyx","zyyx","zyyy","zyyy","zyyz","zyyz","zyz","zyz","zyzw","zyzx","zyzx","zyzy","zyzy","zyzz","zyzz","zz","zz","zzw","zzww","zzwx","zzwy","zzwz","zzx","zzx","zzxw","zzxx","zzxx","zzxy","zzxy","zzxz","zzxz","zzy","zzy","zzyw","zzyx","zzyx","zzyy","zzyy","zzyz","zzyz","zzz","zzz","zzzw","zzzx","zzzx","zzzy","zzzy","zzzz","zzzz","Vec2","Vec2","Vec2Swizzles","Vec3","Vec3","Vec3Swizzles","Vec4","Vec4","Vec4Swizzles","ww","www","wwww","wwwx","wwwy","wwwz","wwx","wwxw","wwxx","wwxy","wwxz","wwy","wwyw","wwyx","wwyy","wwyz","wwz","wwzw","wwzx","wwzy","wwzz","wx","wxw","wxww","wxwx","wxwy","wxwz","wxx","wxxw","wxxx","wxxy","wxxz","wxy","wxyw","wxyx","wxyy","wxyz","wxz","wxzw","wxzx","wxzy","wxzz","wy","wyw","wyww","wywx","wywy","wywz","wyx","wyxw","wyxx","wyxy","wyxz","wyy","wyyw","wyyx","wyyy","wyyz","wyz","wyzw","wyzx","wyzy","wyzz","wz","wzw","wzww","wzwx","wzwy","wzwz","wzx","wzxw","wzxx","wzxy","wzxz","wzy","wzyw","wzyx","wzyy","wzyz","wzz","wzzw","wzzx","wzzy","wzzz","xw","xww","xwww","xwwx","xwwy","xwwz","xwx","xwxw","xwxx","xwxy","xwxz","xwy","xwyw","xwyx","xwyy","xwyz","xwz","xwzw","xwzx","xwzy","xwzz","xx","xx","xx","xxw","xxww","xxwx","xxwy","xxwz","xxx","xxx","xxx","xxxw","xxxx","xxxx","xxxx","xxxy","xxxy","xxxy","xxxz","xxxz","xxy","xxy","xxy","xxyw","xxyx","xxyx","xxyx","xxyy","xxyy","xxyy","xxyz","xxyz","xxz","xxz","xxzw","xxzx","xxzx","xxzy","xxzy","xxzz","xxzz","xy","xy","xy","xyw","xyww","xywx","xywy","xywz","xyx","xyx","xyx","xyxw","xyxx","xyxx","xyxx","xyxy","xyxy","xyxy","xyxz","xyxz","xyy","xyy","xyy","xyyw","xyyx","xyyx","xyyx","xyyy","xyyy","xyyy","xyyz","xyyz","xyz","xyz","xyzw","xyzx","xyzx","xyzy","xyzy","xyzz","xyzz","xz","xz","xzw","xzww","xzwx","xzwy","xzwz","xzx","xzx","xzxw","xzxx","xzxx","xzxy","xzxy","xzxz","xzxz","xzy","xzy","xzyw","xzyx","xzyx","xzyy","xzyy","xzyz","xzyz","xzz","xzz","xzzw","xzzx","xzzx","xzzy","xzzy","xzzz","xzzz","yw","yww","ywww","ywwx","ywwy","ywwz","ywx","ywxw","ywxx","ywxy","ywxz","ywy","ywyw","ywyx","ywyy","ywyz","ywz","ywzw","ywzx","ywzy","ywzz","yx","yx","yx","yxw","yxww","yxwx","yxwy","yxwz","yxx","yxx","yxx","yxxw","yxxx","yxxx","yxxx","yxxy","yxxy","yxxy","yxxz","yxxz","yxy","yxy","yxy","yxyw","yxyx","yxyx","yxyx","yxyy","yxyy","yxyy","yxyz","yxyz","yxz","yxz","yxzw","yxzx","yxzx","yxzy","yxzy","yxzz","yxzz","yy","yy","yy","yyw","yyww","yywx","yywy","yywz","yyx","yyx","yyx","yyxw","yyxx","yyxx","yyxx","yyxy","yyxy","yyxy","yyxz","yyxz","yyy","yyy","yyy","yyyw","yyyx","yyyx","yyyx","yyyy","yyyy","yyyy","yyyz","yyyz","yyz","yyz","yyzw","yyzx","yyzx","yyzy","yyzy","yyzz","yyzz","yz","yz","yzw","yzww","yzwx","yzwy","yzwz","yzx","yzx","yzxw","yzxx","yzxx","yzxy","yzxy","yzxz","yzxz","yzy","yzy","yzyw","yzyx","yzyx","yzyy","yzyy","yzyz","yzyz","yzz","yzz","yzzw","yzzx","yzzx","yzzy","yzzy","yzzz","yzzz","zw","zww","zwww","zwwx","zwwy","zwwz","zwx","zwxw","zwxx","zwxy","zwxz","zwy","zwyw","zwyx","zwyy","zwyz","zwz","zwzw","zwzx","zwzy","zwzz","zx","zx","zxw","zxww","zxwx","zxwy","zxwz","zxx","zxx","zxxw","zxxx","zxxx","zxxy","zxxy","zxxz","zxxz","zxy","zxy","zxyw","zxyx","zxyx","zxyy","zxyy","zxyz","zxyz","zxz","zxz","zxzw","zxzx","zxzx","zxzy","zxzy","zxzz","zxzz","zy","zy","zyw","zyww","zywx","zywy","zywz","zyx","zyx","zyxw","zyxx","zyxx","zyxy","zyxy","zyxz","zyxz","zyy","zyy","zyyw","zyyx","zyyx","zyyy","zyyy","zyyz","zyyz","zyz","zyz","zyzw","zyzx","zyzx","zyzy","zyzy","zyzz","zyzz","zz","zz","zzw","zzww","zzwx","zzwy","zzwz","zzx","zzx","zzxw","zzxx","zzxx","zzxy","zzxy","zzxz","zzxz","zzy","zzy","zzyw","zzyx","zzyx","zzyy","zzyy","zzyz","zzyz","zzz","zzz","zzzw","zzzx","zzzx","zzzy","zzzy","zzzz","zzzz","AXES","AXES","AXES","MAX","MAX","MAX","MIN","MIN","MIN","ONE","ONE","ONE","UVec2","UVec3","UVec4","W","X","X","X","Y","Y","Y","Z","Z","ZERO","ZERO","ZERO","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","apply","apply","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dvec2","as_dvec3","as_dvec4","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_i64vec2","as_i64vec3","as_i64vec4","as_ivec2","as_ivec3","as_ivec4","as_mut","as_mut","as_mut","as_mut_parts","as_mut_parts","as_mut_parts","as_ref","as_ref","as_ref","as_ref_parts","as_ref_parts","as_ref_parts","as_reflect","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_u64vec2","as_u64vec3","as_u64vec4","as_vec2","as_vec3","as_vec3a","as_vec4","bitand","bitand","bitand","bitand","bitand","bitand","bitor","bitor","bitor","bitor","bitor","bitor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clamp","clamp","clamp","clone","clone","clone","clone_dynamic","clone_dynamic","clone_dynamic","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_value","clone_value","clone_value","cmpeq","cmpeq","cmpeq","cmpge","cmpge","cmpge","cmpgt","cmpgt","cmpgt","cmple","cmple","cmple","cmplt","cmplt","cmplt","cmpne","cmpne","cmpne","crate_name","crate_name","crate_name","create_from","create_from","create_from","cross","debug","debug","debug","default","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","div","div","div","div","div","div","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","dot","dot","dot","dot_into_vec","dot_into_vec","dot_into_vec","downcast","downcast","downcast","drop","drop","drop","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","extend","extend","field","field","field","field_at","field_at","field_at","field_at_mut","field_at_mut","field_at_mut","field_len","field_len","field_len","field_mut","field_mut","field_mut","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_array","from_array","from_array","from_parts","from_parts","from_parts","from_reflect","from_reflect","from_reflect","from_sample_","from_sample_","from_sample_","from_slice","from_slice","from_slice","from_world","from_world","from_world","get_field","get_field","get_field","get_field_mut","get_field_mut","get_field_mut","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_type_registration","get_type_registration","get_type_registration","hash","hash","hash","index","index","index","index_mut","index_mut","index_mut","init","init","init","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_reflect","into_reflect","into_reflect","into_sample","into_sample","into_sample","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","iter_fields","iter_fields","iter_fields","length_squared","length_squared","length_squared","max","max","max","max_element","max_element","max_element","min","min","min","min_element","min_element","min_element","module_path","module_path","module_path","mul","mul","mul","mul","mul","mul","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","name_at","name_at","name_at","new","new","new","not","not","not","null_value","null_value","null_value","product","product","product","product","product","product","read_from","read_from","read_from","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_hash","reflect_hash","reflect_hash","reflect_module_path","reflect_module_path","reflect_module_path","reflect_mut","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_ref","reflect_ref","reflect_ref","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_path","reflect_type_path","reflect_type_path","rem","rem","rem","rem","rem","rem","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","saturating_add","saturating_add","saturating_add","saturating_div","saturating_div","saturating_div","saturating_mul","saturating_mul","saturating_mul","saturating_sub","saturating_sub","saturating_sub","select","select","select","serialize","serialize","serialize","set","set","set","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","short_type_path","short_type_path","short_type_path","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","splat","splat","splat","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sum","sum","sum","sum","sum","sum","to_array","to_array","to_array","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_string","to_string","to_string","truncate","truncate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_ident","type_ident","type_ident","type_info","type_info","type_info","type_path","type_path","type_path","upcast","upcast","upcast","uvec2","uvec3","uvec4","vzip","vzip","vzip","w","wrapping_add","wrapping_add","wrapping_add","wrapping_div","wrapping_div","wrapping_div","wrapping_mul","wrapping_mul","wrapping_mul","wrapping_sub","wrapping_sub","wrapping_sub","write_into","write_into","write_into","write_to_slice","write_to_slice","write_to_slice","ww","www","wwww","wwwx","wwwy","wwwz","wwx","wwxw","wwxx","wwxy","wwxz","wwy","wwyw","wwyx","wwyy","wwyz","wwz","wwzw","wwzx","wwzy","wwzz","wx","wxw","wxww","wxwx","wxwy","wxwz","wxx","wxxw","wxxx","wxxy","wxxz","wxy","wxyw","wxyx","wxyy","wxyz","wxz","wxzw","wxzx","wxzy","wxzz","wy","wyw","wyww","wywx","wywy","wywz","wyx","wyxw","wyxx","wyxy","wyxz","wyy","wyyw","wyyx","wyyy","wyyz","wyz","wyzw","wyzx","wyzy","wyzz","wz","wzw","wzww","wzwx","wzwy","wzwz","wzx","wzxw","wzxx","wzxy","wzxz","wzy","wzyw","wzyx","wzyy","wzyz","wzz","wzzw","wzzx","wzzy","wzzz","x","x","x","xw","xww","xwww","xwwx","xwwy","xwwz","xwx","xwxw","xwxx","xwxy","xwxz","xwy","xwyw","xwyx","xwyy","xwyz","xwz","xwzw","xwzx","xwzy","xwzz","xx","xx","xx","xxw","xxww","xxwx","xxwy","xxwz","xxx","xxx","xxx","xxxw","xxxx","xxxx","xxxx","xxxy","xxxy","xxxy","xxxz","xxxz","xxy","xxy","xxy","xxyw","xxyx","xxyx","xxyx","xxyy","xxyy","xxyy","xxyz","xxyz","xxz","xxz","xxzw","xxzx","xxzx","xxzy","xxzy","xxzz","xxzz","xy","xy","xy","xyw","xyww","xywx","xywy","xywz","xyx","xyx","xyx","xyxw","xyxx","xyxx","xyxx","xyxy","xyxy","xyxy","xyxz","xyxz","xyy","xyy","xyy","xyyw","xyyx","xyyx","xyyx","xyyy","xyyy","xyyy","xyyz","xyyz","xyz","xyz","xyzw","xyzx","xyzx","xyzy","xyzy","xyzz","xyzz","xz","xz","xzw","xzww","xzwx","xzwy","xzwz","xzx","xzx","xzxw","xzxx","xzxx","xzxy","xzxy","xzxz","xzxz","xzy","xzy","xzyw","xzyx","xzyx","xzyy","xzyy","xzyz","xzyz","xzz","xzz","xzzw","xzzx","xzzx","xzzy","xzzy","xzzz","xzzz","y","y","y","yw","yww","ywww","ywwx","ywwy","ywwz","ywx","ywxw","ywxx","ywxy","ywxz","ywy","ywyw","ywyx","ywyy","ywyz","ywz","ywzw","ywzx","ywzy","ywzz","yx","yx","yx","yxw","yxww","yxwx","yxwy","yxwz","yxx","yxx","yxx","yxxw","yxxx","yxxx","yxxx","yxxy","yxxy","yxxy","yxxz","yxxz","yxy","yxy","yxy","yxyw","yxyx","yxyx","yxyx","yxyy","yxyy","yxyy","yxyz","yxyz","yxz","yxz","yxzw","yxzx","yxzx","yxzy","yxzy","yxzz","yxzz","yy","yy","yy","yyw","yyww","yywx","yywy","yywz","yyx","yyx","yyx","yyxw","yyxx","yyxx","yyxx","yyxy","yyxy","yyxy","yyxz","yyxz","yyy","yyy","yyy","yyyw","yyyx","yyyx","yyyx","yyyy","yyyy","yyyy","yyyz","yyyz","yyz","yyz","yyzw","yyzx","yyzx","yyzy","yyzy","yyzz","yyzz","yz","yz","yzw","yzww","yzwx","yzwy","yzwz","yzx","yzx","yzxw","yzxx","yzxx","yzxy","yzxy","yzxz","yzxz","yzy","yzy","yzyw","yzyx","yzyx","yzyy","yzyy","yzyz","yzyz","yzz","yzz","yzzw","yzzx","yzzx","yzzy","yzzy","yzzz","yzzz","z","z","zw","zww","zwww","zwwx","zwwy","zwwz","zwx","zwxw","zwxx","zwxy","zwxz","zwy","zwyw","zwyx","zwyy","zwyz","zwz","zwzw","zwzx","zwzy","zwzz","zx","zx","zxw","zxww","zxwx","zxwy","zxwz","zxx","zxx","zxxw","zxxx","zxxx","zxxy","zxxy","zxxz","zxxz","zxy","zxy","zxyw","zxyx","zxyx","zxyy","zxyy","zxyz","zxyz","zxz","zxz","zxzw","zxzx","zxzx","zxzy","zxzy","zxzz","zxzz","zy","zy","zyw","zyww","zywx","zywy","zywz","zyx","zyx","zyxw","zyxx","zyxx","zyxy","zyxy","zyxz","zyxz","zyy","zyy","zyyw","zyyx","zyyx","zyyy","zyyy","zyyz","zyyz","zyz","zyz","zyzw","zyzx","zyzx","zyzy","zyzy","zyzz","zyzz","zz","zz","zzw","zzww","zzwx","zzwy","zzwz","zzx","zzx","zzxw","zzxx","zzxx","zzxy","zzxy","zzxz","zzxz","zzy","zzy","zzyw","zzyx","zzyx","zzyy","zzyy","zzyz","zzyz","zzz","zzz","zzzw","zzzx","zzzx","zzzy","zzzy","zzzz","zzzz","U64Vec2","U64Vec3","U64Vec4","u64vec2","u64vec3","u64vec4","w","x","x","x","y","y","y","z","z","ALPHA_MODE_ADD","ALPHA_MODE_BLEND","ALPHA_MODE_MASK","ALPHA_MODE_MULTIPLY","ALPHA_MODE_OPAQUE","ALPHA_MODE_PREMULTIPLIED","ALPHA_MODE_RESERVED_BITS","Add","AddClusters","AddClustersFlush","AlphaMode","AmbientLight","AssignLightsToClusters","Atmospheric","Auto","BASE_COLOR_TEXTURE","BLEND_ALPHA","BLEND_MULTIPLY","BLEND_OPAQUE","BLEND_PREMULTIPLIED_ALPHA","BLEND_RESERVED_BITS","Blend","CLUSTERED_FORWARD_HANDLE","CLUSTERED_FORWARD_STORAGE_BUFFER_COUNT","COUNT","Cascade","CascadeShadowConfig","CascadeShadowConfigBuilder","Cascades","CascadesVisibleEntities","Castano13","CheckLightVisibility","ClusterConfig","ClusterFarZMode","ClusterZConfig","Clusters","Constant","CubemapVisibleEntities","Custom","DEBAND_DITHER","DEFAULT_RELIEF_MAPPING","DEFAULT_SHADOW_DEPTH_BIAS","DEFAULT_SHADOW_DEPTH_BIAS","DEFAULT_SHADOW_DEPTH_BIAS","DEFAULT_SHADOW_NORMAL_BIAS","DEFAULT_SHADOW_NORMAL_BIAS","DEFAULT_SHADOW_NORMAL_BIAS","DEFERRED_PREPASS","DEFERRED_PREPASS","DEPTH_CLAMP_ORTHO","DEPTH_MAP","DEPTH_PREPASS","DEPTH_PREPASS","DOUBLE_SIDED","DefaultOpaqueRendererMethod","Deferred","Directional","DirectionalLight","DirectionalLightBundle","DirectionalLightShadowMap","DrawMesh","DrawPrepass","EMISSIVE_TEXTURE","ENVIRONMENT_MAP","EnvironmentMapLight","Exponential","ExponentialSquared","ExtendedMaterial","ExtractedClusterConfig","ExtractedClustersPointLights","ExtractedDirectionalLight","ExtractedMaterials","ExtractedPointLight","FLIP_NORMAL_MAP_Y","FOG_ENABLED","FOG_SHADER_HANDLE","FORWARD_IO_HANDLE","FixedZ","FogFalloff","FogMeta","FogPlugin","FogSettings","Forward","GlobalLightMeta","GlobalVisiblePointLights","GpuDirectionalCascade","GpuDirectionalLight","GpuFog","GpuLights","GpuPointLight","GpuPointLights","GpuPointLightsStorage","GpuPointLightsUniform","HDR","Hardware2x2","High","Jimenez14","LightEntity","LightMeta","Linear","Low","MAX_CASCADES_PER_LIGHT","MAX_DIRECTIONAL_LIGHTS","MAX_INDICES","MAX_JOINTS","MAX_OFFSETS","MAX_UNIFORM_BUFFER_POINT_LIGHTS","MAY_DISCARD","MESH_BINDINGS_HANDLE","MESH_FUNCTIONS_HANDLE","MESH_PIPELINE_VIEW_LAYOUT_SAFE_MAX_TEXTURES","MESH_SHADER_HANDLE","MESH_TYPES_HANDLE","MESH_VIEW_BINDINGS_HANDLE","MESH_VIEW_TYPES_HANDLE","METALLIC_ROUGHNESS_TEXTURE","MORPH_HANDLE","MORPH_TARGETS","MOTION_VECTOR_PREPASS","MOTION_VECTOR_PREPASS","MSAA_RESERVED_BITS","MULTISAMPLED","Mask","Material","MaterialBindGroupId","MaterialExtension","MaterialExtensionKey","MaterialExtensionPipeline","MaterialMeshBundle","MaterialPipeline","MaterialPipelineKey","MaterialPlugin","MaterialProperties","MaxLightRange","Medium","Mesh3d","MeshBindGroups","MeshFlags","MeshLayouts","MeshPipeline","MeshPipelineKey","MeshPipelineViewLayout","MeshPipelineViewLayoutKey","MeshRenderPlugin","MeshTransforms","MeshUniform","MeshViewBindGroup","Multiply","NONE","NONE","NONE","NORMAL_PREPASS","NORMAL_PREPASS","None","NotShadowCaster","NotShadowReceiver","OCCLUSION_TEXTURE","Occlusion","Opaque","OpaqueRendererMethod","PARALLAX_MAPPING_SHADER_HANDLE","PBR_AMBIENT_HANDLE","PBR_BINDINGS_SHADER_HANDLE","PBR_DEFERRED_FUNCTIONS_HANDLE","PBR_DEFERRED_TYPES_HANDLE","PBR_FRAGMENT_HANDLE","PBR_FUNCTIONS_HANDLE","PBR_LIGHTING_HANDLE","PBR_PREPASS_FUNCTIONS_SHADER_HANDLE","PBR_PREPASS_SHADER_HANDLE","PBR_SHADER_HANDLE","PBR_TYPES_SHADER_HANDLE","PREPASS_BINDINGS_SHADER_HANDLE","PREPASS_IO_SHADER_HANDLE","PREPASS_SHADER_HANDLE","PREPASS_UTILS_SHADER_HANDLE","PRIMITIVE_TOPOLOGY_RESERVED_BITS","ParallaxMappingMethod","PbrBundle","PbrPlugin","Point","PointLight","PointLightBundle","PointLightShadowMap","Premultiplied","PrepareNextFrameMaterials","PreparedMaterial","PrepassPipeline","PrepassPipelinePlugin","PrepassPlugin","PrepassViewBindGroup","PreviousGlobalTransform","PreviousViewProjection","PreviousViewProjectionUniformOffset","PreviousViewProjectionUniforms","REVISED_KOSCHMIEDER_CONTRAST_THRESHOLD","RGB9E5_FUNCTIONS_HANDLE","Relief","RenderMaterialInstances","RenderMaterials","RenderMeshInstance","RenderMeshInstances","SCREEN_SPACE_AMBIENT_OCCLUSION","SHADOWS_HANDLE","SHADOW_FILTER_METHOD_CASTANO_13","SHADOW_FILTER_METHOD_HARDWARE_2X2","SHADOW_FILTER_METHOD_JIMENEZ_14","SHADOW_FILTER_METHOD_RESERVED_BITS","SHADOW_RECEIVER","SHADOW_SAMPLING_HANDLE","SIGN_DETERMINANT_MODEL_3X3","SKINNING_HANDLE","ScreenSpaceAmbientOcclusionBundle","ScreenSpaceAmbientOcclusionPlugin","ScreenSpaceAmbientOcclusionQualityLevel","ScreenSpaceAmbientOcclusionSettings","ScreenSpaceAmbientOcclusionTextures","SetMaterialBindGroup","SetMeshBindGroup","SetMeshViewBindGroup","SetPrepassViewBindGroup","Shadow","ShadowFilteringMethod","ShadowPassNode","ShadowSamplers","ShadowView","SimulationLightSystems","Single","SkinIndex","SkinUniform","Spot","SpotLight","SpotLightBundle","StandardMaterial","StandardMaterialFlags","StandardMaterialKey","StandardMaterialUniform","Storage","TAA","TONEMAP_IN_SHADER","TONEMAP_METHOD_ACES_FITTED","TONEMAP_METHOD_AGX","TONEMAP_METHOD_BLENDER_FILMIC","TONEMAP_METHOD_NONE","TONEMAP_METHOD_REINHARD","TONEMAP_METHOD_REINHARD_LUMINANCE","TONEMAP_METHOD_RESERVED_BITS","TONEMAP_METHOD_SOMEWHAT_BORING_DISPLAY_TRANSFORM","TONEMAP_METHOD_TONY_MC_MAPFACE","TWO_COMPONENT_NORMAL_MAP","UNINITIALIZED","UNINITIALIZED","UNLIT","UTILS_HANDLE","Ultra","Uniform","UpdateDirectionalLightCascades","UpdateLightFrusta","ViewClusterBindings","ViewFogUniformOffset","ViewLightEntities","ViewLightsUniformOffset","ViewShadowBindings","VisiblePointLights","XYZ","_marker","add_clusters","add_default_deferred_lighting_plugin","all","all","all","all","alpha_cutoff","alpha_mode","alpha_mode","alpha_mode","alpha_mode","alpha_mode","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","asset_type_name","asset_type_name","automatic_batching","base","base_color","base_color","base_color_texture","batch_range","batch_range","batch_range_mut","bind_group","bind_group_data","bind_group_data","bind_group_layout","bind_group_layout_entries","bind_group_layout_entries","binding","bindings","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds","brightness","buffer","build","build","build","build","build","build","build","build","cached_pipeline","calculate_cluster_factors","calculate_size_for","cascade_shadow_config","cascades","check_light_mesh_visibility","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clustered_forward_buffer_binding_type","color","color","color","color","color","complement","complement","complement","complement","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","contains","contains","contains","contains","contains","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","create_from","create_from","create_from","create_from","create_from","create_from","create_from","create_from","create_from","create_from","cubemap_frusta","cubemap_visible_entities","cull_mode","debug","debug","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","deferred","deferred","deferred_fragment_shader","deferred_fragment_shader","deferred_fragment_shader","deferred_fragment_shader","deferred_lighting_pass_id","deferred_lighting_pass_id","deferred_material_fragment_shader","deferred_material_vertex_shader","deferred_vertex_shader","deferred_vertex_shader","deferred_vertex_shader","depth_bias","depth_bias","depth_bias","depth_bias","depth_bias","depth_map","depth_prepass","depth_texture_view","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","did_warn_about_too_many_textures","difference","difference","difference","difference","diffuse_map","directional_light","directional_light_color","directional_light_depth_texture","directional_light_depth_texture_view","directional_light_exponent","directional_light_sampler","distance","double_sided","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","draw_3d_graph","draw_function","draw_function","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dummy_white_gpu_image","dyn_clone","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dynamic_offset","dynamic_offset","dynamic_offset_mut","emissive","emissive","emissive_texture","empty","empty","empty","empty","entities","entity","entity","entity_to_index","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend","extend","extend","extend","extension","extract_camera_previous_view_projection","extract_clusters","extract_component","extract_component","extract_component","extract_component","extract_lights","extract_materials","extract_meshes","extract_resource","extract_resource","extract_skins","falloff","far_z_mode","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","finish","finish","finish","finish","finish","first_cascade_far_bound","first_slice_depth","flags","flags","flags","flip_normal_map_y","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fog_enabled","forward","fragment_shader","fragment_shader","fragment_shader","fragment_shader","fragment_shader","fragment_shader","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_hdr","from_iter","from_iter","from_iter","from_iter","from_msaa_samples","from_name","from_name","from_name","from_name","from_primitive_topology","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_visibility","from_visibility_color","from_visibility_colors","from_visibility_contrast","from_visibility_contrast_color","from_visibility_contrast_colors","from_visibility_contrast_squared","from_visibility_squared","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","frusta","frustum","generate_view_layouts","get","get","get_batch_data","get_bind_group_id","get_bind_group_layout_entries","get_bindings","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_image_texture","get_mut","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_view_layout","global_transform","global_transform","global_transform","global_transform","gpu_fogs","gpu_point_lights","hash","hash","hash","hash","hash","hash","hash","illuminance","index","index_of","index_of","index_of","index_of","index_of","index_of","index_of","index_of","inherited_visibility","inherited_visibility","inherited_visibility","inherited_visibility","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner_angle","insert","insert","insert","insert","insert","insert","intensity","intensity","intersection","intersection","intersection","intersection","intersects","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_configs","into_iter","into_iter","into_iter","into_iter","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_system_set","inverse_transpose_model_a","inverse_transpose_model_b","is_all","is_all","is_all","is_all","is_empty","is_empty","is_empty","is_empty","is_empty","is_loaded","iter","iter","iter","iter","iter","iter","iter","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_mut","iter_names","iter_names","iter_names","iter_names","key","koschmieder","label","label","len","light_index_lists_binding","lights","marker","material","material_bind_group_id","material_layout","material_layout","material_layout","material_pipeline","max_parallax_layer_count","max_parallax_layer_count","max_relief_mapping_search_steps","maximum_distance","mesh","mesh_asset_id","mesh_key","mesh_key","mesh_layouts","mesh_layouts","mesh_pipeline","mesh_pipeline","metallic","metallic","metallic_roughness_texture","min_size","min_size_cluster_light_index_lists","min_size_cluster_offsets_and_counts","minimum_distance","minimum_distance","model_only","model_only","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","morphed","morphed","morphed_skinned","morphed_skinned","msaa_samples","n_indices","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","new","new","new","new","normal_map_texture","normal_prepass","not","not","not","not","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","num_cascades","occlusion_texture","offset","offset","offset","offsets_and_counts_binding","opaque_render_method","opaque_render_method","opaque_render_method","opaque_render_method","outer_angle","overlap_proportion","overlap_proportion","parallax_depth_scale","parallax_depth_scale","parallax_mapping_method","pass_name","per_object_buffer_batch_size","perceptual_roughness","pipeline","point_light","point_light_count","point_light_depth_texture","point_light_depth_texture_view","point_light_sampler","prelude","prepare_clusters","prepare_fog","prepare_lights","prepare_materials","prepare_mesh_bind_group","prepare_mesh_view_bind_groups","prepare_prepass_view_bind_group","prepare_previous_view_projection_uniforms","prepare_skins","prepass_enabled","prepass_enabled","prepass_fragment_shader","prepass_fragment_shader","prepass_fragment_shader","prepass_fragment_shader","prepass_material_fragment_shader","prepass_material_vertex_shader","prepass_vertex_shader","prepass_vertex_shader","prepass_vertex_shader","previous_transform","previous_transform","primitive_topology","properties","push_index","push_offset_and_counts","quality_level","queue_material_meshes","queue_prepass_material_meshes","queue_shadows","radius","radius","range","range","read_from","read_from","read_from","read_from","read_from","read_from","read_from","read_from","read_from","read_from","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflectance","reflectance","remove","remove","remove","remove","render","render","render","render","render","render_method","reset","roughness","run","screen_space_ambient_occlusion_texture","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set_to_deferred","set_to_forward","settings","setup_morph_and_skinning_defs","shadow_caster","shadow_depth_bias","shadow_depth_bias","shadow_depth_bias","shadow_normal_bias","shadow_normal_bias","shadow_normal_bias","shadows_enabled","shadows_enabled","shadows_enabled","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","size","size","size","size","size","size","size","size","size","size","size","size","skinned","skinned","sort","sort_key","specialize","specialize","specialize","specialize","specialize","specialize","specialize","specular_map","spot_light","spot_light_count","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","texture_count","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","toggle","toggle","toggle","toggle","transform","transform","transform","transform","transform","transform","transforms","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","uniforms","union","union","union","union","unlit","unprepared_bind_group","unprepared_bind_group","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update","update_directional_light_cascades","update_directional_light_frusta","update_mesh_previous_global_transforms","update_point_light_frusta","update_previous_view_projections","update_spot_light_frusta","value","variant_index","variant_index","variant_index","variant_index","variant_index","variant_index","variant_index","variant_index","variant_name","variant_name","variant_name","variant_name","variant_name","variant_name","variant_name","variant_name","variant_type","variant_type","variant_type","variant_type","variant_type","variant_type","variant_type","variant_type","vertex_shader","vertex_shader","vertex_shader","vertex_shader","vertex_shader","view_gpu_lights","view_layout_motion_vectors","view_layout_no_motion_vectors","view_proj","view_visibility","view_visibility","view_visibility","view_visibility","visibility","visibility","visibility","visibility","visible_entities","visible_entities","visit_dependencies","visit_dependencies","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wireframe","write_buffers","write_into","write_into","write_into","write_into","write_into","write_into","write_into","write_into","write_into","write_into","dimensions","dynamic_resizing","dynamic_resizing","total","z_config","z_config","z_slices","density","density","end","extinction","inscattering","start","cascade_index","face_index","light_entity","light_entity","light_entity","max_steps","samples_per_slice_side","slice_count","DEFAULT_PBR_DEFERRED_LIGHTING_PASS_ID","DEFERRED_LIGHTING_PASS","DEFERRED_LIGHTING_SHADER_HANDLE","DeferredLightingLayout","DeferredLightingPipeline","DeferredOpaquePass3dPbrLightingNode","DeferredPbrLightingPlugin","PbrDeferredLightingDepthId","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone_into","clone_type_data","component_ids","component_ids","create_from","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","extract_component","finish","from","from","from","from","from","from_components","from_components","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_world","from_world","from_world","get","get_components","get_components","init","init","init","init","init","insert_deferred_lighting_pass_id_component","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","new","null_value","null_value","pipeline_id","prepare_deferred_lighting_pipelines","read_from","run","set","size","specialize","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","write_into","node","SHADOW_PASS","Add","AlphaMode","AmbientLight","Atmospheric","Blend","DirectionalLight","DirectionalLightBundle","EnvironmentMapLight","Exponential","ExponentialSquared","FogFalloff","FogSettings","Linear","Mask","Material","MaterialMeshBundle","MaterialPlugin","Multiply","Occlusion","Opaque","ParallaxMappingMethod","PbrBundle","PointLight","PointLightBundle","Premultiplied","Relief","ScreenSpaceAmbientOcclusionPlugin","SpotLight","SpotLightBundle","StandardMaterial","_marker","alpha_mode","alpha_mode","base_color","base_color_texture","brightness","cascade_shadow_config","cascades","color","color","color","color","color","cubemap_frusta","cubemap_visible_entities","cull_mode","deferred_fragment_shader","deferred_lighting_pass_id","deferred_vertex_shader","depth_bias","depth_bias","depth_map","diffuse_map","directional_light","directional_light_color","directional_light_exponent","double_sided","emissive","emissive_texture","falloff","flip_normal_map_y","fog_enabled","fragment_shader","frusta","frustum","global_transform","global_transform","global_transform","global_transform","illuminance","inherited_visibility","inherited_visibility","inherited_visibility","inherited_visibility","inner_angle","intensity","intensity","material","max_parallax_layer_count","mesh","metallic","metallic_roughness_texture","normal_map_texture","occlusion_texture","opaque_render_method","opaque_render_method","outer_angle","parallax_depth_scale","parallax_mapping_method","perceptual_roughness","point_light","prepass_enabled","prepass_fragment_shader","prepass_vertex_shader","radius","radius","range","range","reflectance","shadow_depth_bias","shadow_depth_bias","shadow_depth_bias","shadow_normal_bias","shadow_normal_bias","shadow_normal_bias","shadows_enabled","shadows_enabled","shadows_enabled","specialize","specular_map","spot_light","transform","transform","transform","transform","unlit","vertex_shader","view_visibility","view_visibility","view_visibility","view_visibility","visibility","visibility","visibility","visibility","visible_entities","visible_entities","density","density","end","extinction","inscattering","start","max_steps","NoWireframe","WIREFRAME_SHADER_HANDLE","Wireframe","WireframeColor","WireframeConfig","WireframeMaterial","WireframePlugin","apply","apply","apply","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","asset_type_name","bind_group_layout_entries","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone","clone","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_value","clone_value","clone_value","clone_value","color","color","component_ids","component_ids","component_ids","crate_name","crate_name","crate_name","crate_name","crate_name","default","default","default","default","default","default","default_color","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extract_resource","field","field","field","field","field_at","field_at","field_at","field_at","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_len","field_len","field_len","field_len","field_mut","field_mut","field_mut","field_mut","fmt","fmt","fmt","fmt","fmt","fmt","fragment_shader","from","from","from","from","from","from","from_components","from_components","from_components","from_reflect","from_reflect","from_reflect","from_reflect","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_world","from_world","from_world","from_world","from_world","from_world","get_components","get_components","get_components","get_field","get_field","get_field","get_field","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_type_registration","get_type_registration","get_type_registration","get_type_registration","global","init","init","init","init","init","init","insert","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_reflect","into_reflect","into_reflect","into_reflect","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","iter_fields","iter_fields","iter_fields","iter_fields","label","module_path","module_path","module_path","module_path","module_path","name_at","name_at","name_at","name_at","null_value","null_value","null_value","null_value","null_value","null_value","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","set","set","set","set","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","specialize","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_ident","type_ident","type_ident","type_ident","type_ident","type_info","type_info","type_info","type_info","type_name","type_path","type_path","type_path","type_path","type_path","type_uuid","unprepared_bind_group","upcast","upcast","upcast","upcast","upcast","upcast","visit_dependencies","vzip","vzip","vzip","vzip","vzip","vzip","A","AabbGizmo","AabbGizmoConfig","AbntC1","AbntC2","Absolute","Add","AddChild","Added","Added","Alias","AlignContent","AlignItems","AlignSelf","AllScroll","Allowlist","AlphaMode","AltLeft","AltRight","AmbientLight","AncestorIter","AnimationClip","AnimationPlayer","AnimationPlugin","AnyOf","Apostrophe","App","AppTypeRegistry","Apps","Arrow","Asset","Asset","AssetApp","AssetEvent","AssetId","AssetMode","AssetPlugin","AssetServer","Assets","Asterisk","At","At","AtlasImageBundle","Atmospheric","AudioBundle","AudioSink","AudioSinkPlayback","AudioSource","AudioSourceBundle","Auto","Auto","Auto","Auto","Auto","AutoFill","AutoFit","Automatic","Ax","Axis","B","BSpline","BVec2","BVec3","BVec4","Back","BackgroundColor","Backslash","Baseline","Baseline","Baseline","Baseline","Blend","BorderColor","BracketLeft","BracketRight","BuildChildren","BuildChildrenTransformExt","BuildWorldChildren","Bundle","Bundle","Button","ButtonBundle","C","C","CalculatedClip","Calculator","Camera","Camera2d","Camera2dBundle","Camera3d","Camera3dBundle","Capital","CardinalSpline","Caret","Cell","Center","Center","Center","Center","Center","Center","Center","Centered","Changed","ChildBuilder","Children","ClearChildren","ClearColor","Clip","ColResize","Colon","Color","ColorMaterial","ColorMesh2dBundle","Column","Column","ColumnDense","ColumnReverse","Comma","Commands","Commit","Component","Component","Compose","Condition","ContextMenu","ControlLeft","ControlRight","Convert","Copy","Copy","Count","Crosshair","CubicBezier","CubicGenerator","CubicSegment","Current","CursorEntered","CursorIcon","CursorLeft","CursorMoved","Cut","D","DPadDown","DPadLeft","DPadRight","DPadUp","DebugName","Decodable","Decoder","DecoderItem","Default","Default","Default","Default","Default","DefaultPlugins","Deferred","Delete","Denylist","Deref","DerefMut","DescendantIter","DespawnChildrenRecursive","DespawnRecursive","DespawnRecursiveExt","DetectChanges","DetectChangesMut","Direction","DirectionalLight","DirectionalLightBundle","Disabled","Display","Down","DroppedFile","DynamicPlugin","DynamicPluginExt","DynamicPluginLoadError","DynamicScene","DynamicSceneBuilder","DynamicSceneBundle","E","EResize","East","Enabled","End","End","End","End","End","End","End","Entity","EntityMut","EntityPath","EntityRef","EntityWorldMut","EnvironmentMapLight","Equals","Escape","EulerRot","Event","Event","EventReader","EventWriter","Events","EwResize","Exponential","ExponentialSquared","ExtractSchedule","F","F1","F10","F11","F12","F13","F14","F15","F16","F17","F18","F19","F2","F20","F21","F22","F23","F24","F3","F4","F5","F6","F7","F8","F9","FailedToAddGlyph","FileDragAndDrop","First","FitContentPercent","FitContentPx","Fixed","FixedUpdate","Flex","FlexDirection","FlexEnd","FlexEnd","FlexEnd","FlexEnd","FlexStart","FlexStart","FlexStart","FlexStart","FlexWrap","FogFalloff","FogSettings","Font","Fraction","FrameCountPlugin","FromReflect","FromReflect","FromWorld","G","Gamepad","GamepadAxis","GamepadAxisType","GamepadButton","GamepadButtonType","Gamepads","GetField","GetPath","GetTupleStructField","GilrsPlugin","GizmoConfig","Gizmos","Global","GlobalTransform","GlobalVolume","Grab","Grabbing","Grave","Grid","GridAutoFlow","GridPlacement","GridPlacementError","GridTrack","GridTrackRepetition","H","Hand","Handle","Has","Help","Hermite","Hidden","HierarchyPlugin","HierarchyQueryExt","Home","Hovered","HoveredFile","HoveredFileCanceled","Hsla","I","IRect","IVec2","IVec3","IVec4","Image","ImageBundle","ImagePlugin","Ime","In","In","In","Index","Index","Inherit","Inherited","InheritedVisibility","Inner","Input","Insert","InsertChildren","Interaction","IntoSystem","IntoSystemConfigs","IntoSystemSet","IntoSystemSetConfigs","InvalidZeroIndex","InvalidZeroSpan","J","JustifyContent","JustifyItems","JustifySelf","K","Kana","Kanji","Key0","Key1","Key2","Key3","Key4","Key5","Key6","Key7","Key8","Key9","KeyCode","Keyframes","L","Label","Last","Lcha","Left","Left","Left","LeftStickX","LeftStickY","LeftThumb","LeftToRight","LeftTrigger","LeftTrigger2","LeftZ","Library","Linear","LoadedWithDependencies","Local","Local","M","Mail","Main","Mask","Mat2","Mat3","Mat4","Material","MaterialMeshBundle","MaterialPlugin","MaxContent","MaxContent","MaxTrackSizingFunction","MediaSelect","MediaStop","Mesh","Middle","MinContent","MinContent","MinTrackSizingFunction","MinimalPlugins","Minus","Mode","Modified","MonitorSelection","MorphWeights","MouseButton","Move","Msaa","Multiply","Mut","Mute","MyComputer","N","NResize","Name","NavigateBackward","NavigateForward","NeResize","NeswResize","NextState","NextTrack","NoConvert","NoDrop","NoSuchFont","NoWrap","Node","NodeBundle","NonEvaluateable","NonIdenticalVariants","NonSend","NonSendMut","None","None","North","NotAllowed","NsResize","Numlock","Numpad0","Numpad1","Numpad2","Numpad3","Numpad4","Numpad5","Numpad6","Numpad7","Numpad8","Numpad9","NumpadAdd","NumpadComma","NumpadDecimal","NumpadDivide","NumpadEnter","NumpadEquals","NumpadMultiply","NumpadSubtract","NwResize","NwseResize","O","Occlusion","Oem102","Off","OnEnter","OnExit","OnTransition","Once","Opaque","Or","Orthographic","OrthographicProjection","Other","Other","Other","Out","Out","Outline","Overflow","OverflowAxis","P","PageDown","PageUp","ParallaxMappingMethod","ParallelCommands","Param","ParamSet","Parent","Paste","Pause","PbrBundle","Percent","Percent","Percent","Period","Perspective","PerspectiveProjection","Pitch","PitchBundle","PlayPause","PlaybackSettings","Plugin","Plugin","PluginGroup","Plus","PointLight","PointLightBundle","PositionType","PostStartup","PostUpdate","Power","PreStartup","PreUpdate","Preedit","Premultiplied","Pressed","PrevTrack","Primary","Processed","Progress","Projection","PushChildren","Px","Px","Px","Q","Quat","Query","QueryState","R","Ray","ReadOnlySystem","Real","ReceivedCharacter","Rect","Ref","Reflect","Reflect","ReflectComponent","ReflectDefault","ReflectDeserialize","ReflectFromReflect","ReflectPath","ReflectResource","ReflectSerialize","Relative","Relief","RemoveChildren","RemoveParent","Removed","RemovedComponents","RepeatedGridTrack","Repeating","ReplaceChildren","Res","ResMut","Resource","Resource","Return","Rgba","RgbaLinear","Right","Right","Right","RightStickX","RightStickY","RightThumb","RightToLeft","RightTrigger","RightTrigger2","RightZ","Rotation","Row","Row","RowDense","RowResize","RowReverse","RumbleSystem","S","SResize","Sample2","Sample4","Sample8","Scale","ScanCode","Scene","SceneBundle","SceneFilter","SceneSpawner","Schedule","Schedules","ScreenSpaceAmbientOcclusionPlugin","Scroll","SeResize","Select","Semicolon","Set","Shader","ShiftLeft","ShiftRight","Slash","Sleep","Snapshot","South","Space","SpaceAround","SpaceAround","SpaceBetween","SpaceBetween","SpaceEvenly","SpaceEvenly","SpatialAudioSink","SpatialBundle","SpatialListener","SpawnScene","SpotLight","SpotLightBundle","Sprite","SpriteBundle","SpriteSheetBundle","StandardMaterial","Start","Start","Start","Start","Start","Start","Start","Startup","State","StateTransition","States","States","Stop","Storage","Stretch","Stretch","Stretch","Stretch","Stretch","Strong","Strong","Struct","Style","SuperLeft","SuperRight","SwResize","Sysrq","System","System","SystemParamFunction","SystemSet","SystemSet","T","Tab","TaskPoolOptions","TaskPoolPlugin","Text","Text","Text2dBundle","TextAlignment","TextBundle","TextError","TextSection","TextStyle","TextureAtlas","TextureAtlasBuilder","TextureAtlasSprite","Time","Timer","TimerMode","TouchInput","Touches","Transform","TransformBundle","TransformHelper","TransformPlugin","TransformPoint","Translation","TupleStruct","TypePath","TypePath","TypeRegistrationPlugin","U","URect","UVec2","UVec3","UVec4","UiCameraConfig","UiImage","UiRect","UiScale","UiTextureAtlasImage","Underline","Unlabeled","Unprocessed","Unset","UntypedHandle","Up","Update","Uuid","V","VMax","VMin","Val","ValArithmeticError","ValidParentCheckPlugin","VariableCurve","Vec2","Vec2","Vec2","Vec2Swizzles","Vec3","Vec3","Vec3","Vec3Swizzles","Vec4","Vec4","Vec4","Vec4Swizzles","VerticalText","Vh","ViewVisibility","Virtual","Visibility","VisibilityBundle","Visible","Visible","VolumeDown","VolumeUp","Vw","W","WResize","Wait","Wake","Weak","Weak","WebBack","WebFavorites","WebForward","WebHome","WebRefresh","WebSearch","WebStop","Weights","West","Window","WindowMoved","WindowPlugin","WindowPosition","WindowResizeConstraints","With","Without","World","WorldChildBuilder","Wrap","WrapReverse","X","XYZ","XZY","Y","YXZ","YZX","Yen","Z","Z","ZIndex","ZXY","ZYX","ZoomIn","ZoomOut","_marker","aabb","add_child","add_child","additional_imports","after","after","align_content","align_items","align_self","alignment","alpha_mode","alpha_mode","ambiguous_with","ambiguous_with","ambiguous_with_all","ambiguous_with_all","anchor","anchor","and_then","any_component_removed","any_with_component","apply","apply_deferred","apply_deferred","apply_state_transition","archetype_component_access","area","as_any","as_any_mut","as_reflect","as_reflect_mut","aspect_ratio","aspect_ratio","async_compute","axis_type","background_color","background_color","background_color","background_color","background_color","base_color","base_color_texture","before","before","bevy_main","border","border_color","border_color","bottom","bottom","brightness","build","build","button","button_type","bypass_change_detection","bytes","calculated_size","calculated_size","calculated_size","camera","camera","camera_2d","camera_3d","camera_render_graph","camera_render_graph","canvas","cascade_shadow_config","cascades","chain","chain","char","check_change_tick","child","child","cleanup","clear_children","clear_color","clear_color","clip","clone_dynamic","clone_dynamic","clone_value","close_when_requested","color","color","color","color","color","color","color","color","color","color","color","color_grading","column_gap","component_access","composite_alpha_mode","compute","computed","crate_name","cubemap_frusta","cubemap_visible_entities","cull_mode","cursor","custom_size","custom_size","data","dbg","deband_dither","debug","debug","debug_span","decoder","decorations","default","default_color","default_sampler","default_system_sets","deferred_fragment_shader","deferred_lighting_pass_id","deferred_vertex_shader","depth_bias","depth_bias","depth_bias","depth_load_op","depth_map","depth_texture_usages","despawn_descendants","despawn_recursive","despawn_with_children_recursive","diffuse_map","direction","direction","directional_light","directional_light_color","directional_light_exponent","display","distributive_run_if","dither","double_sided","draw_all","duration","dyn_clone","dynamically_load_plugin","element","element_mut","emissive","emissive_texture","empty","enabled","enabled_buttons","entities","entity","entity","entity","entity","error","error","error_span","exit_condition","falloff","far","far","field","field","field_at","field_at_mut","field_len","field_len","field_mut","field_mut","file_dependencies","file_path","finish","fit_canvas_to_parent","flex_basis","flex_direction","flex_grow","flex_shrink","flex_wrap","flip_normal_map_y","flip_x","flip_x","flip_x","flip_x","flip_y","flip_y","flip_y","flip_y","focus_policy","focus_policy","focus_policy","focus_policy","focus_policy","focused","fog_enabled","font","font","font_size","force","fov","fragment_shader","frequency","from","from_reflect","from_world","frusta","frustum","frustum","frustum","func","gamepad","gamepad","get_field","get_field","get_field_mut","get_field_mut","get_last_run","get_represented_type_info","global","global_transform","global_transform","global_transform","global_transform","global_transform","global_transform","global_transform","global_transform","global_transform","global_transform","global_transform","global_transform","global_transform","global_transform","global_transform","global_transform","global_transform","grid_auto_columns","grid_auto_flow","grid_auto_rows","grid_column","grid_row","grid_template_columns","grid_template_rows","hdr","height","id","id","ignore","ignored_scheduling_ambiguities","illuminance","image","image","image_size","image_size","ime_enabled","ime_position","import_path","imports","in_set","in_set","in_state","index","index","info","info","info_span","inherited_visibility","inherited_visibility","inherited_visibility","inherited_visibility","inherited_visibility","inherited_visibility","inherited_visibility","inherited_visibility","inherited_visibility","inherited_visibility","inherited_visibility","inherited_visibility","inherited_visibility","inherited_visibility","inherited_visibility","inherited_visibility","init_asset","init_asset_loader","initialize","inner_angle","insert_children","insert_children","intensity","intensity","interaction","internal","into_any","into_reflect","into_system","into_system_set","io","is_active","is_added","is_anonymous","is_changed","is_dynamic","is_exclusive","is_paused","is_send","is_unique","iter_ancestors","iter_descendants","iter_fields","iter_fields","justify_content","justify_items","justify_self","keyframe_timestamps","keyframes","last_changed","left","left","left_ear_offset","line_perspective","line_width","linebreak_behavior","load_plugin","local","main_schedule_label","map","margin","material","max","max","max","max_height","max_height","max_parallax_layer_count","max_total_threads","max_width","max_width","mesh","metallic","metallic_roughness_texture","min","min","min","min_height","min_height","min_total_threads","min_width","min_width","mode","mode","mode","module_path","msaa_writeback","name","name","name","name","name_at","near","near","node","node","node","node","node","normal_map_texture","not","occlusion_texture","offset","on_event","opaque_render_method","opaque_render_method","or_else","order","origin","outer_angle","output_mode","overflow","padding","parallax_depth_scale","parallax_mapping_method","parent","parts","path","path","path_mut","pause","paused","perceptual_roughness","phase","pipe","play","point_light","position","position","position","position","position_type","prepass_enabled","prepass_fragment_shader","prepass_vertex_shader","preregister_asset_loader","present_mode","prevent_default_event_handling","primary_window","processed_file_path","projection","projection","push_children","push_children","radius","radius","range","range","ready","rect","reflect_element","reflect_element_mut","reflect_hash","reflect_mut","reflect_owned","reflect_partial_eq","reflect_path","reflect_path_mut","reflect_ref","reflect_trait","reflectance","register_asset_loader","register_asset_processor","register_asset_reflect","register_asset_source","remove_children","remove_children","remove_parent","remove_parent","remove_parent_in_place","render_layers","replace_children","replace_if_neq","resizable","resize_constraints","resolution","resource_added","resource_changed","resource_changed_or_removed","resource_equals","resource_exists","resource_exists_and_changed","resource_exists_and_equals","resource_removed","resources","right","right","right_ear_offset","rotation","row_gap","run","run","run_if","run_if","run_once","run_readonly","run_unsafe","runner","sampler_descriptor","scale","scale","scaling_mode","scene","scene","sections","serializable","set","set","set_changed","set_default_asset_processor","set_if_neq","set_last_changed","set_last_run","set_parent","set_parent","set_parent_in_place","set_speed","set_volume","settings","shader_defs","shadow_depth_bias","shadow_depth_bias","shadow_depth_bias","shadow_normal_bias","shadow_normal_bias","shadow_normal_bias","shadows_enabled","shadows_enabled","shadows_enabled","shape","short_type_path","show_ui","size","source","source","spatial","specialize","specular_map","speed","speed","spot_light","sprite","sprite","state_changed","state_exists","state_exists_and_equals","stop","style","style","style","style","style","style","system_adapter","system_type","take_from_reflect","target","task_pool_options","text","text","text_2d_bounds","text_anchor","text_flags","text_layout_info","text_layout_info","texture","texture","texture","texture","texture_atlas","texture_atlas","texture_atlas_image","texture_descriptor","texture_view_descriptor","textures","title","to","to_curve","toggle","tonemapping","tonemapping","top","top","trace","trace_span","transform","transform","transform","transform","transform","transform","transform","transform","transform","transform","transform","transform","transform","transform","transform","transform","transform","transform_point","translation","transparent","type_id","type_ident","type_name","type_path","unlit","unwrap","update_archetype_component_access","value","vertex_shader","view_visibility","view_visibility","view_visibility","view_visibility","view_visibility","view_visibility","view_visibility","view_visibility","view_visibility","view_visibility","view_visibility","view_visibility","view_visibility","view_visibility","view_visibility","view_visibility","viewport","viewport_origin","visibility","visibility","visibility","visibility","visibility","visibility","visibility","visibility","visibility","visibility","visibility","visibility","visibility","visibility","visibility","visibility","visible","visible_entities","visible_entities","visible_entities","visible_entities","volume","volume","volume","w","w","w","w_axis","warn","warn","warn_span","watch_for_changes_override","width","width","window","window","window","window","window_level","window_theme","with_children","with_children","world","world","ww","www","wwww","wwwx","wwwy","wwwz","wwx","wwxw","wwxx","wwxy","wwxz","wwy","wwyw","wwyx","wwyy","wwyz","wwz","wwzw","wwzx","wwzy","wwzz","wx","wxw","wxww","wxwx","wxwy","wxwz","wxx","wxxw","wxxx","wxxy","wxxz","wxy","wxyw","wxyx","wxyy","wxyz","wxz","wxzw","wxzx","wxzy","wxzz","wy","wyw","wyww","wywx","wywy","wywz","wyx","wyxw","wyxx","wyxy","wyxz","wyy","wyyw","wyyx","wyyy","wyyz","wyz","wyzw","wyzx","wyzy","wyzz","wz","wzw","wzww","wzwx","wzwy","wzwz","wzx","wzxw","wzxx","wzxy","wzxz","wzy","wzyw","wzyx","wzyy","wzyz","wzz","wzzw","wzzx","wzzy","wzzz","x","x","x","x","x","x","x","x","x","x","x","x","x_axis","x_axis","xw","xww","xwww","xwwx","xwwy","xwwz","xwx","xwxw","xwxx","xwxy","xwxz","xwy","xwyw","xwyx","xwyy","xwyz","xwz","xwzw","xwzx","xwzy","xwzz","xx","xx","xx","xxw","xxww","xxwx","xxwy","xxwz","xxx","xxx","xxx","xxxw","xxxx","xxxx","xxxx","xxxy","xxxy","xxxy","xxxz","xxxz","xxy","xxy","xxy","xxyw","xxyx","xxyx","xxyx","xxyy","xxyy","xxyy","xxyz","xxyz","xxz","xxz","xxzw","xxzx","xxzx","xxzy","xxzy","xxzz","xxzz","xy","xy","xy","xyw","xyww","xywx","xywy","xywz","xyx","xyx","xyx","xyxw","xyxx","xyxx","xyxx","xyxy","xyxy","xyxy","xyxz","xyxz","xyy","xyy","xyy","xyyw","xyyx","xyyx","xyyx","xyyy","xyyy","xyyy","xyyz","xyyz","xyz","xyz","xyzw","xyzx","xyzx","xyzy","xyzy","xyzz","xyzz","xz","xz","xzw","xzww","xzwx","xzwy","xzwz","xzx","xzx","xzxw","xzxx","xzxx","xzxy","xzxy","xzxz","xzxz","xzy","xzy","xzyw","xzyx","xzyx","xzyy","xzyy","xzyz","xzyz","xzz","xzz","xzzw","xzzx","xzzx","xzzy","xzzy","xzzz","xzzz","y","y","y","y","y","y","y","y","y","y","y","y","y_axis","y_axis","yw","yww","ywww","ywwx","ywwy","ywwz","ywx","ywxw","ywxx","ywxy","ywxz","ywy","ywyw","ywyx","ywyy","ywyz","ywz","ywzw","ywzx","ywzy","ywzz","yx","yx","yx","yxw","yxww","yxwx","yxwy","yxwz","yxx","yxx","yxx","yxxw","yxxx","yxxx","yxxx","yxxy","yxxy","yxxy","yxxz","yxxz","yxy","yxy","yxy","yxyw","yxyx","yxyx","yxyx","yxyy","yxyy","yxyy","yxyz","yxyz","yxz","yxz","yxzw","yxzx","yxzx","yxzy","yxzy","yxzz","yxzz","yy","yy","yy","yyw","yyww","yywx","yywy","yywz","yyx","yyx","yyx","yyxw","yyxx","yyxx","yyxx","yyxy","yyxy","yyxy","yyxz","yyxz","yyy","yyy","yyy","yyyw","yyyx","yyyx","yyyx","yyyy","yyyy","yyyy","yyyz","yyyz","yyz","yyz","yyzw","yyzx","yyzx","yyzy","yyzy","yyzz","yyzz","yz","yz","yzw","yzww","yzwx","yzwy","yzwz","yzx","yzx","yzxw","yzxx","yzxx","yzxy","yzxy","yzxz","yzxz","yzy","yzy","yzyw","yzyx","yzyx","yzyy","yzyy","yzyz","yzyz","yzz","yzz","yzzw","yzzx","yzzx","yzzy","yzzy","yzzz","yzzz","z","z","z","z","z","z","z","z_axis","z_axis","z_index","z_index","z_index","z_index","z_index","zw","zww","zwww","zwwx","zwwy","zwwz","zwx","zwxw","zwxx","zwxy","zwxz","zwy","zwyw","zwyx","zwyy","zwyz","zwz","zwzw","zwzx","zwzy","zwzz","zx","zx","zxw","zxww","zxwx","zxwy","zxwz","zxx","zxx","zxxw","zxxx","zxxx","zxxy","zxxy","zxxz","zxxz","zxy","zxy","zxyw","zxyx","zxyx","zxyy","zxyy","zxyz","zxyz","zxz","zxz","zxzw","zxzx","zxzx","zxzy","zxzy","zxzz","zxzz","zy","zy","zyw","zyww","zywx","zywy","zywz","zyx","zyx","zyxw","zyxx","zyxx","zyxy","zyxy","zyxz","zyxz","zyy","zyy","zyyw","zyyx","zyyx","zyyy","zyyy","zyyz","zyyz","zyz","zyz","zyzw","zyzx","zyzx","zyzy","zyzy","zyzz","zyzz","zz","zz","zzw","zzww","zzwx","zzwy","zzwz","zzx","zzx","zzxw","zzxx","zzxx","zzxy","zzxy","zzxz","zzxz","zzy","zzy","zzyw","zzyx","zzyx","zzyy","zzyy","zzyz","zzyz","zzz","zzz","zzzw","zzzx","zzzx","zzzy","zzzy","zzzz","zzzz","id","id","id","id","index","marker","uuid","alpha","alpha","alpha","alpha","blue","blue","chroma","green","green","hue","hue","lightness","lightness","red","red","saturation","path_buf","path_buf","window","window","window","density","density","end","extinction","inscattering","start","cursor","value","value","window","window","window","window","max_steps","Aspect","Box","Capsule","CapsuleUvProfile","Circle","Cube","Cylinder","Fixed","Icosphere","Plane","Quad","RegularPolygon","Torus","UVSphere","Uniform","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","default","default","default","default","default","default","default","default","default","default","default","default","depth","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","flip","flipped","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_corners","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_size","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","height","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","latitudes","longitudes","max_x","max_y","max_z","min_x","min_y","min_z","new","new","new","new","new","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","radius","radius","radius","radius","radius","radius","radius","resolution","ring_radius","rings","sectors","segments","sides","size","size","size","stacks","subdivisions","subdivisions","subdivisions_segments","subdivisions_sides","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","uv_profile","vertices","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","dbg","error","ignore","info","new","unwrap","warn","Aligned","IsAligned","OwningPtr","Ptr","PtrMut","ThinSlicePtr","Unaligned","UnsafeCellDeref","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_mut","as_ptr","as_ptr","as_ptr","as_ref","as_ref","assert_unique","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","byte_add","byte_add","byte_add","byte_offset","byte_offset","byte_offset","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","dangling_with_align","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop_as","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","get","init","init","init","init","init","init","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","make","new","new","new","promote","read","read","read_unaligned","reborrow","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_unaligned","to_unaligned","to_unaligned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","AccessError","Array","Array","Array","Array","Array","ArrayInfo","ArrayIter","DynamicArray","DynamicEnum","DynamicList","DynamicMap","DynamicStruct","DynamicTuple","DynamicTupleStruct","DynamicTypePath","DynamicVariant","Enum","Enum","Enum","Enum","Enum","EnumInfo","FieldIter","FromReflect","FromReflect","FromType","GetField","GetPath","GetTupleField","GetTupleStructField","GetTypeRegistration","InvalidAccess","InvalidDowncast","List","List","List","List","List","ListInfo","ListIter","Map","Map","Map","Map","Map","MapInfo","MapIter","NamedField","ParseError","ParseError","ParsedPath","Reflect","Reflect","ReflectDeserialize","ReflectFromPtr","ReflectFromReflect","ReflectMut","ReflectOwned","ReflectPath","ReflectPathError","ReflectRef","ReflectSerialize","Struct","Struct","Struct","Struct","Struct","Struct","Struct","Struct","Struct","StructInfo","StructVariantInfo","TYPE_UUID","Tuple","Tuple","Tuple","Tuple","Tuple","Tuple","Tuple","Tuple","Tuple","TupleFieldIter","TupleInfo","TupleStruct","TupleStruct","TupleStruct","TupleStruct","TupleStruct","TupleStructFieldIter","TupleStructInfo","TupleVariantInfo","TypeData","TypeInfo","TypePath","TypePath","TypePathTable","TypeRegistration","TypeRegistry","TypeRegistryArc","TypeUuid","TypeUuid","TypeUuidDynamic","Typed","Unit","Unit","Unit","UnitVariantInfo","UnnamedField","Uuid","Value","Value","Value","Value","ValueInfo","VariantField","VariantFieldIter","VariantInfo","VariantType","add_registration","apply","apply","apply","apply","apply","apply","apply","apply","array_apply","array_debug","array_hash","array_partial_eq","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_dyn_eq","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","cmp","compare","contains_variant","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","data","data_mut","debug","debug","debug","debug","debug","debug","debug","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast_mut","downcast_mut","downcast_rc","downcast_ref","downcast_ref","drain","drain","drain","drain","drain","drain","drain","drain","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","element","element_mut","empty","enum_debug","enum_hash","enum_partial_eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","field","field","field","field","field","field","field","field","field","field","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_names","field_names","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ptr","from_ptr_mut","from_ref","from_reflect","from_reflect","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_type","from_type","from_type","from_type","from_type","from_vec","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","func","get","get","get","get","get","get","get","get_at","get_at","get_at_mut","get_at_mut","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_serializable","get_type_data","get_type_data_mut","get_type_info","get_type_registration","get_with_short_type_path","get_with_short_type_path_mut","get_with_type_path","get_with_type_path_mut","hash","hash","ident","impl_from_reflect_value","impl_reflect_struct","impl_reflect_value","impl_type_path","impl_type_uuid","in_current_span","in_current_span","in_current_span","index","index_of","index_of","index_of","index_of","index_of","index_of","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","insert","insert","insert","insert","insert","insert","insert","insert_boxed","insert_boxed","insert_boxed","insert_boxed","insert_boxed","internal","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is","is","is","is","is","is","is","is","is","is","is","is","is","is_dynamic","is_dynamic","is_dynamic","is_dynamic","is_dynamic","is_dynamic","is_dynamic","is_empty","is_empty","is_empty","is_variant","item_is","item_is","item_type_id","item_type_id","item_type_path_table","item_type_path_table","iter","iter","iter","iter","iter","iter","iter","iter","iter","iter","iter","iter","iter","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_mut","key_is","key_type_id","key_type_path_table","len","len","len","len","len","len","list_apply","list_debug","list_hash","list_partial_eq","map_apply","map_debug","map_partial_eq","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","name","name","name","name","name","name","name_at","name_at","name_at","name_at","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_with_index","next","next","next","next","next","next","next","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","of","of","parse","parse_static","partial_cmp","path","path","path_mut","pop","pop","prelude","push","push","push","push_box","read","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_element","reflect_element","reflect_element_mut","reflect_element_mut","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_path","reflect_path_mut","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_trait","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","register","register_type_data","remove","remove","remove","remove","represents","serde","serializable","set","set","set","set","set","set","set","set","set_represented_type","set_represented_type","set_represented_type","set_represented_type","set_represented_type","set_represented_type","set_represented_type","set_variant","set_variant_with_index","short_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","source","source","std_traits","struct_debug","struct_partial_eq","take","take_from_reflect","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tuple_apply","tuple_debug","tuple_partial_eq","tuple_struct_debug","tuple_struct_partial_eq","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_info","type_info","type_info","type_name","type_name","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path_table","type_path_table","type_path_table","type_path_table","type_path_table","type_path_table","type_path_table","type_path_table","type_path_table","type_path_table","type_path_table","type_uuid","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","utility","value","value_is","value_type_id","value_type_path_table","variant","variant_at","variant_index","variant_index","variant_len","variant_name","variant_name","variant_names","variant_path","variant_path","variant_type","variant_type","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write","error","error","offset","offset","path","Deserializer","Error","Result","Serialize","Serializer","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","custom","custom","deref","deref_mut","deserialize","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","downcast","drop","erase","erase","erased_deserialize_any","erased_deserialize_bool","erased_deserialize_byte_buf","erased_deserialize_bytes","erased_deserialize_char","erased_deserialize_enum","erased_deserialize_f32","erased_deserialize_f64","erased_deserialize_i128","erased_deserialize_i16","erased_deserialize_i32","erased_deserialize_i64","erased_deserialize_i8","erased_deserialize_identifier","erased_deserialize_ignored_any","erased_deserialize_map","erased_deserialize_newtype_struct","erased_deserialize_option","erased_deserialize_seq","erased_deserialize_str","erased_deserialize_string","erased_deserialize_struct","erased_deserialize_tuple","erased_deserialize_tuple_struct","erased_deserialize_u128","erased_deserialize_u16","erased_deserialize_u32","erased_deserialize_u64","erased_deserialize_u8","erased_deserialize_unit","erased_deserialize_unit_struct","erased_is_human_readable","erased_is_human_readable","erased_serialize","erased_serialize_bool","erased_serialize_bytes","erased_serialize_char","erased_serialize_f32","erased_serialize_f64","erased_serialize_i128","erased_serialize_i16","erased_serialize_i32","erased_serialize_i64","erased_serialize_i8","erased_serialize_map","erased_serialize_newtype_struct","erased_serialize_newtype_variant","erased_serialize_none","erased_serialize_seq","erased_serialize_some","erased_serialize_str","erased_serialize_struct","erased_serialize_struct_variant","erased_serialize_tuple","erased_serialize_tuple_struct","erased_serialize_tuple_variant","erased_serialize_u128","erased_serialize_u16","erased_serialize_u32","erased_serialize_u64","erased_serialize_u8","erased_serialize_unit","erased_serialize_unit_struct","erased_serialize_unit_variant","fmt","fmt","from","from_sample_","in_current_span","init","into","into_any","into_any_arc","into_any_rc","into_sample","is_human_readable","is_human_readable","is_human_readable","is_human_readable","is_human_readable","is_human_readable","is_human_readable","is_human_readable","serialize","serialize","serialize","serialize","serialize","serialize_bool","serialize_bool","serialize_bool","serialize_bool","serialize_bytes","serialize_bytes","serialize_bytes","serialize_bytes","serialize_char","serialize_char","serialize_char","serialize_char","serialize_f32","serialize_f32","serialize_f32","serialize_f32","serialize_f64","serialize_f64","serialize_f64","serialize_f64","serialize_i128","serialize_i128","serialize_i128","serialize_i128","serialize_i16","serialize_i16","serialize_i16","serialize_i16","serialize_i32","serialize_i32","serialize_i32","serialize_i32","serialize_i64","serialize_i64","serialize_i64","serialize_i64","serialize_i8","serialize_i8","serialize_i8","serialize_i8","serialize_map","serialize_map","serialize_map","serialize_map","serialize_newtype_struct","serialize_newtype_struct","serialize_newtype_struct","serialize_newtype_struct","serialize_newtype_variant","serialize_newtype_variant","serialize_newtype_variant","serialize_newtype_variant","serialize_none","serialize_none","serialize_none","serialize_none","serialize_seq","serialize_seq","serialize_seq","serialize_seq","serialize_some","serialize_some","serialize_some","serialize_some","serialize_str","serialize_str","serialize_str","serialize_str","serialize_struct","serialize_struct","serialize_struct","serialize_struct","serialize_struct_variant","serialize_struct_variant","serialize_struct_variant","serialize_struct_variant","serialize_trait_object","serialize_tuple","serialize_tuple","serialize_tuple","serialize_tuple","serialize_tuple_struct","serialize_tuple_struct","serialize_tuple_struct","serialize_tuple_struct","serialize_tuple_variant","serialize_tuple_variant","serialize_tuple_variant","serialize_tuple_variant","serialize_u128","serialize_u128","serialize_u128","serialize_u128","serialize_u16","serialize_u16","serialize_u16","serialize_u16","serialize_u32","serialize_u32","serialize_u32","serialize_u32","serialize_u64","serialize_u64","serialize_u64","serialize_u64","serialize_u8","serialize_u8","serialize_u8","serialize_u8","serialize_unit","serialize_unit","serialize_unit","serialize_unit","serialize_unit_struct","serialize_unit_struct","serialize_unit_struct","serialize_unit_struct","serialize_unit_variant","serialize_unit_variant","serialize_unit_variant","serialize_unit_variant","to_sample_","to_string","try_from","try_into","type_id","upcast","vzip","FromReflect","FromReflect","GetField","GetPath","GetTupleStructField","Reflect","Reflect","ReflectDefault","ReflectDeserialize","ReflectFromReflect","ReflectPath","ReflectSerialize","Struct","TupleStruct","TypePath","TypePath","apply","as_any","as_any_mut","as_reflect","as_reflect_mut","clone_dynamic","clone_dynamic","clone_value","crate_name","debug","element","element_mut","field","field","field_at","field_at_mut","field_len","field_len","field_mut","field_mut","from_reflect","func","get_field","get_field","get_field_mut","get_field_mut","get_represented_type_info","into_any","into_reflect","is_dynamic","iter_fields","iter_fields","module_path","name_at","path","path_mut","reflect_element","reflect_element_mut","reflect_hash","reflect_mut","reflect_owned","reflect_partial_eq","reflect_path","reflect_path_mut","reflect_ref","reflect_trait","serializable","set","short_type_path","take_from_reflect","type_ident","type_name","type_path","ArraySerializer","Borrowed","DeserializeValue","EnumSerializer","ListSerializer","MapSerializer","Owned","ReflectSerializer","ReflectValueSerializer","Serializable","SerializationData","SkippedField","StructSerializer","TupleSerializer","TupleStructSerializer","TypeRegistrationDeserializer","TypedReflectDeserializer","TypedReflectSerializer","UntypedReflectDeserializer","array","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","enum_value","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","generate_default","generate_default","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_empty","is_field_skipped","iter_skipped","len","list","map","new","new","new","new","new","new","new","registry","registry","registry","registry","registry","registry","registry","registry","registry","registry","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","struct_value","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tuple","tuple_struct","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","value","value","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","ReflectDefault","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","clone","clone_into","clone_type_data","default","deref","deref_mut","downcast","drop","from","from_sample_","from_type","init","into","into_any","into_any_arc","into_any_rc","into_sample","to_owned","to_sample_","try_from","try_into","type_id","upcast","vzip","GenericTypeCell","GenericTypeInfoCell","GenericTypePathCell","NonGenericTypeCell","NonGenericTypeInfoCell","Stored","TypePathComponent","TypedProperty","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","drop","drop","drop","from","from","from","from_sample_","from_sample_","from_sample_","get_or_insert","get_or_set","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","new","new","reflect_hasher","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","vzip","vzip","vzip","Cleanup","CleanupFlush","Extract","ExtractCommands","ExtractSchedule","INSTANCE_INDEX_SHADER_HANDLE","MATHS_SHADER_HANDLE","MainWorld","ManageViews","ManageViewsFlush","PhaseSort","Prepare","PrepareAssets","PrepareBindGroups","PrepareFlush","PrepareResources","PrepareResourcesFlush","Queue","QueueMeshes","Render","Render","RenderApp","RenderFlush","RenderPlugin","RenderSet","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_ref","as_ref","as_str","base_schedule","batching","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","camera","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","color","default","default","define_atomic_id","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","dyn_clone","dyn_clone","dyn_clone","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extract_component","extract_instances","extract_resource","finish","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_world","from_world","get_param","globals","gpu_component_array_buffer","hash","hash","hash","hash","init","init","init","init","init","init","init","init_state","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_configs","into_iter","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_system_set","main_graph","mesh","null_value","null_value","pipelined_rendering","prelude","primitives","ready","render_asset","render_creation","render_graph","render_phase","render_resource","render_resource_wrapper","renderer","settings","texture","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","view","vzip","vzip","vzip","vzip","vzip","vzip","vzip","BufferData","CompareData","GetBatchData","NoAutomaticBatching","Param","Query","QueryFilter","as_any","as_any_mut","as_bind_group_shader_type","batch_and_prepare_render_phase","borrow","borrow_mut","component_ids","deref","deref_mut","downcast","drop","from","from_components","from_sample_","get_batch_data","get_components","init","into","into_any","into_any_arc","into_any_rc","into_sample","to_sample_","try_from","try_into","type_id","upcast","vzip","write_batched_instance_buffer","AutoMax","AutoMin","Camera","CameraDriverNode","CameraOutputMode","CameraPlugin","CameraProjection","CameraProjectionPlugin","CameraRenderGraph","CameraUpdateSystem","ComputedCameraValues","ExtractedCamera","Fixed","FixedHorizontal","FixedVertical","Image","Image","ManualTextureView","ManualTextureViewHandle","ManualTextureViews","MipBias","NormalizedRenderTarget","Orthographic","OrthographicProjection","Perspective","PerspectiveProjection","Projection","RenderTarget","RenderTargetInfo","ScalingMode","Skip","SortedCamera","SortedCameras","TemporalJitter","TextureView","TextureView","Viewport","Window","Window","WindowSize","Write","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","area","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","aspect_ratio","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","camera_system","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","cmp","cmp","compare","compare","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","computed","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","depth","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_clone","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","entity","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","extract_cameras","extract_resource","far","far","far","far","far","far","field","field","field","field","field","field","field","field","field","field","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","fov","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_field","get_field","get_field","get_field","get_field","get_field","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_projection_matrix","get_projection_matrix","get_projection_matrix","get_projection_matrix","get_render_target_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_texture_format","get_texture_view","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","hash","hash","hash","hdr","index_of","index_of","index_of","index_of","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_configs","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_system_set","is_active","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","jitter_projection","logical_target_size","logical_viewport_rect","logical_viewport_size","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","msaa_writeback","msaa_writeback","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","ndc_to_world","near","near","new","new","normalize","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","offset","order","order","order","output_mode","output_mode","partial_cmp","partial_cmp","physical_position","physical_size","physical_size","physical_target_size","physical_target_size","physical_viewport_rect","physical_viewport_size","physical_viewport_size","projection_matrix","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","render_graph","run","scale","scale_factor","scaling_mode","serialize","set","set","set","set","set","set","set","set","set","set","set","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","size","sort_cameras","sorted_camera_index_for_target","target","target","target","texture_view","to_logical","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update","update","update","update","update","variant_index","variant_index","variant_index","variant_index","variant_name","variant_name","variant_name","variant_name","variant_type","variant_type","variant_type","variant_type","viewport","viewport","viewport_origin","viewport_to_world","viewport_to_world_2d","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_default_format","world_to_ndc","world_to_viewport","blend_state","color_attachment_load_op","height","max_height","max_width","min_height","min_width","width","ALICE_BLUE","ANTIQUE_WHITE","AQUAMARINE","AZURE","BEIGE","BISQUE","BLACK","BLUE","CRIMSON","CYAN","Char","Color","DARK_GRAY","DARK_GREEN","FUCHSIA","GOLD","GRAY","GREEN","HexColorError","HslRepresentation","Hsla","INDIGO","LIME_GREEN","LchRepresentation","Lcha","Length","MAROON","MIDNIGHT_BLUE","NAVY","NONE","OLIVE","ORANGE","ORANGE_RED","PINK","PURPLE","RED","Rgba","RgbaLinear","SALMON","SEA_GREEN","SILVER","SrgbColorSpace","TEAL","TOMATO","TURQUOISE","VIOLET","WHITE","YELLOW","YELLOW_GREEN","a","add","add","add_assign","add_assign","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_hsla","as_hsla_f32","as_lcha","as_lcha_f32","as_linear_rgba_f32","as_linear_rgba_u32","as_reflect","as_reflect_mut","as_rgba","as_rgba_f32","as_rgba_linear","as_rgba_u32","as_rgba_u8","b","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_dynamic","clone_into","clone_type_data","clone_value","crate_name","create_from","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","downcast","downcast","downcast","downcast","drop","drop","drop","drop","dyn_eq","eq","eq","equivalent","equivalent","equivalent","equivalent","erased_serialize","field","field_at","field_at_mut","field_len","field_mut","fmt","fmt","fmt","from","from","from","from","from","from","from","from_reflect","from_sample_","from_sample_","from_sample_","from_sample_","from_world","g","get_represented_type_info","get_type_registration","h","hex","hsl","hsl_to_nonlinear_srgb","hsla","in_current_span","index_of","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_reflect","into_sample","into_sample","into_sample","into_sample","iter_fields","l","lch","lch_to_nonlinear_srgb","lcha","linear_to_nonlinear_srgb","module_path","mul","mul","mul","mul","mul","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","name_at","nonlinear_srgb_to_hsl","nonlinear_srgb_to_lch","nonlinear_to_linear_srgb","null_value","r","read_from","reflect_crate_name","reflect_hash","reflect_module_path","reflect_mut","reflect_owned","reflect_partial_eq","reflect_ref","reflect_short_type_path","reflect_type_ident","reflect_type_path","rgb","rgb_linear","rgb_u8","rgba","rgba_linear","rgba_u8","s","serialize","set","set_a","set_b","set_g","set_h","set_l","set_r","set_s","short_type_path","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_ident","type_info","type_path","upcast","upcast","upcast","upcast","variant_index","variant_name","variant_type","vzip","vzip","vzip","vzip","with_a","with_b","with_g","with_h","with_l","with_r","with_s","write_into","alpha","alpha","alpha","alpha","blue","blue","chroma","green","green","hue","hue","lightness","lightness","red","red","saturation","ComponentUniforms","DynamicUniformIndex","ExtractComponent","ExtractComponent","ExtractComponentPlugin","Filter","Out","Query","UniformComponentPlugin","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","component_ids","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","drop","drop","drop","drop","extract_component","extract_visible","from","from","from","from","from_components","from_sample_","from_sample_","from_sample_","from_sample_","from_world","from_world","from_world","get_components","index","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","null_value","null_value","null_value","to_sample_","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","uniforms","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","ExtractInstance","ExtractInstancesPlugin","ExtractedInstances","Filter","Query","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","build","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","drop","drop","extract","extract_visible","from","from","from_sample_","from_sample_","from_world","from_world","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_sample","into_sample","new","null_value","null_value","to_sample_","to_sample_","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","ExtractResource","ExtractResource","ExtractResourcePlugin","Source","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","build","default","deref","deref_mut","downcast","drop","extract_resource","extract_resource","from","from_sample_","from_world","init","into","into_any","into_any_arc","into_any_rc","into_sample","null_value","to_sample_","try_from","try_into","type_id","upcast","vzip","GLOBALS_TYPE_HANDLE","GlobalsBuffer","GlobalsPlugin","GlobalsUniform","apply","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_reflect","as_reflect_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","buffer","build","clone","clone_dynamic","clone_into","clone_type_data","clone_value","crate_name","create_from","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","drop","drop","drop","extract_resource","field","field_at","field_at_mut","field_len","field_mut","from","from","from","from_reflect","from_sample_","from_sample_","from_sample_","from_world","from_world","get_field","get_field_mut","get_represented_type_info","get_type_registration","init","init","init","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_reflect","into_sample","into_sample","into_sample","iter_fields","module_path","name_at","null_value","null_value","read_from","reflect_crate_name","reflect_module_path","reflect_mut","reflect_owned","reflect_partial_eq","reflect_ref","reflect_short_type_path","reflect_type_ident","reflect_type_path","set","short_type_path","size","to_owned","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_ident","type_info","type_path","upcast","upcast","upcast","vzip","vzip","vzip","write_into","GpuComponentArrayBufferPlugin","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","build","default","deref","deref_mut","downcast","drop","finish","from","from_sample_","from_world","init","into","into_any","into_any_arc","into_any_rc","into_sample","null_value","to_sample_","try_from","try_into","type_id","upcast","vzip","node","CAMERA_DRIVER","ATTRIBUTE_COLOR","ATTRIBUTE_JOINT_INDEX","ATTRIBUTE_JOINT_WEIGHT","ATTRIBUTE_NORMAL","ATTRIBUTE_POSITION","ATTRIBUTE_TANGENT","ATTRIBUTE_UV_0","ATTRIBUTE_UV_1","Float32","Float32x2","Float32x3","Float32x4","GenerateTangentsError","GpuBufferInfo","GpuMesh","INDEX_BUFFER_ASSET_INDEX","Indexed","Indices","InnerMeshVertexBufferLayout","InvalidVertexAttributeFormat","LineList","LineStrip","Mesh","MeshPlugin","MeshVertexAttribute","MeshVertexAttributeId","MeshVertexBufferLayout","MikktspaceError","MissingIndices","MissingVertexAttribute","MissingVertexAttributeError","NonIndexed","PointList","PrimitiveTopology","Sint16x2","Sint16x4","Sint32","Sint32x2","Sint32x3","Sint32x4","Sint8x2","Sint8x4","Snorm16x2","Snorm16x4","Snorm8x2","Snorm8x4","TriangleList","TriangleStrip","U16","U32","Uint16x2","Uint16x4","Uint32","Uint32x2","Uint32x3","Uint32x4","Uint8x2","Uint8x4","Unorm16x2","Unorm16x4","Unorm8x2","Unorm8x4","UnsupportedTopology","VERTEX_ATTRIBUTE_BUFFER_ID","VertexAttributeDescriptor","VertexAttributeValues","VertexFormatSize","apply","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_dyn_eq","as_float3","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","asset_type_name","at_shader_location","attribute","attribute_ids","attribute_mut","attributes","attributes_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer_info","build","clone","clone","clone","clone","clone","clone","clone","clone","clone_dynamic","clone_dynamic","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_value","clone_value","cmp","compare","compute_aabb","compute_flat_normals","contains","contains_attribute","count_vertices","crate_name","crate_name","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","duplicate_vertices","dyn_eq","dyn_eq","dyn_hash","dyn_hash","enum_variant_index","enum_variant_name","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extract_asset","field","field","field_at","field_at","field_at_mut","field_at_mut","field_len","field_len","field_mut","field_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_reflect","from_reflect","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","generate_tangents","get_bytes","get_field","get_field_mut","get_index_buffer_bytes","get_layout","get_mesh_vertex_buffer_layout","get_represented_type_info","get_represented_type_info","get_size","get_type_registration","get_type_registration","get_vertex_buffer_data","has_morph_targets","hash","hash","id","id","in_current_span","in_current_span","index_of","indices","indices_mut","init","init","init","init","init","init","init","init","init","init","init","init","insert","insert_attribute","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_reflect","into_reflect","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_empty","is_empty","iter","iter_fields","iter_fields","layout","layout","len","len","module_path","module_path","morph","morph_target_names","morph_targets","name","name_at","name_at","new","new","new","partial_cmp","prepare_asset","primitive_topology","primitive_topology","reflect_crate_name","reflect_crate_name","reflect_hash","reflect_module_path","reflect_module_path","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_ref","reflect_ref","reflect_short_type_path","reflect_short_type_path","reflect_type_ident","reflect_type_ident","reflect_type_path","reflect_type_path","register_system","remove_attribute","set","set","set_indices","set_morph_target_names","set_morph_targets","shader_location","short_type_path","short_type_path","skinning","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_ident","type_ident","type_info","type_info","type_path","type_path","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","variant_index","variant_name","variant_type","vertex_buffer","vertex_count","visit_dependencies","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_computed_flat_normals","with_duplicated_vertices","with_generated_tangents","with_indices","with_inserted_attribute","with_morph_target_names","with_morph_targets","with_removed_attribute","buffer","count","index_format","COMPONENT_COUNT","MAX_MORPH_WEIGHTS","MeshMorphWeights","MorphAttributes","MorphBuildError","MorphPlugin","MorphTargetImage","MorphWeights","TooManyAttributes","TooManyTargets","apply","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone","clone_dynamic","clone_dynamic","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_value","clone_value","component_ids","component_ids","crate_name","crate_name","debug","debug","default","default","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","eq","field","field","field_at","field_at","field_at_mut","field_at_mut","field_len","field_len","field_mut","field_mut","first_mesh","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_components","from_components","from_reflect","from_reflect","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_world","from_world","from_world","get_components","get_components","get_field","get_field","get_field_mut","get_field_mut","get_represented_type_info","get_represented_type_info","get_type_registration","get_type_registration","in_current_span","inherit_weights","init","init","init","init","init","init","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_reflect","into_reflect","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_valid_bit_pattern","iter_fields","iter_fields","module_path","module_path","name_at","name_at","new","new","new","new","normal","null_value","null_value","null_value","position","reflect_crate_name","reflect_crate_name","reflect_module_path","reflect_module_path","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_ref","reflect_ref","reflect_short_type_path","reflect_short_type_path","reflect_type_ident","reflect_type_ident","reflect_type_path","reflect_type_path","set","set","short_type_path","short_type_path","tangent","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_ident","type_ident","type_info","type_info","type_path","type_path","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","weights","weights","weights_mut","weights_mut","component_count","target_count","vertex_count","SkinnedMesh","SkinnedMeshInverseBindposes","apply","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_reflect","as_reflect_mut","asset_type_name","borrow","borrow","borrow_mut","borrow_mut","clone","clone_dynamic","clone_into","clone_type_data","clone_value","component_ids","crate_name","crate_name","default","deref","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","field","field_at","field_at_mut","field_len","field_mut","fmt","fmt","from","from","from","from_components","from_reflect","from_sample_","from_sample_","from_world","get_components","get_field","get_field_mut","get_represented_type_info","get_type_registration","init","init","insert","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_reflect","into_sample","into_sample","inverse_bindposes","iter_fields","joints","map_entities","module_path","module_path","name_at","null_value","reflect_crate_name","reflect_crate_name","reflect_module_path","reflect_module_path","reflect_mut","reflect_owned","reflect_partial_eq","reflect_ref","reflect_short_type_path","reflect_short_type_path","reflect_type_ident","reflect_type_ident","reflect_type_path","reflect_type_path","set","short_type_path","short_type_path","to_owned","to_sample_","to_sample_","try_from","try_from","try_into","try_into","type_id","type_id","type_ident","type_ident","type_info","type_path","type_path","upcast","upcast","visit_dependencies","vzip","vzip","MainToRenderAppSender","PipelinedRenderingPlugin","RenderExtractApp","RenderToMainAppReceiver","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_str","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","cleanup","clone","clone_into","clone_type_data","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","drop","drop","drop","drop","dyn_eq","dyn_hash","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_world","hash","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","null_value","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","Camera","Color","ExtractSchedule","HIDDEN_IDENTITY","Hidden","Hsla","INHERITED_IDENTITY","Image","ImagePlugin","Inherited","InheritedVisibility","Lcha","Mesh","MorphWeights","Msaa","Off","Orthographic","OrthographicProjection","Perspective","PerspectiveProjection","Projection","Rgba","RgbaLinear","Sample2","Sample4","Sample8","Shader","SpatialBundle","ViewVisibility","Visibility","VisibilityBundle","Visible","additional_imports","area","as_any","as_any_mut","as_bind_group_shader_type","aspect_ratio","borrow","borrow_mut","computed","data","default","default_sampler","deref","deref_mut","downcast","drop","far","far","file_dependencies","fmt","fov","from","from","from_sample_","from_transform","from_world","global_transform","hdr","import_path","imports","inherited_visibility","inherited_visibility","init","into","into_any","into_any_arc","into_any_rc","into_sample","is_active","msaa_writeback","near","near","null_value","order","output_mode","path","sampler_descriptor","scale","scaling_mode","shader_defs","source","target","texture_descriptor","texture_view_descriptor","to_sample_","transform","try_from","try_into","type_id","upcast","view_visibility","view_visibility","viewport","viewport_origin","visibility","visibility","vzip","alpha","alpha","alpha","alpha","blue","blue","chroma","green","green","hue","hue","lightness","lightness","red","red","saturation","Aabb","CascadesFrusta","CubemapFrusta","Frustum","HalfSpace","Sphere","apply","apply","apply","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","center","center","clone","clone","clone","clone","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_value","clone_value","clone_value","clone_value","component_ids","component_ids","component_ids","component_ids","crate_name","crate_name","crate_name","crate_name","d","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","enclosing","eq","field","field","field","field","field_at","field_at","field_at","field_at","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_len","field_len","field_len","field_len","field_mut","field_mut","field_mut","field_mut","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_components","from_components","from_components","from_components","from_min_max","from_reflect","from_reflect","from_reflect","from_reflect","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_view_projection","from_view_projection_custom_far","from_world","from_world","from_world","from_world","from_world","from_world","frusta","frusta","get_components","get_components","get_components","get_components","get_field","get_field","get_field","get_field","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_type_registration","get_type_registration","get_type_registration","get_type_registration","half_extents","half_spaces","init","init","init","init","init","init","intersects_obb","intersects_obb","intersects_sphere","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_reflect","into_reflect","into_reflect","into_reflect","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","iter","iter_fields","iter_fields","iter_fields","iter_fields","iter_mut","max","min","module_path","module_path","module_path","module_path","name_at","name_at","name_at","name_at","new","normal","normal_d","null_value","null_value","null_value","null_value","null_value","null_value","radius","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","relative_radius","set","set","set","set","short_type_path","short_type_path","short_type_path","short_type_path","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_ident","type_ident","type_ident","type_ident","type_info","type_info","type_info","type_info","type_path","type_path","type_path","type_path","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","ExtractedAsset","ExtractedAssets","Param","PrepareAssetError","PrepareNextFrameAssets","PreparedAsset","RenderAsset","RenderAssetDependency","RenderAssetPlugin","RenderAssets","RetryNextUpdate","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","default","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","extract_asset","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_world","from_world","from_world","from_world","get","get_mut","init","init","init","init","init","insert","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","iter","iter_mut","null_value","null_value","null_value","null_value","prepare_asset","prepare_assets","register_system","remove","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","Buffer","Buffer","DoesNotExist","Edge","EdgeAlreadyExists","EdgeDoesNotExist","EdgeExistence","Edges","EmptyNode","Entity","Entity","Exists","GraphInputNode","INPUT_NODE_NAME","Id","Index","InputSlotError","InputSlotError","InvalidInputNodeSlot","InvalidNode","InvalidOutputNodeSlot","InvalidSlot","InvalidSlot","MismatchedInputSlotType","MismatchedNodeSlots","MismatchedSlotType","MismatchedSlotType","MissingInput","MissingSubGraph","Name","Name","Node","NodeEdge","NodeId","NodeInputSlotAlreadyOccupied","NodeLabel","NodeRunError","NodeState","OutputSlotError","OutputSlotError","RenderGraph","RenderGraphApp","RenderGraphContext","RenderGraphError","RunGraphOnViewNode","RunSubGraph","RunSubGraphError","RunSubGraphError","Sampler","Sampler","SlotEdge","SlotInfo","SlotInfos","SlotLabel","SlotType","SlotValue","SubGraphHasNoInputs","TextureView","TextureView","UnconnectedNodeInputSlot","UnconnectedNodeOutputSlot","ViewNode","ViewNodeRunner","ViewQuery","WrongNodeType","add_node","add_node_edge","add_node_edges","add_render_graph_edge","add_render_graph_edges","add_render_graph_node","add_render_sub_graph","add_slot_edge","add_sub_graph","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast_mut","downcast_rc","downcast_ref","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","edges","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_world","from_world","from_world","from_world","get_input","get_input_buffer","get_input_entity","get_input_node","get_input_node","get_input_sampler","get_input_slot_edge","get_input_texture","get_node","get_node_id","get_node_mut","get_node_state","get_node_state_mut","get_output_node","get_output_slot_edge","get_slot","get_slot_index","get_slot_mut","get_sub_graph","get_sub_graph_mut","get_view_entity","has_edge","has_input_edge","has_output_edge","hash","id","id","in_current_span","in_current_span","in_current_span","in_current_span","in_current_span","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","input","input","input_edges","input_info","input_node","input_slots","inputs","inputs","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is","is_empty","iter","iter_node_inputs","iter_node_outputs","iter_nodes","iter_nodes_mut","iter_sub_graphs","iter_sub_graphs_mut","len","name","name","name","new","new","new","new","new","new","node","node","node_mut","null_value","null_value","null_value","output","output","output_edges","output_info","output_slots","remove_node","remove_node_edge","remove_slot_edge","remove_sub_graph","run","run","run","run","run","run","run_sub_graph","set_input","set_output","set_view_entity","slot_type","slot_type","source","sub_graph","sub_graph_mut","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_string","to_string","to_string","to_string","to_string","to_string","try_add_node_edge","try_add_slot_edge","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update","update","update","update","validate_edge","validate_input_slots","validate_output_slots","view_entity","view_entity","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","input_index","input_node","input_node","output_index","output_node","output_node","actual","expected","label","actual","expected","label","input_node","input_slot","input_slot","input_slot","node","node","node","occupied_by_node","output_node","output_slot","output_slot","actual","expected","graph_name","graph_name","label","slot_index","slot_index","slot_name","AddRenderCommand","CachedRenderPipelinePhaseItem","Draw","DrawFunctionId","DrawFunctions","DrawFunctionsInternal","Failure","ItemWorldQuery","Param","PhaseItem","RenderCommand","RenderCommandResult","RenderCommandState","RenderPhase","SetItemPipeline","SortKey","Success","TrackedRenderPass","ViewRangefinder3d","ViewWorldQuery","add","add","add_render_command","add_with","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","batch_range","batch_range_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cached_pipeline","clone","clone_into","clone_type_data","component_ids","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","distance","distance_translation","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","draw","draw","draw","draw_function","draw_functions","draw_indexed","draw_indexed_indirect","draw_indirect","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_hash","dynamic_offset","dynamic_offset_mut","entity","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from","from","from","from","from","from","from","from","from_components","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_view_matrix","from_world","from_world","get_components","get_id","get_mut","hash","id","indices","init","init","init","init","init","init","init","init","init","insert_debug_marker","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","items","iter_entities","multi_draw_indexed_indirect","multi_draw_indexed_indirect_count","multi_draw_indirect","multi_draw_indirect_count","new","new","null_value","null_value","pop_debug_group","prepare","prepare","prepare","push_debug_group","read","render","render","render","render_range","set_bind_group","set_blend_constant","set_camera_viewport","set_index_buffer","set_push_constants","set_render_pipeline","set_scissor_rect","set_stencil_reference","set_vertex_buffer","set_viewport","sort","sort","sort_key","sort_phase_system","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write","ALL","ALPHA","ALPHA_BLENDING","Add","AddressMode","All","Always","AsBindGroup","AsBindGroup","AsBindGroupError","AsBindGroupShaderType","AssetPath","Astc","BLUE","Back","Bc1RgbaUnorm","Bc1RgbaUnormSrgb","Bc2RgbaUnorm","Bc2RgbaUnormSrgb","Bc3RgbaUnorm","Bc3RgbaUnormSrgb","Bc4RSnorm","Bc4RUnorm","Bc5RgSnorm","Bc5RgUnorm","Bc6hRgbFloat","Bc6hRgbUfloat","Bc7RgbaUnorm","Bc7RgbaUnormSrgb","Bgra8Unorm","Bgra8UnormSrgb","BindGroup","BindGroupDescriptor","BindGroupEntries","BindGroupEntry","BindGroupId","BindGroupLayout","BindGroupLayoutDescriptor","BindGroupLayoutEntry","BindGroupLayoutId","BindingResource","BindingType","BlendComponent","BlendFactor","BlendOperation","BlendState","Bool","Buffer","Buffer","Buffer","Buffer","BufferAddress","BufferArray","BufferBinding","BufferBindingType","BufferDescriptor","BufferId","BufferInitDescriptor","BufferSize","BufferSlice","BufferUsages","BufferVec","COLOR","COMPUTE","COPY_DST","COPY_DST","COPY_SRC","COPY_SRC","CachedComputePipelineId","CachedPipeline","CachedPipelineState","CachedRenderPipelineId","Ccw","ClampToBorder","ClampToEdge","Clear","ColorTargetState","ColorWrites","CommandEncoder","CommandEncoderDescriptor","CompareFunction","Comparison","Compute","ComputePass","ComputePassDescriptor","ComputePipeline","ComputePipeline","ComputePipelineDescriptor","ComputePipelineDescriptor","ComputePipelineId","Constant","CreateShaderModule","Cube","CubeArray","Custom","Cw","D1","D1","D2","D2","D2Array","D3","D3","Data","DecrementClamp","DecrementWrap","Default","Depth","Depth16Unorm","Depth24Plus","Depth24PlusStencil8","Depth32Float","Depth32FloatStencil8","DepthBiasState","DepthOnly","DepthStencilState","Dst","DstAlpha","DynamicBindGroupEntries","DynamicStorageBuffer","DynamicUniformBuffer","DynamicUniformBufferWriter","EacR11Snorm","EacR11Unorm","EacRg11Snorm","EacRg11Unorm","Equal","ErasedBindGroup","ErasedBindGroupLayout","ErasedBuffer","ErasedComputePipeline","ErasedPipelineLayout","ErasedRenderPipeline","ErasedSampler","ErasedShaderModule","ErasedSurfaceTexture","ErasedTexture","ErasedTextureView","Err","Etc2Rgb8A1Unorm","Etc2Rgb8A1UnormSrgb","Etc2Rgb8Unorm","Etc2Rgb8UnormSrgb","Etc2Rgba8Unorm","Etc2Rgba8UnormSrgb","Extent3d","FRAGMENT","Face","Fill","FilterMode","Filtering","Float","Float16x2","Float16x4","Float32","Float32x2","Float32x3","Float32x4","Float64","Float64x2","Float64x3","Float64x4","Fragment","FragmentState","Front","FrontFace","GREEN","Glsl","GlslParse","GpuArrayBuffer","GpuArrayBufferIndex","GpuArrayBufferable","Greater","GreaterEqual","Handle","IGNORE","INDEX","INDIRECT","INVALID","INVALID","ImageCopyBuffer","ImageCopyBufferBase","ImageCopyTexture","ImageCopyTextureBase","ImageDataLayout","ImageSubresourceRange","IncrementClamp","IncrementWrap","IndexFormat","Instance","Int","IntoBinding","IntoBindingArray","IntoIndexedBindingArray","Invert","Io","Keep","Key","Key","Key","Less","LessEqual","Line","LineList","LineStrip","Linear","Load","LoadOp","MAP_READ","MAP_WRITE","MapMode","Max","Min","MirrorRepeat","MissingVertexAttribute","MultisampleState","NONE","Naga","Nearest","Never","NonFiltering","NotEqual","OVER","Ok","One","OneMinusConstant","OneMinusDst","OneMinusDstAlpha","OneMinusSrc","OneMinusSrcAlpha","Operations","Origin3d","OwnedBindingResource","PREMULTIPLIED_ALPHA_BLENDING","Parse","Path","Pipeline","PipelineCache","PipelineCacheError","PipelineDescriptor","PipelineLayout","PipelineLayoutDescriptor","Point","PointList","PolygonMode","PreparedBindGroup","PrimitiveState","PrimitiveTopology","ProcessShaderError","PushConstantRange","QUERY_RESOLVE","Queued","R16Float","R16Sint","R16Snorm","R16Uint","R16Unorm","R32Float","R32Sint","R32Uint","R8Sint","R8Snorm","R8Uint","R8Unorm","RED","RENDER_ATTACHMENT","REPLACE","REPLACE","RawComputePipelineDescriptor","RawFragmentState","RawRenderPipelineDescriptor","RawVertexBufferLayout","RawVertexState","Read","ReadOnly","ReadWrite","RenderPassColorAttachment","RenderPassDepthStencilAttachment","RenderPassDescriptor","RenderPipeline","RenderPipeline","RenderPipelineDescriptor","RenderPipelineDescriptor","RenderPipelineId","Repeat","Replace","RetryNextUpdate","ReverseSubtract","Rg11b10Float","Rg16Float","Rg16Sint","Rg16Snorm","Rg16Uint","Rg16Unorm","Rg32Float","Rg32Sint","Rg32Uint","Rg8Sint","Rg8Snorm","Rg8Uint","Rg8Unorm","Rgb10a2Unorm","Rgb9e5Ufloat","Rgba16Float","Rgba16Sint","Rgba16Snorm","Rgba16Uint","Rgba16Unorm","Rgba32Float","Rgba32Sint","Rgba32Uint","Rgba8Sint","Rgba8Snorm","Rgba8Uint","Rgba8Unorm","Rgba8UnormSrgb","SHADER_SIZE","STORAGE","STORAGE_BINDING","Sampler","Sampler","Sampler","Sampler","SamplerArray","SamplerBindingType","SamplerDescriptor","SamplerId","Shader","ShaderDefVal","ShaderId","ShaderImport","ShaderImportNotYetAvailable","ShaderLoader","ShaderLoaderError","ShaderModule","ShaderModuleDescriptor","ShaderNotLoaded","ShaderRef","ShaderReflectError","ShaderSize","ShaderSource","ShaderStage","ShaderStages","ShaderType","ShaderType","Sint","Sint16x2","Sint16x4","Sint32","Sint32x2","Sint32x3","Sint32x4","Sint8x2","Sint8x4","Snorm16x2","Snorm16x4","Snorm8x2","Snorm8x4","Source","SpecializedComputePipeline","SpecializedComputePipelines","SpecializedMeshPipeline","SpecializedMeshPipelineError","SpecializedMeshPipelines","SpecializedRenderPipeline","SpecializedRenderPipelines","SpirV","SpirV","SpirVParse","Src","SrcAlpha","SrcAlphaSaturated","Stencil8","StencilFaceState","StencilOnly","StencilOperation","StencilState","Storage","Storage","StorageBuffer","StorageTexture","StorageTextureAccess","Subtract","SurfaceTexture","TEXTURE_BINDING","Texture","Texture","TextureAspect","TextureDescriptor","TextureDimension","TextureFormat","TextureId","TextureSampleType","TextureUsages","TextureView","TextureView","TextureView","TextureViewArray","TextureViewDescriptor","TextureViewDimension","TextureViewId","TriangleList","TriangleStrip","UInt","UNIFORM","Uint","Uint16","Uint16x2","Uint16x4","Uint32","Uint32","Uint32x2","Uint32x3","Uint32x4","Uint8x2","Uint8x4","Uniform","Uniform","UniformBuffer","Unorm16x2","Unorm16x4","Unorm8x2","Unorm8x4","UnpreparedBindGroup","VERTEX","VERTEX","VERTEX_FRAGMENT","Validation","Vertex","Vertex","VertexAttribute","VertexBufferLayout","VertexFormat","VertexState","VertexStepMode","WgpuAdapterInfo","WgpuFeatures","WgpuLimits","Wgsl","Wgsl","WgslParse","Write","WriteOnly","ZERO","Zero","Zero","add_srgb_suffix","add_usages","add_usages","add_usages","add_usages","additional_imports","address_mode_u","address_mode_v","address_mode_w","all","all","all","all","alpha","alpha_to_coverage_enabled","anisotropy_clamp","append","array_layer_count","array_layer_count","array_stride","array_stride","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_str","aspect","aspect","aspect","aspect_specific_format","assert_uniform_compat","asset_type_id","asset_type_name","asset_type_name","attributes","attributes","back","backend","base_array_layer","base_array_layer","base_mip_level","base_mip_level","batch_size","begin_compute_pass","begin_pipeline_statistics_query","begin_render_pass","bevy_default","bias","bind_group","bind_group_layout","bind_group_layout_entries","bind_group_layouts","binding","binding","binding","binding","binding","binding","binding","binding_layout","bindings","bindings","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","blend","block_dimensions","block_size","border_color","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","buffer","buffer","buffer","buffer","buffer","buffer","buffers","buffers","bytes_per_row","capacity","clamp","clear","clear","clear","clear","clear_buffer","clear_texture","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","cmp","color","color_attachments","compare","compare","compare","compatible_texture_dimension","complement","complement","complement","complement","component_ids","components","components_with_aspect","conservative","constant","contains","contains","contains","contains","contains_invalid_bits","contains_invalid_bits","contains_invalid_bits","contains_invalid_bits","contents","copy_buffer_to_buffer","copy_buffer_to_texture","copy_texture_to_buffer","copy_texture_to_texture","count","count","crate_name","create_view","cull_mode","data","data","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default_meta","depth_compare","depth_fail_op","depth_ops","depth_or_array_layers","depth_stencil","depth_stencil","depth_stencil_attachment","depth_write_enabled","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","descriptor","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize_meta","device","device_type","difference","difference","difference","difference","dimension","dispatch_workgroups","dispatch_workgroups_indirect","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","driver","driver_info","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dst_factor","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dynamic_offset","element_type","empty","empty","empty","empty","encase","end_pipeline_statistics_query","entries","entries","entry_point","entry_point","entry_point","entry_point","entry_point","entry_point","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","extend","extend","extend","extend","extend","extend_sequential","extend_with_indices","extensions","extensions","fail_op","file_dependencies","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","format","format","format","fragment","fragment","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_components","from_fd","from_fd","from_filelike","from_filelike","from_glsl","from_into_filelike","from_into_filelike","from_into_socketlike","from_into_socketlike","from_iter","from_iter","from_iter","from_iter","from_name","from_name","from_name","from_name","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_socketlike","from_socketlike","from_spirv","from_vertex_formats","from_wgsl","from_wgsl_with_defs","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","front","front_face","get","get","get_binding","get_components","get_compute_pipeline","get_compute_pipeline_descriptor","get_compute_pipeline_state","get_label","get_label","get_label","get_label","get_label","get_mut","get_mut","get_render_pipeline","get_render_pipeline_descriptor","get_render_pipeline_state","get_size","get_writer","guaranteed_format_features","has_color_aspect","has_depth_aspect","has_dynamic_offset","has_stencil_aspect","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","height","id","id","id","id","id","id","id","id","id","id","id","import_path","import_path","imports","imports","in_current_span","in_current_span","in_current_span","in_current_span","index","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","insert","insert","insert","insert","insert","insert_debug_marker","insert_debug_marker","intersection","intersection","intersection","intersection","intersects","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_array","into_array","into_binding","into_binding","into_binding","into_binding","into_binding","into_binding","into_binding","into_iter","into_iter","into_iter","into_iter","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_all","is_all","is_all","is_all","is_combined_depth_stencil_format","is_compressed","is_depth_enabled","is_depth_read_only","is_depth_stencil_component","is_depth_stencil_format","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_enabled","is_enabled","is_full_resource","is_read_only","is_read_only","is_read_only","is_srgb","is_stencil_read_only","is_strip","iter","iter","iter","iter","iter_names","iter_names","iter_names","iter_names","label","label","label","label","label","label","label","label","label","label","label","label","label","label","layer_range","layout","layout","layout","layout","layout","layout","len","load","load","load","lod_max_clamp","lod_min_clamp","mag_filter","mask","max_bind_groups","max_bindings_per_bind_group","max_buffer_size","max_compute_invocations_per_workgroup","max_compute_workgroup_size_x","max_compute_workgroup_size_y","max_compute_workgroup_size_z","max_compute_workgroup_storage_size","max_compute_workgroups_per_dimension","max_dynamic_storage_buffers_per_pipeline_layout","max_dynamic_uniform_buffers_per_pipeline_layout","max_inter_stage_shader_components","max_mips","max_push_constant_size","max_sampled_textures_per_shader_stage","max_samplers_per_shader_stage","max_storage_buffer_binding_size","max_storage_buffers_per_shader_stage","max_storage_textures_per_shader_stage","max_texture_array_layers","max_texture_dimension_1d","max_texture_dimension_2d","max_texture_dimension_3d","max_uniform_buffer_binding_size","max_uniform_buffers_per_shader_stage","max_vertex_attributes","max_vertex_buffer_array_stride","max_vertex_buffers","min_filter","min_size","min_storage_buffer_offset_alignment","min_uniform_buffer_offset_alignment","mip_level","mip_level_count","mip_level_count","mip_level_size","mip_range","mipmap_filter","module","module","module","module_name","module_path","multisample","multisample","multiview","name","needs_ref_value","needs_ref_value","needs_ref_value","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_with_alignment","new_with_indices","not","not","not","not","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","offset","offset","offset","offset","operation","ops","origin","partial_cmp","pass_op","path","physical_size","pipelines","pixel_size","polygon_mode","pop_debug_group","pop_debug_group","primitive","primitive","process_queue","push","push","push","push","push_constant_ranges","push_constant_ranges","push_constant_ranges","push_debug_group","push_debug_group","queue_compute_pipeline","queue_render_pipeline","range","read_mask","reflect_crate_name","reflect_module_path","reflect_short_type_path","reflect_type_ident","reflect_type_path","remove","remove","remove","remove","remove_srgb_suffix","required_features","reserve","resolve_query_set","resolve_target","resource","resource_macros","rows_per_image","sample_type","sequential","sequential","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set","set","set","set","set","set","set_bind_group","set_import_path","set_label","set_label","set_label","set_label","set_label","set_pipeline","set_push_constants","shader","shader","shader","shader_defs","shader_defs","shader_defs","shader_defs","shader_location","short_type_path","single","size","size","size","slice","slope_scale","source","source","source","source","source","source","specialize","specialize","specialize","specialize","specialize","specialize","src_factor","stages","state","stencil","stencil_ops","step_mode","step_mode","store","strip_index_format","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","targets","targets","texture","to_2d","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_string","to_string","to_string","to_string","to_tagged","toggle","toggle","toggle","toggle","topology","truncate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_unwrap","try_unwrap","try_unwrap","try_unwrap","try_unwrap","try_unwrap","try_unwrap","try_unwrap","try_unwrap","try_unwrap","try_unwrap","try_unwrap","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_ident","type_name","type_path","unclipped_depth","union","union","union","union","unmap","unprepared_bind_group","unwrap","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","usage","uses_constant","value","value_as_string","values","values_mut","vendor","vertex","vertex","view","view","visibility","visit_dependencies","volume","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","width","with_import_path","with_indices","write","write_buffer","write_buffer","write_buffer","write_buffer","write_buffer","write_buffer","write_mask","write_mask","write_timestamp","write_timestamp","x","y","z","access","format","has_dynamic_offset","min_binding_size","multisampled","sample_type","ty","view_dimension","view_dimension","read_only","block","channel","filterable","ArrayLength","CalculateSizeFor","DynamicStorageBuffer","DynamicUniformBuffer","SHADER_SIZE","ShaderSize","ShaderType","ShaderType","StorageBuffer","UniformBuffer","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_mut","as_mut","as_mut","as_mut","as_ref","as_ref","as_ref","as_ref","assert_uniform_compat","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","calculate_size_for","clone","clone_into","clone_type_data","cmp","compare","create","create","create","create","create_from","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","dyn_eq","encode_hex","encode_hex","encode_hex","encode_hex","encode_hex_upper","encode_hex_upper","encode_hex_upper","encode_hex_upper","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_fd","from_fd","from_fd","from_fd","from_filelike","from_filelike","from_filelike","from_filelike","from_into_filelike","from_into_filelike","from_into_filelike","from_into_filelike","from_into_socketlike","from_into_socketlike","from_into_socketlike","from_into_socketlike","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_socketlike","from_socketlike","from_socketlike","from_socketlike","from_world","impl_matrix","impl_rts_array","impl_vector","impl_wrapper","init","init","init","init","init","internal","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_inner","into_inner","into_inner","into_inner","into_sample","into_sample","into_sample","into_sample","into_sample","matrix","min_size","new","new","new","new","new_with_alignment","new_with_alignment","null_value","partial_cmp","read","read","read","read","read_from","rts_array","set_offset","set_offset","size","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","vector","vzip","vzip","vzip","vzip","vzip","write","write","write","write","write_into","AlignmentValue","BufferMut","BufferRef","BufferTooSmall","CreateFrom","EnlargeError","Error","ReadContext","ReadFrom","Reader","Result","SizeValue","WriteContext","WriteInto","Writer","advance","advance","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","create_from","ctx","ctx","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_next_power_of_two_size","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","get","get","in_current_span","in_current_span","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_aligned","len","max","mul","new","new","new","new","padding_needed_for","read","read","read_from","remaining","round_up","round_up_size","rts_array_length","rts_array_max_el_to_read","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_string","to_string","try_enlarge","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write","write","write_into","expected","found","AsMutMatrixParts","AsRefMatrixParts","FromMatrixParts","MatrixScalar","as_mut_parts","as_ref_parts","from_parts","impl_matrix","Length","Truncate","impl_rts_array","length","truncate","AsMutVectorParts","AsRefVectorParts","FromVectorParts","VectorScalar","as_mut_parts","as_ref_parts","from_parts","impl_vector","render_resource_wrapper","EmptyNodeOutputSlot","ErasedRenderDevice","MismatchedInputCount","MismatchedInputSlotType","MissingInput","NodeRunError","RenderAdapter","RenderAdapterInfo","RenderContext","RenderDevice","RenderGraphRunnerError","RenderInstance","RenderQueue","add_command_buffer","align_copy_bytes_per_row","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","begin_tracked_render_pass","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","command_encoder","configure_surface","create_bind_group","create_bind_group_layout","create_buffer","create_buffer_with_data","create_command_encoder","create_compute_pipeline","create_pipeline_layout","create_render_bundle_encoder","create_render_pipeline","create_sampler","create_shader_module","create_texture","create_texture_with_data","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","features","finish","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","get_supported_read_only_binding_type","in_current_span","init","init","init","init","init","init","init","init","initialize_renderer","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","limits","map_buffer","new","new","poll","render_device","render_system","source","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_unwrap","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wgpu_device","actual","expected","graph_name","label","node_name","slot_count","slot_index","slot_index","slot_index","slot_name","slot_name","type_name","value_count","ADDRESS_MODE_CLAMP_TO_BORDER","ADDRESS_MODE_CLAMP_TO_ZERO","Automatic","BROWSER_WEBGPU","BUFFER_BINDING_ARRAY","Backends","CLEAR_TEXTURE","CONSERVATIVE_RASTERIZATION","Compatibility","DEPTH32FLOAT_STENCIL8","DEPTH_CLIP_CONTROL","DX11","DX12","Dx12Compiler","Dxc","Functionality","Fxc","GL","HighPerformance","INDIRECT_FIRST_INSTANCE","LowPower","MAPPABLE_PRIMARY_BUFFERS","METAL","MULTIVIEW","MULTI_DRAW_INDIRECT","MULTI_DRAW_INDIRECT_COUNT","Manual","None","PARTIALLY_BOUND_BINDING_ARRAY","PIPELINE_STATISTICS_QUERY","POLYGON_MODE_LINE","POLYGON_MODE_POINT","PRIMARY","PUSH_CONSTANTS","PowerPreference","RG11B10UFLOAT_RENDERABLE","RenderCreation","SAMPLED_TEXTURE_AND_STORAGE_BUFFER_ARRAY_NON_UNIFORM_INDEXING","SECONDARY","SHADER_EARLY_DEPTH_TEST","SHADER_F16","SHADER_F64","SHADER_I16","SHADER_PRIMITIVE_INDEX","SPIRV_SHADER_PASSTHROUGH","STORAGE_RESOURCE_BINDING_ARRAY","TEXTURE_ADAPTER_SPECIFIC_FORMAT_FEATURES","TEXTURE_BINDING_ARRAY","TEXTURE_COMPRESSION_ASTC","TEXTURE_COMPRESSION_ASTC_HDR","TEXTURE_COMPRESSION_BC","TEXTURE_COMPRESSION_ETC2","TEXTURE_FORMAT_16BIT_NORM","TIMESTAMP_QUERY","TIMESTAMP_QUERY_INSIDE_PASSES","UNIFORM_BUFFER_AND_STORAGE_TEXTURE_ARRAY_NON_UNIFORM_INDEXING","VERTEX_ATTRIBUTE_64BIT","VERTEX_WRITABLE_STORAGE","VULKAN","WebGL2","WgpuFeatures","WgpuLimits","WgpuSettings","WgpuSettingsPriority","all","all","all_native_mask","all_webgpu_mask","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","backends","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_limits","check_limits_with_fail_fn","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","complement","complement","constrained_limits","contains","contains","contains_invalid_bits","contains_invalid_bits","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","device_label","difference","difference","disabled_features","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downlevel_defaults","downlevel_webgl2_defaults","drop","drop","drop","drop","drop","drop","drop","drop","dx12_shader_compiler","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","dyn_hash","empty","empty","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","extend","extend","features","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_iter","from_iter","from_name","from_name","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_world","from_world","from_world","from_world","from_world","from_world","hash","hash","hash","hash","init","init","init","init","init","init","init","init","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_all","is_all","is_empty","is_empty","iter","iter","iter_names","iter_names","limits","manual","max_bind_groups","max_bindings_per_bind_group","max_buffer_size","max_compute_invocations_per_workgroup","max_compute_workgroup_size_x","max_compute_workgroup_size_y","max_compute_workgroup_size_z","max_compute_workgroup_storage_size","max_compute_workgroups_per_dimension","max_dynamic_storage_buffers_per_pipeline_layout","max_dynamic_uniform_buffers_per_pipeline_layout","max_inter_stage_shader_components","max_push_constant_size","max_sampled_textures_per_shader_stage","max_samplers_per_shader_stage","max_storage_buffer_binding_size","max_storage_buffers_per_shader_stage","max_storage_textures_per_shader_stage","max_texture_array_layers","max_texture_dimension_1d","max_texture_dimension_2d","max_texture_dimension_3d","max_uniform_buffer_binding_size","max_uniform_buffers_per_shader_stage","max_vertex_attributes","max_vertex_buffer_array_stride","max_vertex_buffers","min_storage_buffer_offset_alignment","min_uniform_buffer_offset_alignment","not","not","null_value","null_value","null_value","null_value","null_value","null_value","power_preference","priority","remove","remove","serialize","serialize","serialize","serialize","set","set","settings_priority_from_env","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","using_alignment","using_resolution","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","dxc_path","dxil_path","ASTC_LDR","Avif","BC","Basis","BevyDefault","Bmp","CachedTexture","CompressedImageFormats","CompressedImageSaver","CompressedImageSaverError","DataFormat","Dds","Default","DefaultImageSampler","Descriptor","ETC2","Etc1s","ExrTextureLoader","ExrTextureLoaderError","Extension","FallbackImage","FallbackImageCubemap","FallbackImageFormatMsaaCache","FallbackImageMsaa","FallbackImageZero","Farbfeld","FileTexture","FileTextureError","Format","Format","FormatRequiresTranscodingError","FromExtension","Gif","GpuImage","Hdr","HdrTextureLoader","HdrTextureLoaderError","Ico","Image","Image","ImageError","ImageError","ImageFormat","ImageFormatSetting","ImageLoader","ImageLoaderError","ImageLoaderSettings","ImagePlugin","ImageSampler","ImageType","IncompleteCubemap","InvalidData","InvalidImageExtension","InvalidImageMimeType","Io","Io","Io","Io","Jpeg","Ktx2","MimeType","NONE","OpenExr","Png","Pnm","R8UnormSrgb","Rg","Rg8UnormSrgb","Rgb","Rgb8","Rgba","Rrr","Rrrg","SAMPLER_ASSET_INDEX","SuperCompressionNotSupported","SuperDecompressionError","TEXTURE_ASSET_INDEX","TextureCache","TextureError","TextureFormatPixelInfo","Tga","Tiff","TranscodeError","TranscodeFormat","Uastc","UnsupportedTextureFormat","Volume","WebP","all","apply","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_image_crate_format","as_reflect","as_reflect_mut","aspect_ratio","asset_type_id","asset_type_id","asset_type_id","asset_type_name","asset_type_name","asset_type_name","asset_type_name","bevy_default","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_value","complement","contains","convert","crate_name","cube","cube_array","d1","d2","d2_array","d3","data","dds_buffer_to_image","dds_format_to_texture_format","default","default","default","default","default","default","default","default","default","default","default_linear","default_meta","default_meta","default_meta","default_nearest","default_sampler","default_view","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize_meta","deserialize_meta","deserialize_meta","difference","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_eq","empty","eq","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","extend","extensions","extensions","extensions","extensions","extensions","extensions","extract_asset","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_buffer","from_dynamic","from_extension","from_features","from_iter","from_mime_type","from_name","from_reflect","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","get","get_param","get_represented_type_info","get_transcoded_formats","get_type_registration","height","image_for_samplecount","in_current_span","in_current_span","in_current_span","in_current_span","in_current_span","in_current_span","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init_state","insert","insert","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_reflect","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_all","is_compressed","is_empty","is_srgb","iter","iter_names","ktx2_buffer_to_image","ktx2_dfd_to_texture_format","ktx2_format_to_texture_format","ktx2_get_texture_format","linear","linear_descriptor","load","load","load","load","load","load","mip_level_count","module_path","nearest","nearest_descriptor","new","new_archetype","new_fill","not","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","pixel_size","prepare_asset","reflect_crate_name","reflect_module_path","reflect_mut","reflect_owned","reflect_ref","reflect_short_type_path","reflect_type_ident","reflect_type_path","register_system","reinterpret_size","reinterpret_stacked_2d_as_array","remove","resize","sampler","sampler_descriptor","save","save","serialize","serialize","serialize","set","set","short_type_path","size","size","size_f32","source","source","source","source","source","sub","sub_assign","supports","symmetric_difference","texture","texture","texture_descriptor","texture_format","texture_view","texture_view_descriptor","to_image_format","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_string","to_string","to_string","to_string","to_string","to_string","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_dynamic","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_ident","type_info","type_name","type_name","type_name","type_name","type_path","union","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update","update_texture_cache_system","visit_dependencies","volume","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","width","CalculateBounds","CalculateBoundsFlush","CheckVisibility","ColorGrading","ExtractedView","ExtractedWindow","ExtractedWindows","HIDDEN","HIDDEN","Hidden","Inherited","InheritedVisibility","Layer","Msaa","NoFrustumCulling","NonSendMarker","Off","PostProcessWrite","RenderLayers","Sample2","Sample4","Sample8","TEXTURE_FORMAT_HDR","TOTAL_LAYERS","UpdateOrthographicFrusta","UpdatePerspectiveFrusta","UpdateProjectionFrusta","VIEW_TYPE_HANDLE","VISIBLE","ViewDepthTexture","ViewPlugin","ViewTarget","ViewUniform","ViewUniformOffset","ViewUniforms","ViewVisibility","Visibility","VisibilityBundle","VisibilityPlugin","VisibilityPropagate","VisibilitySystems","Visible","VisibleEntities","WindowRenderPlugin","WindowSurfaces","all","alpha_mode","apply","apply","apply","apply","apply","apply","apply","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","calculate_bounds","check_visibility","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","cmp","color_grading","compare","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","create_from","create_from","default","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","destination","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_clone","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","entities","entity","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","exposure","extract_resource","field","field","field","field","field","field","field","field","field_at","field_at","field_at","field_at","field_at","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_iter","from_layers","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","gamma","get","get","get_color_attachment","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_field","get_field","get_field","get_field","get_field","get_field","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_unsampled_color_attachment","handle","hash","hdr","index_of","index_of","inherited_visibility","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_configs","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_system_set","is_empty","is_hdr","iter","iter","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","layer","len","main_texture","main_texture_format","main_texture_other","main_texture_other_view","main_texture_view","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","name_at","name_at","name_at","name_at","name_at","none","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","offset","out_texture","out_texture_format","partial_cmp","partial_cmp","physical_height","physical_width","post_process_write","post_saturation","pre_saturation","prepare_view_uniforms","prepare_windows","present_mode","present_mode_changed","primary","projection","rangefinder3d","read_from","read_from","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_hash","reflect_hash","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","sampled_main_texture","sampled_main_texture_view","samples","screenshot_func","screenshot_memory","set","set","set","set","set","set","set","set","set","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","size","size","size_changed","source","swap_chain_texture","swap_chain_texture_format","swap_chain_texture_view","texture","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","transform","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","uniforms","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update_frusta","variant_index","variant_index","variant_name","variant_name","variant_type","variant_type","view","view_projection","view_visibility","viewport","visibility","visibility","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","window","windows","with","without","write_into","write_into","CalculateBounds","CalculateBoundsFlush","CheckVisibility","Hidden","Inherited","InheritedVisibility","Layer","NoFrustumCulling","RenderLayers","UpdateOrthographicFrusta","UpdatePerspectiveFrusta","UpdateProjectionFrusta","ViewVisibility","Visibility","VisibilityBundle","VisibilityPlugin","VisibilityPropagate","VisibilitySystems","Visible","VisibleEntities","calculate_bounds","check_visibility","entities","inherited_visibility","update_frusta","view_visibility","visibility","ExtractedWindow","ExtractedWindows","NonSendMarker","WindowRenderPlugin","WindowSurfaces","alpha_mode","entity","handle","physical_height","physical_width","prepare_windows","present_mode","present_mode_changed","primary","screenshot","screenshot_func","screenshot_memory","size_changed","swap_chain_texture","swap_chain_texture_format","swap_chain_texture_view","windows","ScreenshotAlreadyRequestedError","ScreenshotFn","ScreenshotManager","ScreenshotPlugin","ScreenshotPreparedState","ScreenshotToScreenPipeline","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","bind_group","bind_group_layout","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","build","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","finish","fmt","fmt","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_world","from_world","in_current_span","init","init","init","init","init","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","null_value","pipeline_id","save_screenshot_to_disk","specialize","take_screenshot","texture","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","Allowlist","Denylist","DynamicEntity","DynamicScene","DynamicSceneBuilder","DynamicSceneBundle","InstanceId","InstanceInfo","Io","NoRepresentedType","NonExistentRealScene","NonExistentScene","RonSpannedError","Scene","SceneBundle","SceneFilter","SceneInstance","SceneInstanceReady","SceneLoader","SceneLoaderError","ScenePlugin","SceneSpawnError","SceneSpawner","UnregisteredButReflectedType","UnregisteredComponent","UnregisteredResource","UnregisteredType","Unset","allow","allow","allow_all","allow_all","allow_all_resources","allow_by_id","allow_resource","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","asset_type_id","asset_type_name","asset_type_name","asset_type_name","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","clone_with","component_ids","components","crate_name","crate_name","default","default","default","default","default","default","default_meta","deny","deny","deny_all","deny_all","deny_all_resources","deny_by_id","deny_resource","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize_meta","despawn","despawn_instance","despawn_instance_sync","despawn_queued_instances","despawn_queued_scenes","despawn_sync","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_eq","dyn_hash","entities","entity","entity_map","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extensions","extensions","extract_entities","extract_entity","extract_resources","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_components","from_dynamic_scene","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_scene","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","get_components","global_transform","global_transform","hash","in_current_span","in_current_span","inherited_visibility","inherited_visibility","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","insert","insert","instance_is_ready","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_allowed","is_allowed_by_id","is_denied","is_denied_by_id","is_empty","iter","iter_instance_entities","len","load","load","module_path","module_path","new","null_value","null_value","null_value","null_value","null_value","null_value","parent","prelude","reflect_crate_name","reflect_crate_name","reflect_module_path","reflect_module_path","reflect_short_type_path","reflect_short_type_path","reflect_type_ident","reflect_type_ident","reflect_type_path","reflect_type_path","remove_empty_entities","resources","scene","scene","scene_spawner","scene_spawner_system","serde","serialize_ron","serialize_ron","short_type_path","short_type_path","source","spawn","spawn_as_child","spawn_dynamic","spawn_dynamic_as_child","spawn_dynamic_sync","spawn_queued_scenes","spawn_sync","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_string","to_string","transform","transform","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_ident","type_ident","type_name","type_path","type_path","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update_spawned_scenes","view_visibility","view_visibility","visibility","visibility","visit_dependencies","visit_dependencies","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_filter","with_resource_filter","world","write_to_world","write_to_world_with","write_to_world_with","id","id","std_type_name","type_path","type_path","type_path","type_path","Allowlist","Denylist","DynamicScene","DynamicSceneBuilder","DynamicSceneBundle","Scene","SceneBundle","SceneFilter","SceneSpawner","Unset","entities","global_transform","global_transform","inherited_visibility","inherited_visibility","resources","scene","scene","transform","transform","view_visibility","view_visibility","visibility","visibility","world","ENTITY_FIELD_COMPONENTS","ENTITY_STRUCT","EntitiesSerializer","EntitySerializer","SCENE_ENTITIES","SCENE_RESOURCES","SCENE_STRUCT","SceneDeserializer","SceneEntitiesDeserializer","SceneEntityDeserializer","SceneMapDeserializer","SceneMapSerializer","SceneSerializer","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","entities","entity","entity","entries","erased_serialize","erased_serialize","erased_serialize","erased_serialize","from","from","from","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","new","registry","registry","registry","registry","registry","scene","serialize","serialize","serialize","serialize","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_registry","type_registry","type_registry","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Anchor","BottomCenter","BottomLeft","BottomRight","COLORED","COLOR_MATERIAL_SHADER_HANDLE","Center","CenterLeft","CenterRight","ColorMaterial","ColorMaterialFlags","ColorMaterialPlugin","ColorMaterialUniform","ColorMesh2dBundle","Custom","DEBAND_DITHER","DEBAND_DITHER","DrawMesh2d","DrawSprite","DrawSpriteBatch","DynamicTextureAtlasBuilder","ExtractSprites","ExtractedMaterials2d","ExtractedSprite","ExtractedSprites","HDR","HDR","ImageBindGroups","MESH2D_BINDINGS_HANDLE","MESH2D_FUNCTIONS_HANDLE","MESH2D_SHADER_HANDLE","MESH2D_TYPES_HANDLE","MESH2D_VERTEX_OUTPUT","MESH2D_VIEW_BINDINGS_HANDLE","MESH2D_VIEW_TYPES_HANDLE","MSAA_RESERVED_BITS","MSAA_RESERVED_BITS","Material2d","Material2dBindGroupId","Material2dKey","Material2dPipeline","Material2dPlugin","MaterialMesh2dBundle","Mesh2d","Mesh2dBindGroup","Mesh2dHandle","Mesh2dPipeline","Mesh2dPipelineKey","Mesh2dRenderPlugin","Mesh2dTransforms","Mesh2dUniform","Mesh2dViewBindGroup","MeshFlags","NONE","NONE","NONE","NONE","NotEnoughSpace","PRIMITIVE_TOPOLOGY_RESERVED_BITS","PrepareNextFrameMaterials","PreparedMaterial2d","RenderMaterial2dInstances","RenderMaterials2d","RenderMesh2dInstance","RenderMesh2dInstances","SPRITE_SHADER_HANDLE","SetMaterial2dBindGroup","SetMesh2dBindGroup","SetMesh2dViewBindGroup","SetSpriteTextureBindGroup","SetSpriteViewBindGroup","Sprite","SpriteAssetEvents","SpriteBatch","SpriteBundle","SpriteMeta","SpritePipeline","SpritePipelineKey","SpritePlugin","SpriteSheetBundle","SpriteSystem","TEXTURE","TONEMAP_IN_SHADER","TONEMAP_IN_SHADER","TONEMAP_METHOD_ACES_FITTED","TONEMAP_METHOD_ACES_FITTED","TONEMAP_METHOD_AGX","TONEMAP_METHOD_AGX","TONEMAP_METHOD_BLENDER_FILMIC","TONEMAP_METHOD_BLENDER_FILMIC","TONEMAP_METHOD_NONE","TONEMAP_METHOD_NONE","TONEMAP_METHOD_REINHARD","TONEMAP_METHOD_REINHARD","TONEMAP_METHOD_REINHARD_LUMINANCE","TONEMAP_METHOD_REINHARD_LUMINANCE","TONEMAP_METHOD_RESERVED_BITS","TONEMAP_METHOD_RESERVED_BITS","TONEMAP_METHOD_SOMEWHAT_BORING_DISPLAY_TRANSFORM","TONEMAP_METHOD_SOMEWHAT_BORING_DISPLAY_TRANSFORM","TONEMAP_METHOD_TONY_MC_MAPFACE","TONEMAP_METHOD_TONY_MC_MAPFACE","TextureAtlas","TextureAtlasBuilder","TextureAtlasBuilderError","TextureAtlasBuilderResult","TextureAtlasSprite","TopCenter","TopLeft","TopRight","UNINITIALIZED","UNINITIALIZED","WrongFormat","add_texture","add_texture","add_texture","all","all","all","all","anchor","anchor","anchor","apply","apply","apply","apply","apply","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_vec","asset_type_name","asset_type_name","auto_format_conversion","automatic_batching","bind_group","bind_group_data","bind_group_layout_entries","bindings","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","calculate_bounds_2d","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","collide_aabb","color","color","color","color","color","complement","complement","complement","complement","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","contains","contains","contains","contains","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","create_from","create_from","custom_size","custom_size","custom_size","debug","debug","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","difference","difference","difference","difference","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dummy_white_gpu_image","dummy_white_gpu_image","dyn_clone","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","dyn_hash","empty","empty","empty","empty","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend","extend","extend","extend","extract_materials_2d","extract_mesh2d","extract_sprite_events","extract_sprites","field","field","field","field","field","field","field_at","field_at","field_at","field_at","field_at","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_len","field_len","field_len","field_len","field_len","field_len","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","finish","finish","finish","finish","flags","flags","flags","flip_x","flip_x","flip_x","flip_y","flip_y","flip_y","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","fragment_shader","fragment_shader","fragment_shader","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_colored","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_grid","from_hdr","from_hdr","from_iter","from_iter","from_iter","from_iter","from_msaa_samples","from_msaa_samples","from_name","from_name","from_name","from_name","from_primitive_topology","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","get_batch_data","get_bind_group_id","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_field","get_field","get_field","get_field","get_field","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_image_texture","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_texture_index","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","global_transform","global_transform","global_transform","hash","hash","hash","hash","image_handle_id","images","in_current_span","index","index_of","inherited_visibility","inherited_visibility","inherited_visibility","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","initial_size","insert","insert","insert","insert","insert","insert","intersection","intersection","intersection","intersection","intersects","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_configs","into_iter","into_iter","into_iter","into_iter","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_system_set","inverse_transpose_model_a","inverse_transpose_model_b","is_all","is_all","is_all","is_all","is_empty","is_empty","is_empty","is_empty","is_empty","iter","iter","iter","iter","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_names","iter_names","iter_names","iter_names","key","label","len","material","material2d_layout","material_bind_group_id","max_size","mesh","mesh2d_pipeline","mesh_asset_id","mesh_key","mesh_layout","module_path","module_path","module_path","module_path","module_path","module_path","msaa_samples","msaa_samples","name_at","name_at","name_at","name_at","name_at","new","new","new_empty","not","not","not","not","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","original_entity","padding","per_object_buffer_batch_size","prelude","prepare_materials_2d","prepare_mesh2d_bind_group","prepare_mesh2d_view_bind_groups","prepare_sprites","primitive_topology","queue_material2d_meshes","queue_sprites","read_from","read_from","rect","rect","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_hash","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","remove","remove","remove","remove","render","render","render","render","render","render","render","set","set","set","set","set","set","set","set","set","set","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","size","size","size","specialize","specialize","specialize","specialize","sprite","sprite","sprites","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","texture","texture","texture","texture_atlas","textures","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_string","toggle","toggle","toggle","toggle","transform","transform","transform","transform","transform","transform","transforms","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_info","type_info","type_info","type_info","type_info","type_info","type_path","type_path","type_path","type_path","type_path","type_path","union","union","union","union","unprepared_bind_group","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","value","value","variant_index","variant_name","variant_type","vertex_shader","vertex_shader","view_layout","view_visibility","view_visibility","view_visibility","visibility","visibility","visibility","visit_dependencies","visit_dependencies","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write_into","write_into","Bottom","Collision","Inside","Left","Right","Top","as_any","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","clone","clone_into","clone_type_data","collide","deref","deref_mut","downcast","drop","dyn_eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from_sample_","init","into","into_any","into_any_arc","into_any_rc","into_sample","to_owned","to_sample_","try_from","try_into","type_id","upcast","vzip","ColorMaterial","ColorMesh2dBundle","Sprite","SpriteBundle","SpriteSheetBundle","TextureAtlas","TextureAtlasBuilder","TextureAtlasSprite","anchor","anchor","color","color","color","custom_size","custom_size","flip_x","flip_x","flip_y","flip_y","global_transform","global_transform","index","inherited_visibility","inherited_visibility","rect","size","sprite","sprite","texture","texture","texture","texture_atlas","textures","transform","transform","view_visibility","view_visibility","visibility","visibility","AsyncComputeTaskPool","ComputeTaskPool","IoTaskPool","ParallelIterator","ParallelSlice","ParallelSliceMut","Scope","Task","TaskPool","TaskPoolBuilder","ThreadExecutor","ThreadExecutorTicker","all","any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","available_parallelism","block_on","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","by_ref","cancel","chain","cloned","collect","copied","count","cycle","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","detach","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","filter","filter_map","flat_map","flatten","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fold","for_each","from","from","from","from","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_world","from_world","from_world","fuse","get","get","get","get_or_init","get_or_init","get_or_init","get_thread_executor","init","init","init","init","init","init","init","init","init","inspect","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_future","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_finished","is_same","last","map","max","max_by","max_by_key","min","min_by","min_by_key","new","new","new","new","next_batch","nth","null_value","null_value","null_value","num_threads","on_thread_destroy","on_thread_spawn","par_chunk_map","par_chunk_map_mut","par_splat_map","par_splat_map_mut","partition","poll","position","prelude","product","scope","scope_with_executor","size_hint","spawn","spawn","spawn","spawn_local","spawn_on_external","spawn_on_scope","stack_size","sum","thread_name","thread_num","tick","tick_global_task_pools_on_main_thread","ticker","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_get","try_get","try_get","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_poll","try_tick","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_local_executor","AsyncComputeTaskPool","ComputeTaskPool","IoTaskPool","ParallelIterator","ParallelSlice","ParallelSliceMut","all","any","block_on","by_ref","chain","cloned","collect","copied","count","cycle","filter","filter_map","flat_map","flatten","fold","for_each","fuse","inspect","last","map","max","max_by","max_by_key","min","min_by","min_by_key","next_batch","nth","par_chunk_map","par_chunk_map_mut","par_splat_map","par_splat_map_mut","partition","position","product","size_hint","sum","AnyCharacter","BottomToTop","BreakLineOn","Center","FailedToAddGlyph","Font","FontAtlas","FontAtlasSet","FontAtlasSets","FontAtlasWarning","FontInvalid","FontLoader","FontLoaderError","GlyphAtlasInfo","GlyphBrush","Io","Left","NoSuchFont","NoWrap","PositionedGlyph","Right","SubpixelOffset","Text","Text2dBounds","Text2dBundle","TextAlignment","TextError","TextLayoutInfo","TextMeasureInfo","TextMeasureSection","TextPipeline","TextPlugin","TextSection","TextSettings","TextStyle","TopToBottom","UNBOUNDED","WordBoundary","YAxisOrientation","add_font","add_glyph","add_glyph_to_atlas","alignment","allow_dynamic_font_size","apply","apply","apply","apply","apply","apply","apply","apply","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","asset_type_id","asset_type_name","asset_type_name","atlas_info","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","byte_index","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","color","component_ids","component_ids","component_ids","compute_glyphs","compute_size","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default_meta","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize_meta","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","dynamic_texture_atlas_builder","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","extensions","extensions","extract_text2d_sprite","field","field","field","field","field","field","field","field","field","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","font","font","font_id","font_size","fonts","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_components","from_components","from_components","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_section","from_sections","from_style","from_text","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","get","get_components","get_components","get_components","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_glyph_atlas_info","get_glyph_index","get_or_insert_font_id","get_outlined_glyph_texture","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","global_transform","glyph_index","glyph_to_atlas_index","glyphs","has_glyph","has_glyph","hash","hash","hash","in_current_span","in_current_span","index_of","index_of","inherited_visibility","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","insert","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_empty","iter","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","len","linebreak_behavior","linebreak_behavior","load","load","logical_size","max","max_font_atlases","min","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","new","new","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","position","prelude","process_glyphs","queue_text","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_hash","reflect_hash","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","remove_dropped_font_atlas_sets","scale","scale_value","section_index","sections","sections","serialize","serialize","set","set","set","set","set","set","set","set","set","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","size","size","source","style","text","text","text_2d_bounds","text_alignment","text_anchor","text_layout_info","texture_atlas","texture_atlas","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_section_text","to_string","to_string","transform","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_bytes","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_name","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update_text2d_layout","value","variant_index","variant_index","variant_name","variant_name","variant_type","variant_type","view_visibility","visibility","visit_dependencies","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_alignment","with_no_wrap","Center","FailedToAddGlyph","Font","Left","NoSuchFont","Right","Text","Text2dBundle","TextAlignment","TextError","TextSection","TextStyle","alignment","color","font","font","font_size","global_transform","inherited_visibility","linebreak_behavior","sections","style","text","text_2d_bounds","text_anchor","text_layout_info","transform","value","view_visibility","visibility","Automatic","Disconnected","Fixed","Full","ManualDuration","ManualInstant","Once","Real","Repeating","Stopwatch","Time","TimePlugin","TimeReceiver","TimeSender","TimeSystem","TimeUpdateStrategy","Timer","TimerMode","TrySendError","Virtual","advance_by","advance_to","apply","apply","apply","apply","apply","apply","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_dyn_eq","as_generic","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","common_conditions","context","context_mut","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","create_time_channels","default","default","default","default","default","default","default","default","default","delta","delta_seconds","delta_seconds_f64","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","duration","dyn_clone","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","effective_speed","effective_speed_f64","elapsed","elapsed","elapsed","elapsed_seconds","elapsed_seconds_f64","elapsed_seconds_wrapped","elapsed_seconds_wrapped_f64","elapsed_secs","elapsed_secs","elapsed_secs_f64","elapsed_wrapped","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","field","field","field","field","field","field","field","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","finished","first_update","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_duration","from_hz","from_max_delta","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_seconds","from_seconds","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","get_field","get_field","get_field","get_field","get_field","get_field","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","hash","hash","in_current_span","index_of","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_configs","into_inner","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_system_set","is_disconnected","is_full","is_paused","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","just_finished","last_update","max_delta","mode","module_path","module_path","module_path","module_path","module_path","module_path","module_path","name_at","name_at","name_at","name_at","name_at","name_at","name_at","new","new","new","new_with","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","overstep","overstep_percentage","overstep_percentage_f64","pause","pause","pause","paused","paused","percent","percent_left","prelude","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_hash","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","relative_speed","relative_speed_f64","remaining","remaining_secs","reset","reset","run_fixed_update_schedule","serialize","serialize","serialize","set","set","set","set","set","set","set","set_duration","set_elapsed","set_elapsed","set_max_delta","set_mode","set_relative_speed","set_relative_speed_f64","set_timestep","set_timestep_hz","set_timestep_seconds","set_wrap_period","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","startup","tick","tick","times_finished_this_tick","timestep","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_path","type_path","type_path","type_path","type_path","type_path","type_path","unpause","unpause","unpause","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update","update_with_duration","update_with_instant","variant_index","variant_name","variant_type","virtual_time_system","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","was_paused","wrap_period","on_real_timer","on_timer","Fixed","Once","Real","Repeating","Time","Timer","TimerMode","Virtual","IDENTITY","TransformBundle","TransformPlugin","TransformPoint","TransformPropagate","TransformSystem","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","commands","components","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","drop","drop","drop","dyn_clone","dyn_eq","dyn_hash","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","from","from_sample_","from_sample_","from_sample_","from_transform","from_world","from_world","global","hash","helper","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_configs","into_sample","into_sample","into_sample","into_system_set","local","null_value","null_value","systems","to_owned","to_owned","to_sample_","to_sample_","to_sample_","transform_point","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","vzip","vzip","vzip","AddChildInPlace","BuildChildrenTransformExt","RemoveParentInPlace","apply","apply","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","child","child","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","from","from","from_sample_","from_sample_","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_sample","into_sample","parent","remove_parent_in_place","set_parent_in_place","to_sample_","to_sample_","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","GlobalTransform","IDENTITY","IDENTITY","Transform","affine","apply","apply","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","back","back","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_dynamic","clone_dynamic","clone_into","clone_into","clone_type_data","clone_type_data","clone_value","clone_value","component_ids","component_ids","compute_affine","compute_matrix","compute_matrix","compute_transform","crate_name","crate_name","default","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","down","down","downcast","downcast","drop","drop","eq","eq","erased_serialize","erased_serialize","field","field","field_at","field_at_mut","field_len","field_len","field_mut","field_mut","fmt","fmt","forward","forward","from","from","from","from","from","from","from_components","from_components","from_matrix","from_reflect","from_reflect","from_rotation","from_sample_","from_sample_","from_scale","from_translation","from_world","from_world","from_xyz","get_components","get_components","get_field","get_field","get_field_mut","get_field_mut","get_represented_type_info","get_represented_type_info","get_type_registration","get_type_registration","init","init","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_reflect","into_reflect","into_sample","into_sample","iter_fields","iter_fields","left","left","local_x","local_y","local_z","look_at","look_to","looking_at","looking_to","module_path","module_path","mul","mul","mul","mul","mul","mul","mul_transform","mul_transform","name_at","null_value","null_value","radius_vec3a","reflect_crate_name","reflect_crate_name","reflect_module_path","reflect_module_path","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_ref","reflect_ref","reflect_short_type_path","reflect_short_type_path","reflect_type_ident","reflect_type_ident","reflect_type_path","reflect_type_path","reparented_to","right","right","rotate","rotate_around","rotate_axis","rotate_local","rotate_local_axis","rotate_local_x","rotate_local_y","rotate_local_z","rotate_x","rotate_y","rotate_z","rotation","scale","serialize","serialize","set","set","short_type_path","short_type_path","to_owned","to_owned","to_sample_","to_sample_","to_scale_rotation_translation","transform_point","transform_point","transform_point","transform_point","translate_around","translation","translation","translation_vec3a","try_from","try_from","try_into","try_into","type_id","type_id","type_ident","type_ident","type_info","type_info","type_path","type_path","up","up","upcast","upcast","vzip","vzip","with_rotation","with_scale","with_translation","ComputeGlobalTransformError","MalformedHierarchy","MissingTransform","NoSuchEntity","TransformHelper","apply","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","compute_global_transform","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","fmt","from","from","from_sample_","from_sample_","get_param","init","init","init_state","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_sample","into_sample","new_archetype","to_sample_","to_sample_","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","propagate_transforms","sync_simple_transforms","Absolute","AlignContent","AlignItems","AlignSelf","Auto","Auto","Auto","Auto","Auto","AutoFill","AutoFit","AvailableSpace","BackgroundColor","Baseline","Baseline","Baseline","Baseline","Block","BorderColor","CalculatedClip","Center","Center","Center","Center","Center","Center","Clip","Column","Column","ColumnDense","ColumnReverse","ContentSize","Count","DEFAULT","DEFAULT","DEFAULT","DEFAULT","DEFAULT","DEFAULT","DEFAULT","DEFAULT","DEFAULT","DEFAULT","DEFAULT","DEFAULT","DEFAULT","DEFAULT","DEFAULT","DEFAULT","DEFAULT","DEFAULT","DEFAULT","DEFAULT","DEFAULT","DEFAULT","Default","Default","Default","Default","DefaultCameraView","Definite","Direction","Display","DrawUi","DrawUiNode","End","End","End","End","End","End","ExtractAtlasNode","ExtractNode","ExtractedUiNode","ExtractedUiNodes","FitContentPercent","FitContentPx","FixedMeasure","Flex","FlexDirection","FlexEnd","FlexEnd","FlexEnd","FlexEnd","FlexStart","FlexStart","FlexStart","FlexStart","FlexWrap","Focus","FocusPolicy","Fraction","Global","Grid","GridAutoFlow","GridPlacement","GridPlacementError","GridTrack","GridTrackRepetition","Hovered","Inherit","Interaction","InvalidHierarchy","InvalidZeroIndex","InvalidZeroSpan","JustifyContent","JustifyItems","JustifySelf","Layout","LayoutContext","LayoutError","LeftToRight","Local","MaxContent","MaxContent","MaxContent","MaxTrackSizingFunction","Measure","MinContent","MinContent","MinContent","MinTrackSizingFunction","NoWrap","Node","NodeQuery","NodeQueryItem","NodeQueryReadOnly","NodeQueryReadOnlyItem","NonEvaluateable","NonIdenticalVariants","None","None","Outline","Outlines","Overflow","OverflowAxis","Pass","Percent","Percent","Percent","PositionType","Pressed","Px","Px","Px","Relative","RelativeCursorPosition","RenderUiSystem","RepeatedGridTrack","RightToLeft","Row","Row","RowDense","RowReverse","SetUiTextureBindGroup","SetUiViewBindGroup","SpaceAround","SpaceAround","SpaceBetween","SpaceBetween","SpaceEvenly","SpaceEvenly","Stack","Start","Start","Start","Start","Start","Start","Stretch","Stretch","Stretch","Stretch","Stretch","Style","TaffyError","TransparentUi","UI_SHADER_HANDLE","UiBatch","UiImage","UiImageBindGroups","UiMeta","UiPassNode","UiPipeline","UiPipelineKey","UiPlugin","UiRect","UiScale","UiStack","UiSurface","UiSystem","UiTextureAtlasImage","VMax","VMin","Val","ValArithmeticError","Vh","Visible","Vw","Wrap","WrapReverse","ZERO","ZERO","ZIndex","align_content","align_items","align_self","all","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","aspect_ratio","atlas_size","auto","auto","auto","axes","batch_range","batch_range","batch_range_mut","border","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom","bottom","bottom","build","build_ui_render","cached_pipeline","camera_config","clip","clip","clip","clip_x","clip_y","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","color","color","column_gap","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","compute_free_space","compute_window_layout","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","debug","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","direction","display","div","div_assign","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","draw_function","draw_function","draw_ui_graph","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_clone","dyn_clone","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","dynamic_offset","dynamic_offset","dynamic_offset_mut","end","end_span","entity","entity","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","extract_atlas_uinodes","extract_default_ui_camera_view","extract_text_uinodes","extract_uinode_borders","extract_uinode_outlines","extract_uinodes","fetch","fetch","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","filter_fetch","filter_fetch","finish","fit_content_percent","fit_content_percent","fit_content_px","fit_content_px","fixed_size","flex","flex","flex_basis","flex_direction","flex_grow","flex_shrink","flex_wrap","flip_x","flip_x","flip_x","flip_y","flip_y","flip_y","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fr","fr","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_points","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_end","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_layout","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_span","get_start","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","grid_auto_columns","grid_auto_flow","grid_auto_rows","grid_column","grid_row","grid_template_columns","grid_template_rows","hash","hash","hash","hdr","height","horizontal","image","image","image_layout","in_current_span","in_current_span","index","index_of","index_of","index_of","index_of","index_of","index_of","index_of","index_of","index_of","index_of","index_of","index_of","index_of","index_of","index_of","index_of","index_of","index_of","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init_fetch","init_fetch","init_state","init_state","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_configs","into_configs","into_option","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_system_set","into_system_set","is_definite","is_roughly_equal","is_visible","is_visible","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","justify_content","justify_items","justify_self","left","left","left","logical_rect","map_definite_value","margin","matches_component_set","matches_component_set","max_content","max_content","max_height","max_size","max_width","maybe_set","measure","measure","measurement","min_content","min_content","min_height","min_size","min_width","minmax","minmax","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","mouse_over","mul","mul_assign","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","new","new","new","new","node","node_bundles","normalized","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","offset","or","or_else","outline_width","overflow","padding","percent","percent","percent","physical_rect","physical_size","physical_size","pipeline","position_type","prepare_uinodes","px","px","px","queue_uinodes","range","rect","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","remove_entities","render","render","render","repeat_many","resolve","resolve_outlines_system","right","right","right","row_gap","run","scale_factor","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set_archetype","set_archetype","set_end","set_span","set_start","set_table","set_table","set_window_children","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","shrink","shrink","size","size","sort","sort_key","sort_key","span","specialize","stack_index","start","start_end","start_span","texture","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_string","to_string","top","top","top","transform","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_remove_children","try_remove_measure","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","ui_focus_system","ui_layout_system","uinodes","uinodes","unrounded_size","unwrap","unwrap_or","unwrap_or_else","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update","update","update_archetype_component_access","update_archetype_component_access","update_children","update_component_access","update_component_access","update_measure","upsert_node","values","variant_index","variant_index","variant_index","variant_index","variant_index","variant_index","variant_index","variant_index","variant_index","variant_index","variant_index","variant_index","variant_index","variant_index","variant_index","variant_index","variant_index","variant_index","variant_name","variant_name","variant_name","variant_name","variant_name","variant_name","variant_name","variant_name","variant_name","variant_name","variant_name","variant_name","variant_name","variant_name","variant_name","variant_name","variant_name","variant_name","variant_type","variant_type","variant_type","variant_type","variant_type","variant_type","variant_type","variant_type","variant_type","variant_type","variant_type","variant_type","variant_type","variant_type","variant_type","variant_type","variant_type","variant_type","vertical","view_layout","visible","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","widget","width","width","with_flip_x","with_flip_y","x","y","UiCameraConfig","apply","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_reflect","as_reflect_mut","borrow","borrow_mut","clone","clone_dynamic","clone_into","clone_type_data","clone_value","component_ids","crate_name","default","deref","deref_mut","downcast","drop","extract_component","field","field_at","field_at_mut","field_len","field_mut","from","from_components","from_reflect","from_sample_","from_world","get_components","get_field","get_field_mut","get_represented_type_info","get_type_registration","init","into","into_any","into_any","into_any_arc","into_any_rc","into_reflect","into_sample","iter_fields","module_path","name_at","null_value","reflect_crate_name","reflect_module_path","reflect_mut","reflect_owned","reflect_partial_eq","reflect_ref","reflect_short_type_path","reflect_type_ident","reflect_type_path","set","short_type_path","show_ui","to_owned","to_sample_","try_from","try_into","type_id","type_ident","type_info","type_path","upcast","vzip","print_ui_layout_tree","NAME","node","UI_PASS","AvailableSpace","ContentSize","Definite","FixedMeasure","MaxContent","Measure","MinContent","measure","size","UI_PASS_DRIVER","AtlasImageBundle","ButtonBundle","ImageBundle","NodeBundle","TextBundle","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","background_color","background_color","background_color","background_color","background_color","border_color","border_color","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","button","calculated_size","calculated_size","calculated_size","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","default","default","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","focus_policy","focus_policy","focus_policy","focus_policy","focus_policy","from","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_section","from_sections","from_world","from_world","from_world","from_world","from_world","global_transform","global_transform","global_transform","global_transform","global_transform","image","image","image_size","image_size","inherited_visibility","inherited_visibility","inherited_visibility","inherited_visibility","inherited_visibility","init","init","init","init","init","interaction","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","node","node","node","node","node","null_value","null_value","null_value","null_value","null_value","style","style","style","style","style","text","text_flags","text_layout_info","texture_atlas","texture_atlas_image","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","transform","transform","transform","transform","transform","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","view_visibility","view_visibility","view_visibility","view_visibility","view_visibility","visibility","visibility","visibility","visibility","visibility","vzip","vzip","vzip","vzip","vzip","with_background_color","with_no_wrap","with_style","with_text_alignment","z_index","z_index","z_index","z_index","z_index","update_clipping_system","Button","ImageMeasure","Label","TextFlags","TextMeasure","UiImageSize","apply","apply","apply","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_value","clone_value","clone_value","clone_value","component_ids","component_ids","component_ids","component_ids","crate_name","crate_name","crate_name","crate_name","default","default","default","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","field","field","field","field","field_at","field_at","field_at","field_at","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_len","field_len","field_len","field_len","field_mut","field_mut","field_mut","field_mut","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_components","from_components","from_components","from_components","from_reflect","from_reflect","from_reflect","from_reflect","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_world","from_world","from_world","from_world","get_components","get_components","get_components","get_components","get_field","get_field","get_field","get_field","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_type_registration","get_type_registration","get_type_registration","get_type_registration","info","init","init","init","init","init","init","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_reflect","into_reflect","into_reflect","into_reflect","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","iter_fields","iter_fields","iter_fields","iter_fields","measure","measure","measure_text_system","module_path","module_path","module_path","module_path","name_at","name_at","name_at","name_at","null_value","null_value","null_value","null_value","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","set","set","set","set","short_type_path","short_type_path","short_type_path","short_type_path","size","size","text_system","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_ident","type_ident","type_ident","type_ident","type_info","type_info","type_info","type_info","type_path","type_path","type_path","type_path","upcast","upcast","upcast","upcast","upcast","upcast","update_atlas_content_size_system","update_image_content_size_system","vzip","vzip","vzip","vzip","vzip","vzip","AHasher","Borrowed","BoxedFuture","CowArc","Duration","EntityHash","EntityHashMap","EntityHashSet","EntityHasher","Entry","FixedState","FloatOrd","HashMap","HashSet","Hashed","Instant","MAX","MICROSECOND","MILLISECOND","NAMESPACE_DNS","NAMESPACE_OID","NAMESPACE_URL","NAMESPACE_X500","NANOSECOND","OnDrop","Owned","PassHash","PassHasher","PreHashMap","PreHashMapExt","RandomState","SECOND","StableHashMap","StableHashSet","Static","Uuid","ZERO","add","add_assign","all_tuples","all_tuples_with_size","apply","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_braced","as_bytes","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_fields","as_hyphenated","as_micros","as_millis","as_nanos","as_ref","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","as_secs","as_secs_f32","as_secs_f64","as_simple","as_u128","as_u64_pair","as_urn","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","braced","build_hasher","build_hasher","build_hasher","build_hasher","checked_add","checked_div","checked_mul","checked_sub","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_owned","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_value","clone_value","cmp","cmp","cmp","cmp","compare","compare","compare","compare","crate_name","crate_name","dbg","debug","debug","default","default","default","default","default","default","default","default","default","default","default","default","define_boxed_label","define_label","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserializer_for_signature","detailed_trace","div","div_assign","div_duration_f32","div_duration_f64","div_f32","div_f64","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dynamic_signature","encode_buffer","encode_hex","encode_hex_upper","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","error","finish","finish","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes_le","from_bytes_ref","from_fields","from_fields_le","from_micros","from_millis","from_nanos","from_reflect","from_reflect","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_secs","from_secs_f32","from_secs_f64","from_slice","from_slice_le","from_str","from_u128","from_u128_le","from_u64_pair","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","futures","generate_with","get_or_insert_with","get_represented_type_info","get_represented_type_info","get_short_name","get_timestamp","get_type_registration","get_type_registration","get_variant","get_version","get_version_num","hash","hash","hash","hash","hash","hash","hash_one","hyphenated","info","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_bytes","into_owned","into_reflect","into_reflect","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_nil","is_zero","label","module_path","module_path","mul","mul_assign","mul_f32","mul_f64","neg","new","new","new","new","new_v4","nil","nonmax","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","parse_str","partial_cmp","partial_cmp","partial_cmp","partial_cmp","prelude","reflect_crate_name","reflect_crate_name","reflect_hash","reflect_hash","reflect_module_path","reflect_module_path","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_ref","reflect_ref","reflect_short_type_path","reflect_short_type_path","reflect_type_ident","reflect_type_ident","reflect_type_path","reflect_type_path","saturating_add","saturating_mul","saturating_sub","serialize","serialize","set","set","short_type_path","short_type_path","signature","simple","sub","sub_assign","subsec_micros","subsec_millis","subsec_nanos","sum","sum","synccell","syncunsafecell","to_bytes_le","to_fields_le","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_string","to_string","to_u128_le","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_secs_f32","try_from_secs_f64","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_parse","try_parse_ascii","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_ident","type_ident","type_info","type_info","type_name","type_path","type_path","type_uuid","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","urn","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","warn","with_seed","with_seeds","write","write","write","write_u128","write_u16","write_u32","write_u64","write_u64","write_u64","write_u8","write_usize","now_or_never","AllocError","CapacityOverflow","Equivalent","HashMap","HashSet","HashTable","TryReserveError","allocator","allocator","allocator","apply","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","bitand","bitor","bitxor","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","capacity","capacity","clear","clear","clear","clone","clone","clone","clone","clone_dynamic","clone_from","clone_from","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_value","clone_value","contains","contains_key","crate_name","crate_name","default","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","difference","downcast","downcast","downcast","downcast","drain","drain","drain","drain","drop","drop","drop","drop","dyn_eq","dyn_eq","dyn_eq","entry","entry","entry","entry_ref","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","extend","extend","extend","extend","extend","extract_if","extract_if","extract_if","find","find_entry","find_mut","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_iter","from_iter","from_reflect","from_reflect","from_sample_","from_sample_","from_sample_","from_sample_","from_world","from_world","from_world","get","get","get","get_at","get_at_mut","get_key_value","get_key_value_mut","get_many_key_value_mut","get_many_key_value_unchecked_mut","get_many_mut","get_many_mut","get_many_unchecked_mut","get_many_unchecked_mut","get_mut","get_mut","get_or_insert","get_or_insert_owned","get_or_insert_with","get_or_insert_with","get_represented_type_info","get_represented_type_info","get_type_registration","get_type_registration","hash_map","hash_set","hash_table","hasher","hasher","index","init","init","init","init","insert","insert","insert_boxed","insert_unique","insert_unique_unchecked","insert_unique_unchecked","intersection","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_keys","into_reflect","into_reflect","into_sample","into_sample","into_sample","into_sample","into_values","is_disjoint","is_empty","is_empty","is_empty","is_subset","is_superset","iter","iter","iter","iter","iter_mut","iter_mut","keys","len","len","len","len","module_path","module_path","new","new","new","new_in","new_in","new_in","null_value","null_value","null_value","raw","raw_entry","raw_entry_mut","raw_table","raw_table","raw_table_mut","raw_table_mut","reflect_crate_name","reflect_crate_name","reflect_module_path","reflect_module_path","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_partial_eq","reflect_ref","reflect_ref","reflect_short_type_path","reflect_short_type_path","reflect_type_ident","reflect_type_ident","reflect_type_path","reflect_type_path","remove","remove","remove","remove_entry","replace","reserve","reserve","reserve","retain","retain","retain","serialize","serialize","set","set","short_type_path","short_type_path","shrink_to","shrink_to","shrink_to","shrink_to_fit","shrink_to_fit","shrink_to_fit","sub","symmetric_difference","take","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_from","try_insert","try_into","try_into","try_into","try_into","try_reserve","try_reserve","try_reserve","type_id","type_id","type_id","type_id","type_ident","type_ident","type_info","type_info","type_name","type_name","type_path","type_path","type_uuid","type_uuid","union","upcast","upcast","upcast","upcast","values","values_mut","vzip","vzip","vzip","vzip","with_capacity","with_capacity","with_capacity","with_capacity_and_hasher","with_capacity_and_hasher","with_capacity_and_hasher_in","with_capacity_and_hasher_in","with_capacity_in","with_capacity_in","with_capacity_in","with_hasher","with_hasher","with_hasher_in","with_hasher_in","layout","DefaultHashBuilder","Drain","Entry","EntryRef","ExtractIf","HashMap","IntoIter","IntoKeys","IntoValues","Iter","IterMut","Keys","Occupied","Occupied","Occupied","OccupiedEntry","OccupiedEntryRef","OccupiedError","RawEntryBuilder","RawEntryBuilderMut","RawEntryMut","RawOccupiedEntryMut","RawVacantEntryMut","Vacant","Vacant","Vacant","VacantEntry","VacantEntryRef","Values","ValuesMut","and_modify","and_modify","and_modify","and_replace_entry_with","and_replace_entry_with","and_replace_entry_with","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","entry","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_hash","from_hash","from_key","from_key","from_key_hashed_nocheck","from_key_hashed_nocheck","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","get","get","get","get_key_value","get_key_value_mut","get_mut","get_mut","get_mut","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert_hashed_nocheck","insert_key","insert_with_hasher","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_key","into_key","into_key","into_key_value","into_mut","into_mut","into_mut","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","key","key","key","key","key","key","key","key_mut","len","len","len","len","len","len","len","len","len","next","next","next","next","next","next","next","next","next","next","or_default","or_default","or_insert","or_insert","or_insert","or_insert_with","or_insert_with","or_insert_with","or_insert_with_key","or_insert_with_key","remove","remove","remove","remove_entry","remove_entry","remove_entry","replace_entry","replace_entry","replace_entry_with","replace_entry_with","replace_entry_with","replace_key","replace_key","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Difference","Drain","Entry","ExtractIf","HashSet","Intersection","IntoIter","Iter","Occupied","OccupiedEntry","SymmetricDifference","Union","Vacant","VacantEntry","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","get","get","get","init","init","init","init","init","init","init","init","init","init","init","insert","insert","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_value","len","len","len","next","next","next","next","next","next","next","next","or_insert","remove","replace","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AbsentEntry","Drain","Entry","ExtractIf","HashTable","IntoIter","Iter","IterMut","Occupied","OccupiedEntry","Vacant","VacantEntry","and_modify","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","get","get_mut","init","init","init","init","init","init","init","init","init","insert","insert","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","into_iter","into_iter","into_iter","into_mut","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_table","into_table","into_table","len","len","len","len","next","next","next","next","next","or_insert","or_insert_with","remove","size_hint","size_hint","size_hint","size_hint","size_hint","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Bucket","InsertSlot","RawDrain","RawIntoIter","RawIter","RawIterHash","RawTable","allocation_info","allocator","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_mut","as_ptr","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bucket","bucket_index","buckets","capacity","clear","clear_no_drop","clone","clone","clone","clone_from","clone_from_with_hasher","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","copy_from_nonoverlapping","data_end","data_start","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drain","drain_iter_from","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","erase","erase_entry","find","find_or_find_insert_slot","from","from","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_world","get","get_many_mut","get_many_unchecked_mut","get_mut","init","init","init","init","init","init","init","insert","insert_entry","insert_in_slot","insert_no_grow","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter_from","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_bucket_full","is_empty","iter","iter","iter","iter_hash","len","new","new_in","next","next","next","next","null_value","reflect_insert","reflect_remove","remove","remove_entry","replace_bucket_with","reserve","shrink_to","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_insert_no_grow","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_reserve","try_with_capacity","try_with_capacity_in","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_capacity","with_capacity_in","DynEq","DynHash","as_any","as_dyn_eq","dyn_eq","dyn_hash","NonMaxI128","NonMaxI16","NonMaxI32","NonMaxI64","NonMaxI8","NonMaxIsize","NonMaxU128","NonMaxU16","NonMaxU32","NonMaxU64","NonMaxU8","NonMaxUsize","ParseIntError","TryFromIntError","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","get","get","get","get","get","get","get","get","get","get","get","get","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","in_current_span","in_current_span","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","new","new","new","new","new","new","new","new","new","new","new","new","new_unchecked","new_unchecked","new_unchecked","new_unchecked","new_unchecked","new_unchecked","new_unchecked","new_unchecked","new_unchecked","new_unchecked","new_unchecked","new_unchecked","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Directed","Direction","EdgeDirection","EdgeType","Graph","Incoming","Incoming","IntoWeightedEdge","NodeId","Outgoing","Outgoing","Undirected","add_edge","add_edge","add_node","add_node","adj","adjacency_matrix","algo","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clear_edges","clone","clone","clone","clone","clone_from","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","cmp","compare","contains_edge","csr","data","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","dot","downcast","downcast","downcast","downcast","drop","drop","drop","drop","dyn_eq","dyn_hash","edge_bound","edge_count","edge_count","edge_endpoints","edge_indices","edge_references","edge_references","edge_weight","edge_weight","edge_weight_mut","edge_weight_mut","edge_weights","edge_weights_mut","edges","edges","edges_connecting","edges_directed","edges_directed","eq","equivalent","equivalent","equivalent","equivalent","extend_with_edges","externals","filter_map","find_edge","find_edge_undirected","first_edge","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_edges","from_elements","from_index","from_index","from_sample_","from_sample_","from_sample_","from_sample_","from_world","graph","graphmap","hash","index","index","index","index_mut","index_mut","index_twice_mut","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_edge_type","into_nodes_edges","into_sample","into_sample","into_sample","into_sample","into_weighted_edge","is_adjacent","is_directed","is_directed","is_directed","is_directed","map","matrix_graph","neighbors","neighbors","neighbors_directed","neighbors_directed","neighbors_undirected","new","new_undirected","next_edge","node_bound","node_count","node_count","node_identifiers","node_indices","node_references","node_weight","node_weight","node_weight_mut","node_weight_mut","node_weights","node_weights_mut","null_value","operator","opposite","partial_cmp","prelude","raw_edges","raw_nodes","remove_edge","remove_node","reserve_edges","reserve_exact_edges","reserve_exact_nodes","reserve_nodes","reset_map","retain_edges","retain_nodes","reverse","shrink_to_fit","shrink_to_fit_edges","shrink_to_fit_nodes","stable_graph","to_index","to_index","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unionfind","upcast","upcast","upcast","upcast","update_edge","update_edge","visit","visit_map","vzip","vzip","vzip","vzip","with_capacity","with_capacity","DefaultIx","EdgeIndex","EdgeIndices","EdgeReference","EdgeReferences","IndexType","List","Neighbors","NodeIndex","NodeIndices","OutgoingEdgeIndices","OutgoingEdgeReferences","UnweightedList","add_edge","add_edge","add_node","add_node","add_node_from_edges","add_node_with_capacity","adjacency_matrix","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","cmp","cmp","compare","compare","contains_edge","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_eq","dyn_hash","edge_count","edge_count","edge_endpoints","edge_indices","edge_indices_from","edge_references","edge_weight","edge_weight_mut","edges","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","find_edge","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_index","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_world","hash","id","index","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_adjacent","is_directed","len","len","max","neighbors","new","new","next","next","next","next","next","next","next_back","next_back","node_bound","node_count","node_identifiers","node_indices","node_references","node_weight","node_weight_mut","null_value","partial_cmp","partial_cmp","reset_map","rfind","rfind","rfold","rfold","size_hint","size_hint","size_hint","size_hint","size_hint","source","target","to_index","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update_edge","visit_map","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weight","with_capacity","BoundedMeasure","Cycle","DfsSpace","FloatMeasure","Matching","Measure","MinSpanningTree","NegativeCycle","TarjanScc","all_simple_paths","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","astar","astar","bellman_ford","bellman_ford","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","condensation","connected_components","contains_edge","contains_node","default","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","dijkstra","dijkstra","dominators","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","edges","eq","eq","feedback_arc_set","find_negative_cycle","floyd_warshall","floyd_warshall","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_world","from_world","greedy_feedback_arc_set","greedy_matching","has_path_connecting","infinite","init","init","init","init","init","init","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_bipartite_undirected","is_cyclic_directed","is_cyclic_undirected","is_empty","is_isomorphic","is_isomorphic_matching","is_isomorphic_subgraph","is_isomorphic_subgraph_matching","is_perfect","isomorphism","k_shortest_path","k_shortest_path","kosaraju_scc","len","matching","mate","max","maximum_matching","min","min_spanning_tree","new","new","next","node_component_index","node_id","nodes","null_value","null_value","overflowing_add","run","scc","simple_paths","subgraph_isomorphisms_iter","tarjan_scc","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","toposort","tred","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","zero","astar","Paths","as_any","as_any_mut","as_bind_group_shader_type","bellman_ford","borrow","borrow_mut","clone","clone_into","clone_type_data","deref","deref_mut","distances","downcast","drop","find_negative_cycle","fmt","from","from_sample_","init","into","into_any","into_any_arc","into_any_rc","into_sample","predecessors","to_owned","to_sample_","try_from","try_into","type_id","upcast","vzip","dijkstra","DominatedByIter","Dominators","DominatorsIter","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","deref","deref","deref","deref_mut","deref_mut","deref_mut","dominators","downcast","downcast","downcast","drop","drop","drop","fmt","fmt","fmt","from","from","from","from_sample_","from_sample_","from_sample_","immediate_dominator","immediately_dominated_by","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","into_sample","into_sample","into_sample","next","next","root","simple_fast","size_hint","strict_dominators","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","vzip","vzip","vzip","greedy_feedback_arc_set","floyd_warshall","is_isomorphic","is_isomorphic_matching","is_isomorphic_subgraph","is_isomorphic_subgraph_matching","subgraph_isomorphisms_iter","k_shortest_path","MatchedEdges","MatchedNodes","Matching","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","from","from","from_sample_","from_sample_","greedy_matching","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_iter","into_iter","into_sample","into_sample","maximum_matching","next","next","to_sample_","to_sample_","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","all_simple_paths","dag_to_toposorted_adjacency_list","dag_transitive_reduction_closure","Csr","DefaultIx","EdgeIndex","EdgeReference","EdgeReferences","Edges","EdgesNotSorted","IndexType","Neighbors","NodeIdentifiers","NodeIndex","NodeReferences","add_edge","add_node","adjacency_matrix","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear_edges","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","contains_edge","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","edge_count","edge_count","edge_references","edges","edges","edges_slice","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_index","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sorted_edges","from_world","id","index","index","index_mut","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","into_iter","into_iter","into_iter","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_adjacent","is_directed","max","neighbors","neighbors_slice","new","new","next","next","next","next","next","next_back","node_bound","node_count","node_count","node_identifiers","node_references","null_value","out_degree","reset_map","size_hint","size_hint","size_hint","size_hint","source","target","to_index","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","visit_map","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weight","weight","with_nodes","Build","Create","DataMap","DataMapMut","Edge","Element","ElementIterator","FilterElements","FromElements","Node","add_edge","add_node","as_any","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","dyn_eq","edge_weight","edge_weight_mut","eq","equivalent","equivalent","equivalent","equivalent","filter_elements","fmt","fmt","from","from","from_elements","from_sample_","from_sample_","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_iter","into_sample","into_sample","next","node_weight","node_weight_mut","size_hint","to_owned","to_owned","to_sample_","to_sample_","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","update_edge","vzip","vzip","with_capacity","source","target","weight","weight","Config","Dot","EdgeIndexLabel","EdgeNoLabel","GraphContentOnly","NodeIndexLabel","NodeNoLabel","as_any","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","dyn_eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from_sample_","from_sample_","init","init","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","into_sample","into_sample","new","to_sample_","to_sample_","to_string","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","with_attr_getters","with_config","DefaultIx","DiGraph","Edge","EdgeIndex","EdgeIndices","EdgeReference","EdgeReferences","EdgeWeightsMut","Edges","EdgesConnecting","Externals","Frozen","Graph","GraphIndex","IndexType","Neighbors","Node","NodeIndex","NodeIndices","NodeReferences","NodeWeightsMut","UnGraph","WalkNeighbors","adjacency_matrix","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","detach","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","edge_bound","edge_count","edge_index","edge_references","edge_weight","edge_weight_mut","edges","edges_directed","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_index","from_index","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","id","index","index","index_mut","index_twice_mut","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_adjacent","max","neighbors","neighbors_directed","new","new","next","next","next","next","next","next","next","next","next","next","next","next_back","next_back","next_back","next_back","next_edge","next_edge","next_edge","next_node","node_bound","node_count","node_identifiers","node_index","node_references","node_weight","node_weight_mut","reset_map","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","source","source","target","target","to_index","to_index","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","visit_map","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weight","weight","weight","weight","AllEdges","AllEdgesMut","DiGraphMap","Edges","EdgesDirected","GraphMap","Neighbors","NeighborsDirected","NodeIdentifiers","NodeReferences","NodeTrait","Nodes","Ptr","UnGraphMap","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","cmp","compare","count","count","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_hash","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","hash","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","last","last","len","next","next","next","next","next","next","next","next","next","next_back","next_back","next_back","nth","nth","partial_cmp","rfind","rfold","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","DiMatrix","EdgeReferences","Edges","IndexType","MatrixGraph","Neighbors","NodeIdentifiers","NodeIndex","NodeReferences","NotZero","Nullable","UnMatrix","Zero","add_edge","add_edge","add_node","add_node","adjacency_matrix","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","edge_count","edge_count","edge_references","edge_weight","edge_weight_mut","edges","edges","edges_directed","edges_directed","extend_with_edges","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_edges","from_index","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_world","from_world","has_edge","index","index","index","index_mut","index_mut","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","into_iter","into_iter","into_iter","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_adjacent","is_directed","is_zero","max","neighbors","neighbors","neighbors_directed","neighbors_directed","new","new","new_undirected","next","next","next","next","next","node_bound","node_count","node_count","node_identifiers","node_index","node_references","node_weight","node_weight_mut","null_value","null_value","remove_edge","remove_node","reset_map","size_hint","size_hint","size_hint","to_index","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update_edge","update_edge","visit_map","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_capacity","zero","complement","Bfs","Dfs","DfsPostOrder","DiGraph","DiGraphMap","Directed","Direction","EdgeId","EdgeIndex","EdgeRef","Graph","GraphMap","Incoming","NodeId","NodeIndex","Outgoing","StableDiGraph","StableGraph","StableUnGraph","UnGraph","UnGraphMap","Undirected","Weight","add_edge","add_edge","add_node","add_node","adjacency_matrix","all_edges","all_edges_mut","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","contains_edge","contains_node","default","default","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","discovered","discovered","discovered","downcast","downcast","downcast","downcast","drop","drop","drop","drop","edge_bound","edge_count","edge_count","edge_references","edge_weight","edge_weight_mut","edges","edges","edges_directed","edges_directed","empty","empty","extend","finished","fmt","fmt","fmt","from","from","from","from","from_edges","from_elements","from_graph","from_index","from_index","from_iter","from_parts","from_sample_","from_sample_","from_sample_","from_sample_","from_world","from_world","from_world","from_world","id","index","index_mut","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_graph","into_sample","into_sample","into_sample","into_sample","is_adjacent","is_directed","move_to","move_to","neighbors","neighbors","neighbors_directed","neighbors_directed","new","new","new","new","next","next","next","node_bound","node_count","node_count","node_identifiers","node_references","nodes","null_value","null_value","null_value","null_value","remove_edge","remove_node","reset","reset","reset_map","source","stack","stack","stack","target","to_index","to_index","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","update_edge","visit_map","vzip","vzip","vzip","vzip","walk_next","walk_next","walk_next","weight","with_capacity","with_capacity","DefaultIx","EdgeIndex","EdgeIndices","EdgeReference","EdgeReferences","Edges","EdgesConnecting","Externals","GraphIndex","IndexType","Neighbors","NodeIndex","NodeIndices","NodeReferences","StableDiGraph","StableGraph","StableUnGraph","WalkNeighbors","add_edge","add_edge","add_node","add_node","adjacency_matrix","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_dyn_eq","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clear_edges","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_from","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","cmp","cmp","compare","compare","contains_edge","contains_node","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","detach","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_eq","dyn_hash","dyn_hash","edge_bound","edge_count","edge_count","edge_endpoints","edge_index","edge_indices","edge_references","edge_weight","edge_weight","edge_weight_mut","edge_weight_mut","edge_weights","edge_weights_mut","edges","edges","edges_connecting","edges_directed","edges_directed","end","end","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend_with_edges","externals","filter_map","find_edge","find_edge_undirected","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_edges","from_elements","from_index","from_index","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_world","from_world","from_world","hash","hash","id","id","index","index","index","index","index","index","index_mut","index_mut","index_twice_mut","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_adjacent","is_directed","map","max","max","neighbors","neighbors","neighbors_directed","neighbors_directed","neighbors_undirected","new","new","new","new","new","next","next","next","next","next","next","next","next","next","next_back","next_back","next_back","next_back","next_edge","next_node","node_bound","node_count","node_count","node_identifiers","node_index","node_indices","node_references","node_weight","node_weight","node_weight_mut","node_weight_mut","node_weights","node_weights_mut","null_value","null_value","null_value","partial_cmp","partial_cmp","remove_edge","remove_node","reset_map","retain_edges","retain_nodes","reverse","size_hint","size_hint","size_hint","size_hint","size_hint","source","target","to_index","to_index","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update_edge","update_edge","visit_map","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weight","weight","weight","with_capacity","with_capacity","UnionFind","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","clone","clone_into","clone_type_data","deref","deref_mut","downcast","drop","equiv","find","find_mut","fmt","from","from_sample_","init","into","into_any","into_any_arc","into_any_rc","into_labeling","into_sample","new","to_owned","to_sample_","try_from","try_into","type_id","union","upcast","vzip","AdjMatrix","BackEdge","Bfs","Break","Continue","Control","ControlFlow","CrossForwardEdge","Data","Dfs","DfsEvent","DfsPostOrder","Discover","EdgeCount","EdgeFiltered","EdgeFilteredEdges","EdgeFilteredNeighbors","EdgeFilteredNeighborsDirected","EdgeId","EdgeId","EdgeIndexable","EdgeRef","EdgeRef","EdgeReferences","EdgeType","EdgeWeight","Edges","EdgesDirected","FilterEdge","FilterNode","Finish","GetAdjacencyMatrix","GraphBase","GraphProp","GraphRef","IntoEdgeReferences","IntoEdges","IntoEdgesDirected","IntoNeighbors","IntoNeighborsDirected","IntoNodeIdentifiers","IntoNodeReferences","Item","Map","Neighbors","NeighborsDirected","NodeCompactIndexable","NodeCount","NodeFiltered","NodeFilteredEdgeReferences","NodeFilteredEdges","NodeFilteredNeighbors","NodeFilteredNodes","NodeId","NodeId","NodeId","NodeIdentifiers","NodeIndexable","NodeRef","NodeRef","NodeReferences","NodeWeight","Prune","Reversed","ReversedEdgeReference","ReversedEdgeReferences","ReversedEdges","Time","Topo","TreeEdge","VisitMap","Visitable","Walker","WalkerIter","Weight","Weight","adjacency_matrix","adjacency_matrix","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_unreversed","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","break_value","breaking","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","cmp","compare","context","continuing","continuing","default","default","default","depth_first_search","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","discovered","discovered","discovered","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_hash","edge_bound","edge_bound","edge_bound","edge_bound","edge_count","edge_count","edge_references","edge_references","edge_references","edge_references","edge_weight","edge_weight","edge_weight_mut","edges","edges","edges","edges","edges_directed","edges_directed","edges_directed","edges_directed","eq","equivalent","equivalent","equivalent","equivalent","finished","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_fn","from_fn","from_index","from_index","from_index","from_index","from_index","from_index","from_index","from_index","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_world","from_world","from_world","hash","id","id","id","include_edge","include_node","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner_mut","inner_ref","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_unreversed","is_adjacent","is_adjacent","is_directed","is_visited","iter","neighbors","neighbors","neighbors","neighbors","neighbors_directed","neighbors_directed","neighbors_directed","neighbors_directed","new","next","next","next","next","next","next","next","next","next","next","next","node_bound","node_bound","node_bound","node_bound","node_count","node_count","node_count","node_identifiers","node_identifiers","node_identifiers","node_identifiers","node_references","node_references","node_references","node_references","node_weight","node_weight","node_weight_mut","null_value","null_value","null_value","partial_cmp","reset","reset_map","reset_map","reset_map","reset_map","should_break","should_break","should_prune","should_prune","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","source","source","stack","stack","stack","target","target","to_index","to_index","to_index","to_index","to_index","to_index","to_index","to_index","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","visit","visit_map","visit_map","visit_map","visit_map","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","walk_next","walk_next","weight","weight","weight","default","SyncCell","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","deref","deref_mut","downcast","drop","from","from_mut","from_sample_","get","init","into","into_any","into_any_arc","into_any_rc","into_sample","new","read","to_inner","to_sample_","try_from","try_into","type_id","upcast","vzip","SyncUnsafeCell","UnsafeCell","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_slice_of_cells","borrow","borrow","borrow_mut","borrow_mut","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","drop","drop","fmt","from","from","from","from","from","from","from_fd","from_fd","from_filelike","from_filelike","from_into_filelike","from_into_filelike","from_into_socketlike","from_into_socketlike","from_mut","from_mut","from_sample_","from_sample_","from_socketlike","from_socketlike","from_world","from_world","get","get","get_mut","get_mut","init","init","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","into_inner","into_inner","into_sample","into_sample","new","new","null_value","null_value","raw_get","raw_get","read","to_sample_","to_sample_","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","Error","Callsite","DEBUG","Dispatch","ERROR","Event","INFO","Id","Instrument","Level","Metadata","Span","Subscriber","TRACE","Value","WARN","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_dyn_eq","as_log","as_log","as_str","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","callsite","callsite","child_of","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_span","clone_span","clone_type_data","clone_type_data","clone_type_data","clone_type_data","cmp","compare","current","current_span","current_span","debug","debug_span","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","dispatcher","downcast","downcast","downcast","downcast","downcast","downcast_raw","downcast_ref","downcast_ref","downcast_ref","downcast_ref","downcast_ref","downgrade","drop","drop","drop","drop","drop","drop","drop_span","drop_span","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","enabled","enabled","enabled","enter","enter","enter","entered","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","error","error_span","event","event","event","event","event_enabled","event_enabled","exit","exit","field","field","fields","file","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","follows_from","from","from","from","from","from","from","from","from_non_zero_u64","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_str","from_u64","from_world","ge","ge","gt","gt","has_field","hash","hash","hash","id","in_current_span","in_scope","info","info_span","init","init","init","init","init","instrument","instrument","instrument","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_non_zero_u64","into_sample","into_sample","into_sample","into_sample","into_sample","into_u64","is","is","is","is","is","is_disabled","is_event","is_none","is_span","le","le","level","level_filters","line","lt","lt","max_level_hint","metadata","metadata","metadata","metadata","module_path","name","new","new","new","new_disabled","new_root","new_span","new_span","none","none","null_value","on_register_dispatch","or_current","partial_cmp","partial_cmp","record","record","record","record","record_all","record_follows_from","record_follows_from","register_callsite","register_callsite","set_interest","span","span","span_enabled","subscriber","target","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_string","trace","trace_span","try_close","try_close","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","warn","warn_span","with_subscriber","Callsite","DefaultCallsite","Identifier","as_any","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","clone_type_data","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","dyn_eq","dyn_hash","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from_sample_","from_sample_","hash","init","init","interest","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_sample","into_sample","metadata","metadata","new","rebuild_interest_cache","register","register","set_interest","set_interest","to_owned","to_sample_","to_sample_","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","DefaultGuard","Dispatch","SetGlobalDefaultError","WeakDispatch","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","clone","clone_into","clone_type_data","deref","deref_mut","downcast","drop","fmt","from","from_sample_","get_default","init","into","into_any","into_any_arc","into_any_rc","into_sample","set_default","set_global_default","to_owned","to_sample_","try_from","try_into","type_id","upcast","upgrade","vzip","with_default","Event","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","child_of","deref","deref_mut","dispatch","downcast","drop","fields","fmt","from","from_sample_","init","into","into_any","into_any_rc","into_sample","is_contextual","is_log","is_root","metadata","new","new_child_of","normalized_metadata","parent","record","record","to_sample_","try_from","try_into","type_id","upcast","vzip","AsField","DebugValue","DisplayValue","Empty","Field","FieldSet","Iter","Value","ValueSet","Visit","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_field","as_field","as_field","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","callsite","callsite","clone","clone","clone","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","contains","debug","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","display","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_eq","dyn_eq","dyn_hash","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","field","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","hash","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_empty","is_empty","iter","len","len","name","new","next","record","record","record","record","record","record_bool","record_debug","record_error","record_f64","record_i128","record_i64","record_str","record_u128","record_u64","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Instrument","Instrumented","WithDispatch","WithSubscriber","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","deref","deref","deref_mut","deref_mut","dispatcher","downcast","downcast","drop","drop","drop","fmt","fmt","from","from","from_sample_","from_sample_","in_current_span","init","init","inner","inner","inner_mut","inner_mut","inner_pin_mut","inner_pin_mut","inner_pin_ref","inner_pin_ref","instrument","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_future","into_future","into_inner","into_inner","into_sample","into_sample","poll","poll","span","span_mut","to_owned","to_owned","to_sample_","to_sample_","try_from","try_from","try_into","try_into","try_poll","try_poll","type_id","type_id","upcast","upcast","vzip","vzip","with_current_subscriber","with_subscriber","LevelFilter","ParseLevelFilterError","STATIC_MAX_LEVEL","DEBUG","ERROR","EVENT","HINT","INFO","Kind","Level","LevelFilter","Metadata","OFF","ParseLevelError","ParseLevelFilterError","SPAN","TRACE","WARN","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_log","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","callsite_enabled","clone","clone","clone","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","cmp","compare","current","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","drop","drop","drop","drop","dyn_eq","dyn_eq","dyn_hash","enabled","enabled","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_level","from_sample_","from_sample_","from_sample_","from_sample_","from_str","ge","ge","gt","gt","hash","hint","in_current_span","in_current_span","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_level","into_sample","into_sample","into_sample","into_sample","is_event","is_hint","is_span","le","le","lt","lt","max_level_hint","partial_cmp","partial_cmp","register_callsite","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","AsId","Attributes","Entered","EnteredSpan","Id","Record","Span","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_id","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","child_of","contains","contains","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","exit","fields","fmt","fmt","fmt","fmt","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","id","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","is_contextual","is_empty","is_empty","is_root","len","metadata","new","new","new_root","parent","record","record","record","record","to_sample_","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","values","vzip","vzip","vzip","vzip","DefaultGuard","Interest","NoSubscriber","SetGlobalDefaultError","Subscriber","always","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_span","clone_type_data","clone_type_data","current_span","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast_raw","drop","drop","drop","drop","drop","drop_span","enabled","enabled","enter","enter","event","event","event_enabled","exit","exit","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_world","in_current_span","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","is_always","is_never","is_sometimes","max_level_hint","never","new","new_span","new_span","null_value","on_register_dispatch","record","record","record_follows_from","record_follows_from","register_callsite","register_callsite","set_default","set_global_default","sometimes","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_string","try_close","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","with_default","Alias","AllScroll","AlwaysOnBottom","AlwaysOnTop","ApplicationLifetime","Arrow","At","Auto","AutoNoVsync","AutoVsync","Automatic","BorderlessFullscreen","Cell","Centered","ColResize","Commit","CompositeAlphaMode","Confined","ContextMenu","Copy","Crosshair","Current","Cursor","CursorEntered","CursorGrabMode","CursorIcon","CursorLeft","CursorMoved","Dark","Default","Disabled","DontExit","DroppedFile","EResize","Enabled","EnabledButtons","Entity","EwResize","ExitCondition","Fifo","FifoRelaxed","FileDragAndDrop","Fullscreen","Grab","Grabbing","Hand","Help","HoveredFile","HoveredFileCanceled","Ime","Immediate","Index","Inherit","InternalWindowState","Light","Locked","Mailbox","MonitorSelection","Move","NResize","NeResize","NeswResize","NoDrop","None","Normal","NormalizedWindowRef","NotAllowed","NsResize","NwResize","NwseResize","OnAllClosed","OnPrimaryClosed","Opaque","PostMultiplied","PreMultiplied","Preedit","PresentMode","Primary","Primary","PrimaryWindow","Progress","RawHandleWrapper","ReceivedCharacter","RequestRedraw","Resumed","RowResize","SResize","SeResize","SizedFullscreen","Started","Suspended","SwResize","Text","ThreadLockedRawWindowHandleWrapper","VerticalText","WResize","Wait","Window","WindowBackendScaleFactorChanged","WindowCloseRequested","WindowClosed","WindowCreated","WindowDestroyed","WindowFocused","WindowLevel","WindowMode","WindowMoved","WindowPlugin","WindowPosition","WindowRef","WindowResizeConstraints","WindowResized","WindowResolution","WindowScaleFactorChanged","WindowTheme","WindowThemeChanged","Windowed","ZoomIn","ZoomOut","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","base_scale_factor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","canvas","center","char","check_constraints","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","close","close_on_esc","close_when_requested","close_when_requested","cmp","cmp","compare","compare","component_ids","component_ids","component_ids","composite_alpha_mode","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","cursor","cursor_position","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","decorations","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","display_handle","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","dyn_hash","enabled_buttons","entity","entity","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","exit_condition","exit_on_all_closed","exit_on_primary_closed","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","fit_canvas_to_parent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","focused","focused","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_components","from_components","from_components","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","get_components","get_components","get_components","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_handle","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","grab_mode","hash","hash","hash","hash","height","height","height","hit_test","icon","ime_enabled","ime_position","index_of","index_of","index_of","index_of","index_of","index_of","index_of","index_of","index_of","index_of","index_of","index_of","index_of","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","internal","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","map_entities","max_height","max_width","maximize","min_height","min_width","minimize","mode","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","new","new","normalize","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","partial_cmp","partial_cmp","physical_cursor_position","physical_height","physical_height","physical_width","physical_width","position","position","position","prelude","present_mode","prevent_default_event_handling","primary_window","raw_display_handle","raw_window_handle","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","resizable","resize_constraints","resolution","scale_factor","scale_factor","scale_factor","scale_factor","scale_factor_override","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set_cursor_position","set_maximized","set_minimized","set_physical_cursor_position","set_physical_resolution","set_scale_factor","set_scale_factor_override","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","take_maximize_request","take_minimize_request","theme","title","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","transparent","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","variant_index","variant_index","variant_index","variant_index","variant_index","variant_index","variant_index","variant_index","variant_index","variant_index","variant_index","variant_index","variant_index","variant_name","variant_name","variant_name","variant_name","variant_name","variant_name","variant_name","variant_name","variant_name","variant_name","variant_name","variant_name","variant_name","variant_type","variant_type","variant_type","variant_type","variant_type","variant_type","variant_type","variant_type","variant_type","variant_type","variant_type","variant_type","variant_type","visible","visible","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","width","width","width","window","window","window","window","window","window","window","window","window","window","window","window","window","window_handle","window_level","window_theme","with_scale_factor_override","path_buf","path_buf","window","window","window","cursor","value","value","window","window","window","window","Alias","AllScroll","Arrow","At","Automatic","Cell","Centered","ColResize","Commit","ContextMenu","Copy","Crosshair","Current","CursorEntered","CursorIcon","CursorLeft","CursorMoved","Default","Disabled","DroppedFile","EResize","Enabled","EwResize","FileDragAndDrop","Grab","Grabbing","Hand","Help","HoveredFile","HoveredFileCanceled","Ime","Index","MonitorSelection","Move","NResize","NeResize","NeswResize","NoDrop","NotAllowed","NsResize","NwResize","NwseResize","Preedit","Primary","Progress","ReceivedCharacter","RowResize","SResize","SeResize","SwResize","Text","VerticalText","WResize","Wait","Window","WindowMoved","WindowPlugin","WindowPosition","WindowResizeConstraints","ZoomIn","ZoomOut","canvas","char","close_when_requested","composite_alpha_mode","cursor","decorations","enabled_buttons","entity","exit_condition","fit_canvas_to_parent","focused","ime_enabled","ime_position","internal","max_height","max_width","min_height","min_width","mode","position","position","position","present_mode","prevent_default_event_handling","primary_window","resizable","resize_constraints","resolution","title","transparent","visible","window","window","window","window","window_level","window_theme","path_buf","path_buf","window","window","window","cursor","value","value","window","window","window","window","Continuous","Reactive","ReactiveLowPower","UpdateMode","WinitPlugin","WinitSettings","WinitWindows","accessibility","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone_into","clone_type_data","create_window","default","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","desktop_app","downcast","downcast","downcast","downcast","drop","drop","drop","drop","entity_to_winit","fmt","fmt","fmt","focused_mode","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_world","from_world","from_world","game","get_best_videomode","get_fitting_videomode","get_window","get_window_entity","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","null_value","null_value","null_value","remove_window","return_from_run","run_on_any_thread","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unfocused_mode","upcast","upcast","upcast","upcast","update_mode","vzip","vzip","vzip","vzip","windows","winit_runner","winit_to_entity","winit_window_position","wait","wait","AccessKitAdapters","AccessibilityPlugin","WinitActionHandler","WinitActionHandlers","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone_into","clone_type_data","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","do_action","downcast","downcast","downcast","downcast","drop","drop","drop","drop","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_world","from_world","from_world","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","null_value","null_value","null_value","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip"],"q":[[0,"bevy"],[82,"bevy::a11y"],[311,"bevy::a11y::accesskit"],[2314,"bevy::animation"],[2805,"bevy::animation::prelude"],[2818,"bevy::app"],[3781,"bevy::app::RunMode"],[3782,"bevy::app::ci_testing"],[3810,"bevy::app::prelude"],[3838,"bevy::asset"],[5457,"bevy::asset::AssetEvent"],[5461,"bevy::asset::AssetId"],[5464,"bevy::asset::AssetLoadError"],[5477,"bevy::asset::UntypedAssetId"],[5481,"bevy::asset::io"],[5968,"bevy::asset::io::AssetSourceEvent"],[5976,"bevy::asset::io::embedded"],[6032,"bevy::asset::io::file"],[6122,"bevy::asset::io::gated"],[6180,"bevy::asset::io::memory"],[6346,"bevy::asset::io::processor_gated"],[6400,"bevy::asset::meta"],[6645,"bevy::asset::meta::AssetAction"],[6649,"bevy::asset::meta::AssetActionMinimal"],[6651,"bevy::asset::prelude"],[6686,"bevy::asset::prelude::AssetEvent"],[6690,"bevy::asset::prelude::AssetId"],[6693,"bevy::asset::processor"],[7229,"bevy::asset::processor::ProcessError"],[7235,"bevy::asset::saver"],[7274,"bevy::audio"],[7856,"bevy::audio::prelude"],[7894,"bevy::core"],[8275,"bevy::core::prelude"],[8289,"bevy::core_pipeline"],[8364,"bevy::core_pipeline::blit"],[8460,"bevy::core_pipeline::bloom"],[8717,"bevy::core_pipeline::clear_color"],[8864,"bevy::core_pipeline::contrast_adaptive_sharpening"],[9151,"bevy::core_pipeline::core_2d"],[9356,"bevy::core_pipeline::core_2d::graph"],[9359,"bevy::core_pipeline::core_2d::graph::input"],[9360,"bevy::core_pipeline::core_2d::graph::node"],[9368,"bevy::core_pipeline::core_3d"],[9827,"bevy::core_pipeline::core_3d::graph"],[9830,"bevy::core_pipeline::core_3d::graph::input"],[9831,"bevy::core_pipeline::core_3d::graph::node"],[9846,"bevy::core_pipeline::deferred"],[9929,"bevy::core_pipeline::deferred::copy_lighting_id"],[10013,"bevy::core_pipeline::deferred::node"],[10041,"bevy::core_pipeline::experimental"],[10042,"bevy::core_pipeline::experimental::taa"],[10171,"bevy::core_pipeline::fullscreen_vertex_shader"],[10173,"bevy::core_pipeline::fxaa"],[10480,"bevy::core_pipeline::msaa_writeback"],[10559,"bevy::core_pipeline::prelude"],[10589,"bevy::core_pipeline::prepass"],[10971,"bevy::core_pipeline::prepass::node"],[10999,"bevy::core_pipeline::tonemapping"],[11361,"bevy::core_pipeline::upscaling"],[11441,"bevy::diagnostic"],[11775,"bevy::dynamic_plugin"],[11808,"bevy::ecs"],[11823,"bevy::ecs::archetype"],[12107,"bevy::ecs::bundle"],[12209,"bevy::ecs::change_detection"],[12263,"bevy::ecs::component"],[12653,"bevy::ecs::entity"],[12878,"bevy::ecs::event"],[13141,"bevy::ecs::prelude"],[13291,"bevy::ecs::ptr"],[13303,"bevy::ecs::query"],[14345,"bevy::ecs::reflect"],[14639,"bevy::ecs::removal_detection"],[14773,"bevy::ecs::schedule"],[15733,"bevy::ecs::schedule::NodeConfigs"],[15736,"bevy::ecs::schedule::common_conditions"],[15753,"bevy::ecs::storage"],[16134,"bevy::ecs::system"],[17535,"bevy::ecs::system::lifetimeless"],[17541,"bevy::ecs::world"],[18073,"bevy::ecs::world::error"],[18101,"bevy::ecs::world::unsafe_world_cell"],[18194,"bevy::gilrs"],[18264,"bevy::gizmos"],[18431,"bevy::gizmos::gizmos"],[18582,"bevy::gizmos::prelude"],[18595,"bevy::gltf"],[18969,"bevy::gltf::GltfError"],[18970,"bevy::hierarchy"],[19613,"bevy::hierarchy::HierarchyEvent"],[19620,"bevy::input"],[19904,"bevy::input::common_conditions"],[19908,"bevy::input::gamepad"],[21377,"bevy::input::gamepad::AxisSettingsError"],[21381,"bevy::input::gamepad::ButtonSettingsError"],[21383,"bevy::input::gamepad::GamepadRumbleRequest"],[21387,"bevy::input::keyboard"],[21799,"bevy::input::mouse"],[22196,"bevy::input::prelude"],[22412,"bevy::input::touch"],[22735,"bevy::input::touch::ForceTouch"],[22738,"bevy::input::touchpad"],[22874,"bevy::log"],[22916,"bevy::log::prelude"],[22926,"bevy::math"],[28840,"bevy::math::bool"],[29154,"bevy::math::cubic_splines"],[29341,"bevy::math::f32"],[31023,"bevy::math::f64"],[31065,"bevy::math::i32"],[32190,"bevy::math::i64"],[32205,"bevy::math::prelude"],[32776,"bevy::math::swizzles"],[33266,"bevy::math::u32"],[34355,"bevy::math::u64"],[34370,"bevy::pbr"],[39392,"bevy::pbr::ClusterConfig"],[39399,"bevy::pbr::FogFalloff"],[39405,"bevy::pbr::LightEntity"],[39410,"bevy::pbr::ParallaxMappingMethod"],[39411,"bevy::pbr::ScreenSpaceAmbientOcclusionQualityLevel"],[39413,"bevy::pbr::deferred"],[39568,"bevy::pbr::draw_3d_graph"],[39569,"bevy::pbr::draw_3d_graph::node"],[39570,"bevy::pbr::prelude"],[39697,"bevy::pbr::prelude::FogFalloff"],[39703,"bevy::pbr::prelude::ParallaxMappingMethod"],[39704,"bevy::pbr::wireframe"],[40090,"bevy::prelude"],[42014,"bevy::prelude::AssetEvent"],[42018,"bevy::prelude::AssetId"],[42021,"bevy::prelude::Color"],[42037,"bevy::prelude::FileDragAndDrop"],[42042,"bevy::prelude::FogFalloff"],[42048,"bevy::prelude::Ime"],[42055,"bevy::prelude::ParallaxMappingMethod"],[42056,"bevy::prelude::shape"],[42486,"bevy::prelude::system_adapter"],[42493,"bevy::ptr"],[42687,"bevy::reflect"],[44729,"bevy::reflect::ReflectPathError"],[44734,"bevy::reflect::erased_serde"],[45093,"bevy::reflect::prelude"],[45162,"bevy::reflect::serde"],[45616,"bevy::reflect::std_traits"],[45646,"bevy::reflect::utility"],[45728,"bevy::render"],[46027,"bevy::render::batching"],[46063,"bevy::render::camera"],[47318,"bevy::render::camera::CameraOutputMode"],[47320,"bevy::render::camera::ScalingMode"],[47326,"bevy::render::color"],[47599,"bevy::render::color::Color"],[47615,"bevy::render::extract_component"],[47735,"bevy::render::extract_instances"],[47798,"bevy::render::extract_resource"],[47831,"bevy::render::globals"],[47958,"bevy::render::gpu_component_array_buffer"],[47987,"bevy::render::main_graph"],[47988,"bevy::render::main_graph::node"],[47989,"bevy::render::mesh"],[48583,"bevy::render::mesh::GpuBufferInfo"],[48586,"bevy::render::mesh::morph"],[48865,"bevy::render::mesh::morph::MorphBuildError"],[48868,"bevy::render::mesh::skinning"],[48983,"bevy::render::pipelined_rendering"],[49100,"bevy::render::prelude"],[49199,"bevy::render::prelude::Color"],[49215,"bevy::render::primitives"],[49584,"bevy::render::render_asset"],[49733,"bevy::render::render_graph"],[50602,"bevy::render::render_graph::Edge"],[50608,"bevy::render::render_graph::InputSlotError"],[50611,"bevy::render::render_graph::OutputSlotError"],[50614,"bevy::render::render_graph::RenderGraphError"],[50625,"bevy::render::render_graph::RunSubGraphError"],[50633,"bevy::render::render_phase"],[50943,"bevy::render::render_resource"],[56810,"bevy::render::render_resource::BindingType"],[56819,"bevy::render::render_resource::BufferBindingType"],[56820,"bevy::render::render_resource::TextureFormat"],[56822,"bevy::render::render_resource::TextureSampleType"],[56823,"bevy::render::render_resource::encase"],[57049,"bevy::render::render_resource::encase::internal"],[57320,"bevy::render::render_resource::encase::internal::Error"],[57322,"bevy::render::render_resource::encase::matrix"],[57330,"bevy::render::render_resource::encase::rts_array"],[57335,"bevy::render::render_resource::encase::vector"],[57343,"bevy::render::render_resource::resource_macros"],[57344,"bevy::render::renderer"],[57615,"bevy::render::renderer::RenderGraphRunnerError"],[57628,"bevy::render::settings"],[58110,"bevy::render::settings::Dx12Compiler"],[58112,"bevy::render::texture"],[59190,"bevy::render::view"],[60334,"bevy::render::view::visibility"],[60361,"bevy::render::view::window"],[60383,"bevy::render::view::window::screenshot"],[60522,"bevy::scene"],[61099,"bevy::scene::SceneSpawnError"],[61106,"bevy::scene::prelude"],[61131,"bevy::scene::serde"],[61354,"bevy::sprite"],[63473,"bevy::sprite::collide_aabb"],[63515,"bevy::sprite::prelude"],[63554,"bevy::tasks"],[63874,"bevy::tasks::prelude"],[63917,"bevy::text"],[65175,"bevy::text::prelude"],[65205,"bevy::time"],[66002,"bevy::time::common_conditions"],[66004,"bevy::time::prelude"],[66012,"bevy::transform"],[66126,"bevy::transform::commands"],[66182,"bevy::transform::components"],[66401,"bevy::transform::helper"],[66458,"bevy::transform::systems"],[66460,"bevy::ui"],[70382,"bevy::ui::camera_config"],[70455,"bevy::ui::debug"],[70456,"bevy::ui::draw_ui_graph"],[70458,"bevy::ui::draw_ui_graph::node"],[70459,"bevy::ui::measurement"],[70468,"bevy::ui::node"],[70469,"bevy::ui::node_bundles"],[70690,"bevy::ui::update"],[70691,"bevy::ui::widget"],[71044,"bevy::utils"],[71739,"bevy::utils::futures"],[71740,"bevy::utils::hashbrown"],[72108,"bevy::utils::hashbrown::TryReserveError"],[72109,"bevy::utils::hashbrown::hash_map"],[72791,"bevy::utils::hashbrown::hash_set"],[73124,"bevy::utils::hashbrown::hash_table"],[73379,"bevy::utils::hashbrown::raw"],[73627,"bevy::utils::label"],[73633,"bevy::utils::nonmax"],[74492,"bevy::utils::petgraph"],[74743,"bevy::utils::petgraph::adj"],[75102,"bevy::utils::petgraph::algo"],[75335,"bevy::utils::petgraph::algo::astar"],[75336,"bevy::utils::petgraph::algo::bellman_ford"],[75369,"bevy::utils::petgraph::algo::dijkstra"],[75370,"bevy::utils::petgraph::algo::dominators"],[75468,"bevy::utils::petgraph::algo::feedback_arc_set"],[75469,"bevy::utils::petgraph::algo::floyd_warshall"],[75470,"bevy::utils::petgraph::algo::isomorphism"],[75475,"bevy::utils::petgraph::algo::k_shortest_path"],[75476,"bevy::utils::petgraph::algo::matching"],[75531,"bevy::utils::petgraph::algo::simple_paths"],[75532,"bevy::utils::petgraph::algo::tred"],[75534,"bevy::utils::petgraph::csr"],[75826,"bevy::utils::petgraph::data"],[75912,"bevy::utils::petgraph::data::Element"],[75916,"bevy::utils::petgraph::dot"],[75982,"bevy::utils::petgraph::graph"],[76492,"bevy::utils::petgraph::graphmap"],[76834,"bevy::utils::petgraph::matrix_graph"],[77108,"bevy::utils::petgraph::operator"],[77109,"bevy::utils::petgraph::prelude"],[77335,"bevy::utils::petgraph::stable_graph"],[77881,"bevy::utils::petgraph::unionfind"],[77916,"bevy::utils::petgraph::visit"],[78665,"bevy::utils::prelude"],[78666,"bevy::utils::synccell"],[78695,"bevy::utils::syncunsafecell"],[78779,"bevy::utils::thiserror"],[78780,"bevy::utils::tracing"],[79094,"bevy::utils::tracing::callsite"],[79168,"bevy::utils::tracing::dispatcher"],[79205,"bevy::utils::tracing::event"],[79242,"bevy::utils::tracing::field"],[79497,"bevy::utils::tracing::instrument"],[79581,"bevy::utils::tracing::level_filters"],[79584,"bevy::utils::tracing::metadata"],[79761,"bevy::utils::tracing::span"],[79886,"bevy::utils::tracing::subscriber"],[80036,"bevy::window"],[83128,"bevy::window::FileDragAndDrop"],[83133,"bevy::window::Ime"],[83140,"bevy::window::prelude"],[83238,"bevy::window::prelude::FileDragAndDrop"],[83243,"bevy::window::prelude::Ime"],[83250,"bevy::winit"],[83384,"bevy::winit::UpdateMode"],[83386,"bevy::winit::accessibility"]],"d":["This plugin group will add all the default plugins for a …","This plugin group will add the minimal plugins for a <em>Bevy</em> …","Integrate with platform accessibility APIs.","Provides types and plugins for animations.","Build bevy apps, create plugins, and read events.","","","","","","","Load and store assets and resources for Apps.","Provides types and plugins for audio playback.","","","","","","","Contains core plugins.","Core render pipeline.","","","","","Useful diagnostic plugins and types for bevy apps.","","","","","Dynamic linking of plugins","Bevy’s entity-component-system.","Returns the argument unchanged.","Returns the argument unchanged.","","","Bevy interface with <code>GilRs</code> - “Game Input Library for Rust…","Immediate mode drawing api for visual debugging.","Support for GLTF file loading.","Entity hierarchies and property inheritance","","","Resources and events for inputs, e.g. mouse/keyboard, …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Logging capabilities","Math types (Vec3, Mat4, Quat, etc) and helpers.","Physically based rendering.","<code>use bevy::prelude::*;</code> to import common components, …","Utilities for working with untyped pointers in a more safe …","Type reflection used for dynamically interacting with rust …","Cameras, meshes, textures, shaders, and pipelines. Use …","Save/load collections of entities and components to/from …","Items for sprites, rects, texture atlases, etc.","Pools for async, IO, and compute tasks.","Text drawing, styling, and font assets.","Contains time utilities.","","","Local and global transforms (e.g. translation, scale, …","","","","","","","User interface components and widgets.","","","Various miscellaneous utilities for easing development","","","Configuration, creation, and management of one or more …","Window creation, configuration, and handling","Component to wrap a <code>accesskit::Node</code>, representing this …","Plugin managing non-GUI aspects of integrating with …","Resource that tracks whether an assistive technology has …","Set enum for the systems relating to accessibility","Wrapper struct for <code>accesskit::ActionRequest</code>. Required to …","Resource representing which entity has keyboard focus, if …","Resource whose value determines whether the accessibility …","Update the accessibility tree","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Returns <code>true</code> if an access technology is active and …","Returns <code>true</code> if the ECS should update the accessibility …","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets whether accessibility updates were requested by an …","Sets whether the ECS should update the accessibility tree.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An action to be taken on an accessibility node.","","Handles requests from assistive technologies or other …","","A 2D affine transform. Derived from kurbo.","","","","","","","","","","","","","","","","","","","","","","","","","","A click will be performed on one of the node’s ancestors.","","","","","","","","","","","","Defines a custom action for a UI element.","Requires <code>ActionRequest::data</code> to be set to …","","","","","","Decrement a numeric value by one step.","Do the default action for an object, typically this means …","Describes the action that will be performed on a given …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A transform that is flipped on the x-axis.","A transform that is flipped on the y-axis. Useful for …","","","","","","","","","","","A generic container that should be ignored by assistive …","","","","","","","","","","","","","E.g. most toolbars and separators.","The identity transform.","","","","","","Increment a numeric value by one step.","","","Indicates if a form control has invalid input or if a web …","","","","","","","","","","","","","","","","Behaves similar to an ARIA grid but is primarily used by …","","Contains the bullet, number, or other marker for a list …","","","","","","","","","","","","","","","","","","","","","","","A single accessible object. A complete UI is represented …","Builds a <code>Node</code>.","Allows nodes that have the same role, actions, and set of …","The stable identity of a <code>Node</code>, unique within the node’s …","","","","","","The point at the origin; (0, 0).","","","","","Language specific ordering (alpha, roman, cjk-ideographic, …","","","","","","","","","A 2D point. Derived from kurbo.","","","","","","","","A rectangle. Derived from kurbo.","","Delete any selected text in the control’s text value and …","","","The type of an accessibility node.","","","","","","","","","","","Scroll any scrollable containers to make the target object …","","","Optional target rectangle for <code>Action::ScrollIntoView</code>, in …","Scroll the given object to a specified point in the tree’…","Target for <code>Action::ScrollToPoint</code>, in platform-native …","","","","","","","Requires <code>ActionRequest::data</code> to be set to …","Target for <code>Action::SetScrollOffset</code>, in the coordinate space","Don’t focus this node, but set it as the sequential …","Requires <code>ActionRequest::data</code> to be set to …","","Replace the value of the control with the specified value …","","","A 2D size. Derived from kurbo.","","","","","","","","","","","","","","","","","","","","","","","This is just like a multi-line document, but signals that …","","","","","","","","","","","","","","","","The data associated with an accessibility tree that’s …","","","","","A serializable representation of an atomic change to a <code>Tree</code>…","","","","","","","","","","","A 2D vector. Derived from kurbo.","E.g. menu or combo box.","","","","","","","The point (0, 0).","The empty rectangle at the origin.","A size with zero width or height.","The vector (0, 0).","Take absolute value of width and height.","A single character, usually part of this node’s name, …","A single character, usually part of this node’s name, …","","","","","","","","","","","","","","The position where the selection started, and which does …","The name of the application this tree belongs to.","The area of the rectangle.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the coefficients of the transform.","","","","","","","","","","","","","","","","","","","Background color in RGBA.","Background color in RGBA.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bounding box of this node, in the node’s coordinate …","The bounding box of this node, in the node’s coordinate …","","The index of an item in <code>Node::character_lengths</code>, or the …","For inline text. The length (non-inclusive) of each …","For inline text. The length (non-inclusive) of each …","For inline text. This is the position of each character …","For inline text. This is the position of each character …","For inline text. This is the advance width of each …","For inline text. This is the advance width of each …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Indicates that this node clips its children, i.e. may have …","Indicates that this node clips its children, i.e. may have …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","For <code>Role::ColorWell</code>, specifies the selected color in RGBA.","For <code>Role::ColorWell</code>, specifies the selected color in RGBA.","","","Returns <code>true</code> if <code>point</code> lies within <code>self</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Compute the determinant of this transform.","","Note: division by a scalar is implemented by multiplying …","","","Perform the requested action. If the requested action is …he active end of the selection, which changes as the …","The node within this tree that has keyboard focus when the …","Only present when different from parent.","Only present when different from parent.","Font size is in pixels.","Font size is in pixels.","Font weight can take on any arbitrary numeric value. …","Font weight can take on any arbitrary numeric value. …","Foreground color in RGBA.","Foreground color in RGBA.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","A new rectangle from origin and size.","A new rectangle from two points.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The height of the rectangle.","The height.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Inner HTML of an element. Only used for a top-level math …","Inner HTML of an element. Only used for a top-level math …","The intersection of two rectangles.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Compute the inverse transform.","","","","","Use for a control or group of controls that disallows …","Use for a control or group of controls that disallows …","Whether this rectangle has zero area.","Whether this node is expanded, collapsed, or neither.","Whether this node is expanded, collapsed, or neither.","Is this map finite?","","","Exclude this node and its descendants from the tree …","Exclude this node and its descendants from the tree …","","","","","Indicates whether this node causes a hard line-break (e.g. …","Indicates whether this node causes a hard line-break (e.g. …","","","","","If a dialog box is marked as explicitly modal.","If a dialog box is marked as explicitly modal.","","","Is this map NaN?","Indicates whether this node causes a page break.","Indicates whether this node causes a page break.","Use for a textbox that allows focus/selection but not …","Use for a textbox that allows focus/selection but not …","","","","","Indicates whether this node is selected or unselected.","Indicates whether this node is selected or unselected.","","","","","This element allows touches to be passed through when a …","This element allows touches to be passed through when a …","","","A keystroke or sequence of keystrokes, complete with any …","A keystroke or sequence of keystrokes, complete with any …","","","Only present when different from parent.","Only present when different from parent.","The list style type. Only available on list items.","The list style type. Only available on list items.","","","Accesses a shared class set guarded by a mutex.","Creates an affine transformation that takes the unit …","","","Returns the maximum value for the x-coordinate of the …","Returns the maximum value for the y-coordinate of the …","","","","","Returns the minimum value for the x-coordinate of the …","Returns the minimum value for the y-coordinate of the …","","","","","","","","","","","Construct an affine transform from coefficients.","Create a new <code>Point</code> with the provided <code>x</code> and <code>y</code> coordinates.","A new rectangle from minimum and maximum coordinates.","Create a new <code>Size</code> with the provided <code>width</code> and <code>height</code>.","Create a new vector.","","","","","","The node’s role must be <code>Role::InlineTextBox</code>.","Zero or more new or updated nodes. Order doesn’t matter.","","","","","","","","","","","","","","","","","The origin of the rectangle.","","","","","If a text input has placeholder text, it should be exposed …","If a text input has placeholder text, it should be exposed …","","","","","","","","","","","","","","","On radio buttons this should be set to a list of all of …","On radio buttons this should be set to a list of all of …","","","","","","The identifier of the tree’s root node.","An affine transform representing rotation.","An affine transform representing uniform scaling.","An affine transform representing non-uniform scaling with …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The size of the rectangle.","","","","","An optional string that may override an assistive …","An optional string that may override an assistive …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert this vector into a <code>Point</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert this vector into a <code>Size</code>.","Convert this point into a <code>Vec2</code>.","Convert this size into a <code>Vec2</code>, with <code>width</code> mapped to <code>x</code> and …","The name of the UI toolkit in use.","The version of the UI toolkit.","If a node’s only accessible name comes from a tooltip, …","If a node’s only accessible name comes from a tooltip, …","An affine transform to apply to any coordinates within …","An affine transform to apply to any coordinates within …","Compute the bounding box of a transformed rectangle.","An affine transform representing translation.","Rarely updated information about the tree as a whole. This …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The smallest rectangle enclosing two rectangles.","Compute the union with one point.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The width of the rectangle.","The width.","Create a new <code>Rect</code> with the same size as <code>self</code> and a new …","Create a new <code>Rect</code> with the same origin as <code>self</code> and a new …","For inline text. The length of each word in characters, as …","For inline text. The length of each word in characters, as …","The x coordinate.","The x-coordinate.","The minimum x coordinate (left edge).","The maximum x coordinate (right edge).","The y coordinate.","The y-coordinate.","The minimum y coordinate (top edge in y-down spaces).","The maximum y coordinate (bottom edge in y-down spaces).","A list of <code>VariableCurve</code>, and the <code>EntityPath</code> to which they …","Animation controls","Adds animation support to an app","The animation will finish after running “n” times.","Path to an entity, with <code>Name</code>s. Each entity in a path must …","The animation will never finish.","List of keyframes for one of the attribute of a <code>Transform</code>.","The animation will finish after running once.","Repetition behavior of an animation.","Keyframes for rotation.","Keyframes for scale.","Keyframes for translation.","Describes how an attribute of a <code>Transform</code> or <code>MorphWeights</code> …","Keyframes for morph target weights.","Add a <code>VariableCurve</code> to an <code>EntityPath</code>.","Handle to the animation clip being played.","System that will play all animations, using any entity …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether this animation clip can run on entity with given …","Number of times the animation has completed.","","","","","","","","<code>VariableCurve</code>s for each bone. Indexed by the bone ID.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Duration of the clip, represented in seconds","","","Time elapsed playing the animation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","Gets the curves for a bone.","Gets the curves by it’s <code>EntityPath</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Check if the playing animation has finished, according to …","Is the animation paused","Check if the animation is playing in reverse.","Check if the given animation clip is being played.","","","","","","","Timestamp for each of the keyframes.","List of the keyframes.","","","","","","","","","","","","","","","","","","Parts of the path","Pause the animation","Start playing an animation, resetting state of the player, …","Start playing an animation, resetting state of the player, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets repeat to <code>RepeatAnimation::Forever</code>.","Repetition behavior of the animation.","Reset the animation to its initial state, as if no time …","Unpause the animation","Seek time inside of the animation. Always within the range …","Seek to a specific time in the animation.","","","","","","","Set the repetition behaviour of the animation.","Set the speed of the animation playback","","","","","","","Speed of the animation playback","Start playing an animation, resetting state of the player. …","Start playing an animation, resetting state of the player. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A list of <code>VariableCurve</code>, and the <code>EntityPath</code> to which they …","Animation controls","Adds animation support to an app","Path to an entity, with <code>Name</code>s. Each entity in a path must …","List of keyframes for one of the attribute of a <code>Transform</code>.","Keyframes for rotation.","Keyframes for scale.","Keyframes for translation.","Describes how an attribute of a <code>Transform</code> or <code>MorphWeights</code> …","Keyframes for morph target weights.","Timestamp for each of the keyframes.","List of the keyframes.","Parts of the path","Plugins are being added.","A container of app logic and data.","An event that indicates the <code>App</code> should exit. This will …","A strongly-typed class of labels used to identify an <code>App</code>.","Generates an impl of the <code>AppLabel</code> trait.","A strongly-typed identifier for an <code>AppLabel</code>.","Cleanup has been executed for all plugins added.","A type representing an unsafe function that returns a …","Generates a dynamic plugin entry point function for the …","Finish has been executed for all plugins added.","Runs first in the schedule. This is run by the <code>Main</code> …","The schedule that contains systems which only run after a …","Runs last in the schedule. This is run by the <code>Main</code> …","Indicates that the <code>App</code>’s schedule should run repeatedly.","The schedule that contains the app logic that is evaluated …","Defines the schedules to be run for the <code>Main</code> schedule, …","Initializes the <code>Main</code> schedule, sub schedules,  and …","Indicates that the <code>App</code>’s schedule should run only once.","A collection of Bevy app logic and configuration.","Combines multiple <code>Plugin</code>s into a single unit.","Facilitates the creation and configuration of a <code>PluginGroup</code>…","Types that represent a set of <code>Plugin</code>s.","Plugins state in the application","The schedule that runs once after <code>Startup</code>. This is run by …","The schedule that contains logic that must run after <code>Update</code>…","The schedule that runs before <code>Startup</code>. This is run by the …","The schedule that contains logic that must run before …","All plugins already added are ready.","Runs the <code>FixedUpdate</code> schedule in a loop according until …","Determines the method used to run an <code>App</code>’s <code>Schedule</code>.","Configures an <code>App</code> to run its <code>Schedule</code> according to a given …","The schedule that contains scene spawning. This is run by …","The schedule that runs once when the app starts. This is …","Runs state transitions. This is run by the <code>Main</code> schedule.","A <code>SubApp</code> contains its own <code>Schedule</code> and <code>World</code> separate from …","The schedule that contains app logic. This is run by the …","Adds the plugin <code>Plugin</code> at the end of this …","Adds a <code>Plugin</code> in this <code>PluginGroupBuilder</code> after the plugin …","","Adds a <code>Plugin</code> in this <code>PluginGroupBuilder</code> before the plugin …","Setup the application to manage events of type <code>T</code>.","Adds one or more <code>Plugin</code>s.","","","","","","Adds a new <code>schedule</code> to the <code>App</code> under the provided <code>label</code>.","Adds <code>State&lt;S&gt;</code> and <code>NextState&lt;S&gt;</code> resources, <code>OnEnter</code> and …","Adds a system to the given schedule in this app’s …","When doing ambiguity checking this ignores systems that …","When doing ambiguity checking this ignores systems that …","The <code>SubApp</code>’s instance of <code>App</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts this type into an opaque, strongly-typed label.","","","","","","","","","","","","","","","Returns the representation of this label as a string …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Configures the <code>App</code> to which this plugin is added.","Configures the <code>Plugin</code>s that are to be added.","","","","Utilities for testing in CI environments.","Run <code>Plugin::cleanup</code> for each plugin. This is usually …","Runs after all plugins are built and finished, but before …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Applies the provided <code>ScheduleBuildSettings</code> to all …","Configures a system set in the default schedule, adding …","Configures a collection of system sets in the default …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Disables a <code>Plugin</code>, preventing it from being added to the …","","","","Returns a boxed object from a boxed trait object if the …","","","","","","","","","","","","","","","","","","","","","Returns a mutable reference to the object within the trait …","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …","Returns a reference to the object within the trait object …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Applies the function to the <code>Schedule</code> associated with <code>label</code>.","Creates a new empty <code>App</code> with minimal default configuration.","Enables a <code>Plugin</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Extracts data from main world to this sub-app.","Run <code>Plugin::finish</code> for each plugin. This is usually called …","Finish adding this plugin to the <code>App</code>, once all plugins …","Consumes the <code>PluginGroupBuilder</code> and builds the contained …","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a vector of references to any plugins of type <code>T</code> …","Gets read-only access to the <code>Schedule</code> with the provided …","Gets read-write access to a <code>Schedule</code> with the provided …","Retrieves a <code>SubApp</code> inside this <code>App</code> with the given label, …","Retrieves a <code>SubApp</code> inside this <code>App</code> with the given label, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Initialize a non-send <code>Resource</code> with standard starting …","Initialize a <code>Resource</code> with standard starting values by …","Initializes a new empty <code>schedule</code> to the <code>App</code> under the …","Adds the given <code>schedule</code> after the <code>after</code> schedule","Inserts a non-send resource to the app.","Inserts a <code>Resource</code> to the current <code>App</code> and overwrites any …","Inserts an existing sub app into the app","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if the trait object wraps an object of type …","Checks if a <code>Plugin</code> has already been added.","If the plugin can be meaningfully instantiated several …","The labels to run for the <code>Main</code> schedule (in the order they …","","The schedule that systems are added to by default.","Configures a name for the <code>Plugin</code> which is primarily used …","Configures a name for the <code>PluginGroup</code> which is primarily …","Creates a new <code>App</code> with some default structure to enable …","Creates a new <code>SubApp</code>.","","","","","","Check the state of all plugins already added to this app. …","","","Has the plugin finished it’s setup? This can be useful …","","","","","Register a new <code>Diagnostic</code> with an <code>App</code>.","Registers the type <code>T</code> in the <code>TypeRegistry</code> resource, adding …","Adds the type data <code>D</code> to type <code>T</code> in the <code>TypeRegistry</code> …","Removes a sub app from the app. Returns <code>None</code> if the label …","Starts the application by calling the app’s runner …","Runs the <code>SubApp</code>’s default schedule.","See <code>RunMode::Loop</code>.","A system that runs the “main schedule”","Determines whether the <code>Schedule</code> is run once or repeatedly.","See <code>RunMode::Once</code>.","The runner function is primarily responsible for managing …","Sets the value of the given <code>Plugin</code>, if it exists","Sets the value of the given <code>Plugin</code>, if it exists.","","Sets the function that will be called when the app is run.","Start a new builder for the <code>PluginGroup</code>.","Retrieves a <code>SubApp</code> stored inside this <code>App</code>.","Retrieves a <code>SubApp</code> stored inside this <code>App</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the [<code>TypeId</code>] used to differentiate labels.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Advances the execution of the <code>Schedule</code> by one cycle.","","","","","","","","","","","","","","","","","","","","","","","","The main ECS <code>World</code> of the <code>App</code>. This stores and provides …","The minimum <code>Duration</code> to wait after a <code>Schedule</code> has …","A configuration struct for automated CI testing.","","","","","","","","","","","The number of frames after which Bevy should exit.","The time in seconds to update for each frame.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","Frames at which to capture a screenshot.","","","","","","","A container of app logic and data.","Generates a dynamic plugin entry point function for the …","Runs first in the schedule. This is run by the <code>Main</code> …","The schedule that contains systems which only run after a …","Runs last in the schedule. This is run by the <code>Main</code> …","The schedule that contains the app logic that is evaluated …","A collection of Bevy app logic and configuration.","Combines multiple <code>Plugin</code>s into a single unit.","The schedule that runs once after <code>Startup</code>. This is run by …","The schedule that contains logic that must run after <code>Update</code>…","The schedule that runs before <code>Startup</code>. This is run by the …","The schedule that contains logic that must run before …","The schedule that contains scene spawning. This is run by …","The schedule that runs once when the app starts. This is …","Runs state transitions. This is run by the <code>Main</code> schedule.","The schedule that contains app logic. This is run by the …","Configures the <code>App</code> to which this plugin is added.","Configures the <code>Plugin</code>s that are to be added.","Runs after all plugins are built and finished, but before …","Finish adding this plugin to the <code>App</code>, once all plugins …","If the plugin can be meaningfully instantiated several …","The schedule that systems are added to by default.","Configures a name for the <code>Plugin</code> which is primarily used …","Configures a name for the <code>PluginGroup</code> which is primarily …","Has the plugin finished it’s setup? This can be useful …","The runner function is primarily responsible for managing …","Sets the value of the given <code>Plugin</code>, if it exists","The main ECS <code>World</code> of the <code>App</code>. This stores and provides …","Emitted whenever an <code>Asset</code> is added.","","The top level <code>Asset</code> loaded by this <code>AssetLoader</code>.","","Adds asset-related builder methods to <code>App</code>.","A type erased container for an <code>Asset</code> value that is capable …","Events that occur for a specific <code>Asset</code>, such as “value …","Schedule where events accumulated in <code>Assets</code> are applied to …","Provides <code>Handle</code> and <code>UntypedHandle</code> <em>for a specific asset type</em>…","A unique runtime-only identifier for an <code>Asset</code>. This is …","A generational runtime-only identifier for a specific <code>Asset</code>…","An error that occurs during an <code>Asset</code> load.","Loads an <code>Asset</code> from a given byte <code>Reader</code>. This can accept …","","","","Represents a path to an asset in a “virtual filesystem”…","Provides “asset” loading and processing functionality. …","","","Loads and tracks the state of <code>Asset</code> values from a …","The “asset mode” the server is currently in.","Stores <code>Asset</code> values identified by their <code>AssetId</code>.","A mutable iterator over <code>Assets</code>.","Extension trait for <code>AsyncRead</code>.","Extension trait for <code>AsyncWrite</code>.","An owned and dynamically typed Future used when you can’…","","","The uuid for the default <code>AssetId</code>. It is valid to assign a …","The load state of an asset’s dependencies.","","An error that occurs while deserializing <code>AssetMeta</code>.","","","","Provides type-erased access to an <code>AssetLoader</code>.","A “type erased / boxed” counterpart to <code>LoadedAsset</code>. …","The type of error which could be encountered by this …","The asset failed to load.","One or more dependencies have failed to load","One or more dependencies have failed to load in this asset…","A strong or weak handle to a specific <code>Asset</code>. If a <code>Handle</code> …","This asset id <em>should</em> never be valid. Assigning a value to …","A small / efficient runtime identifier that can be used to …","A small / efficient runtime identifier that can be used to …","","","Encountered an I/O error while loading an asset.","A context that provides access to assets in <code>AssetLoader</code>s, …","An error that occurs when attempting to call …","The load state of an asset.","The asset has been loaded and has been added to the <code>World</code>","Dependencies have all loaded","Dependencies in this asset’s dependency tree have all …","The successful result of an <code>AssetLoader::load</code> call. This …","A “loaded folder” containing handles for all assets …","Emitted whenever an <code>Asset</code> has been fully loaded (including …","The asset is in the process of loading.","Dependencies are still loading","Dependencies in this asset’s dependency tree are still …","","","An error that occurs when an <code>AssetLoader</code> is not registered …","","An error that occurs when an <code>AssetLoader</code> is not registered …","","","","","","","","Emitted whenever an <code>Asset</code> value is modified.","The asset has not started loading yet","The asset has not started loading yet","The asset has not started loading yet","","Assets will be “pre-processed”. This enables assets to …","This server loads processed assets.","An error produced when calling …","The recursive load state of an asset’s dependencies.","Type data for the <code>TypeRegistry</code> used to operate on …","Reflect type data struct relating a <code>Handle&lt;T&gt;</code> back to the <code>T</code>…","Emitted whenever an <code>Asset</code> is removed.","","The settings type used by this <code>AssetLoader</code>.","A “strong” reference to a live (or loading) <code>Asset</code>. If …","","The internal “strong” <code>Asset</code> handle storage for …","A system set that holds all “track asset” operations.","Loads assets from their <code>AssetSource</code>’s default <code>AssetReader</code>…","This server loads unprocessed assets.","An “untyped” / “generic-less” <code>Asset</code> identifier …","An untyped variant of <code>Handle</code>, which internally stores the …","Schedule where <code>Assets</code> resources are updated.","A stable-across-runs / const asset identifier. This will …","A stable-across-runs / const asset identifier. This will …","","A “weak” reference to an <code>Asset</code>. If a <code>Handle</code> is …","","Adds the given <code>asset</code> and allocates a new strong <code>Handle</code> for …","Equivalent of <code>Assets::add</code>","Queues a new asset to be tracked by the <code>AssetServer</code> and …","This will add the given <code>asset</code> as a “labeled <code>Asset</code>” …","Add a <code>LoadedAsset</code> that is a “labeled sub asset” of the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A system that applies accumulated asset change events to …","Gets the source asset path for this load context.","Returns the <code>TypeId</code> of the top-level <code>Asset</code> loaded by the …","Retrieves the <code>TypeId</code> of the stored <code>Asset</code> type.","The <code>TypeId</code> of the asset","Returns the type name of the top-level <code>Asset</code> loaded by the …","","Retrieves the <code>type_name</code> of the stored <code>Asset</code> type.","","The <code>TypeId</code> of the <code>Assets&lt;T&gt;</code> resource","Begins a new labeled asset load. Use the returned …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Boxes the reader and changes its type to …","Boxes the writer and changes its type to …","","Converts this <code>AsyncRead</code> into a <code>Stream</code> of bytes.","Creates an adapter which will chain this stream with …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Clones this into an “owned” value. If internally a …","","","","","","","","","","","","","","","","","","","","","","","Creates a <code>Handle::Weak</code> clone of this <code>Handle</code>, which will …","Creates an <code>UntypedHandle::Weak</code> clone of this <code>UntypedHandle</code>…","Closes the writer.","","","","","","","","","","","","","","","","","Returns <code>true</code> if the <code>id</code> exists in this collection. …","","","","","","","","","","","","","Returns the default meta value for the <code>AssetLoader</code> (erased …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Deserializes metadata from the input <code>meta</code> bytes into the …","","","","Returns a boxed object from a boxed trait object if the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A way to go from a <code>Handle&lt;T&gt;</code> in a <code>dyn Any</code> to a …","Returns a mutable reference to the object within the trait …","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …","Returns a reference to the object within the trait object …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>embedded</code> asset by embedding the bytes of the …","Returns the <code>Path</code> for a given <code>embedded</code> asset. This is used …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a list of extensions supported by this asset …","Returns a list of extensions supported by this asset …","","","","","","","","","","","","","","","","","","The default file path to use (relative to the project …","“Finishes” this context by populating the final <code>Asset</code> …","Flushes the stream to ensure that all buffered contents …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Creates a new <code>AssetPath</code> from a <code>Path</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Retrieves a reference to the internal <code>Asset</code> type, if it …","Retrieves a reference to the <code>Asset</code> with the given <code>id</code>, if …","Equivalent of <code>Assets::get</code>","Returns the registered <code>AssetLoader</code> associated with the …","Returns the registered <code>AssetLoader</code> associated with the …","","","","","","","Returns the full extension (including multiple ‘.’ …","Returns an active handle for the given path, if the asset …","Retrieves an <code>AssetHandleProvider</code> capable of reserving new …","Returns an active untyped handle for the given path, if …","","","Returns a handle to an asset of type <code>A</code> with the label <code>label</code>…","Returns the <code>ErasedLoadedAsset</code> for the given label, if it …","Retrieves the main <code>LoadState</code> of a given asset <code>id</code>.","Retrieves all loads states for the given asset id.","Retrieves a mutable reference to the <code>Asset</code> with the given …","Equivalent of <code>Assets::get_mut</code>","Retrieves an <code>Asset</code> stored for the given <code>id</code> if it exists. …","Returns the path for the given <code>id</code>, if it has one.","Retrieves the default <code>AssetLoader</code> for the given path, if …","Retrieves the <code>RecursiveDependencyLoadState</code> of a given …","","","","","Retrieves the <code>AssetReader</code> for the given <code>source</code>.","","","","","Equivalent of <code>Assets::get_mut</code>, but works with an …","A system that manages internal <code>AssetServer</code> events, such as …","The <code>TypeId</code> of the <code>Handle&lt;T&gt;</code> for this asset","","Returns <code>true</code> if an asset with the label <code>label</code> exists in …","","","","","","","","","","Returns the <code>AssetId</code> of this <code>Asset</code>.","Returns the <code>UntypedAssetId</code> for the referenced asset.","Returns an iterator over the <code>AssetId</code> of every <code>Asset</code> stored …","Equivalent of <code>Assets::ids</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Initializes the given <code>Asset</code> in the <code>App</code> by:","Initializes the given loader in the <code>App</code>’s <code>AssetServer</code>.","","Inserts the given <code>asset</code>, identified by the given <code>id</code>. If an …","","Equivalent of <code>Assets::insert</code>","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts this into an “owned” value. If internally a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an <code>AssetId</code> with <code>Self::INVALID_UUID</code>, which <em>should</em> …","","Returns true if the trait object wraps an object of type …","Returns <code>true</code> if this event is <code>AssetEvent::Added</code> and …","Returns <code>true</code> if there are no assets in this collection.","Equivalent of <code>Assets::is_empty</code>","Returns <code>true</code> if this event is …","Returns <code>true</code> if this event is <code>AssetEvent::Modified</code> and …","Returns <code>true</code> if this event is <code>AssetEvent::Removed</code> and …","Returns <code>true</code> if this is a strong handle.","Returns <code>true</code> if this is a weak handle.","Returns an iterator over the <code>AssetId</code> and <code>Asset</code> ref of …","","","","Iterate over all labels for “labeled assets” in the …","Returns an iterator over the <code>AssetId</code> and mutable <code>Asset</code> ref …","Gets the “sub-asset label”.","Gets the “sub-asset label”.","Creates a new <code>LoadContext</code> for the given <code>label</code>. The <code>load</code> …","Returns the number of assets currently stored in the …","Equivalent of <code>Assets::len</code>","Asynchronously loads <code>AssetLoader::Asset</code> (and any other …","Asynchronously loads the asset(s) from the bytes provided …","Retrieves a handle for the asset at the given path and …","Begins loading an <code>Asset</code> of type <code>A</code> stored at <code>path</code>. This …","Loads the asset at the given <code>path</code> directly. This is an …","Loads all assets from the specified folder recursively. …","Loads an “internal” asset by embedding the string …","Loads an “internal” binary asset by embedding the …","Retrieves the main <code>LoadState</code> of a given asset <code>id</code>.","Loads the <code>Asset</code> of type <code>A</code> at the given <code>path</code> with the given …","Begins loading an <code>Asset</code> of type <code>A</code> stored at <code>path</code>. The …","","The “meta transform” for the strong handle. This will …","Returns the <code>AssetServerMode</code> this server is currently in.","The <code>AssetMode</code> to use for this server.","","","","","","","","","","Create a new instance of <code>AssetServer</code>. If <code>watch_for_changes</code> …","Create a new loaded asset. This will use …","","","","","","","Returns an <code>AssetPath</code> for the parent folder of this path, …","Creates a new <code>AssetPath</code> from a string in the asset path …","","","","","","","Gets the source path for this load context.","Returns the path if this is (1) a strong handle and (2) …","Returns the path if this is (1) a strong handle and (2) …","Gets the path to the asset in the “virtual filesystem”.","","Preregisters a loader for the given extensions, that will …","Pre-register a loader that will later be added.","The default file path to use (relative to the project …","","Reads some bytes from the byte stream.","Gets the source asset path for this load context.","Reads the exact number of bytes required to fill <code>buf</code>.","Reads the entire contents and appends them to a <code>Vec</code>.","Reads the entire contents and appends them to a <code>String</code>.","Like <code>read()</code>, except it reads into a slice of buffers.","Retrieves the  <code>RecursiveDependencyLoadState</code> of a given …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Registers a new <code>Asset</code> type. <code>Asset</code> types must be registered …","Registers the given <code>loader</code> in the <code>App</code>’s <code>AssetServer</code>.","Registers the given <code>processor</code> in the <code>App</code>’s <code>AssetProcessor</code>…","Registers the asset type <code>T</code> using <code>[App::register]</code>, and adds …","Registers the given <code>AssetSourceBuilder</code> with the given <code>id</code>.","Registers a new <code>AssetLoader</code>. <code>AssetLoader</code>s must be …","Kicks off a reload of the asset stored at the given path. …","Removes (and returns) the <code>Asset</code> with the given <code>id</code>, if its …","Equivalent of <code>Assets::remove</code>","Removes a “sub-asset label” from this <code>AssetPath</code>, if …","Removes (and returns) the <code>Asset</code> with the given <code>id</code>, if its …","Reserves a new strong <code>UntypedHandle</code> (with a new …","","","","","","","","Sets the default asset processor for the given <code>extension</code>.","","","","","","","","","Gets the “asset source”, if one was defined. If none …","","Creates an adapter which will read at most <code>limit</code> bytes …","Cast (and take ownership) of the <code>Asset</code> value of the given …","Takes the “sub-asset label” from this <code>AssetPath</code>, if …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A system that synchronizes the state of assets in this …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>AssetPath</code> from a string in the asset path …","Returns the <code>TypeId</code> of the <code>AssetLoader</code>.","","","","","","","","","","","","","","","","Returns the <code>TypeId</code> of the referenced <code>Asset</code>.","","Returns the stored <code>TypeId</code> of the referenced <code>Asset</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the type name of the <code>AssetLoader</code>.","","","","","","","","Converts to a typed Handle. This will panic if the …","Converts this to a “typed” <code>AssetId</code>.","A way to go from a <code>UntypedHandle</code> to a <code>Handle&lt;T&gt;</code> in a …","Converts to a typed Handle. This will check the type when …","Converts this to a “typed” <code>AssetId</code>. When compiled in …","Converts to a typed Handle. This <em>will not check if the </em>…","Converts this to a “typed” <code>AssetId</code> without checking …","Converts this <code>Handle</code> to an “untyped” / “generic-less…","Converts this to an “untyped” / “generic-less” …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If set, will override the default “watch for changes” …","Create a new <code>Handle::Weak</code> with the given <code>u128</code> encoding of …","Returns this asset path with the given label. This will …","Returns this asset path with the given asset source. This …","Gets the path to the asset in the “virtual filesystem” …","Writes some bytes into the byte stream.","Writes an entire buffer into the byte stream.","Like <code>write()</code>, except that it writes a slice of buffers.","","","","","","","","","","","","","","","","","","","","","","","","","An asset at this path was added.","A folder at the given path was added.","Asset metadata at this path was added.","Performs read operations on an asset storage. <code>AssetReader</code> …","Errors that occur while loading assets.","A collection of unprocessed and processed <code>AssetReader</code>, …","Metadata about an “asset source”, such as how to …","A <code>Resource</code> that hold (repeatable) functions capable of …","An “asset source change event” that occurs whenever …","A reference to an “asset source”, which maps to an …","A collection of <code>AssetSources</code>.","A handle to an “asset watcher” process, that will …","Preforms write operations on an asset storage. <code>AssetWriter</code> …","Errors that occur while loading assets.","Extension trait for <code>AsyncRead</code>.","Extension trait for <code>AsyncWrite</code>.","The default asset source.","Encountered an I/O error while loading an asset.","Encountered an I/O error while loading an asset.","An error returned when an <code>AssetSource</code> does not exist for a …","An error returned when an <code>AssetWriter</code> does not exist for a …","An error returned when a processed <code>AssetReader</code> does not …","An error returned when a processed <code>AssetWriter</code> does not …","An asset at this path was modified.","Asset metadata at this path was modified.","A non-default named asset source.","Path not found.","","","An asset at this path was removed.","A folder at the given path was removed.","Asset metadata at this path was removed.","Something of unknown type was removed. It is the job of …","An asset at this path was renamed.","A folder at the given path was renamed.","Asset metadata at this path was renamed.","An <code>AsyncRead</code> implementation capable of reading a <code>Vec&lt;u8&gt;</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>None</code> if this is <code>AssetSourceId::Default</code> and <code>Some</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","Boxes the reader and changes its type to …","Boxes the writer and changes its type to …","Starts building a new <code>AssetSource</code>.","Builds a new <code>AssetSource</code> with the given <code>id</code>. If <code>watch</code> is …","Builds a new <code>AssetSources</code> collection. If <code>watch</code> is true, …","Converts this <code>AsyncRead</code> into a <code>Stream</code> of bytes.","Creates an adapter which will chain this stream with …","","","","","Clones into an owned [<code>AssetSourceId&lt;&#39;static&gt;</code>]. This is …","","","Closes the writer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return’s this source’s unprocessed event receiver, if …","","Flushes the stream to ensure that all buffered contents …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","This will cause processed <code>AssetReader</code> futures (such as …","This will cause processed <code>AssetReader</code> futures (such as …","","Gets the <code>AssetSource</code> with the given <code>id</code>, if it exists.","Returns a builder function for this platform’s default …","Returns a builder function for this platform’s default …","Returns a builder function for this platform’s default …","Gets a mutable builder with the given <code>id</code>, if it exists.","","Returns this source’s id.","Iterates over the <code>AssetSourceId</code> of every <code>AssetSource</code> in …","","","","","","","","","","","","","","","","","","","","Initializes the default <code>AssetSourceBuilder</code> if it has not …","Inserts a new builder with the given <code>id</code>","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If this is not already an owned / static id, create one. …","","","","","","","","","","","","","","Returns an iterator of directory entry names at the …","Iterates all asset sources in the collection (including …","Mutably iterates all asset sources in the collection …","Iterates all processed asset sources in the collection …","Mutably iterates all processed asset sources in the …","","Create a new <code>VecReader</code> for <code>bytes</code>.","Creates a new <code>AssetSourceId</code>","","","","Returns a builder containing the “platform default source…","","Return’s this source’s processed event receiver, if …","Return’s this source’s processed <code>AssetReader</code>, if it …","","","Return’s this source’s processed <code>AssetWriter</code>, if it …","","","Returns a future to load the full file data at the …","Reads some bytes from the byte stream.","Returns an iterator of directory entry names at the …","Reads the exact number of bytes required to fill <code>buf</code>.","Returns a future to load the full file data at the …","Reads asset metadata bytes at the given <code>path</code> into a <code>Vec&lt;u8&gt;</code>…","Reads the entire contents and appends them to a <code>Vec</code>.","Reads the entire contents and appends them to a <code>String</code>.","Like <code>read()</code>, except it reads into a slice of buffers.","Return’s this source’s unprocessed <code>AssetReader</code>.","","Removes the asset stored at the given path.","Removes all assets (and directories) in this directory, …","Removes the directory at the given path, including all …","Removes the directory at the given path, but only if it is …","Removes the asset meta stored at the given path. This …","Renames the asset at <code>old_path</code> to <code>new_path</code>","Renames the asset meta for the asset at <code>old_path</code> to …","Returns true if the assets in this source should be …","","","Creates an adapter which will read at most <code>limit</code> bytes …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Will use the given <code>reader</code> function to construct processed …","Will use the given <code>watcher</code> function to construct processed …","Will use the given <code>writer</code> function to construct processed …","Will use the given <code>reader</code> function to construct …","Will use the given <code>watcher</code> function to construct …","Will use the given <code>writer</code> function to construct …","Writes the full asset bytes at the provided path.","Writes some bytes into the byte stream.","Writes an entire buffer into the byte stream.","Writes the asset <code>bytes</code> to the given <code>path</code>.","Writes the full asset meta bytes at the provided path. …","Writes the asset meta <code>bytes</code> to the given <code>path</code>.","Like <code>write()</code>, except that it writes a slice of buffers.","Return’s this source’s unprocessed <code>AssetWriter</code>, if it …","","This field is only relevant if <code>path</code> is determined to be an …","","","","","","","The path of the removed asset or folder (undetermined). …","","A <code>Resource</code> that manages “rust source files” in a …","A watcher for assets stored in the <code>embedded</code> asset source. …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Inserts a new asset. <code>full_path</code> is the full path (as <code>file</code> …","Inserts new asset metadata. <code>full_path</code> is the full path (as …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Registers a <code>embedded</code> <code>AssetSource</code> that uses this …","","","","","","","","","","","","","I/O implementation for the local filesystem.","","An <code>AssetWatcher</code> that watches the filesystem for changes to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the base path of the assets directory, which is …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Creates a new <code>FileAssetIo</code> at a path relative to the …","Creates a new <code>FileAssetIo</code> at a path relative to the …","","","","","","","","","","","Returns the root directory where assets are loaded from.","","","","","","","","","","","","","","","","","","","","","Opens path “gates” for a <code>GatedReader</code>.","A “gated” reader that will prevent asset reads from …","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Creates a new <code>GatedReader</code>, which wraps the given <code>reader</code>. …","Opens the <code>path</code> “gate”, allowing a <em>single</em> <code>AssetReader</code> …","","","","","","","","","","","","","","","","","Asset data stored in a <code>Dir</code>.","A clone-able (internally Arc-ed) / thread-safe “in memory…","","In-memory <code>AssetReader</code> implementation. This is primarily …","","Stores either an allocated vec of bytes or a static array …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>Dir</code> for the given <code>path</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An <code>AssetReader</code> that will prevent asset (and asset …","An <code>AsyncRead</code> impl that will hold its asset’s transaction …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Creates a new <code>ProcessorGatedReader</code>.","","","","","","","","","","","","","","","","","Configures how an asset source file should be handled by …","This is a minimal counterpart to <code>AssetAction</code> that exists …","","Asset metadata that informs how an <code>Asset</code> should be handled …","A dynamic type-erased counterpart to <code>AssetMeta</code> that …","This is a minimal counterpart to <code>AssetMeta</code> that exists to …","Do nothing with the asset","","Load the asset with the given loader and settings See …","","","","Process the asset with the given processor and settings. …","","Information about a dependency used to process an asset. …","Info produced by the <code>AssetProcessor</code> for a given processed …","This is a minimal counterpart to <code>ProcessedInfo</code> that exists …","Settings used by the asset system, such as by <code>AssetLoader</code>, …","","","","","","","","","","","","","","","","","","","","","","How to handle this asset in the asset system. See …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Deserializes the given serialized byte representation of …","","","","","","","Returns a boxed object from a boxed trait object if the …","Returns a boxed object from a boxed trait object if the …","","","","","","","","Returns a mutable reference to the object within the trait …","Returns a mutable reference to the object within the trait …","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …","Returns a reference to the object within the trait object …","Returns a reference to the object within the trait object …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","A hash of the asset bytes, the asset .meta data, and the …","","A hash of the asset bytes and the asset .meta data","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if the trait object wraps an object of type …","Returns true if the trait object wraps an object of type …","Returns a reference to the <code>AssetLoader</code> settings, if they …","","Returns a mutable reference to the <code>AssetLoader</code> settings, …","","The version of the meta format being used. This will …","","","","Information about the “process dependencies” used to …","Returns a reference to the <code>ProcessedInfo</code> if it exists.","","Information produced by the <code>AssetProcessor</code> <em>after</em> …","","Returns a mutable reference to the <code>ProcessedInfo</code> if it …","","Serializes the internal <code>AssetMeta</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Emitted whenever an <code>Asset</code> is added.","","","Adds asset-related builder methods to <code>App</code>.","Events that occur for a specific <code>Asset</code>, such as “value …","A unique runtime-only identifier for an <code>Asset</code>. This is …","","Provides “asset” loading and processing functionality. …","Loads and tracks the state of <code>Asset</code> values from a …","Stores <code>Asset</code> values identified by their <code>AssetId</code>.","A strong or weak handle to a specific <code>Asset</code>. If a <code>Handle</code> …","A small / efficient runtime identifier that can be used to …","Emitted whenever an <code>Asset</code> has been fully loaded (including …","Emitted whenever an <code>Asset</code> value is modified.","Assets will be “pre-processed”. This enables assets to …","Emitted whenever an <code>Asset</code> is removed.","A “strong” reference to a live (or loading) <code>Asset</code>. If …","","Loads assets from their <code>AssetSource</code>’s default <code>AssetReader</code>…","An untyped variant of <code>Handle</code>, which internally stores the …","A stable-across-runs / const asset identifier. This will …","A “weak” reference to an <code>Asset</code>. If a <code>Handle</code> is …","","The default file path to use (relative to the project …","Initializes the given <code>Asset</code> in the <code>App</code> by:","Initializes the given loader in the <code>App</code>’s <code>AssetServer</code>.","The <code>AssetMode</code> to use for this server.","Preregisters a loader for the given extensions, that will …","The default file path to use (relative to the project …","Registers the given <code>loader</code> in the <code>App</code>’s <code>AssetServer</code>.","Registers the given <code>processor</code> in the <code>App</code>’s <code>AssetProcessor</code>…","Registers the asset type <code>T</code> using <code>[App::register]</code>, and adds …","Registers the given <code>AssetSourceBuilder</code> with the given <code>id</code>.","Sets the default asset processor for the given <code>extension</code>.","If set, will override the default “watch for changes” …","","","","","","","","","A “background” asset processor that reads asset values …","","","","","","","","","A type-erased variant of <code>Process</code> that enables interacting …","","","","","The processor has finished processing all valid assets and …","An error that occurs when initializing the <code>AssetProcessor</code>.","The processor is still initializing, which involves …","","","A flexible <code>Process</code> implementation that loads the source …","Settings for the <code>LoadAndSave</code> <code>Process::Settings</code> …","An error that occurs when validating individual …","","","","","","","","The <code>AssetLoader</code> that will be used to load the final …","Asset “processor” logic that reads input asset bytes …","Provides scoped data access to the <code>AssetProcessor</code>. This …","An error that is encountered during <code>Process::process</code>.","The (successful) result of processing an asset","The final status of processing an asset","","","The processor is currently processing assets.","The “current” in memory view of the asset space. This …","The current state of the <code>AssetProcessor</code>.","A “write ahead” logger that helps ensure asset …","","An error that occurs when reading from the …","","The configuration / settings used to process the asset. …","","","","An error that occurs when validating the …","","An error that occurs when writing to the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The source bytes of the asset being processed.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the default type-erased <code>AssetMeta</code> for the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Deserialized <code>meta</code> as type-erased <code>AssetMeta</code>, operating …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","Returns the default processor for the given <code>extension</code>, if …","Returns the processor with the given <code>processor_type_name</code>, …","Retrieves the <code>AssetSource</code> for this processor","Retrieves the current <code>ProcessorState</code>","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Listens for changes to assets in the source <code>AssetSource</code> …","Load the source asset using the <code>L</code> <code>AssetLoader</code> and the …","The <code>AssetLoader::Settings</code> for <code>LoadAndSave</code>.","","Creates a new <code>AssetProcessor</code> instance.","","","Processes the asset stored on <code>context</code> in some way using …","Type-erased variant of <code>Process::process</code>.","","","Processes all assets. This will:","Register a new asset processor.","The <code>AssetSaver::Settings</code> for <code>LoadAndSave</code>.","","The “internal” <code>AssetServer</code> used by the <code>AssetProcessor</code>. …","Set the default processor for the given <code>extension</code>. Make …","","","","","","Starts the processor in a background thread.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a future that will not finish until processing has …","Returns a future that will not finish until the processor …","Returns a future that will not finish until the path has …","","","","","","","The top level <code>Asset</code> saved by this <code>AssetSaver</code>.","Saves an <code>Asset</code> of a given <code>AssetSaver::Asset</code> type. …","A type-erased dynamic variant of <code>AssetSaver</code> that allows …","The type of error which could be encountered by this saver.","The type of <code>AssetLoader</code> used to load this <code>Asset</code>","An <code>Asset</code> (and any labeled “sub assets”) intended to be …","The settings type used by this <code>AssetSaver</code>.","","","","","","","","","","","Returns the argument unchanged.","Creates a new <code>SavedAsset</code> from <code>asset</code> if its internal value …","","Retrieves the value of this asset.","Returns the type-erased labeled asset, if it exists and …","Returns the labeled asset, if it exists and matches this …","","Calls <code>U::from(self)</code>.","","","","","Iterate over all labels for “labeled assets” in the …","Saves the given runtime <code>Asset</code> by writing it to a byte …","Saves the given runtime <code>ErasedLoadedAsset</code> by writing it to …","","","","","The type name of the <code>AssetSaver</code>.","","","A volume level that ignores the global volume.","A trait that allows adding a custom audio source to the …","Bundle for playing a standard bevy audio asset","Loads files as <code>AudioSource</code> <code>Assets</code>","Adds support for audio playback to a Bevy Application","Used to control audio during playback.","Common interactions with an audio sink.","A source of audio data","Bundle for playing a sound.","A trait for working generically across different <strong>Sample</strong> …","Will play the associated audio source once and despawn the …","A type implementing this trait can be converted to a …","The type of the iterator of the audio samples, which …","The type of the audio samples. Usually a <code>u16</code>, <code>i16</code> or <code>f32</code>, …","Despawn the entity when the sound finishes playing.","The equilibrium value for the wave that this <code>Sample</code> type …","When multiplying two samples of a signal together, it is …","Use this <code>Resource</code> to control the global volume of all …","The multiplicative identity of the signal.","Will play the associated audio source in a loop.","Repeat the sound forever.","Will play the associated audio source once.","Play the sound once. Do nothing when it ends.","A source of sine wave sound","Bundle for playing a bevy note sound","The way Bevy manages the sound playback.","Initial settings to be used when audio starts playing. If …","Will play the associated audio source once and remove the …","A volume level relative to the global volume.","Remove the audio components from the entity, when the …","Represents a value of a single sample.","When summing two samples of a signal together, it is …","A source of samples.","Used to control spatial audio during playback.","Settings for the listener for spatial audio sources.","The scale factor applied to the positions of audio sources …","Defines the volume to play an audio source at.","A volume level equivalent to a non-negative float.","Adds (or “offsets”) the amplitude of the <code>Sample</code> by the …","Registers an audio source. The type must implement …","Multiplies the value of this sample by the given amount.","Amplifies the sound by the given value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Stores the source in a buffer in addition to returning it. …","","Raw data of the audio source.","Returns the number of channels. Channels are always …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts the samples of this source to another type.","","","Returns the number of samples before the current frame …","Build and return a <code>Self::Decoder</code> of the implementing type","","","","","","","","","","","","","Delays the sound by a certain duration.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Duration for which sound will be played","Returns true if this sink has no more sounds to play.","","","","","","","Fades in the sound.","","","","","","","","Frequency at which sound will be played","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Create a <code>Self</code> from any type that implements <code>ToSample&lt;Self&gt;</code>.","","","","","","","","","","","","","","","","","","","","","","","","Get the value of the volume level.","","","","","The global volume for all audio entities with a …","Applies a high-pass filter to the source.","Applies a high-pass filter to the source while allowing …","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Is this sink paused?","","","Left ear position relative to the <code>GlobalTransform</code>.","Linear interpolation between two samples.","","Processes the asset in an asynchronous closure.","Applies a low-pass filter to the source. <strong>Warning</strong>: Probably …","Applies a low-pass filter to the source while allowing the …","Mixes this source with another one.","The desired playback behavior.","","","Multiplies (or “scales”) the amplitude of the <code>Sample</code> …","Create a new volume level.","Creates a new <code>SpatialListener</code> component.","Create a new <code>GlobalVolume</code> with the given volume.","Create a new <code>SpatialScale</code> with the same value for all 3 …","Creates a new note","Create a new <code>SpatialScale</code> with the same value for <code>x</code> and <code>y</code>, …","Create a new volume level that ignores the global volume.","Create a new volume level relative to the global volume.","","","","","","","","","","Makes the sound pausable.","Pauses playback of this sink.","","","Helper to start in a paused state.","Create the sink in paused state. Useful for “deferred …","Calls the <code>access</code> closure on <code>Self</code> the first time the source …","Resumes playback of a paused sink.","","","","","","","","","","","","","","Repeats this source forever.","Adds a basic reverb effect.","Right ear position relative to the <code>GlobalTransform</code>.","Returns the rate at which the source should be played. In …","Calls <code>saturating_add</code> on the sample.","Set the two ears position.","Set the emitter position.","Set the listener position, with an ear on each side …","Changes the speed of the sound.","","","Changes the volume of the sound.","","","Initial settings that the audio starts playing with. If …","","","Immediately skips a certain duration of this source.","","Asset containing the audio data to play.","Enables spatial audio for this source.","The scale factor applied to the positions of audio sources …","Gets the speed of the sound.","","","Changes the play speed of the sound. Does not adjust the …","Speed to play at.","Stops the sink.","","","Makes the sound stoppable.","Mixes this sound fading out with another sound fading in …","Takes a certain duration of this source and then stops.","Converts <code>self</code> to the equivalent <code>Sample</code> in the associated …","","","","","","","","","","Convert <code>self</code> to any type that implements <code>FromSample&lt;Self&gt;</code>.","","","","","","","","","","","","","","","Converts <code>self</code> to the equivalent <code>Sample</code> in the associated …","Toggles the playback of this sink.","Returns the total duration of this source, if known.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Gets the volume of the sound.","","","Volume to play at.","The global volume of all audio.","","","","","","","","","","","","","","","Helper to enable or disable spatial audio.","Helper to set the speed from start of playback.","Helper to set the volume from start of playback.","Returns the value corresponding to the absence of sound.","Bundle for playing a standard bevy audio asset","Used to control audio during playback.","Common interactions with an audio sink.","A source of audio data","Bundle for playing a sound.","A type implementing this trait can be converted to a …","The type of the iterator of the audio samples, which …","The type of the audio samples. Usually a <code>u16</code>, <code>i16</code> or <code>f32</code>, …","Use this <code>Resource</code> to control the global volume of all …","A source of sine wave sound","Bundle for playing a bevy note sound","Initial settings to be used when audio starts playing. If …","Used to control spatial audio during playback.","Settings for the listener for spatial audio sources.","Raw data of the audio source.","Build and return a <code>Self::Decoder</code> of the implementing type","Duration for which sound will be played","Returns true if this sink has no more sounds to play.","Frequency at which sound will be played","Is this sink paused?","Left ear position relative to the <code>GlobalTransform</code>.","The desired playback behavior.","Pauses playback of this sink.","Create the sink in paused state. Useful for “deferred …","Resumes playback of a paused sink.","Right ear position relative to the <code>GlobalTransform</code>.","Changes the speed of the sound.","Changes the volume of the sound.","Initial settings that the audio starts playing with. If …","Asset containing the audio data to play.","Enables spatial audio for this source.","Gets the speed of the sound.","Speed to play at.","Stops the sink.","Toggles the playback of this sink.","Gets the volume of the sound.","Volume to play at.","The global volume of all audio.","Convenient query for giving a human friendly name to an …","Automatically generated <code>WorldQuery</code> item type for <code>DebugName</code>…","Maintains a count of frames rendered since the start of …","Adds frame counting functionality to Apps.","Component used to identify an entity. Stores a hash for …","A dummy type that is <code>!Send</code>, to force systems to run on the …","Marker trait for “plain old data”.","Derive the <code>Pod</code> trait for a struct","Helper for configuring and creating the default task …","Setup of default task pools: <code>AsyncComputeTaskPool</code>, …","Defines a simple way to determine how many threads to use …","Registration of default types to the <code>TypeRegistry</code> resource.","Trait for types that can be safely created with <code>zeroed</code>.","Derive the <code>Zeroable</code> trait for a struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Gets the name of the entity as a <code>&amp;str</code>.","Used to determine number of async compute threads to …","","","","","","","","","","","","","","","","","","","","","","","","Re-interprets <code>&amp;T</code> as <code>&amp;[u8]</code>.","Cast <code>&amp;[A]</code> into <code>&amp;[B]</code>.","","","","","","","","","","","","","","","","","","Used to determine number of compute threads to allocate","","Inserts the default thread pools into the given resource …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The unique identifier of the entity as a fallback.","The unique identifier of the entity as a fallback.","","","","","","","SAFETY: we call <code>fetch</code> for each member that implements <code>Fetch</code>…","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Used to determine number of IO threads to allocate","","","Under no circumstance use more than this many threads for …","If the number of physical cores is greater than …","Force using at least this many threads","If the number of physical cores is less than …","","Updates the name of the entity in place.","A <code>Name</code> that the entity might have that is displayed if …","A <code>Name</code> that the entity might have that is displayed if …","","Creates a new <code>Name</code> from any string-like type.","","","","","","","","Target using this percentage of total cores, clamped by …","The Bevy Core Prelude.","","","","","","","","","","","","Sets the entity’s name.","SAFETY: we call <code>set_archetype</code> for each member that …","SAFETY: we call <code>set_table</code> for each member that implements …","","","Options for the <code>TaskPool</code> created at application start.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A system used to increment <code>FrameCount</code> with wrapping …","","","","","","","","","","","Create a configuration that forces using the given number …","Calls <code>zeroed</code>.","Convenient query for giving a human friendly name to an …","Adds frame counting functionality to Apps.","Component used to identify an entity. Stores a hash for …","Helper for configuring and creating the default task …","Setup of default task pools: <code>AsyncComputeTaskPool</code>, …","Registration of default types to the <code>TypeRegistry</code> resource.","Used to determine number of async compute threads to …","Used to determine number of compute threads to allocate","The unique identifier of the entity as a fallback.","Used to determine number of IO threads to allocate","If the number of physical cores is greater than …","If the number of physical cores is less than …","A <code>Name</code> that the entity might have that is displayed if …","Options for the <code>TaskPool</code> created at application start.","","Adds a skybox to a 3D camera, based on a cubemap texture.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Experimental features that are not yet finished. Please …","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Run a prepass before the main pass to generate depth, …","","","","","","","","","","","","","","","","","","","Adds support for specialized “blit pipelines”, which …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Applies a threshold filter to the input image to extract …","Applies a bloom effect to an HDR-enabled 2d or 3d camera.","","The default bloom preset.","A preset that’s similar to how older games did bloom.","A preset that applies a very strong bloom, and blurs the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Controls whether bloom textures are blended between or …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","Tightens how much the light scatters (default: 1.0).","","","","","","Controls the baseline of how much the image is scattered …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Low frequency contribution boost. Controls how much more …","Low frequency contribution boost curve. Controls the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Baseline of the quadratic threshold curve (default: 0.0).","Controls how much to blend between the thresholded and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A <code>Resource</code> that stores the color that is used to clear the …","For a camera, specifies the color used to clear the …","The given clear color is used, overriding the <code>ClearColor</code> …","The clear color is taken from the world’s <code>ClearColor</code> …","No clear color is used: the camera will simply draw on top …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Adds Support for Contrast Adaptive Sharpening (CAS).","Applies a contrast adaptive sharpening (CAS) filter to the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether to try and avoid sharpening areas that are already …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Enable or disable sharpening.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Adjusts sharpening strength. Higher values increase the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Create an orthographic projection camera with a custom <code>Z</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Configuration for the “main 3d render graph”.","","The depth clear operation to perform for the main 3d pass.","","Clear with a specified value. Note that 0.0 is the far …","","Load from memory.","A <code>bevy_render::render_graph::Node</code> that runs the <code>Opaque3d</code> …","A <code>bevy_render::render_graph::Node</code> that runs the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The clear color operation to perform for the main 3d pass.","","","","","","","","","","","","","","","","","","","","","","","","","","The depth clear operation to perform for the main 3d pass.","The texture usages for the depth texture created for the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codelpha mask phase of the 3D Deferred pass.","","","","Opaque phase of the 3D Deferred pass.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Render node used by the prepass.","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Bundle to apply temporal anti-aliasing.","Plugin for temporal anti-aliasing. Disables multisample …","Component to apply temporal anti-aliasing to a 3D …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set to true to delete the saved temporal history (past …","","","","","","","","","","","","","","","","","","","","","","","","","","","uses the <code>FULLSCREEN_SHADER_HANDLE</code> to output a","","","","","","","Adds support for Fast Approximate Anti-Aliasing (FXAA)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Use lower sensitivity for a sharper, faster, result. Use …","Trims the algorithm from processing darks.","Enable render passes for FXAA.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This enables “msaa writeback” support for the <code>core_2d</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Configuration for the “main 3d render graph”.","","A <code>Resource</code> that stores the color that is used to clear the …","","","","","","","","The clear color operation to perform for the main 3d pass.","","","The depth clear operation to perform for the main 3d pass.","The texture usages for the depth texture created for the …","","","","","","","","","","","","","","Alpha mask phase of the 3D prepass.","If added to a <code>crate::prelude::Camera3d</code> then deferred …","If added to a <code>crate::prelude::Camera3d</code> then depth values …","","If added to a <code>crate::prelude::Camera3d</code> then screen space …","","If added to a <code>crate::prelude::Camera3d</code> then vertex world …","Opaque phase of the 3D prepass.","Textures that are written to by the prepass.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The deferred gbuffer generated by the deferred pass. …","A texture that specifies the deferred lighting pass id for …","The depth texture generated by the prepass. Exists only if …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The motion vectors texture generated by the prepass. …","","","","","","The normals texture generated by the prepass. Exists only …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The size of the textures.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Render node used by the prepass.","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Same base implementation that Godot 4.0 uses for Tonemap …","By Troy Sobotka https://github.com/sobotka/AgX Very …","Default Filmic Display Transform from blender. Somewhat …","Enables a debanding shader that applies dithering to …","","","Bypass tonemapping.","Suffers from lots hue shifting, brights don’t desaturate …","Suffers from hue shifting. Brights don’t desaturate much …","By Tomasz Stachowiak Has little hue shifting in the darks …","Optionally enables a tonemapping shader that attempts to …","3D LUT (look up table) textures used for tonemapping","","","","","Current Bevy default. By Tomasz Stachowiak …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A timeline of <code>DiagnosticMeasurement</code>s of a specific type. …","Unique identifier for a <code>Diagnostic</code>.","A single measurement of a <code>Diagnostic</code>.","Record new <code>DiagnosticMeasurement</code>’s.","Adds core diagnostics resources to an App.","A collection of <code>Diagnostic</code>s.","","Adds “entity count” diagnostic to an App","","","","Adds “frame time” diagnostic to an App, specifically …","An App Plugin that logs diagnostics to the console","The width which diagnostic names will be printed as Plugin …","","Extend <code>App</code> with new <code>register_diagnostic</code> function.","Adds a System Information Diagnostic, specifically …","Add a new <code>Diagnostic</code>.","Add a new value as a <code>DiagnosticMeasurement</code>.","Add a measurement to an enabled <code>Diagnostic</code>. The …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the simple moving average of this diagnostic’s …","","","","","","","","","","","","","","","","","","","","","","","","","","Clear the history of this diagnostic.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the duration between the oldest and most recent …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","Return the maximum number of elements for this diagnostic.","Get the latest <code>DiagnosticMeasurement</code> from an enabled …","","","","Return the number of elements for this diagnostic.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return an iterator over all <code>Diagnostic</code>s.","Return an iterator over all <code>Diagnostic</code>s, by mutable …","Get the latest measurement from this diagnostic.","","","Create a new diagnostic with the given ID, name and …","","","","","","","","","","","Return the exponential moving average of this diagnostic.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the latest value from this diagnostic.","","","","","","","","","","","","","","The smoothing factor used for the exponential smoothing …","Add a suffix to use when logging the value, can be used to …","","Errors that can occur when loading a dynamic plugin","","","","","","","","","","","","Dynamically links a plugin at the given path. The plugin …","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","Safety","","","","","","","","Helper macro to generate tuple pyramids. Useful to …","Types for defining <code>Archetype</code>s, collections of entities …","Types for handling <code>Bundle</code>s.","Types that detect when their internal data mutate.","Types for declaring and storing <code>Component</code>s.","Entity handling types.","Event handling types.","Most commonly used re-exported types.","Contains APIs for retrieving component data from the world.","Types that enable reflection support.","Alerting events when a component is removed from an entity.","Contains APIs for ordering systems and executing them on a …","Storage layouts for ECS data.","Tools for controlling behavior in an ECS application.","Defines the <code>World</code> and APIs for accessing it directly.","Metadata for a single archetype within a <code>World</code>.","An opaque unique joint ID for a <code>Component</code> in an <code>Archetype</code> …","Metadata about an <code>Entity</code> in a <code>Archetype</code>.","The next <code>ArchetypeId</code> in an <code>Archetypes</code> collection.","An opaque unique ID for a single <code>Archetype</code> within a <code>World</code>.","An opaque location within a <code>Archetype</code>.","The backing store of all <code>Archetype</code>s within a <code>World</code>.","The ID for the <code>Archetype</code> without any components.","Archetypes and bundles form a graph. Adding or removing a …","Index indicating an invalid archetype row. This is meant …","Safety:","Returns the number of components that are stored in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Gets an iterator of all of the components in the archetype.","Checks if the archetype contains a specific component. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fetches a immutable reference to the archetype’s <code>Edges</code>, …","Fetches an immutable reference to the archetype without …","Fetches the entities contained in this archetype.","The ID of the entity.","Fetches the row in the <code>Table</code> where the components for the …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Returns the “generation”, a handle to the current …","Fetches an immutable reference to an <code>Archetype</code> using its …","Checks the cache for the target archetype when adding a …","Fetches the corresponding <code>ArchetypeComponentId</code> for a …","","Checks the cache for the target archetype when removing a …","","Gets the type of storage where a component in the …","Checks the cache for the target archetype when removing a …","","","Fetches the ID for the archetype.","","","Gets the index of the row.","The plain value of this <code>ArchetypeId</code>.","","","","","","","","","","","The first archetype.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Checks if the archetype has any entities.","Returns a read-only iterator over all archetypes.","Gets the total number of entities that belong to the …","Fetches the total number of <code>Archetype</code>s within the world.","Creates a <code>ArchetypeRow</code>.","Create an <code>ArchetypeId</code> from a plain value.","","","Gets an iterator of all of the components stored in …","","Gets an iterator of all of the components stored in <code>Table</code>s.","Fetches the archetype’s <code>Table</code> ID.","The row in the <code>Table</code> where the entity’s components are …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>Bundle</code> trait enables insertion and removal of <code>Component</code>…","","For a specific <code>World</code>, this stores a unique value …","Stores metadata associated with a specific type of <code>Bundle</code> …","Metadata for bundles. Stores a <code>BundleInfo</code> for each type of …","The parts from <code>Bundle</code> that don’t require statically …","","","","","","","","","","","","","","","","","","","","","Returns the ID of each component stored in this bundle.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Gets the metadata associated with a specific type of …","Gets the value identifying a specific type of bundle. …","","","","Returns a value identifying the associated <code>Bundle</code> type.","Returns the index of the associated <code>Bundle</code> type.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The (arbitrarily chosen) minimum number of world tick …","Types that can read change detection information. This …","Types that implement reliable change detection.","The type contained within this smart pointer","The maximum change tick difference that won’t overflow …","Unique mutable borrow of an entity’s component","Unique mutable borrow of resources or an entity’s …","Unique borrow of a non-<code>Send</code> resource.","Shared borrow of an entity’s component with access to …","Shared borrow of a <code>Resource</code>.","Unique mutable borrow of a <code>Resource</code>.","","","","Returns a pointer to the value without taking ownership of …","Returns an immutable pointer to the value without taking …","","","Manually bypasses change detection, allowing you to mutate …","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","Returns the pointer to the value, marking it as changed.","","Returns <code>true</code> if this value was added after the system last …","","Returns <code>true</code> if this value was added or mutably …","","Returns the change tick recording the time this data was …","","Turn this <code>MutUntyped</code> into a <code>Mut</code> by mapping the inner <code>PtrMut</code>…","Returns a <code>MutUntyped</code> with a smaller lifetime. This is …","Overwrites this smart pointer with the given value, if and …","Flags this value as having been changed.","","Overwrites this smart pointer with the given value, if and …","Manually sets the change tick recording the time when this …","","","","","","","","Transforms this <code>MutUntyped</code> into a <code>Mut&lt;T&gt;</code> with the same …","A data type that can be used to store data for an entity.","","A value describing a component or resource, which may or …","A value which uniquely identifies the type of a <code>Component</code> …","A <code>SystemParam</code> that provides access to the <code>ComponentId</code> for …","Stores metadata for a type of component or resource stored …","Types used to specify the storage strategy for a component.","Records when a component was added and when it was last …","Stores metadata associated with each kind of <code>Component</code> in …","The maximum relative age for a change tick. The value of …","A value indicating the storage strategy specified by this …","Provides fast addition and removal of components, but …","Marker type for components stored in a <code>ComponentSparseSet</code>.","A marker type indicating the storage type used for this …","The storage used for a specific component type.","Provides fast and cache-friendly iteration, but slower …","Marker type for components stored in a <code>Table</code>.","A value that tracks when a system ran relative to other …","Interior-mutable access to the <code>Tick</code>s for a single …","The tick indicating when the value was added to the world.","Returns the tick recording the time this component was …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The tick indicating the last time the value was modified.","","","","","","","","","","","","","","","","","","","","","","","Returns the <code>ComponentId</code> of the given <code>Component</code> type <code>T</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the function which should be called to clean up values …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Gets the value of this change tick.","Gets the <code>ComponentId</code> for the type <code>T</code>.","Type-erased equivalent of <code>Components::component_id()</code>.","Gets the metadata associated with the given component.","Gets the metadata associated with the given component.","Returns the name associated with the given component.","","","Type-erased equivalent of <code>Components::resource_id()</code>.","","","Returns a value uniquely identifying the current component.","Returns the index of the current component.","","","","","","","","","","","","Initializes a component of type <code>T</code> with this instance. If a …","Initializes a component described by <code>descriptor</code>.","Initializes a non-send resource of type <code>T</code> with this …","Initializes a <code>Resource</code> of type <code>T</code> with this instance. If a …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if the component was added after the system …","Returns <code>true</code> if the component was added or mutably …","Returns <code>true</code> if there are no components registered with …","Returns <code>true</code> if this <code>Tick</code> occurred since the system’s …","Returns <code>true</code> if the underlying component type can be …","Gets an iterator over all components registered with this …","Returns the tick recording the time this component was …","Returns the layout used to store values of this component …","Returns the number of components registered with this …","Returns the name of the current component.","Returns the name of the current component.","Creates a new <code>ComponentId</code>.","Create a new <code>ComponentDescriptor</code> for the type <code>T</code>.","Creates a new <code>Tick</code> wrapping the given value.","","Create a new <code>ComponentDescriptor</code> for a resource.","Create a new <code>ComponentDescriptor</code>.","","","","Returns the <code>ComponentId</code> of the given <code>Resource</code> type <code>T</code>.","Sets the value of this change tick.","Manually sets the change tick.","","Returns a value indicating the storage strategy for the …","Returns a value indicating the storage strategy for the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the <code>TypeId</code> of the underlying component type. …","","","","Returns the <code>TypeId</code> of the underlying component type. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","A <code>World</code>’s internal metadata store on all of its entities.","Lightweight identifier of an entity.","A location of an entity in an archetype.","A wrapper for <code>HashMap&lt;Entity, Entity&gt;</code>, augmenting it with …","Operation to map all contained <code>Entity</code> fields in a type to …","An entity ID with a placeholder value. This may or may not …","An <code>Iterator</code> returning a sequence of <code>Entity</code> values from …","Allocate an entity ID directly.","Allocate a specific entity ID, overwriting its generation.","","The ID of the <code>Archetype</code> the <code>Entity</code> belongs to.","The index of the <code>Entity</code> within its <code>Archetype</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Clears all <code>Entity</code> from the World.","","","","","","","","","","Returns true if the <code>Entities</code> contains <code>entity</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Allocates space for entities previously reserved with …","Safety","Flushes all reserved entities to an “invalid” state. …","","","","Destroy an entity, allowing it to be reused.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Reconstruct an <code>Entity</code> previously destructured with …","Creates a new entity ID with the specified <code>index</code> and a …","","","","","","","Returns the generation of this Entity’s index. The …","Returns the location of an <code>Entity</code>. Note: for pending …","Gets a reference to the underlying <code>HashMap&lt;Entity, Entity&gt;</code>.","Gets a mutable reference to the underlying …","Returns the corresponding mapped entity or reserves a new …","","","","","","Return a transiently unique identifier.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Checks if any entity is currently active.","The count of currently allocated entities.","Updates all <code>Entity</code> references stored inside using …","","","","","","","","","","","","","","","Ensure at least <code>n</code> allocations can succeed without …","Reserve entity IDs concurrently.","Reserve one entity ID concurrently.","Get the <code>Entity</code> with a given id, if it exists in this …","","","","","","","","","The ID of the <code>Table</code> the <code>Entity</code> belongs to.","The index of the <code>Entity</code> within its <code>Table</code>.","Convert to a form convenient for passing outside of rust.","","","","","","","","The count of all entities in the <code>World</code> that have ever been …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates an <code>EntityMapper</code> from a provided <code>World</code> and …","A type that can be stored in an <code>Events&lt;E&gt;</code> resource You can …","","An <code>EventId</code> uniquely identifies an event stored in a …","An iterator that yields any unread events from an …","An iterator that yields any unread events (and their IDs) …","Reads events of type <code>T</code> in order and tracks which events …","Sends events of type <code>T</code>.","An event collection that represents the events that …","An iterator that yields any unread events from an …","An iterator that yields any unread events (and their IDs) …","Stores the state for an <code>EventReader</code>. Access to the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Removes all events.","Consumes all available events.","See <code>EventReader::clear()</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a draining iterator that removes all events.","","","","","","","","","","","","","","","A run condition that checks if the event’s …","A system that calls <code>Events::update</code> once per frame.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Get a specific event by id if it still exists in the …","","","Gets a new <code>ManualEventReader</code>. This will include all events …","Gets a new <code>ManualEventReader</code>. This will ignore all events …","","Uniquely identifies the event associated with this ID.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if there are no events currently stored in …","Returns <code>true</code> if there are no events available to read.","See <code>EventReader::is_empty()</code>","Iterates over the events this <code>EventReader</code> has not seen …","See <code>EventReader::iter</code>","Iterates over events that happened since the last “update…","Like <code>iter</code>, except also returning the <code>EventId</code> of the events.","See <code>EventReader::iter_with_id</code>","","","Returns the number of events currently stored in the event …","Determines the number of events available to be read from …","See <code>EventReader::len</code>","","","Amount of events we missed.","Creates a new iterator that yields any <code>events</code> that have …","","","","","","","","","Returns the index of the oldest event stored in the event …","Oldest id still in the events buffer.","","Iterates over the events this <code>EventReader</code> has not seen …","See <code>EventReader::read</code>","Like <code>read</code>, except also returning the <code>EventId</code> of the events.","See <code>EventReader::read_with_id</code>","“Sends” an <code>event</code> by writing it to the current event …","Sends an <code>event</code>, which can later be read by <code>EventReader</code>s.","Sends a list of <code>events</code> all at once, which can later be …","Sends the default value of the event. Useful when the …","Sends the default value of the event. Useful when the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Swaps the event buffers and clears the oldest event …","Swaps the event buffers and drains the oldest event …","","","","","","","","Iterate over only the events.","A filter on a component that only retains results added …","The <code>AnyOf</code> query parameter fetches entities with any of the …","A <code>Resource</code> storing <code>TypeRegistry</code> for type registrations …","The <code>Bundle</code> trait enables insertion and removal of <code>Component</code>…","","A filter on a component that only retains results added or …","A <code>Command</code> queue to perform impactful changes to the <code>World</code>.","A data type that can be used to store data for an entity.","","A system that determines if one or more scheduled systems …","A <code>SystemParam</code> that stores a buffer which gets applied to …","Types that can read change detection information. This …","Types that implement reliable change detection.","Lightweight identifier of an entity.","Provides mutable access to a single entity and all of its …","A read-only reference to a particular <code>Entity</code> and all of …","A mutable reference to a particular <code>Entity</code>, and the entire …","A type that can be stored in an <code>Events&lt;E&gt;</code> resource You can …","","Reads events of type <code>T</code> in order and tracks which events …","Sends events of type <code>T</code>.","An event collection that represents the events that …","Creates an instance of the type this trait is implemented …","Returns a bool that describes if an entity has the …","Wrapper type to mark a <code>SystemParam</code> as an input.","The input type to this system. See <code>System::In</code>.","The system’s input. See <code>In</code> for <code>FunctionSystem</code>s.","The type contained within this smart pointer","Conversion trait to turn something into a <code>System</code>.","Types that can convert into a <code>SystemConfigs</code>.","Types that can be converted into a <code>SystemSet</code>.","Types that can convert into a <code>SystemSetConfigs</code>.","A system local <code>SystemParam</code>.","Unique mutable borrow of an entity’s component","The next state of <code>State&lt;S&gt;</code>.","Shared borrow of a non-<code>Send</code> resource.","Unique borrow of a non-<code>Send</code> resource.","The label of a <code>Schedule</code> that runs whenever <code>State&lt;S&gt;</code> enters …","The label of a <code>Schedule</code> that runs whenever <code>State&lt;S&gt;</code> exits …","The label of a <code>Schedule</code> that <strong>only</strong> runs whenever <code>State&lt;S&gt;</code> …","A filter that tests if any of the given filters apply.","The return type of this system. See <code>System::Out</code>.","The system’s output.","An alternative to <code>Commands</code> that can be used in parallel …","The <code>SystemParam</code>/s used by this system to access the <code>World</code>.","A collection of potentially conflicting <code>SystemParam</code>s …","System parameter that provides selective access to the …","Provides scoped access to a <code>World</code> state according to a …","<code>System</code> types that do not modify the <code>World</code> when run. This …","Shared borrow of an entity’s component with access to …","A struct used to operate on reflected <code>Component</code> of a type.","A struct used to operate on reflected <code>Resource</code> of a type.","A <code>SystemParam</code> that grants access to the entities that had …","Shared borrow of a <code>Resource</code>.","Unique mutable borrow of a <code>Resource</code>.","A type that can be inserted into a <code>World</code> as a singleton.","","A collection of systems, and the metadata and executor …","Resource that stores <code>Schedule</code>s mapped to <code>ScheduleLabel</code>s.","The type of <code>SystemSet</code> this instance converts into.","A finite-state machine whose transitions have associated …","Types that can define world-wide states in a finite-state …","","A marker type indicating the storage type used for this …","An ECS system that can be added to a <code>Schedule</code>","The type of <code>System</code> that this instance converts into.","A trait implemented for all functions that can be used as …","Types that identify logical groups of systems.","Derive macro generating an impl of the trait <code>SystemSet</code>.","Filter that selects entities with a component <code>T</code>.","Filter that selects entities without a component <code>T</code>.","Stores and exposes operations on entities, components, …","Run after all systems in <code>set</code>.","Run after all systems in <code>set</code>.","Suppress warnings and errors that would result from these …","Suppress warnings and errors that would result from …","Suppress warnings and errors that would result from these …","Suppress warnings and errors that would result from …","Returns a new run condition that only returns <code>true</code> if both …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Instructs the executor to call <code>System::apply_deferred</code> on …","Applies any <code>Deferred</code> system parameters (or other system …","If a new state is queued in <code>NextState&lt;S&gt;</code>, this system:","Returns the system’s archetype component <code>Access</code>.","Run before all systems in <code>set</code>.","Run before all systems in <code>set</code>.","Manually bypasses change detection, allowing you to mutate …","Treat this collection as a sequence of systems.","Treat this collection as a sequence of system sets.","Checks any <code>Tick</code>s stored on this system and wraps their …","Returns the system’s component <code>Access</code>.","System adapter that utilizes the …","Returns the system’s default system sets.","Add a run condition to each contained system.","Creates a boxed clone of the label corresponding to this …","System adapter that utilizes the …","The state being exited.","Creates <code>Self</code> using data from the given <code>World</code>.","Gets the tick indicating the last time this system ran.","System adapter that ignores the output of the previous …","List of <code>ComponentId</code>s to ignore when reporting system order …","Add these systems to the provided <code>set</code>.","Add these system sets to the provided <code>set</code>.","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","System adapter that utilizes the <code>bevy_utils::tracing::info!</code>…","Initialize the system.","Turns this value into its corresponding <code>System</code>.","Converts this instance to its associated <code>SystemSet</code> type.","Returns <code>true</code> if this value was added after the system last …","Returns <code>true</code> if this system set is an <code>AnonymousSet</code>.","Returns <code>true</code> if this value was added or mutably …","Returns true if the system must be run exclusively.","Returns true if the system is <code>Send</code>.","Returns the change tick recording the time this data was …","Pass the output of this system into the passed function <code>f</code>, …","Returns the system’s name.","Generates a <code>Condition</code> that inverses the result of passed …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Returns a new run condition that returns <code>true</code> if either …","Pass the output of this system <code>A</code> into a second system <code>B</code>, …","Overwrites this smart pointer with the given value, if and …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Executes this system once. See <code>System::run</code> or …","Runs the system with the given input in the world.","Run the systems only if the <code>Condition</code> is <code>true</code>.","Run the systems in this set(s) only if the <code>Condition</code> is …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Runs this system with the given input in the world.","Runs the system with the given input in the world. Unlike …","Flags this value as having been changed.","Overwrites this smart pointer with the given value, if and …","Manually sets the change tick recording the time when this …","Overwrites the tick indicating the last time this system …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Returns <code>Some</code> if this system set is a <code>SystemTypeSet</code>.","The state being entered.","Returns the <code>TypeId</code> of the underlying system type.","System adapter that unwraps the <code>Ok</code> variant of a <code>Result</code>. …","Update the system’s archetype component <code>Access</code>.","System adapter that utilizes the <code>bevy_utils::tracing::warn!</code>…","Used as a type argument to <code>Ptr</code>, <code>PtrMut</code> and <code>OwningPtr</code> to …","Trait that is only implemented for <code>Aligned</code> and <code>Unaligned</code> …","Type-erased Box-like pointer to some unknown type chosen …","Type-erased borrow of some unknown type chosen when …","Type-erased mutable borrow of some unknown type chosen …","Conceptually equivalent to <code>&amp;&#39;a [T]</code> but with length …","Used as a type argument to <code>Ptr</code>, <code>PtrMut</code> and <code>OwningPtr</code> to …","Extension trait for helper methods on <code>UnsafeCell</code>","Creates a dangling pointer with specified alignment. See …","Safety","Safety","Returns a copy of the contained value.","Tracks read and write access to specific elements in a …","A filter on a component that only retains results added …","The <code>Entity</code> was requested mutably more than once.","The <code>AnyOf</code> query parameter fetches entities with any of the …","A marker trait to indicate that the filter works at an …","Dictates how a parallel query chunks up large …","A filter on a component that only retains results added or …","Per archetype/table state used by this <code>WorldQuery</code> to fetch …","An <code>Access</code> that has been filtered to include and exclude …","A collection of <code>FilteredAccess</code> instances.","Returns a bool that describes if an entity has the …","Returns true if (and only if) this Fetch relies strictly …","Returns true if (and only if) every table of every …","The item returned by this <code>WorldQuery</code>","The given <code>Entity</code> does not have the requested component.","The <code>Query</code> does not have read access to the requested …","The <code>Query</code> does not have write access to the requested …","Multiple entities fit the query.","No entity fits the query.","The given <code>Entity</code> does not exist.","The requested <code>Entity</code> does not exist.","<code>WorldQuery</code> used to nullify queries by turning <code>Query&lt;Q&gt;</code> …","A filter that tests if any of the given filters apply.","An iterator over <code>K</code>-sized combinations of query items …","An error that occurs when retrieving a specific <code>Entity</code>’s …","The given <code>Entity</code>’s components do not match the query.","An error that occurs when retrieving a specific <code>Entity</code>’s …","The item type returned when a <code>WorldQuery</code> is iterated over","An <code>Iterator</code> over query results of a <code>Query</code>.","An <code>Iterator</code> over the query items generated from an …","A parallel iterator over query results of a <code>Query</code>.","An error that occurs when evaluating a <code>Query</code> or <code>QueryState</code> …","Provides scoped access to a <code>World</code> state according to a …","The read-only variant of the item type returned when a …","The read-only variant of this <code>WorldQuery</code>, which satisfies …","A world query that is read only.","State used to construct a <code>Self::Fetch</code>. This will be cached …","Filter that selects entities with a component <code>T</code>.","Filter that selects entities without a component <code>T</code>.","Types that can be fetched from a <code>World</code> using a <code>Query</code>.","Implement <code>WorldQuery</code> to use a struct as a parameter in a …","Returns a reference to the underlying unfiltered access.","Returns a mutable reference to the underlying unfiltered …","Adds the filtered access to the set.","Adds access to the element given by <code>index</code>.","Adds access to the element given by <code>index</code>.","Adds exclusive access to the element given by <code>index</code>.","Adds exclusive access to the element given by <code>index</code>.","Adds a <code>With</code> filter: corresponds to a conjunction (AND) …","Adds a <code>Without</code> filter: corresponds to a conjunction (AND) …","Appends an array of filters: corresponds to a disjunction …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts this <code>QueryState</code> reference to a <code>QueryState</code> that …","Converts this <code>QueryState</code> reference to a <code>QueryState</code> that …","The upper and lower limits for how large a batch of …","Configures the number of batches to assign to each thread …","The number of batches per thread in the <code>ComputeTaskPool</code>. …","Changes the batching strategy used when iterating.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Removes all accesses.","Removes all accesses stored in this set.","","","","","","","","","","","","","","","","Returns a reference to the unfiltered access of the entire …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Adds all access from <code>other</code>.","Adds all access and filters from <code>other</code>.","Adds all of the accesses from the passed set to <code>self</code>.","Adds all of the accesses from <code>other</code> to <code>self</code>.","Fetch <code>Self::Item</code> for either the given <code>entity</code> in the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get next result from the query","Get next combination of queried components","Safety","","","","","","","","","","","","","","","","","","","Declares a batching strategy with a fixed batch size.","","","","","","","","","","","Runs <code>func</code> on each query result in parallel.","Runs <code>func</code> on each query result for the given <code>World</code>. This …","Runs <code>func</code> on each query result in parallel.","Runs <code>func</code> on each query result for the given <code>World</code>. This …","Runs <code>func</code> on each query result for the given <code>World</code>. This …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","Gets the query result for the given <code>World</code> and <code>Entity</code>.","Returns a mutable reference to the component <code>T</code> of the …","Returns a vector of elements that the access and <code>other</code> …","Returns a vector of elements that this and <code>other</code> cannot …","Returns a vector of elements that this set and <code>other</code> …","Returns a vector of elements that this set and <code>other</code> …","Gets the query result for the given <code>World</code> and <code>Entity</code>.","Returns the read-only query results for the given array of …","Returns the query results for the given array of <code>Entity</code>.","Gets the query result for the given <code>World</code> and <code>Entity</code>.","","Returns a single immutable query result when there is …","Returns a single mutable query result when there is …","Returns a query result when there is exactly one entity …","Returns a query result when there is exactly one entity …","Gets the query result for the given <code>World</code> and <code>Entity</code>.","Increases the set capacity to the specified amount.","Returns <code>true</code> if this can access anything.","Returns <code>true</code> if this accesses anything mutably.","Returns <code>true</code> if this can access the element given by <code>index</code>.","Returns <code>true</code> if this has access to all indexed elements …","Returns <code>true</code> if this can exclusively access the element …","Returns <code>true</code> if this has write access to all indexed …","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new instance of this fetch.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates and initializes a <code>State</code> for this <code>WorldQuery</code> type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if the access and <code>other</code> can be active at the …","Returns <code>true</code> if this and <code>other</code> can be active at the same …","Returns <code>true</code> if this and <code>other</code> can be active at the same …","Checks if the query is empty for the given <code>World</code>, where …","Returns an <code>Iterator</code> over the query results for the given …","Returns an <code>Iterator</code> over all possible combinations of <code>K</code> …","Returns an <code>Iterator</code> over all possible combinations of <code>K</code> …","Returns an <code>Iterator</code> over all possible combinations of <code>K</code> …","Returns an <code>Iterator</code> over the query results for the given …","Returns an <code>Iterator</code> over the read-only query items …","Returns an <code>Iterator</code> over the read-only query items …","Returns an iterator over the query items generated from an …","Returns an <code>Iterator</code> over the query results for the given …","Returns an <code>Iterator</code> over the query results for the given …","","Returns <code>true</code> if this query matches a set of components. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Configures the maximum allowed batch size of this instance.","Configures the minimum allowed batch size of this instance.","Creates a new <code>QueryState</code> from a given <code>World</code> and inherits …","Creates an empty <code>Access</code> collection.","Creates a new unconstrained default batching strategy.","Update the current <code>QueryState</code> with information from the …","","","","","","","Returns a parallel iterator over the query results for the …","Returns a parallel iterator over the query results for the …","Sets this as having access to all indexed elements (i.e. …","Sets the underlying unfiltered access as having access to …","Returns the indices of the elements this has non-exclusive …","Returns the indices of the elements this has access to.","Adjusts internal state to account for the next <code>Archetype</code>. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Adjusts internal state to account for the next <code>Table</code>. This …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This function manually implements subtyping for the query …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a single immutable query result when there is …","Returns a single mutable query result when there is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","For the given <code>archetype</code>, adds any component accessed used …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Updates the state’s internal view of the <code>World</code>’s …","Updates the state’s internal view of the <code>world</code>’s …","Adds any component accesses used by this <code>WorldQuery</code> to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Panics","","","","","","","","","","","","","","","","","","","","","Sets this as having mutable access to all indexed elements …","Sets the underlying unfiltered access as having mutable …","Returns the indices of the elements this has exclusive …","A <code>Resource</code> storing <code>TypeRegistry</code> for type registrations …","A struct used to operate on reflected <code>Bundle</code> of a type.","The raw function pointers needed to make up a <code>ReflectBundle</code>…","An extension trait for <code>EntityCommands</code> for reflection …","A struct used to operate on reflected <code>Component</code> of a type.","The raw function pointers needed to make up a …","For a specific type of component, this maps any fields …","A struct used to operate on reflected <code>Resource</code> of a type.","The raw function pointers needed to make up a …","Uses reflection to set the value of this <code>Bundle</code> type in …","Uses reflection to set the value of this <code>Component</code> type in …","Uses reflection to set the value of this <code>Resource</code> type in …","Function pointer implementing <code>ReflectBundle::apply()</code>.","Function pointer implementing <code>ReflectComponent::apply()</code>.","Function pointer implementing <code>ReflectResource::apply()</code>.","Uses reflection to set the value of this <code>Bundle</code> type in …","Uses reflection to set the value of this <code>Component</code> type in …","Uses reflection to set the value of this <code>Resource</code> type in …","Function pointer implementing …","Function pointer implementing …","Function pointer implementing …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns whether entity contains this <code>Component</code>","Function pointer implementing <code>ReflectComponent::contains()</code>.","Gets the value of this <code>Component</code> type from entity from …","Gets the value of this <code>Resource</code> type from <code>source_world</code> and …","Function pointer implementing <code>ReflectComponent::copy()</code>.","Function pointer implementing <code>ReflectResource::copy()</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The underlying function pointers implementing methods on …","The underlying function pointers implementing methods on …","The underlying function pointers implementing methods on …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Constructs default reflected <code>Bundle</code> from world using …","Constructs default reflected <code>Component</code> from world using …","","Function pointer implementing <code>ReflectBundle::from_world()</code>.","Function pointer implementing …","","","","","","","","","Insert a reflected <code>Bundle</code> into the entity like <code>insert()</code>.","Insert a reflected <code>Component</code> into the entity like <code>insert()</code>.","Insert a reflected <code>Resource</code> into the world like <code>insert()</code>.","Function pointer implementing <code>ReflectBundle::insert()</code>.","Function pointer implementing <code>ReflectComponent::insert()</code>.","Function pointer implementing <code>ReflectResource::insert()</code>.","Adds the given boxed reflect component to the entity using …","Same as <code>insert_reflect</code>, but using the <code>T</code> resource as type …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A general method for applying <code>MapEntities</code> behavior to all …","A general method for applying <code>MapEntities</code> behavior to …","Create a custom implementation of <code>ReflectBundle</code>.","Get the default set of <code>ReflectBundleFns</code> for a specific …","Create a custom implementation of <code>ReflectComponent</code>.","Get the default set of <code>ReflectComponentFns</code> for a specific …","Create a custom implementation of <code>ReflectResource</code>.","Get the default set of <code>ReflectResourceFns</code> for a specific …","","Gets the value of this <code>Component</code> type from the entity as a …","Gets the value of this <code>Resource</code> type from the world as a …","Function pointer implementing <code>ReflectComponent::reflect()</code>.","Function pointer implementing <code>ReflectResource::reflect()</code>.","Gets the value of this <code>Component</code> type from the entity as a …","Gets the value of this <code>Resource</code> type from the world as a …","Function pointer implementing …","Safety","Safety","Function pointer implementing …","Function pointer implementing …","Removes this <code>Bundle</code> type from the entity. Does nothing if …","Removes this <code>Component</code> type from the entity. Does nothing …","Removes this <code>Resource</code> type from the world. Does nothing if …","Function pointer implementing <code>ReflectBundle::remove()</code>.","Function pointer implementing <code>ReflectComponent::remove()</code>.","Function pointer implementing <code>ReflectResource::remove()</code>.","Removes from the entity the component with the given type …","Same as <code>remove_reflect</code>, but using the <code>T</code> resource as type …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Wrapper around <code>Entity</code> for <code>RemovedComponents</code>. Internally, …","Stores the <code>RemovedComponents</code> event buffers for all types …","Wrapper around a <code>ManualEventReader&lt;RemovedComponentEntity&gt;</code> …","A <code>SystemParam</code> that grants access to the entities that had …","Iterator over entities that had a specific component …","Iterator over entities that had a specific component …","","","","","","","","","","","","","","","","","","","","","","Consumes all available events.","","","","","","","","","","","","","","","","","","","","","","","","Fetch underlying <code>Events</code>.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Gets the event storage for a given component.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns <code>true</code> if there are no events available to read.","Iterates over the events this <code>RemovedComponents</code> has not …","Like <code>iter</code>, except also returning the <code>EventId</code> of the events.","Determines the number of removal events available to be …","Creates an empty storage buffer for component removal …","","","","Iterates over the events this <code>RemovedComponents</code> has not …","Like <code>read</code>, except also returning the <code>EventId</code> of the events.","Fetch underlying <code>ManualEventReader</code>.","Fetch underlying <code>ManualEventReader</code> mutably.","Destructures to get a mutable reference to the …","Sends a removal event for the specified component.","","","","","","","","","","","","","","","","","","","","","","For each type of component, swaps the event buffers and …","","","","","Systems with conflicting access have indeterminate run …","Combines the outputs of two systems using the <code>&amp;&amp;</code> operator.","A <code>SystemSet</code> implicitly created when using …","A type-erased run condition stored in a <code>Box</code>.","A shorthand for <code>Box&lt;dyn ScheduleLabel&gt;</code>.","A shorthand for <code>Box&lt;dyn SystemSet&gt;</code>.","A system that determines if one or more scheduled systems …","Configuration for a tuple of nested <code>Configs</code> instances.","Tried to order a system (set) relative to a system set it …","A directed acyclic graph structure.","The dependency graph contains a cycle.","A system (set) has been told to run before itself.","Occurrences are logged and result in errors.","Specifies how a <code>Schedule</code> will be run.","The hierarchy of system sets contains a cycle.","A system set contains itself.","The hierarchy of system sets contains redundant edges.","Occurrences are completely ignored.","Types that can convert into a <code>SystemConfigs</code>.","Types that can be converted into a <code>SystemSet</code>.","Types that can convert into a <code>SystemSetConfigs</code>.","Specifies how schedule construction should respond to …","New-typed <code>ThreadExecutor</code> <code>Resource</code> that is used to run …","Runs the schedule using a thread pool. Non-conflicting …","Runs the schedule using a thread pool. Non-conflicting …","The next state of <code>State&lt;S&gt;</code>.","Stores configuration for a single generic node.","Configuration for a single node.","A collections of generic <code>NodeConfig</code>s.","Unique identifier for a system or system set stored in a …","Invokes <code>Not</code> with the output of another system.","The label of a <code>Schedule</code> that runs whenever <code>State&lt;S&gt;</code> enters …","The label of a <code>Schedule</code> that runs whenever <code>State&lt;S&gt;</code> exits …","The label of a <code>Schedule</code> that <strong>only</strong> runs whenever <code>State&lt;S&gt;</code> …","Combines the outputs of two systems using the <code>||</code> operator.","A collection of systems, and the metadata and executor …","Category of errors encountered during schedule …","Specifies miscellaneous settings for schedule construction.","Metadata for a <code>Schedule</code>.","A strongly-typed label.","Derive macro generating an impl of the trait <code>ScheduleLabel</code>.","Resource that stores <code>Schedule</code>s mapped to <code>ScheduleLabel</code>s.","Identifier for a system set.","The type of <code>SystemSet</code> this instance converts into.","Tried to order system sets that share systems.","Like <code>SingleThreaded</code> but calls <code>apply_deferred</code> immediately …","A variant of <code>SingleThreadedExecutor</code> that calls …","Runs the schedule using a single thread.","Runs the schedule using a single thread.","A finite-state machine whose transitions have associated …","Types that can define world-wide states in a finite-state …","","Identifier for a system.","Stores configuration for a single system.","A collection of <code>SystemConfig</code>.","Holds systems and conditions of a <code>Schedule</code> sorted in …","Types that identify logical groups of systems.","Derive macro generating an impl of the trait <code>SystemSet</code>.","A <code>SystemSet</code> with scheduling metadata.","A collection of <code>SystemSetConfig</code>.","A <code>SystemSet</code> grouping instances of the same function.","Tried to order a system (set) relative to all instances of …","Tried to run a schedule before all of its systems have …","Occurrences are logged only.","Add a collection of systems to the schedule.","","","Run after all systems in <code>set</code>.","Run after all systems in <code>set</code>.","Ignore system order ambiguities caused by conflicts on …","Ignore system order ambiguities caused by conflicts on …","Determines whether the presence of ambiguities (systems …","","","Suppress warnings and errors that would result from these …","Suppress warnings and errors that would result from …","","","Suppress warnings and errors that would result from these …","Suppress warnings and errors that would result from …","Returns a new run condition that only returns <code>true</code> if both …","","","Instructs the executor to call <code>System::apply_deferred</code> on …","Directly applies any accumulated <code>Deferred</code> system …","If a new state is queued in <code>NextState&lt;S&gt;</code>, this system:","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Casts this value to a form where it can be compared with …","","","","","","","","","","","","","","","","","","","","Run before all systems in <code>set</code>.","Run before all systems in <code>set</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Build a <code>SystemSchedule</code> optimized for scheduler access from …","A cached topological ordering of the graph.","","","Treat this collection as a sequence of systems.","Treat this collection as a sequence of system sets.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A collection of run conditions that may be useful in any …","","Applies the provided <code>ScheduleBuildSettings</code> to all …","Configures a system set in this schedule, adding it if it …","Configures a collection of system sets in this schedule, …","Returns the list of systems that conflict with each other, …","convert conflicts to human readable format","Does a schedule with the provided label already exist?","","","","Creates a schedule with a default label. Only use in …","","","","","","","","","","","","Returns the <code>Dag</code> of the dependencies in the schedule.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Add a run condition to each contained system.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a boxed clone of the label corresponding to this …","Clones this <code>ScheduleLabel</code>","","","","","","","","","","","","","Feeds this value into the given <code>Hasher</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","The state being exited.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a reference to the schedule associated with <code>label</code>, …","Get the current state.","Returns the schedule’s current <code>ScheduleBuildSettings</code>.","Returns the schedule’s current execution strategy.","","","","","Returns a mutable reference to the schedule associated …","","","Returns the set at the given <code>NodeId</code>, if it exists.","Returns the system at the given <code>NodeId</code>, if it exists.","","","Returns the <code>ScheduleGraph</code>.","The directed graph of the stored systems, connected by …","Returns a mutable reference to the <code>ScheduleGraph</code>.","","","","","","","","","Returns the <code>Dag</code> of the hierarchy.","Determines whether the presence of redundant edges in the …","List of <code>ComponentId</code>s to ignore when reporting system order …","","","","Add these systems to the provided <code>set</code>.","Add these system sets to the provided <code>set</code>.","Adds a new boxed system set to the systems.","","","","","","","","","","","","","","","","","","","","","","","","Initializes any newly-added systems and conditions, …","Initializes any newly-added systems and conditions by …","Return’s the <code>TypeId</code> of this label, or the ID of the …","Inserts a labeled schedule into the map.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts this instance to its associated <code>SystemSet</code> type.","","","Returns <code>true</code> if this system set is an <code>AnonymousSet</code>.","","Returns <code>true</code> if the identified node is a system set.","Returns <code>true</code> if the identified node is a system.","Returns an iterator over all schedules. Iteration order is …","","","Iterate through the <code>ComponentId</code>’s that will be ignored.","Returns an iterator over mutable references to all …","","","Creates a new multi-threaded executor for use with a …","Constructs an empty <code>Schedule</code>.","Creates a new executor that can be used to run systems on …","Creates a new simple executor for use in a <code>Schedule</code>. This …","Creates a new single-threaded executor for use in a …","Creates an empty <code>SystemSchedule</code>.","Constructs an empty <code>Schedules</code> with zero initial capacity.","Creates an empty <code>ScheduleGraph</code> with default settings.","Default build settings. See the field-level documentation …","Creates a new state with a specific value.","","","","","","","","","","","","","","Returns a new run condition that returns <code>true</code> if either …","","Prints the names of the components and resources with <code>info</code>","","","","","","","","","","","","","","","","","","","Removes the schedule corresponding to the <code>label</code> from the …","Removes the (schedule, label) pair corresponding to the …","If set to true, report all system sets the conflicting …","Runs all systems in this schedule on the <code>world</code>, using its …","Run the enter schedule (if it exists) for the current …","","","Run the systems only if the <code>Condition</code> is <code>true</code>.","Run the systems in this set(s) only if the <code>Condition</code> is …","Adds a new boxed run condition to the systems.","","","Tentatively set a planned state transition to <code>Some(state)</code>.","Set whether the schedule applies deferred system buffers …","Returns the set at the given <code>NodeId</code>.","Changes miscellaneous build settings.","Sets the schedule’s execution strategy.","","","Returns the system at the given <code>NodeId</code>.","Returns an iterator over all system sets in this schedule.","Returns <code>Some</code> if this system set is a <code>SystemTypeSet</code>.","","Returns an iterator over all systems in this schedule.","The state being entered.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If set to true, node names will be shortened instead of …","","","","","","","","","","","","","","","","","","","","","","","","If <code>true</code>, adds <code>before -&gt; after</code> ordering constraints between …","Run conditions applied to everything in the tuple.","Configuration for each element of the tuple.","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code> that inverses the result of passed …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","A type-erased contiguous container for data of a …","A sparse data structure of <code>Component</code>s.","The type-erased backing storage and metadata for a single …","The backing store for all <code>Resource</code>s stored in the <code>World</code>.","A data structure that blends dense and sparse storage","Represents something that can be stored in a <code>SparseSet</code> as …","A collection of <code>ComponentSparseSet</code> storages, indexed by …","The raw data stores of a <code>World</code>","A column-oriented structure-of-arrays based storage for …","An opaque unique ID for a <code>Table</code> within a <code>World</code>.","A opaque newtype for rows in <code>Table</code>s. Specifies a single …","A collection of <code>Table</code> storages, indexed by <code>TableId</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the total number of elements the <code>SparseSet</code> can …","Clears all resources.","Clears all of the elements from the sparse set.","Clears the column, removing all values.","","","","","","","Gets the number of components being stored in the table.","Returns <code>true</code> if the sparse set has a component value for …","Returns <code>true</code> if the sparse set contains a value for <code>index</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>TableId</code> of the <code>Table</code> without any components.","Fetches a read-only slice of the entities stored within …","Gets the maximum number of entities the table can …","Gets the number of entities currently being stored in the …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Fetches a <code>Table</code> by its <code>TableId</code>.","Gets read-only access to a resource, if it exists.","Returns a reference to the entity’s component value.","Returns a reference to the value for <code>index</code>.","Gets a reference to the <code>ComponentSparseSet</code> of a <code>ComponentId</code>…","Fetches a reference to the data and change detection ticks …","Returns a reference to the “added” tick of the entity…","Fetches the “added” change detection tick for the …","Fetches the “added” change detection tick for the …","Fetches the slice to the <code>Column</code>’s “added” change …","Returns a reference to the “changed” tick of the entity…","Fetches the “changed” change detection tick for the …","Fetches the “changed” change detection tick for the …","Fetches the slice to the <code>Column</code>’s “changed” change …","Fetches a read-only reference to the <code>Column</code> for a given …","Returns a reference to the resource, if it exists.","Fetches a read-only reference to the data at <code>row</code>.","Fetches a mutable reference to the data at <code>row</code>.","Fetches the data pointer to the first element of the <code>Column</code>…","Fetches the slice to the <code>Column</code>’s data cast to a given …","Fetches a read-only reference to the data at <code>row</code>. Unlike …","Returns a mutable reference to the value for <code>index</code>.","Returns a reference to the value for <code>index</code>, inserting one …","Creates a new instance of this type with the specified …","Returns a reference to the resource’s change ticks, if …","Returns a reference to the “added” and “changed” …","Fetches the change detection ticks for the value at <code>row</code>.","Fetches the change detection ticks for the value at <code>row</code>. …","Returns references to the entity’s component value and …","Checks if the table contains a <code>Column</code> for a given <code>Component</code>…","Gets the <code>ArchetypeComponentId</code> for the resource.","","Gets the underlying table index from the ID.","Gets the index of the row.","","Returns an iterator visiting all keys (indices) in …","","","","","","","","","","","","Inserts <code>value</code> at <code>index</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Checks if the <code>Table</code> is empty or not.","Returns true if this collection contains no <code>Table</code>s","Returns true if there are no resources stored in the <code>World</code>,","Returns <code>true</code> if the sparse set contains no component …","Returns <code>true</code> if the sparse set contains no elements.","Returns true if this collection contains no …","Checks if the column is empty. Returns <code>true</code> if there are …","Returns true if the resource is populated.","Fetches the <code>Layout</code> for the underlying type.","Iterates over the <code>Column</code>s of the <code>Table</code>.","Iterates through all of the tables stored within in <code>TableId</code>…","Iterate over all resources that have been initialized, …","Returns an iterator visiting all key-value pairs in …","An Iterator visiting all (<code>ComponentId</code>, <code>ComponentSparseSet</code>) …","Returns an iterator visiting all key-value pairs in …","Returns the number of <code>Table</code>s this collection contains","The total number of resources stored in the <code>World</code>","Returns the number of component values in the sparse set.","Returns the number of elements in the sparse set.","Returns the number of <code>ComponentSparseSet</code>s this collection …","Gets the current number of elements stored in the column.","Creates a new <code>SparseSet</code>.","Creates a new <code>TableId</code>.","Creates a <code>TableRow</code>.","Backing storage for <code>!Send</code> resources.","","","","","","Removes and returns the value for <code>index</code>.","Backing storage for resources.","Gets the sparse set index corresponding to this instance.","Backing storage for <code>SparseSet</code> components.","Backing storage for <code>Table</code> components.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an iterator visiting all values in arbitrary order.","Returns an iterator visiting all values mutably in …","","","","","","","","","","","","Creates a new <code>SparseSet</code> with a specified initial capacity.","Customizes the behavior of an <code>AdapterSystem</code>","A <code>System</code> that takes the output of <code>S</code> and transforms it by …","A convenience type alias for a boxed <code>System</code> trait object.","A <code>System</code> defined by combining two other systems. The …","Customizes the behavior of a <code>CombinatorSystem</code>.","A <code>World</code> mutation.","Densely and efficiently stores a queue of heterogenous …","A <code>Command</code> queue to perform impactful changes to the <code>World</code>.","A <code>SystemParam</code> that stores a buffer which gets applied to …","A <code>Command</code> that despawns a specific entity. This will emit …","A <code>Command</code> which gets executed for a given <code>Entity</code>.","A list of commands that will be run to modify an entity.","A function system that runs with exclusive <code>World</code> access.","A parameter that can be used in an exclusive system (a …","A trait implemented for all exclusive system functions …","Shorthand way of accessing the associated type …","The <code>System</code> counter part of an ordinary function.","Wrapper type to mark a <code>SystemParam</code> as an input.","The input type for an <code>AdapterSystem</code>.","The input type for a <code>CombinatorSystem</code>.","The input type to this system. See <code>System::In</code>.","The input type to this system. See <code>System::In</code>.","The system’s input. See <code>In</code> for <code>FunctionSystem</code>s.","A <code>Command</code> that inserts a <code>Resource</code> into the world using a …","A <code>Command</code> that adds the components in a <code>Bundle</code> to an …","A <code>Command</code> that consumes an iterator to add a series of …","A <code>Command</code> that inserts a <code>Resource</code> into the world.","Conversion trait to turn something into a <code>System</code>.","The item type returned when constructing this system param.","The item type returned when constructing this system param.","A system local <code>SystemParam</code>.","<code>Command</code> to log the components of a given entity. See …","Shared borrow of a non-<code>Send</code> resource.","Unique borrow of a non-<code>Send</code> resource.","The output type for an <code>AdapterSystem</code>.","The output type for a <code>CombinatorSystem</code>.","The return type of this system. See <code>System::Out</code>.","The return type of this system. See <code>System::Out</code>.","The system’s output.","An alternative to <code>Commands</code> that can be used in parallel …","The <code>ExclusiveSystemParam</code>/s defined by this system’s <code>fn</code> …","The <code>SystemParam</code>/s used by this system to access the <code>World</code>.","A collection of potentially conflicting <code>SystemParam</code>s …","A <code>System</code> created by piping the output of the first system …","System parameter that provides selective access to the …","<code>System</code> types that do not modify the <code>World</code> when run. This …","A <code>SystemParam</code> that only reads a given <code>World</code>.","A system tried to run itself recursively.","An operation with stored systems failed.","A <code>Command</code> that removes components from an entity. For a …","A <code>Command</code> that removes the resource <code>R</code> from the world.","A system that has been removed from the registry. It …","Shared borrow of a <code>Resource</code>.","Unique mutable borrow of a <code>Resource</code>.","A type that can be inserted into a <code>World</code> as a singleton.","","The <code>Command</code> type for <code>World::run_system</code>.","Trait used to run a system immediately on a <code>World</code>.","A system tried to remove itself.","A <code>Command</code> that spawns a new entity and adds the components …","A <code>Command</code> that consumes an iterator of <code>Bundle</code>s to spawn a …","Used to store data which persists across invocations of a …","Used to store data which persists across invocations of a …","A helper for using system parameters in generic contexts","An ECS system that can be added to a <code>Schedule</code>","The type of <code>System</code> that this instance converts into.","Types that can be used with <code>Deferred&lt;T&gt;</code> in systems. This …","A <code>SystemParam</code> that reads the previous and current change …","An identifier for a registered system.","A system was run by id, but no system with that id was …","The metadata of a <code>System</code>.","Name of the system that corresponds to this …","A parameter that can be used in a <code>System</code>.","Implement <code>SystemParam</code> to use a struct as a parameter in a …","A trait implemented for all functions that can be used as …","Shorthand way of accessing the associated type …","Holds on to persistent state required to drive <code>SystemParam</code> …","A <code>Command</code> that attempts to add the components in a <code>Bundle</code> …","Turns an <code>EntityCommand</code> type into a <code>Command</code> type.","When used in an <code>AdapterSystem</code>, this function customizes …","Pushes an <code>EntityCommand</code> to the queue, which will get …","Pushes a generic <code>Command</code> to the command queue.","","Applies this command, causing it to mutate the provided …","Executes this command for the given <code>Entity</code>.","Applies any deferred mutations to the <code>World</code>.","","","","","","","","","","Applies all state queued up for <code>SystemParam</code> values. For …","Applies any deferred mutations stored in this <code>SystemParam</code>…","","","","","","","","","","","","Execute the queued <code>Command</code>s in the world. This clears the …","","","","","","","Applies any <code>Deferred</code> system parameters (or other system …","","","","","Returns the system’s archetype component <code>Access</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Allows you access to the dereferenced value of this …","Allows you access to the dereferenced value of this …","","","","","","","","Ensure that a given function is a read-only system.","Ensure that a given function is a system.","Ensures that the provided system doesn’t with itself.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>Bundle</code> containing the components that will be added to …","The <code>Bundle</code> containing the components that will be added to …","The <code>Bundle</code> of components that will be added to the …","The iterator that returns the <code>Bundle</code>s which will be added …","The iterator that returns each entity ID and corresponding …","","","Checks any <code>Tick</code>s stored on this system and wraps their …","","","","","","Copies a reference to a resource.","Clone the combined system. The cloned instance must be …","","","","","","","","","","","","","","","","","","When used in a <code>CombinatorSystem</code>, this function customizes …","Temporarily provides access to the <code>Commands</code> for the …","Returns the underlying <code>Commands</code>.","Returns a shared reference to the component <code>T</code> of the given …","Returns the system’s component <code>Access</code>.","","","","","Returns a mutable reference to the component <code>T</code> of the …","Returns <code>true</code> if the given <code>Entity</code> matches the query.","","","","","Returns the system’s default system sets.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Despawns the entity.","","Despawns the provided entity and its children.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the <code>EntityCommands</code> for the requested <code>Entity</code>.","The entity to which the components will be added.","The entity to which the components will be added.","The entity that will be despawned.","The entity from which the components will be removed.","","","","","","","","","","","","","","","","","","","","","","Runs <code>f</code> on each read-only query item.","Runs <code>f</code> on each query item.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Retrieve the <code>SystemParam</code> values. This can only be called …","Returns the read-only query item for the given <code>Entity</code>.","Returns a shared reference to the component <code>T</code> of the given …","Returns a mutable reference to the component <code>T</code> of the …","Returns a mutable reference to the component <code>T</code> of the …","Returns the <code>EntityCommands</code> for the requested <code>Entity</code>, if it …","Returns the query item for the given <code>Entity</code>, with the …","Gets the tick indicating the last time this system ran.","","","","","Retrieve the <code>SystemParam</code> values. This can only be called …","Retrieve the mutable <code>SystemParam</code> values.  This will not …","Returns the read-only query items for the given array of …","Returns the query items for the given array of <code>Entity</code>.","Retrieve the mutable <code>SystemParam</code> values.","Returns the query item for the given <code>Entity</code>.","Pushes a <code>Command</code> to the queue for creating a new <code>Entity</code> if …","Creates a parameter to be passed into an …","Creates a parameter to be passed into a <code>SystemParamFunction</code>…","","","","","","","","","","","","","","","","","","","","","","","Returns a single read-only query item when there is …","Returns a single query item when there is exactly one …","Returns the query item for the given <code>Entity</code>.","Retrieve the <code>SystemParam</code> values. This will not update …","","Returns the <code>Entity</code> id of the entity.","Creates a new instance of this param’s <code>State</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Pushes a <code>Command</code> to the queue for inserting a <code>Resource</code> in …","Registers any <code>World</code> access used by this <code>SystemParam</code> and …","","","","","","","","","","","","","","","","","","","","","Initialize the system.","","","","","Is the system initialized? A system is initialized the …","Adds a <code>Bundle</code> of components to the entity.","","Pushes a <code>Command</code> to the queue for creating entities, if …","","","Pushes a <code>Command</code> to the queue for inserting a <code>Resource</code> in …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Due to lifetime limitations of the <code>Deref</code> trait, this …","Consume <code>self</code> and return a mutable reference to the …","Consume <code>self</code> and return a mutable reference to the …","Get the value of the parameter","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Turns this value into its corresponding <code>System</code>.","","","","","","","","Returns <code>true</code> if the resource was added after the system …","","","","Returns <code>true</code> if the resource was added or mutably …","Returns <code>true</code> if there are no query items.","Returns true if the system must be run exclusively.","","","","","Returns true if the system is <code>Send</code>.","","","","","Returns true if the system is <code>Send</code>.","Returns an <code>Iterator</code> over the read-only query items.","","Returns a <code>QueryCombinationIter</code> over all combinations of <code>K</code> …","Returns a <code>QueryCombinationIter</code> over all combinations of <code>K</code> …","Iterates over all possible combinations of <code>K</code> query items …","","Returns an <code>Iterator</code> over the query items, with the actual …","Returns an <code>Iterator</code> over the read-only query items …","Returns an iterator over the query items generated from an …","Returns an <code>Iterator</code> over the query items generated from an …","Returns an <code>Iterator</code> over the query items.","Returns an <code>Iterator</code> over the query items.","","","","Returns the <code>World</code> change tick seen by the system the …","Contains type aliases for built-in <code>SystemParam</code>s with …","Logs the components of the entity at the info level.","Returns the read-only query items for the given array of …","Returns the query items for the given array of <code>Entity</code>.","Pass the output of this system into the passed function <code>f</code>, …","Maps to an inner value by applying a function to the …","Maps to an inner value by applying a function to the …","Returns <code>true</code> if <code>world_id</code> matches the <code>World</code> that was used …","Gets the metadata for this instance.","Returns the system’s name.","","","","","Returns the system’s name","Gets the name of the system.","Creates a new system that combines two inner systems.","Creates a <code>Command</code> which will insert a default created …","Creates a <code>Command</code> which will remove a <code>Resource</code> from the …","Creates a new <code>SystemState</code> with default state.","Creates a new <code>System</code> that uses <code>func</code> to adapt <code>system</code>, via …","Returns a new <code>Commands</code> instance from a <code>CommandQueue</code> and a …","Creates a <code>Command</code> which will remove the specified <code>Entity</code> …","Creates a new <code>Command</code> struct, which can be added to …","","For the specified <code>Archetype</code>, registers the components …","","","","","","","","","","","","Returns a new <code>Commands</code> instance from a <code>CommandQueue</code> and an …","","Gets exclusive access to the 0th parameter in this <code>ParamSet</code>…","Gets exclusive access to the 0th parameter in this <code>ParamSet</code>…","Gets exclusive access to the 0th parameter in this <code>ParamSet</code>…","Gets exclusive access to the 0th parameter in this <code>ParamSet</code>…","Gets exclusive access to the 0th parameter in this <code>ParamSet</code>…","Gets exclusive access to the 0th parameter in this <code>ParamSet</code>…","Gets exclusive access to the 0th parameter in this <code>ParamSet</code>…","Gets exclusive access to the 0th parameter in this <code>ParamSet</code>…","Gets exclusive access to the 1st parameter in this <code>ParamSet</code>…","Gets exclusive access to the 1st parameter in this <code>ParamSet</code>…","Gets exclusive access to the 1st parameter in this <code>ParamSet</code>…","Gets exclusive access to the 1st parameter in this <code>ParamSet</code>…","Gets exclusive access to the 1st parameter in this <code>ParamSet</code>…","Gets exclusive access to the 1st parameter in this <code>ParamSet</code>…","Gets exclusive access to the 1st parameter in this <code>ParamSet</code>…","Gets exclusive access to the 2nd parameter in this <code>ParamSet</code>…","Gets exclusive access to the 2nd parameter in this <code>ParamSet</code>…","Gets exclusive access to the 2nd parameter in this <code>ParamSet</code>…","Gets exclusive access to the 2nd parameter in this <code>ParamSet</code>…","Gets exclusive access to the 2nd parameter in this <code>ParamSet</code>…","Gets exclusive access to the 2nd parameter in this <code>ParamSet</code>…","Gets exclusive access to the 3rd parameter in this <code>ParamSet</code>…","Gets exclusive access to the 3rd parameter in this <code>ParamSet</code>…","Gets exclusive access to the 3rd parameter in this <code>ParamSet</code>…","Gets exclusive access to the 3rd parameter in this <code>ParamSet</code>…","Gets exclusive access to the 3rd parameter in this <code>ParamSet</code>…","Gets exclusive access to the 4th parameter in this <code>ParamSet</code>…","Gets exclusive access to the 4th parameter in this <code>ParamSet</code>…","Gets exclusive access to the 4th parameter in this <code>ParamSet</code>…","Gets exclusive access to the 4th parameter in this <code>ParamSet</code>…","Gets exclusive access to the 5th parameter in this <code>ParamSet</code>…","Gets exclusive access to the 5th parameter in this <code>ParamSet</code>…","Gets exclusive access to the 5th parameter in this <code>ParamSet</code>…","Gets exclusive access to the 6th parameter in this <code>ParamSet</code>…","Gets exclusive access to the 6th parameter in this <code>ParamSet</code>…","Gets exclusive access to the 7th parameter in this <code>ParamSet</code>…","Returns a parallel iterator over the query results for the …","Returns a parallel iterator over the query results for the …","Pass the output of this system <code>A</code> into a second system <code>B</code>, …","Push a <code>Command</code> onto the queue.","","Returns a <code>Mut&lt;&gt;</code> with a smaller lifetime. This is useful if …","Returns a <code>Mut&lt;&gt;</code> with a smaller lifetime. This is useful if …","Removes a <code>Bundle</code> of components from the entity.","","","","","","Pushes a <code>Command</code> to the queue for removing a <code>Resource</code> from …","","The resource that will be added to the world.","Executes this system once. See <code>System::run</code>.","Executes this system once. See <code>System::run</code> or …","","","Runs the system with the given input in the world.","","Runs this system with the given input in the world.","Runs the system corresponding to the given <code>SystemId</code>. …","Runs a system and applies its deferred parameters.","Runs a system with given input and applies its deferred …","Runs the system with the given input in the world. Unlike …","","","","","","","","","Overwrites the tick indicating the last time this system …","","","","","Sets the system to be not <code>Send</code>.","","","Returns a single read-only query item when there is …","Returns a single query item when there is exactly one …","Pushes a <code>Command</code> to the queue for creating a new entity …","Pushes a <code>Command</code> to the queue for creating entities with a …","Pushes a <code>Command</code> to the queue for creating a new empty …","The system removed from the storage.","Returns the current <code>World</code> change tick seen by the system.","","","","","","","Returns another <code>Query</code> from this that fetches the read-only …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Tries to add a <code>Bundle</code> of components to the entity.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the <code>TypeId</code> of the underlying system type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Update the system’s archetype component <code>Access</code>.","","","","","Updates the state’s internal view of the <code>World</code>’s …","Updates the state’s internal view of the <code>world</code>’s …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a <code>Command</code> which executes this <code>EntityCommand</code> for …","A shorthand for writing <code>&amp;&#39;static T</code>.","<code>Commands</code> with <code>&#39;static</code> lifetimes.","A <code>Query</code> with <code>&#39;static</code> lifetimes.","A <code>Res</code> with <code>&#39;static</code> lifetimes.","A <code>ResMut</code> with <code>&#39;static</code> lifetimes.","A shorthand for writing <code>&amp;&#39;static mut T</code>.","The (arbitrarily chosen) minimum number of world tick …","Provides mutable access to a single entity and all of its …","A read-only reference to a particular <code>Entity</code> and all of …","A mutable reference to a particular <code>Entity</code>, and the entire …","Creates an instance of the type this trait is implemented …","Unique mutable borrow of an entity’s component","Shared borrow of an entity’s component with access to …","An iterator that spawns a series of entities and returns …","Stores and exposes operations on entities, components, …","A read-only borrow of some data stored in a <code>World</code>. This …","A mutable borrow of some data stored in a <code>World</code>. This type …","Exposes safe mutable access to multiple resources at a …","A unique identifier for a <code>World</code>.","","Adds the specified <code>Schedule</code> to the world. The schedule can …","Ignore system order ambiguities caused by conflicts on …","Ignore system order ambiguities caused by conflicts on …","Returns the archetype that the current entity belongs to.","Returns the archetype that the current entity belongs to.","Returns the archetype that the current entity belongs to.","Retrieves this world’s <code>Archetypes</code> collection.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Allows you access to the dereferenced value of this …","","","Gets read-only access to all of the entity’s components.","","","Creates a new <code>UnsafeWorldCell</code> view with complete …","Creates a new <code>UnsafeWorldCell</code> view with only read access …","","","","","","","","","","","","","","","","","","","","","","","Retrieves this world’s <code>Bundles</code> collection.","","Retrieves a <code>WorldCell</code>, which safely enables multiple …","Reads the current change tick of this world.","Iterates all component change ticks and clamps any older …","Runs both <code>clear_entities</code> and <code>clear_resources</code>, invalidating …","Despawns all entities in this <code>World</code>.","Clears all resources in this <code>World</code>.","Clears the internal component tracker state.","","","","","","","Returns the <code>ComponentId</code> of the given <code>Component</code> type <code>T</code>.","Retrieves this world’s <code>Components</code> collection.","Returns <code>true</code> if the current entity has a component of type …","Returns <code>true</code> if the current entity has a component of type …","Returns <code>true</code> if the current entity has a component of type …","Returns <code>true</code> if the current entity has a component …","Returns <code>true</code> if the current entity has a component …","Returns <code>true</code> if the current entity has a component …","Returns <code>true</code> if a resource of type <code>R</code> exists. Otherwise …","Returns <code>true</code> if a resource of type <code>R</code> exists. Otherwise …","Returns <code>true</code> if the current entity has a component with …","Returns <code>true</code> if the current entity has a component with …","Returns <code>true</code> if the current entity has a component with …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Despawns the current entity.","Despawns the given <code>entity</code>, if it exists. This will also …","","Despawns the provided entity and its children.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Retrieves this world’s <code>Entities</code> collection.","Retrieves this world’s <code>Entities</code> collection mutably.","Retrieves an <code>EntityRef</code> that exposes read-only operations …","Retrieves an <code>EntityWorldMut</code> that exposes read and write …","","","","","","Contains error types returned by bevy’s schedule.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Convert this <code>NonSendMut</code> into a <code>Mut</code>. This allows keeping …","Convert this <code>ResMut</code> into a <code>Mut</code>. This allows keeping the …","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Creates <code>Self</code> using data from the given <code>World</code>.","","","Gets access to the component of type <code>T</code> for the current …","Gets access to the component of type <code>T</code> for the current …","Retrieves a reference to the given <code>entity</code>’s <code>Component</code> of …","Gets access to the component of type <code>T</code> for the current …","Gets the component of the given <code>ComponentId</code> from the …","Gets the component of the given <code>ComponentId</code> from the …","Retrieves an immutable untyped reference to the given …","Gets the component of the given <code>ComponentId</code> from the …","Retrieves the change ticks for the given component. This …","Retrieves the change ticks for the given component. This …","Retrieves the change ticks for the given component. This …","Retrieves the change ticks for the given <code>ComponentId</code>. This …","Retrieves the change ticks for the given <code>ComponentId</code>. This …","Retrieves the change ticks for the given <code>ComponentId</code>. This …","Retrieves an <code>EntityRef</code> that exposes read-only operations …","Retrieves an <code>EntityWorldMut</code> that exposes read and write …","Gets an <code>EntityRef</code> for multiple entities at once.","Gets mutable access to multiple entities.","Gets mutable access to the component of type <code>T</code> for the …","Gets mutable access to the component of type <code>T</code> for the …","Retrieves a mutable reference to the given <code>entity</code>’s …","Gets a <code>MutUntyped</code> of the component of the given <code>ComponentId</code>…","Gets a <code>MutUntyped</code> of the component of the given <code>ComponentId</code>…","Retrieves a mutable untyped reference to the given <code>entity</code>…","Gets a <code>!Send</code> resource to the resource with the id …","Gets a <code>!Send</code> resource to the resource with the id …","Gets an immutable reference to the non-send resource of …","Gets a reference to the non-send resource of the given …","Gets a mutable reference to the non-send resource of the …","Gets a mutable reference to the non-send resource of the …","Returns an <code>EntityWorldMut</code> for the given <code>entity</code> (if it …","","","Gets access to the component of type <code>T</code> for the current …","Gets access to the component of type <code>T</code> for the current …","Gets access to the component of type <code>T</code> for the current …","Gets a reference to the resource of the given type","Gets a reference to the resource of the given type if it …","Gets a pointer to the resource with the id <code>ComponentId</code> if …","Gets a mutable reference to the resource of the given type","Gets a mutable reference to the resource of the given type …","Gets a pointer to the resource with the id <code>ComponentId</code> if …","Gets a mutable reference to the resource of type <code>T</code> if it …","","","Returns the ID of the current entity.","Returns the ID of the current entity.","Retrieves this <code>World</code>’s unique ID","Returns the ID of the current entity.","Increments the world’s current change tick and returns …","","","","","","","","","","","","Initializes a new <code>Component</code> type and returns the …","Initializes a new <code>Component</code> type and returns the …","","","","Initializes a new non-send resource and returns the …","Initializes a new resource and returns the <code>ComponentId</code> …","","","","","","Adds a <code>Bundle</code> of components to the entity.","Inserts a dynamic <code>Component</code> into the entity.","Inserts a dynamic <code>Bundle</code> into the entity.","","Inserts a new <code>!Send</code> resource with the given <code>value</code>. Will …","Inserts a new non-send resource with the given <code>value</code>.","For a given batch of (<code>Entity</code>, <code>Bundle</code>) pairs, either spawns …","Inserts a new resource with the given <code>value</code>.","Inserts a new resource with the given <code>value</code>. Will replace …","Returns the components of an <code>Entity</code> through <code>ComponentInfo</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the reference wrapped by this type. The reference …","Consume <code>self</code> and return a mutable reference to the …","","","","","","","","","","","","","","","","Returns this entity’s <code>World</code>, consuming itself.","","","","","Return’s <code>true</code> if a resource of type <code>R</code> exists and was …","Return’s <code>true</code> if a resource of type <code>R</code> exists and was …","Returns an <code>Entity</code> iterator of current entities.","Returns a mutable iterator over all entities in the <code>World</code>.","When called from within an exclusive system (a <code>System</code> that …","","","","Gets metadata indicating the location where the current …","Gets metadata indicating the location where the current …","Gets metadata indicating the location where the current …","Gets an <code>EntityRef</code> for multiple entities at once.","Gets mutable access to multiple entities at once.","Map <code>Ref</code> to a different type using <code>f</code>.","Maps to an inner value by applying a function to the …","","","","Create a new <code>Ref</code> using provided values.","Creates a new change-detection enabled smart pointer. In …","Creates a new empty <code>World</code>.","Create a new, unique <code>WorldId</code>. Returns <code>None</code> if the supply …","","Gets an immutable reference to the non-send resource of …","Gets an immutable reference to the non-send resource of …","Gets a mutable reference to the non-send resource of the …","Gets a mutable reference to the non-send resource of the …","","","Returns <code>QueryState</code> for the given <code>WorldQuery</code>, which is used …","Returns <code>QueryState</code> for the given filtered <code>WorldQuery</code>, …","Reads the current change tick of this world.","Returns a <code>Mut&lt;&gt;</code> with a smaller lifetime. This is useful if …","Returns a new instance with a shorter lifetime. This is …","Registers a system and returns a <code>SystemId</code> so it can later …","Removes any components in the <code>Bundle</code> from the entity.","","Removes the resource of a given type, if it exists. …","Removes a <code>!Send</code> resource from the world and returns it, if …","","Removes the resource of a given type and returns it, if it …","Removes the resource of a given type, if it exists. …","Removes a registered system and returns the system, if it …","Returns an iterator of entities that had components of …","Retrieves this world’s <code>RemovedComponentEvents</code> collection","Returns an iterator of entities that had components with …","Gets a reference to the resource of the given type","Gets a reference to the resource of the given type","Gets a mutable reference to the resource of the given type","Gets a mutable reference to the resource of the given type","Temporarily removes the requested resource from this <code>World</code>…","Runs the <code>Schedule</code> associated with the <code>label</code> a single time.","Run stored systems by their <code>SystemId</code>. Before running a …","","Temporarily removes the schedule associated with <code>label</code> …","Sends an <code>Event</code>.","Sends an <code>Event</code>.","Sends a batch of <code>Event</code>s from an iterator.","Sends a batch of <code>Event</code>s from an iterator.","Sends the default value of the <code>Event</code> of type <code>E</code>.","Sends the default value of the <code>Event</code> of type <code>E</code>.","","","","","","","","","","","","","","","Spawns a new <code>Entity</code> with a given <code>Bundle</code> of components and …","Spawns a batch of entities with the same component <code>Bundle</code> …","Spawns a new <code>Entity</code> and returns a corresponding …","Retrieves this world’s <code>Storages</code> collection.","Removes all components in the <code>Bundle</code> from the entity and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attempts to run the <code>Schedule</code> associated with the <code>label</code> a …","Temporarily removes the schedule associated with <code>label</code> …","","","","","","","","","","","","Contains types that allow disjoint mutable access to a …","","","","","","","","","","","","","","","","","","Updates the internal entity location to match the current …","","","","","","","","","","","","","Gets read-only access to the world that the current entity …","Returns this entity’s world.","Gives mutable access to this entity’s <code>World</code> in a …","The error type returned by <code>World::try_run_schedule</code> if the …","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","A interior-mutable reference to a particular <code>Entity</code> and …","Variant of the <code>World</code> where resource and component accesses …","Returns the archetype that the current entity belongs to.","Retrieves this world’s <code>Archetypes</code> collection.","","","","","","","","","","","Retrieves this world’s <code>Bundles</code> collection.","Gets the current change tick of this world.","","","","","","","Retrieves this world’s <code>Components</code> collection.","Returns <code>true</code> if the current entity has a component of type …","Returns <code>true</code> if the current entity has a component …","Returns <code>true</code> if the current entity has a component with …","","","","","","","","","Retrieves this world’s <code>Entities</code> collection.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Safety","Gets the component of the given <code>ComponentId</code> from the …","Retrieves the change ticks for the given component. This …","Retrieves the change ticks for the given <code>ComponentId</code>. This …","Retrieves an <code>UnsafeEntityCell</code> that exposes read and write …","Safety","Retrieves a mutable untyped reference to the given <code>entity</code>…","Gets a reference to the non-send resource of the given …","Gets a <code>!Send</code> resource to the resource with the id …","Gets a mutable reference to the non-send resource of the …","Gets a <code>!Send</code> resource to the resource with the id …","Safety","Gets a reference to the resource of the given type if it …","Gets a pointer to the resource with the id <code>ComponentId</code> if …","Gets a mutable reference to the resource of the given type …","Gets a pointer to the resource with the id <code>ComponentId</code> if …","Retrieves this world’s unique ID.","Returns the ID of the current entity.","Increments the world’s current change tick and returns …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Returns the <code>Tick</code> indicating the last time that …","Gets metadata indicating the location where the current …","Retrieves this world’s collection of removed components.","Provides unchecked access to the internal data stores of …","","","","","","","","","","","","","","","Gets a reference to the <code>&amp;World</code> this <code>UnsafeWorldCell</code> …","Gets the world that the current entity belongs to.","Gets a reference to the <code>World</code> this <code>UnsafeWorldCell</code> belong …","Gets a mutable reference to the <code>World</code> this <code>UnsafeWorldCell</code> …","Plugin that provides gamepad handling to an <code>App</code>.","Updates the running gamepad rumble effects.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Add this <code>Component</code> to an entity to draw its <code>Aabb</code> component.","Configuration for drawing the <code>Aabb</code> component on entities.","A <code>Resource</code> that stores configuration for gizmos.","A <code>Plugin</code> that provides an immediate mode drawing api for …","Configuration for the <code>AabbGizmo</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The color of the box.","","","","","","The default color for bounding box gizmos.","How closer to the camera than real geometry the line …","","","","","","","","","","","","","Draws all bounding boxes in the scene when set to <code>true</code>.","","","","","Set to <code>false</code> to stop drawing gizmos.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","A module for the <code>Gizmos</code> <code>SystemParam</code>.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Apply perspective to gizmo lines.","Line width specified in pixels.","","","","","","The <code>bevy_gizmos</code> prelude.","","","","","","","","","","Describes which rendering layers gizmos will be rendered …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A builder returned by <code>Gizmos::arc_2d</code>.","A builder returned by <code>Gizmos::circle_2d</code>.","A builder returned by <code>Gizmos::circle</code>.","A <code>SystemParam</code> for drawing gizmos.","A builder returned by <code>Gizmos::sphere</code>.","","Draw an arc, which is a part of the circumference of a …","","","","","","","","","","","","","","","","","","","","","","","","","","Draw a circle in 3D at <code>position</code> with the flat side facing …","Draw a circle in 2D.","Set the number of line-segments per circle for this sphere.","Draw a wireframe cube in 3D.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Draw a line in 3D from <code>start</code> to <code>end</code>.","Draw a line in 2D from <code>start</code> to <code>end</code>.","Draw a line in 3D with a color gradient from <code>start</code> to <code>end</code>.","Draw a line in 2D with a color gradient from <code>start</code> to <code>end</code>.","Draw a line in 3D made of straight segments between the …","Draw a line in 2D made of straight segments between the …","Draw a line in 3D made of straight segments between the …","Draw a line in 2D made of straight segments between the …","","Draw a line in 3D from <code>start</code> to <code>start + vector</code>.","Draw a line in 2D from <code>start</code> to <code>start + vector</code>.","Draw a line in 3D with a color gradient from <code>start</code> to …","Draw a line in 2D with a color gradient from <code>start</code> to …","Draw a wireframe rectangle in 3D.","Draw a wireframe rectangle in 2D.","Set the number of line-segments for this circle.","Set the number of line-segments for this circle.","Set the number of line-segments for this arc.","Draw a wireframe sphere in 3D made out of 3 circles around …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Add this <code>Component</code> to an entity to draw its <code>Aabb</code> component.","Configuration for drawing the <code>Aabb</code> component on entities.","A <code>Resource</code> that stores configuration for gizmos.","A <code>SystemParam</code> for drawing gizmos.","Configuration for the <code>AabbGizmo</code>.","The color of the box.","The default color for bounding box gizmos.","How closer to the camera than real geometry the line …","Draws all bounding boxes in the scene when set to <code>true</code>.","Set to <code>false</code> to stop drawing gizmos.","Apply perspective to gizmo lines.","Line width specified in pixels.","Describes which rendering layers gizmos will be rendered …","Failed to load asset from an asset path.","Decoding the base64 mesh data failed.","Unsupported buffer format.","Failed to generate tangents.","Representation of a loaded glTF file.","Invalid glTF file.","An error that occurs when loading a glTF file.","Additional untyped data that can be present on most glTF …","Loads glTF files with all of their data as their …","A glTF mesh, which may consist of multiple <code>GltfPrimitives</code> …","A glTF node with all of its child nodes, its <code>GltfMesh</code>, …","Adds support for glTF file loading to the app.","Part of a <code>GltfMesh</code> that consists of a <code>Mesh</code>, an optional …","Error when loading a texture. Might be due to a disabled …","Invalid image mime type.","Failed to load a file.","Missing sampler for an animation.","Binary blob is missing.","Failed to generate morph targets.","Failed to read bytes from an asset path.","Unsupported primitive mode.","Register a custom vertex attribute so that it is …","All animations loaded from the glTF file.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Direct children of the node.","","","","","","","","","","","","","","","","","","","","","Custom vertex attributes that will be recognized when …","","","","Default scene to be displayed.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Additional data.","Additional data.","Additional data.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Processes the asset in an asynchronous closure.","Material to apply to the <code>mesh</code>.","Additional data of the <code>material</code>.","All materials loaded from the glTF file.","Mesh of the node.","Topology to be rendered.","All meshes loaded from the glTF file.","","","","","","","Named animations loaded from the glTF file.","Named materials loaded from the glTF file.","Named meshes loaded from the glTF file.","Named nodes loaded from the glTF file.","Named scenes loaded from the glTF file.","All nodes loaded from the glTF file.","","","Primitives of the glTF mesh.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","All scenes loaded from the glTF file.","","","","","","","","List of compressed image formats handled by the loader.","","","","","","","","","","","","","","Local transform.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Content of the extra data.","","","","","","","","","","","","","The primitive mode.","Command that adds a child to an entity.","An <code>Iterator</code> of <code>Entity</code>s over the ancestors of an <code>Entity</code>.","Trait for removing, adding and replacing children and …","Trait that defines adding, changing and children and …","Fired whenever an <code>Entity</code> is added as a child to a parent.","Struct for building children entities and adding them to a …","Fired whenever a child <code>Entity</code> is moved to a new parent.","Fired whenever a child <code>Entity</code> is removed from its parent.","Contains references to the child entities of this entity.","Command that clears all children from an entity and …","An <code>Iterator</code> of <code>Entity</code>s over the descendants of an <code>Entity</code>.","Despawns the given entity’s children recursively","Despawns the given entity and all its children recursively","Trait that holds functions for despawning recursively down …","An <code>Event</code> that is fired whenever there is a change in the …","The base plugin for handling <code>Parent</code> and <code>Children</code> components","An extension trait for <code>Query</code> that adds hierarchy related …","Command that inserts a child at a given index of a parent…","Holds a reference to the parent entity of this entity. …","Command that pushes children to the end of the entity’s …","Command that removes children from an entity, and removes …","Command that removes the parent of an entity, and removes …","Command that clear all children from an entity, replacing …","When enabled, runs …","Print a warning for each <code>Entity</code> with a <code>T</code> component whose …","Struct for adding children to an entity directly through …","Adds a single child.","Adds a single child.","Adds a command to be executed, like <code>Commands::add</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Gets the parent <code>Entity</code> as a slice of length 1.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","System to print a warning for each <code>Entity</code> with a <code>T</code> …","<code>Entity</code> whose parent must be removed.","Child entity to add.","Removes all children from this entity. The <code>Children</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Despawns all descendants of the given entity.","Despawns the provided entity alongside all descendants.","Function for despawning an entity and all its children","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether to run …","Target entity","Target entity","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Gets the <code>Entity</code> ID of the parent.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Inserts children at the given index.","Inserts children at the given index.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an <code>Iterator</code> of <code>Entity</code>s over all of <code>entity</code>s …","Returns an <code>Iterator</code> of <code>Entity</code>s over all of <code>entity</code>s …","","","","","","","Returns a new <code>DescendantIter</code>.","Returns a new <code>AncestorIter</code>.","Constructs a new object","","","","","","Run criteria that only allows running when …","Parent entity to add the child to.","Returns the parent entity of this <code>ChildBuilder</code>.","Returns the parent entity of this <code>WorldChildBuilder</code>.","Pushes children to the back of the builder’s children. …","Pushes children to the back of the builder’s children. …","","","","","","","","","","","","","","","","","","","Removes the given children","Removes the given children","Removes the <code>Parent</code> of this entity.","Removes the <code>Parent</code> of this entity.","Removes all current children from this entity, replacing …","","","Sets the parent of this entity.","Sets the parent of this entity.","","","Sorts children stably in place using the provided …","Sorts children stably in place using the provided key …","Sorts children stably in place using the provided key …","Sorts children unstably in place using the provided …","Sorts children unstably in place using the provided key …","Spawns an entity with the given bundle and inserts it into …","Spawns an entity with the given bundle and inserts it into …","Spawns an <code>Entity</code> with no components and inserts it into …","Spawns an <code>Entity</code> with no components and inserts it into …","Swaps the child at <code>a_index</code> with the child at <code>b_index</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Takes a closure which builds children for this entity …","Takes a closure which builds children for this entity …","The child that was added","The child that was removed","The child that was moved","The parent the child was added to","The parent the child was added to","The parent the child was removed from","The parent the child was removed from","Stores the position data of the input devices of type <code>T</code>.","The current “press” state of an element","A “press-able” input of type <code>T</code>.","Adds keyboard and mouse input to an App","Label for systems that update the input data.","The largest possible axis value.","The smallest possible axis value.","The button is pressed.","The button is not pressed.","Returns <code>true</code> if any item in <code>inputs</code> has just been pressed.","Returns <code>true</code> if any item in <code>inputs</code> has just been released.","Returns <code>true</code> if any item in <code>inputs</code> has been pressed.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Clears the <code>just pressed</code> and <code>just released</code> data for every …","Clears the <code>just_pressed</code> state of the <code>input</code> and returns <code>true</code>…","Clears the <code>just_released</code> state of the <code>input</code> and returns …","","","","","","","","","","","","","","Common run conditions","","","","","","","","","","","","","","","","","","Returns an iterator of all the input devices that have …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","The gamepad input functionality.","Returns the position data of the provided <code>input_device</code>.","","","An iterator visiting every just pressed input in arbitrary …","An iterator visiting every just released input in …","An iterator visiting every pressed input in arbitrary …","","","","","Returns the unclamped position data of the provided …","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Is this button pressed?","","","Returns <code>true</code> if the <code>input</code> has just been pressed.","Returns <code>true</code> if the <code>input</code> has just been released.","The keyboard input functionality.","","","The mouse input functionality.","","","","","","Most commonly used re-exported types.","Registers a press for the given <code>input</code>.","Returns <code>true</code> if the <code>input</code> has been pressed.","","","","","","","","","","","","","","","","","","","","Registers a release for the given <code>input</code>.","Registers a release for all currently pressed inputs.","Removes the position data of the <code>input_device</code>, returning …","Clears the <code>pressed</code>, <code>just_pressed</code> and <code>just_released</code> data of …","Clears the <code>pressed</code>, <code>just_pressed</code>, and <code>just_released</code> data …","","Sets the position data of the <code>input_device</code> to <code>position_data</code>…","","","","","","","","","","","","","The touch input functionality.","The touchpad input functionality.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Run condition that is active if <code>Input::just_pressed</code> is …","Run condition that is active if <code>Input::just_released</code> is …","Run condition that is active if <code>Input::pressed</code> is true for …","Stateful run condition that can be toggled via a input …","Add a rumble to the given gamepad.","An axis of the gamepad has been triggered.","Settings for a <code>GamepadAxis</code>.","Errors that occur when setting axis settings for gamepad …","A button of the gamepad has been triggered.","Settings for a <code>GamepadButton</code>.","Manages settings for gamepad buttons.","Errors that occur when setting button settings for gamepad …","The C button.","The gamepad is connected.","A gamepad has been connected or disconnected.","The down button of the D-Pad.","The left button of the D-Pad.","The right button of the D-Pad.","The up button of the D-Pad.","The given parameter <code>deadzone_lowerbound</code> was not in range …","Parameter <code>deadzone_upperbound</code> was not less than or equal …","The given parameter <code>deadzone_lowerbound</code> was not in range …","The gamepad is disconnected.","The right action button of the action pad (i.e. PS: …","A gamepad with an associated <code>ID</code>.","An axis of a <code>Gamepad</code>.","Gamepad event for when the “value” on the axis changes …","A type of a <code>GamepadAxis</code>.","A button of a <code>Gamepad</code>.","Gamepad event for when the “value” (amount of …","A gamepad button input event.","A type of a <code>GamepadButton</code>.","The connection status of a gamepad.","A Gamepad connection event. Created when a connection to a …","A gamepad event.","Metadata associated with a <code>Gamepad</code>.","The intensity at which a gamepad’s force-feedback motors …","An event that controls force-feedback rumbling of a <code>Gamepad</code>…","Settings for all <code>Gamepad</code>s.","A collection of connected <code>Gamepad</code>s.","The horizontal value of the left stick.","The vertical value of the left stick.","The left thumb stick button.","The first left trigger.","The second left trigger.","The value of the left <code>Z</code> button.","Parameter <code>livezone_lowerbound</code> was not less than or equal …","The given parameter <code>livezone_lowerbound</code> was not in range …","The given parameter <code>deadzone_lowerbound</code> was not in range …","Rumble both gamepad motors at maximum intensity.","The mode button.","The upper action button of the action pad (i.e. PS: …","Miscellaneous buttons, considered non-standard (i.e. Extra …","Non-standard support for other axis types (i.e. HOTAS …","The given parameter was not in range 0.0..=1.0.","Parameter <code>release_threshold</code> was not less than or equal to …","The given parameter was not in range 0.0..=1.0.","The horizontal value of the right stick.","The vertical value of the right stick.","The right thumb stick button.","The first right trigger.","The second right trigger.","The value of the right <code>Z</code> button.","Rumble the strong motor at maximum intensity.","The select button.","The bottom action button of the action pad (i.e. PS: …","The start button.","Stop all running rumbles on the given <code>Gamepad</code>.","The given parameter was not in range 0.0..=2.0.","Rumble the weak motor at maximum intensity.","The left action button of the action pad (i.e. PS: Square, …","The Z button.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The user defined axis settings.","The type of the axis.","The type of the triggered axis.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The gamepad button assigned to the event.","The user defined button axis settings.","The user defined button settings.","The type of the button.","The type of the triggered button.","Clamps the <code>raw_value</code> according to the <code>AxisSettings</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Is the gamepad connected?","The change in the gamepads connection.","Returns <code>true</code> if the <code>gamepad</code> is connected.","","","","","","","","","","","","","","","","","Get the value above which inputs will be rounded up to 0.0.","Get the value below which positive inputs will be rounded …","","","","","","","","","","","","","","","","","","","","","","The default axis settings.","The default button axis settings.","The default button settings.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Is the gamepad disconnected?","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Filters the <code>new_value</code> based on the <code>old_value</code>, according to …","Filters the <code>new_value</code> based on the <code>old_value</code>, according to …","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the <code>Gamepad</code> associated with this request.","The gamepad on which the button is located on.","The gamepad on which the axis is located on.","The gamepad whose connection status changed.","The gamepad on which the axis is triggered.","The gamepad on which the button is triggered.","Uses <code>GamepadAxisChangedEvent</code>s to update the relevant <code>Input</code> …","Uses <code>GamepadButtonChangedEvent</code>s to update the relevant …","Handles <code>GamepadConnectionEvent</code>s and updates gamepad …","Splits the <code>GamepadEvent</code> event stream into it’s component …","Returns the <code>AxisSettings</code> of the <code>axis</code>.","Returns the <code>ButtonAxisSettings</code> of the <code>button</code>.","Returns the <code>ButtonSettings</code> of the <code>button</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The high value at which to apply rounding.","The <code>ID</code> of the gamepad.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an iterator over registered <code>Gamepad</code>s in an …","","","","","","","","","","","","","","","","","Get the value below which negative inputs will be rounded …","Get the value above which inputs will be rounded up to 1.0.","The low value at which to apply rounding.","","","","","","","","","","","","","","","","","The name of the gamepad if this one is connected.","The name of the gamepad.","","","","","","","","","","","","","","","","","Creates a new <code>Gamepad</code>.","Creates a new <code>GamepadButton</code>.","Creates a new <code>GamepadAxis</code>.","Creates a new <code>ButtonSettings</code> instance.","Creates a new <code>AxisSettings</code> instance.","Creates a <code>GamepadConnectionEvent</code>.","Creates a <code>GamepadAxisChangedEvent</code>.","Creates a <code>GamepadButtonChangedEvent</code>.","","","","","","Get the button input threshold above which the button is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the button input threshold below which the button is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Try to set the value above which inputs will be rounded up …","Try to set the value below which positive inputs will be …","Try to set the value below which negative inputs will be …","Try to set the value above which inputs will be rounded up …","Try to set the button input threshold above which the …","Try to set the button input threshold below which the …","Try to set the minimum value by which input must change …","","","","","","","","","","","","","","","","","The pressed state of the button.","Creates a new rumble intensity with strong motor intensity …","The rumble intensity of the strong gamepad motor.","Get the minimum value by which input must change before …","The threshold to apply rounding.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Try to set the value above which inputs will be rounded up …","Try to set the value below which positive inputs will be …","Try to set the value below which negative inputs will be …","Try to set the value above which inputs will be rounded up …","Try to set the button input threshold above which the …","Try to set the button input threshold below which the …","Try to set the minimum value by which input must change …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The value of the axis.","The value of the button.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new rumble intensity with weak motor intensity …","The rumble intensity of the weak gamepad motor.","The value of the <code>deadzone_lowerbound</code> parameter.","The value of the <code>deadzone_upperbound</code> parameter.","The value of the <code>livezone_lowerbound</code> parameter.","The value of the <code>livezone_upperbound</code> parameter.","The value of the <code>press_threshold</code> parameter.","The value of the <code>release_threshold</code> parameter.","How long the gamepad should rumble.","The gamepad to rumble.","The gamepad to stop rumble.","How intense the rumble should be.","The <code>A</code> key.","The <code>AbntC1</code> key.","The <code>AbntC2</code> key.","The <code>Left Alt</code> key. Maps to <code>Left Option</code> on Mac.","The <code>Right Alt</code> key. Maps to <code>Right Option</code> on Mac.","The <code>Apostrophe</code> / <code>&#39;</code> key.","The <code>Apps</code> key.","The <code>Asterisk</code> / <code>*</code> key.","The <code>At</code> / <code>@</code> key.","The <code>Ax</code> key.","The <code>B</code> key.","The <code>Back</code> / <code>Backspace</code> key.","The <code>Backslash</code> / <code>\\\\</code> key.","The <code>Left Bracket</code> / <code>[</code> key.","The <code>Right Bracket</code> / <code>]</code> key.","The <code>C</code> key.","The <code>Calculator</code> key.","The <code>Capital</code> key.","The <code>Caret</code> / <code>^</code> key.","The <code>Colon</code> / <code>:</code> key.","The <code>Comma</code> / <code>,</code> key.","The <code>Compose</code> key on Linux.","The <code>Left Control</code> key.","The <code>Right Control</code> key.","The <code>Convert</code> key.","The <code>Copy</code> key.","The <code>Cut</code> key.","The <code>D</code> key.","The <code>Delete</code> key.","The <code>Down</code> / <code>Down Arrow</code> key.","The <code>E</code> key.","The <code>End</code> key.","The <code>Equals</code> / <code>=</code> key.","The <code>Escape</code> / <code>ESC</code> key, next to the <code>F1</code> key.","The <code>F</code> key.","The <code>F1</code> key.","The <code>F10</code> key.","The <code>F11</code> key.","The <code>F12</code> key.","The <code>F13</code> key.","The <code>F14</code> key.","The <code>F15</code> key.","The <code>F16</code> key.","The <code>F17</code> key.","The <code>F18</code> key.","The <code>F19</code> key.","The <code>F2</code> key.","The <code>F20</code> key.","The <code>F21</code> key.","The <code>F22</code> key.","The <code>F23</code> key.","The <code>F24</code> key.","The <code>F3</code> key.","The <code>F4</code> key.","The <code>F5</code> key.","The <code>F6</code> key.","The <code>F7</code> key.","The <code>F8</code> key.","The <code>F9</code> key.","The <code>G</code> key.","The <code>Grave</code> / <code>Backtick</code> / <code>`</code> key.","The <code>H</code> key.","The <code>Home</code> key.","The <code>I</code> key.","The <code>Insert</code> key, next to the <code>Backspace</code> key.","The <code>J</code> key.","The <code>K</code> key.","The <code>Kana</code> key.","The <code>Kanji</code> key.","The <code>0</code> key over the letters.","The <code>1</code> key over the letters.","The <code>2</code> key over the letters.","The <code>3</code> key over the letters.","The <code>4</code> key over the letters.","The <code>5</code> key over the letters.","The <code>6</code> key over the letters.","The <code>7</code> key over the letters.","The <code>8</code> key over the letters.","The <code>9</code> key over the letters.","The key code of a <code>KeyboardInput</code>.","A keyboard input event.","The <code>L</code> key.","The <code>Left</code> / <code>Left Arrow</code> key.","The <code>M</code> key.","The <code>Mail</code> key.","The <code>MediaSelect</code> key.","The <code>MediaStop</code> key.","The <code>Minus</code> / <code>-</code> key.","The <code>Mute</code> key.","The <code>MyComputer</code> key.","The <code>N</code> key.","The <code>NavigateBackward</code> / <code>Next</code> key.","The <code>NavigateForward</code> / <code>Prior</code> key.","The <code>NextTrack</code> key.","The <code>NoConvert</code> key.","The <code>Numlock</code> key.","The <code>Numpad0</code> / <code>0</code> key.","The <code>Numpad1</code> / <code>1</code> key.","The <code>Numpad2</code> / <code>2</code> key.","The <code>Numpad3</code> / <code>3</code> key.","The <code>Numpad4</code> / <code>4</code> key.","The <code>Numpad5</code> / <code>5</code> key.","The <code>Numpad6</code> / <code>6</code> key.","The <code>Numpad7</code> / <code>7</code> key.","The <code>Numpad8</code> / <code>8</code> key.","The <code>Numpad9</code> / <code>9</code> key.","The <code>NumpadAdd</code> / <code>+</code> key.","The <code>NumpadComma</code> / <code>,</code> key.","The <code>NumpadDecimal</code> / <code>.</code> key.","The <code>NumpadDivide</code> / <code>/</code> key.","The <code>NumpadEnter</code> key.","The <code>NumpadEquals</code> / <code>=</code> key.","The <code>NumpadMultiply</code> / <code>*</code> key.","The <code>NumpadSubtract</code> / <code>-</code> key.","The <code>O</code> key.","The <code>Oem102</code> key.","The <code>P</code> key.","The <code>PageDown</code> key.","The <code>PageUp</code> key.","The <code>Paste</code> key.","The <code>Pause</code> / <code>Break</code> key, next to the <code>Scroll</code> key.","The <code>Period</code> / <code>.</code> key.","The <code>PlayPause</code> key.","The <code>Plus</code> / <code>+</code> key.","The <code>Power</code> key.","The <code>PrevTrack</code> key.","The <code>Q</code> key.","The <code>R</code> key.","The <code>Return</code> / <code>Enter</code> key.","The <code>Right</code> / <code>Right Arrow</code> key.","The <code>S</code> key.","The scan code of a <code>KeyboardInput</code>.","The <code>Scroll</code> / <code>Scroll Lock</code> key.","The <code>Semicolon</code> / <code>;</code> key.","The <code>Left Shift</code> key.","The <code>Right Shift</code> key.","The <code>Slash</code> / <code>/</code> key.","The <code>Sleep</code> key.","The <code>Snapshot</code> / <code>Print Screen</code> key.","The <code>Space</code> / <code>Spacebar</code> / <code> </code> key.","The <code>Stop</code> key.","The <code>Left Super</code> key. Generic keyboards usually display this …","The <code>Right Super</code> key. Generic keyboards usually display …","The <code>Sysrq</code> key.","The <code>T</code> key.","The <code>Tab</code> / <code>   </code> key.","The <code>U</code> key.","The <code>Underline</code> / <code>_</code> key.","The <code>Unlabeled</code> key.","The <code>Up</code> / <code>Up Arrow</code> key.","The <code>V</code> key.","The <code>VolumeDown</code> key.","The <code>VolumeUp</code> key.","The <code>W</code> key.","The <code>Wake</code> key.","The <code>WebBack</code> key.","The <code>WebFavorites</code> key.","The <code>WebForward</code> key.","The <code>WebHome</code> key.","The <code>WebRefresh</code> key.","The <code>WebSearch</code> key.","The <code>WebStop</code> key.","The <code>X</code> key.","The <code>Y</code> key.","The <code>Yen</code> key.","The <code>Z</code> key.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","The key code of the key.","Updates the <code>Input&lt;KeyCode&gt;</code> resource with the latest …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The scan code of the key.","","","","","","","","","","The press state of the key.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Window that received the input.","The left mouse button.","The line scroll unit.","The middle mouse button.","A button on a mouse device.","A mouse button input event.","An event reporting the change in physical position of a …","The scroll unit.","A mouse wheel event.","Another mouse button with the associated number.","The pixel scroll unit.","The right mouse button.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The mouse button assigned to the event.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The change in the position of the pointing device since …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Updates the <code>Input&lt;MouseButton&gt;</code> resource with the latest …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The pressed state of the button.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The mouse scroll unit.","","","","","","","","","","","","","","","","","Window that received the input.","Window that received the input.","The horizontal scroll value.","The vertical scroll value.","The <code>A</code> key.","The <code>AbntC1</code> key.","The <code>AbntC2</code> key.","The <code>Left Alt</code> key. Maps to <code>Left Option</code> on Mac.","The <code>Right Alt</code> key. Maps to <code>Right Option</code> on Mac.","The <code>Apostrophe</code> / <code>&#39;</code> key.","The <code>Apps</code> key.","The <code>Asterisk</code> / <code>*</code> key.","The <code>At</code> / <code>@</code> key.","The <code>Ax</code> key.","Stores the position data of the input devices of type <code>T</code>.","The <code>B</code> key.","The <code>Back</code> / <code>Backspace</code> key.","The <code>Backslash</code> / <code>\\\\</code> key.","The <code>Left Bracket</code> / <code>[</code> key.","The <code>Right Bracket</code> / <code>]</code> key.","The C button.","The <code>C</code> key.","The <code>Calculator</code> key.","The <code>Capital</code> key.","The <code>Caret</code> / <code>^</code> key.","The <code>Colon</code> / <code>:</code> key.","The <code>Comma</code> / <code>,</code> key.","The <code>Compose</code> key on Linux.","The <code>Left Control</code> key.","The <code>Right Control</code> key.","The <code>Convert</code> key.","The <code>Copy</code> key.","The <code>Cut</code> key.","The <code>D</code> key.","The down button of the D-Pad.","The left button of the D-Pad.","The right button of the D-Pad.","The up button of the D-Pad.","The <code>Delete</code> key.","The <code>Down</code> / <code>Down Arrow</code> key.","The <code>E</code> key.","The right action button of the action pad (i.e. PS: …","The <code>End</code> key.","The <code>Equals</code> / <code>=</code> key.","The <code>Escape</code> / <code>ESC</code> key, next to the <code>F1</code> key.","The <code>F</code> key.","The <code>F1</code> key.","The <code>F10</code> key.","The <code>F11</code> key.","The <code>F12</code> key.","The <code>F13</code> key.","The <code>F14</code> key.","The <code>F15</code> key.","The <code>F16</code> key.","The <code>F17</code> key.","The <code>F18</code> key.","The <code>F19</code> key.","The <code>F2</code> key.","The <code>F20</code> key.","The <code>F21</code> key.","The <code>F22</code> key.","The <code>F23</code> key.","The <code>F24</code> key.","The <code>F3</code> key.","The <code>F4</code> key.","The <code>F5</code> key.","The <code>F6</code> key.","The <code>F7</code> key.","The <code>F8</code> key.","The <code>F9</code> key.","The <code>G</code> key.","A gamepad with an associated <code>ID</code>.","An axis of a <code>Gamepad</code>.","A type of a <code>GamepadAxis</code>.","A button of a <code>Gamepad</code>.","A type of a <code>GamepadButton</code>.","A collection of connected <code>Gamepad</code>s.","The <code>Grave</code> / <code>Backtick</code> / <code>`</code> key.","The <code>H</code> key.","The <code>Home</code> key.","The <code>I</code> key.","A “press-able” input of type <code>T</code>.","The <code>Insert</code> key, next to the <code>Backspace</code> key.","The <code>J</code> key.","The <code>K</code> key.","The <code>Kana</code> key.","The <code>Kanji</code> key.","The <code>0</code> key over the letters.","The <code>1</code> key over the letters.","The <code>2</code> key over the letters.","The <code>3</code> key over the letters.","The <code>4</code> key over the letters.","The <code>5</code> key over the letters.","The <code>6</code> key over the letters.","The <code>7</code> key over the letters.","The <code>8</code> key over the letters.","The <code>9</code> key over the letters.","The key code of a <code>KeyboardInput</code>.","The <code>L</code> key.","The <code>Left</code> / <code>Left Arrow</code> key.","The left mouse button.","The horizontal value of the left stick.","The vertical value of the left stick.","The left thumb stick button.","The first left trigger.","The second left trigger.","The value of the left <code>Z</code> button.","The <code>M</code> key.","The <code>Mail</code> key.","The <code>MediaSelect</code> key.","The <code>MediaStop</code> key.","The middle mouse button.","The <code>Minus</code> / <code>-</code> key.","The mode button.","A button on a mouse device.","The <code>Mute</code> key.","The <code>MyComputer</code> key.","The <code>N</code> key.","The <code>NavigateBackward</code> / <code>Next</code> key.","The <code>NavigateForward</code> / <code>Prior</code> key.","The <code>NextTrack</code> key.","The <code>NoConvert</code> key.","The upper action button of the action pad (i.e. PS: …","The <code>Numlock</code> key.","The <code>Numpad0</code> / <code>0</code> key.","The <code>Numpad1</code> / <code>1</code> key.","The <code>Numpad2</code> / <code>2</code> key.","The <code>Numpad3</code> / <code>3</code> key.","The <code>Numpad4</code> / <code>4</code> key.","The <code>Numpad5</code> / <code>5</code> key.","The <code>Numpad6</code> / <code>6</code> key.","The <code>Numpad7</code> / <code>7</code> key.","The <code>Numpad8</code> / <code>8</code> key.","The <code>Numpad9</code> / <code>9</code> key.","The <code>NumpadAdd</code> / <code>+</code> key.","The <code>NumpadComma</code> / <code>,</code> key.","The <code>NumpadDecimal</code> / <code>.</code> key.","The <code>NumpadDivide</code> / <code>/</code> key.","The <code>NumpadEnter</code> key.","The <code>NumpadEquals</code> / <code>=</code> key.","The <code>NumpadMultiply</code> / <code>*</code> key.","The <code>NumpadSubtract</code> / <code>-</code> key.","The <code>O</code> key.","The <code>Oem102</code> key.","Miscellaneous buttons, considered non-standard (i.e. Extra …","Non-standard support for other axis types (i.e. HOTAS …","Another mouse button with the associated number.","The <code>P</code> key.","The <code>PageDown</code> key.","The <code>PageUp</code> key.","The <code>Paste</code> key.","The <code>Pause</code> / <code>Break</code> key, next to the <code>Scroll</code> key.","The <code>Period</code> / <code>.</code> key.","The <code>PlayPause</code> key.","The <code>Plus</code> / <code>+</code> key.","The <code>Power</code> key.","The <code>PrevTrack</code> key.","The <code>Q</code> key.","The <code>R</code> key.","The <code>Return</code> / <code>Enter</code> key.","The <code>Right</code> / <code>Right Arrow</code> key.","The right mouse button.","The horizontal value of the right stick.","The vertical value of the right stick.","The right thumb stick button.","The first right trigger.","The second right trigger.","The value of the right <code>Z</code> button.","The <code>S</code> key.","The scan code of a <code>KeyboardInput</code>.","The <code>Scroll</code> / <code>Scroll Lock</code> key.","The select button.","The <code>Semicolon</code> / <code>;</code> key.","The <code>Left Shift</code> key.","The <code>Right Shift</code> key.","The <code>Slash</code> / <code>/</code> key.","The <code>Sleep</code> key.","The <code>Snapshot</code> / <code>Print Screen</code> key.","The bottom action button of the action pad (i.e. PS: …","The <code>Space</code> / <code>Spacebar</code> / <code> </code> key.","The start button.","The <code>Stop</code> key.","The <code>Left Super</code> key. Generic keyboards usually display this …","The <code>Right Super</code> key. Generic keyboards usually display …","The <code>Sysrq</code> key.","The <code>T</code> key.","The <code>Tab</code> / <code>   </code> key.","A touch input event.","A collection of <code>Touch</code>es.","The <code>U</code> key.","The <code>Underline</code> / <code>_</code> key.","The <code>Unlabeled</code> key.","The <code>Up</code> / <code>Up Arrow</code> key.","The <code>V</code> key.","The <code>VolumeDown</code> key.","The <code>VolumeUp</code> key.","The <code>W</code> key.","The <code>Wake</code> key.","The <code>WebBack</code> key.","The <code>WebFavorites</code> key.","The <code>WebForward</code> key.","The <code>WebHome</code> key.","The <code>WebRefresh</code> key.","The <code>WebSearch</code> key.","The <code>WebStop</code> key.","The left action button of the action pad (i.e. PS: Square, …","The <code>X</code> key.","The <code>Y</code> key.","The <code>Yen</code> key.","The Z button.","The <code>Z</code> key.","The type of the axis.","The type of the button.","Describes how hard the screen was pressed.","The gamepad on which the button is located on.","The gamepad on which the axis is located on.","The <code>ID</code> of the gamepad.","The unique identifier of the finger.","The phase of the touch input.","The position of the finger on the touchscreen.","On iOS, the force is calibrated so that the same number …","The system canceled the tracking of the finger.","A finger stopped touching the touchscreen.","A force description of a <code>Touch</code> input.","A finger moved over the touchscreen.","If the platform reports the force as normalized, we have …","A finger started to touch the touchscreen.","A touch input.","A touch input event.","A phase of a <code>TouchInput</code>.","A collection of <code>Touch</code>es.","Checks if any touch input was just canceled.","Checks if any touch input was just pressed.","Checks if any touch input was just released.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The delta of the current <code>position</code> and the <code>previous_position</code>…","","","","","","","","","","","","","","The distance of the <code>start_position</code> and the current <code>position</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Retrieves the position of the first currently pressed …","","","","","","Returns the current <code>force</code> of the touch.","Describes how hard the screen was pressed.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","Returns the <code>Touch</code> input corresponding to the <code>id</code> if it is …","Returns the <code>Touch</code> input corresponding to the <code>id</code> if it has …","","","","","","","","Returns the <code>id</code> of the touch.","The unique identifier of the finger.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","An iterator visiting every pressed <code>Touch</code> input in …","","","","An iterator visiting every just canceled <code>Touch</code> input in …","An iterator visiting every just pressed <code>Touch</code> input in …","An iterator visiting every just released <code>Touch</code> input in …","Returns <code>true</code> if the input corresponding to the <code>id</code> has just …","Returns <code>true</code> if the input corresponding to the <code>id</code> has just …","Returns <code>true</code> if the input corresponding to the <code>id</code> has just …","","","","","","","","The phase of the touch input.","Returns the current <code>position</code> of the touch.","The position of the finger on the touchscreen.","Returns the <code>previous_force</code> of the touch.","Returns the <code>previous_position</code> of the touch.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the <code>start_force</code> of the touch.","Returns the <code>start_position</code> of the touch.","","","","","","","","","","","Updates the <code>Touches</code> resource with the latest <code>TouchInput</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The altitude (in radians) of the stylus.","The force of the touch, where a value of 1.0 represents …","The maximum possible force for a touch.","Touchpad magnification event with two-finger pinch gesture.","Touchpad rotation event with two-finger rotation gesture.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Describes the level of verbosity of a span or event.","Adds logging to Apps. This plugin is part of the …","","","","","","","Constructs an event at the debug level.","Constructs a span at the debug level.","","","","","","Constructs an event at the error level.","Constructs a span at the error level.","Filters logs using the <code>EnvFilter</code> format","Returns the argument unchanged.","","","Constructs an event at the info level.","Constructs a span at the info level.","","Calls <code>U::from(self)</code>.","","","","","Filters out logs that are “less than” the given level. …","","The Bevy Log Prelude.","","Constructs an event at the trace level.","Constructs a span at the trace level.","","","","","","Constructs an event at the warn level.","Constructs a span at the warn level.","Constructs an event at the debug level.","Constructs a span at the debug level.","Constructs an event at the error level.","Constructs a span at the error level.","Constructs an event at the info level.","Constructs a span at the info level.","Constructs an event at the trace level.","Constructs a span at the trace level.","Constructs an event at the warn level.","Constructs a span at the warn level.","The unit axes.","The unit axes.","The unit axes.","The unit axes.","The unit axes.","The unit axes.","The unit axes.","The unit axes.","The unit axes.","The unit axes.","A 2D affine transform, which can represent translation, …","Reduced-size version of <code>glam::Affine3A</code> for use when …","A 3D affine transform, which can represent translation, …","A 2-dimensional <code>bool</code> vector mask.","A 3-dimensional <code>bool</code> vector mask.","A 3-dimensional SIMD vector mask.","A 4-dimensional <code>bool</code> vector mask.","A 4-dimensional SIMD vector mask.","A 2D affine transform, which can represent translation, …","A 3D affine transform, which can represent translation, …","A 2x2 column major matrix.","A 3x3 column major matrix.","A 4x4 column major matrix.","A quaternion representing an orientation.","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","Euler rotation sequences.","All false.","All false.","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","The identity transform.","The identity transform.","A 3x3 identity matrix, where all diagonal elements are <code>1</code>, …","The identity transform.","The identity transform.","A 2x2 identity matrix, where all diagonal elements are <code>1</code>, …","A 3x3 identity matrix, where all diagonal elements are <code>1</code>, …","A 4x4 identity matrix, where all diagonal elements are <code>1</code>, …","The identity quaternion. Corresponds to no rotation.","All <code>f32::INFINITY</code>.","All <code>f64::INFINITY</code>.","All <code>f64::INFINITY</code>.","All <code>f64::INFINITY</code>.","A rectangle defined by two opposite corners.","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","All <code>f32::MAX</code>.","All <code>f64::MAX</code>.","All <code>f64::MAX</code>.","All <code>f64::MAX</code>.","All <code>i64::MAX</code>.","All <code>i64::MAX</code>.","All <code>i64::MAX</code>.","All <code>u64::MAX</code>.","All <code>u64::MAX</code>.","All <code>u64::MAX</code>.","All <code>f32::MIN</code>.","All <code>f64::MIN</code>.","All <code>f64::MIN</code>.","All <code>f64::MIN</code>.","All <code>i64::MIN</code>.","All <code>i64::MIN</code>.","All <code>i64::MIN</code>.","All <code>u64::MIN</code>.","All <code>u64::MIN</code>.","All <code>u64::MIN</code>.","A 2x2 column major matrix.","A 3x3 column major matrix.","A 3x3 column major matrix.","A 4x4 column major matrix.","All NAN:s.","All NAN:s.","All NAN:s.","All <code>f32::NAN</code>.","All NAN:s.","All NAN:s.","All NAN:s.","All NAN:s.","All NAN:s.","All NANs.","All <code>f64::NAN</code>.","All <code>f64::NAN</code>.","All <code>f64::NAN</code>.","All <code>f32::NEG_INFINITY</code>.","All <code>f64::NEG_INFINITY</code>.","All <code>f64::NEG_INFINITY</code>.","All <code>f64::NEG_INFINITY</code>.","All negative ones.","All negative ones.","All negative ones.","All negative ones.","All negative ones.","All negative ones.","All negative ones.","A unit vector pointing along the negative W axis.","A unit vector pointing along the negative W axis.","A unit vector pointing along the negative X axis.","A unit vector pointing along the negative X axis.","A unit vector pointing along the negative X axis.","A unit vector pointing along the negative X axis.","A unit vector pointing along the negative X axis.","A unit vector pointing along the negative X axis.","A unit vector pointing along the negative X axis.","A unit vector pointing along the negative Y axis.","A unit vector pointing along the negative Y axis.","A unit vector pointing along the negative Y axis.","A unit vector pointing along the negative Y axis.","A unit vector pointing along the negative Y axis.","A unit vector pointing along the negative Y axis.","A unit vector pointing along the negative Y axis.","A unit vector pointing along the negative Z axis.","A unit vector pointing along the negative Z axis.","A unit vector pointing along the negative Z axis.","A unit vector pointing along the negative Z axis.","A unit vector pointing along the negative Z axis.","All ones.","All ones.","All ones.","All ones.","All ones.","All ones.","All ones.","All ones.","All ones.","All ones.","A quaternion representing an orientation.","A ray is an infinite line starting at <code>origin</code>, going in …","A rectangle defined by two opposite corners.","All true.","All true.","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","A rectangle defined by two opposite corners.","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","A 2-dimensional vector.","","","","A 3-dimensional vector.","","","A 3-dimensional vector.","","A 4-dimensional vector.","","","","A unit vector pointing along the positive W axis.","A unit vector pointing along the positive W axis.","A unit vector pointing along the positive W axis.","A unit vector pointing along the positive X axis.","A unit vector pointing along the positive X axis.","A unit vector pointing along the positive X axis.","A unit vector pointing along the positive X axis.","A unit vector pointing along the positive X axis.","A unit vector pointing along the positive X axis.","A unit vector pointing along the positive X axis.","A unit vector pointing along the positive X axis.","A unit vector pointing along the positive X axis.","A unit vector pointing along the positive X axis.","Intrinsic three-axis rotation XYZ","Intrinsic three-axis rotation XZY","A unit vector pointing along the positive Y axis.","A unit vector pointing along the positive Y axis.","A unit vector pointing along the positive Y axis.","A unit vector pointing along the positive Y axis.","A unit vector pointing along the positive Y axis.","A unit vector pointing along the positive Y axis.","A unit vector pointing along the positive Y axis.","A unit vector pointing along the positive Y axis.","A unit vector pointing along the positive Y axis.","A unit vector pointing along the positive Y axis.","Intrinsic three-axis rotation YXZ","Intrinsic three-axis rotation YZX","A unit vector pointing along the positive Z axis.","A unit vector pointing along the positive Z axis.","A unit vector pointing along the positive Z axis.","A unit vector pointing along the positive Z axis.","A unit vector pointing along the positive Z axis.","A unit vector pointing along the positive Z axis.","A unit vector pointing along the positive Z axis.","The degenerate zero transform.","The degenerate zero transform.","A 3x3 matrix with all elements set to <code>0.0</code>.","All zeroes.","The degenerate zero transform.","The degenerate zero transform.","A 2x2 matrix with all elements set to <code>0.0</code>.","A 3x3 matrix with all elements set to <code>0.0</code>.","A 4x4 matrix with all elements set to <code>0.0</code>.","All zeroes.","All zeroes.","All zeroes.","All zeroes.","All zeroes.","All zeroes.","All zeroes.","All zeroes.","All zeroes.","Intrinsic three-axis rotation ZXY","Intrinsic three-axis rotation ZYX","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","","","","","","","Adds two quaternions.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Adds two 2x2 matrices.","Adds two 3x3 matrices.","Adds two 3x3 matrices.","Adds two 4x4 matrices.","Returns true if all the elements are true, false otherwise.","Returns true if all the elements are true, false otherwise.","Returns the angle (in radians) between two vectors.","Returns the angle (in radians) for the minimal rotation …","Returns the angle (in radians) between <code>self</code> and <code>rhs</code> in the …","Returns the angle (in radians) between two vectors.","Returns true if any of the elements are true, false …","Returns true if any of the elements are true, false …","Returns some vector that is orthogonal to the given one.","Returns some vector that is orthogonal to the given one.","Given a unit vector return two other vectors that together …","Given a unit vector return two other vectors that together …","Returns any unit vector that is orthogonal to the given …","Returns any unit vector that is orthogonal to the given …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","","","","","","","","","","","","","Casts all elements of <code>self</code> to <code>i64</code>.","Casts all elements of <code>self</code> to <code>i64</code>.","Casts all elements of <code>self</code> to <code>i64</code>.","Casts all elements of <code>self</code> to <code>i64</code>.","Casts all elements of <code>self</code> to <code>i64</code>.","Casts all elements of <code>self</code> to <code>i64</code>.","Casts all elements of <code>self</code> to <code>i64</code>.","Returns self as <code>IRect</code> (i32)","Returns self as <code>IRect</code> (i32)","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","","","","","","","","","","","","","","","","","Returns self as <code>Rect</code> (f32)","Returns self as <code>Rect</code> (f32)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Casts all elements of <code>self</code> to <code>u64</code>.","Casts all elements of <code>self</code> to <code>u64</code>.","Casts all elements of <code>self</code> to <code>u64</code>.","Casts all elements of <code>self</code> to <code>u64</code>.","Casts all elements of <code>self</code> to <code>u64</code>.","Casts all elements of <code>self</code> to <code>u64</code>.","Casts all elements of <code>self</code> to <code>u64</code>.","Returns self as <code>URect</code> (u32)","Returns self as <code>URect</code> (u32)","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","","","","","","","","","","","","","","","","","Returns a bitmask with the lowest 3 bits set from the …","Returns a bitmask with the lowest 4 bits set from the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>bool</code> vector mask types. ","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a vector containing the smallest integer greater …","Returns a vector containing the smallest integer greater …","Returns a vector containing the smallest integer greater …","Returns a vector containing the smallest integer greater …","The center point of the rectangle.","The center point of the rectangle.","The center point of the rectangle.","Component-wise clamping of values, similar to <code>f32::clamp</code>.","Component-wise clamping of values, similar to <code>f64::clamp</code>.","Component-wise clamping of values, similar to <code>f64::clamp</code>.","Component-wise clamping of values, similar to <code>f64::clamp</code>.","Component-wise clamping of values, similar to <code>i64::clamp</code>.","Component-wise clamping of values, similar to <code>i64::clamp</code>.","Component-wise clamping of values, similar to <code>i64::clamp</code>.","Component-wise clamping of values, similar to <code>u64::clamp</code>.","Component-wise clamping of values, similar to <code>u64::clamp</code>.","Component-wise clamping of values, similar to <code>u64::clamp</code>.","Returns a vector with a length no less than <code>min</code> and no …","Returns a vector with a length no less than <code>min</code> and no …","Returns a vector with a length no less than <code>min</code> and no …","Returns a vector with a length no less than <code>min</code> and no …","Returns a vector with a length no more than <code>max</code>","Returns a vector with a length no more than <code>max</code>","Returns a vector with a length no more than <code>max</code>","Returns a vector with a length no more than <code>max</code>","Returns a vector with a length no less than <code>min</code>","Returns a vector with a length no less than <code>min</code>","Returns a vector with a length no less than <code>min</code>","Returns a vector with a length no less than <code>min</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns the matrix column for the given <code>index</code>.","Returns the matrix column for the given <code>index</code>.","Returns the matrix column for the given <code>index</code>.","Returns the matrix column for the given <code>index</code>.","Returns a mutable reference to the matrix column for the …","Returns a mutable reference to the matrix column for the …","Returns a mutable reference to the matrix column for the …","Returns a mutable reference to the matrix column for the …","Returns the quaternion conjugate of <code>self</code>. For a unit …","Check if a point lies within this rectangle, inclusive of …","Check if a point lies within this rectangle, inclusive of …","Check if a point lies within this rectangle, inclusive of …","Returns a vector with signs of <code>rhs</code> and the magnitudes of …","Returns a vector with signs of <code>rhs</code> and the magnitudes of …","Returns a vector with signs of <code>rhs</code> and the magnitudes of …","Returns a vector with signs of <code>rhs</code> and the magnitudes of …","","","","","","","","","","","","","","","","","","","","","","","","","","Computes the cross product of <code>self</code> and <code>rhs</code>.","Computes the cross product of <code>self</code> and <code>rhs</code>.","Computes the cross product of <code>self</code> and <code>rhs</code>.","Computes the cross product of <code>self</code> and <code>rhs</code>.","Provides types for building cubic splines for rendering …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Default <code>YXZ</code> as yaw (y-axis), pitch (x-axis), roll (z-axis).","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the determinant of <code>self</code>.","Returns the determinant of <code>self</code>.","Returns the determinant of <code>self</code>.","Returns the determinant of <code>self</code>.","A normalized vector representing the direction of the ray.","Computes the Euclidean distance between two points in …","Computes the Euclidean distance between two points in …","Computes the Euclidean distance between two points in …","Computes the Euclidean distance between two points in …","Compute the squared euclidean distance between two points …","Compute the squared euclidean distance between two points …","Compute the squared euclidean distance between two points …","Compute the squared euclidean distance between two points …","Compute the squared euclidean distance between two points …","Compute the squared euclidean distance between two points …","Compute the squared euclidean distance between two points …","","","Divides a quaternion by a scalar value. The quotient is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the element-wise quotient of [Euclidean division] …","Returns the element-wise quotient of [Euclidean division] …","Returns the element-wise quotient of [Euclidean division] …","Returns the element-wise quotient of [Euclidean division] …","Returns the element-wise quotient of [Euclidean division] …","Returns the element-wise quotient of [Euclidean division] …","Returns the element-wise quotient of [Euclidean division] …","Creates a 2x2 matrix from two column vectors.","Creates a 3x3 matrix from three column vectors.","Creates a 4x4 matrix from four column vectors.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>. The dot product …","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a quaternion from <code>x</code>, <code>y</code>, <code>z</code> and <code>w</code> values.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a vector containing <code>e^self</code> (the exponential …","Returns a vector containing <code>e^self</code> (the exponential …","Returns a vector containing <code>e^self</code> (the exponential …","Returns a vector containing <code>e^self</code> (the exponential …","Creates a 4D vector from <code>self</code> and the given <code>w</code> value.","Creates a 3D vector from <code>self</code> and the given <code>z</code> value.","Creates a 4D vector from <code>self</code> and the given <code>w</code> value.","Creates a 3D vector from <code>self</code> and the given <code>z</code> value.","Creates a 4D vector from <code>self</code> and the given <code>w</code> value.","Creates a 3D vector from <code>self</code> and the given <code>z</code> value.","Creates a 4D vector from <code>self</code> and the given <code>w</code> value.","<code>f32</code> vector, quaternion and matrix types. ","<code>f64</code> vector, quaternion and matrix types. ","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a vector containing the largest integer less than …","Returns a vector containing the largest integer less than …","Returns a vector containing the largest integer less than …","Returns a vector containing the largest integer less than …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a vector containing the fractional part of the …","Returns a vector containing the fractional part of the …","Returns a vector containing the fractional part of the …","Returns a vector containing the fractional part of the …","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Creates a <code>Vec3A</code> from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code> …","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","Creates a quaternion from a 3x3 rotation matrix inside a …","Creates an affine transform from the given rotation <code>angle</code>.","Creates an affine transformation matrix from the given 2D …","Creates an affine transform from the given rotation <code>angle</code>.","Creates a 2x2 matrix containing a rotation of <code>angle</code> (in …","Creates an affine transformation matrix from the given 2D …","Creates a 2D vector containing <code>[angle.cos(), angle.sin()]</code>. …","Creates an affine transform from the given 2D rotation …","Creates an affine transform from the given 2D rotation …","Creates a new vector from an array.","Creates a rotation quaternion from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from a normalized rotation …","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from a normalized rotation …","Creates an affine transformation matrix containing a 3D …","Create a quaternion for a normalized rotation <code>axis</code> and …","Create a new rectangle from its center and half-size.","Create a new rectangle from its center and half-size.","Create a new rectangle from its center and half-size.","Create a new rectangle from its center and size.","Create a new rectangle from its center and size.","Create a new rectangle from its center and size.","Creates an affine transform from three column vectors.","Creates an affine transform from three column vectors.","Creates a 3x3 matrix from three column vectors.","Creates an affine transform from three column vectors.","Creates an affine transform from three column vectors.","Creates a 2x2 matrix from two column vectors.","Creates a 3x3 matrix from three column vectors.","Creates a 4x4 matrix from four column vectors.","Creates an affine transform from a <code>[f32; 6]</code> array stored …","Creates an affine transform from a <code>[f32; 12]</code> array stored …","Creates a 3x3 matrix from a <code>[f32; 9]</code> array stored in …","Creates an affine transform from a <code>[f64; 6]</code> array stored …","Creates an affine transform from a <code>[f64; 12]</code> array stored …","Creates a 2x2 matrix from a <code>[f64; 4]</code> array stored in …","Creates a 3x3 matrix from a <code>[f64; 9]</code> array stored in …","Creates a 4x4 matrix from a <code>[f64; 16]</code> array stored in …","Creates an affine transform from a <code>[[f32; 2]; 3]</code> 2D array …","Creates an affine transform from a <code>[[f32; 3]; 4]</code> 3D array …","Creates a 3x3 matrix from a <code>[[f32; 3]; 3]</code> 3D array stored …","Creates an affine transform from a <code>[[f64; 2]; 3]</code> 2D array …","Creates an affine transform from a <code>[[f64; 3]; 4]</code> 3D array …","Creates a 2x2 matrix from a <code>[[f64; 2]; 2]</code> 2D array stored …","Creates a 3x3 matrix from a <code>[[f64; 3]; 3]</code> 3D array stored …","Creates a 4x4 matrix from a <code>[[f64; 4]; 4]</code> 4D array stored …","Creates an affine transform from the first 6 values in …","Creates an affine transform from the first 12 values in …","Creates a 3x3 matrix from the first 9 values in <code>slice</code>.","Creates an affine transform from the first 6 values in …","Creates an affine transform from the first 12 values in …","Creates a 2x2 matrix from the first 4 values in <code>slice</code>.","Creates a 3x3 matrix from the first 9 values in <code>slice</code>.","Creates a 4x4 matrix from the first 16 values in <code>slice</code>.","Create a new rectangle from two corner points.","Create a new rectangle from two corner points.","Create a new rectangle from two corner points.","Creates a 3x3 matrix with its diagonal set to <code>diagonal</code> and …","Creates a 2x2 matrix with its diagonal set to <code>diagonal</code> and …","Creates a 3x3 matrix with its diagonal set to <code>diagonal</code> and …","Creates a 4x4 matrix with its diagonal set to <code>diagonal</code> and …","Creates a 3D rotation matrix from the given euler rotation …","Creates a 3D rotation matrix from the given euler rotation …","Creates a affine transformation matrix containing a …","Creates a quaternion from the given Euler rotation …","Creates an affine transform from a 2x2 matrix (expressing …","Creates an affine transformation matrix from the given 2x2 …","Creates an affine transform from a 2x2 matrix (expressing …","Creates an affine transformation matrix from the given 2x2 …","Creates an affine transform from a 2x2 matrix (expressing …","Creates an affine transform from a 2x2 matrix (expressing …","The given <code>Mat3</code> must be an affine transform,","Creates an affine transform from a 3x3 matrix (expressing …","The given <code>DMat3</code> must be an affine transform,","Creates an affine transform from a 3x3 matrix (expressing …","Creates a 2x2 matrix from a 3x3 matrix, discarding the 2nd …","Creates an affine transformation matrix from the given 3x3 …","Creates a quaternion from a 3x3 rotation matrix.","Creates an affine transform from a 3x3 matrix (expressing …","Creates an affine transform from a 3x3 matrix (expressing …","The given <code>Mat3A</code> must be an affine transform,","The given <code>Mat4</code> must be an affine transform, i.e. contain …","Creates a 3x3 matrix from a 4x4 matrix, discarding the 4th …","The given <code>DMat4</code> must be an affine transform, i.e. contain …","Creates a 3x3 matrix from a 4x4 matrix, discarding the 4th …","Creates a quaternion from a 3x3 rotation matrix inside a …","Creates an affine transform from the given <code>rotation</code> …","Creates a 3D rotation matrix from the given quaternion.","Creates an affine transform from the given <code>rotation</code> …","Creates a 3D rotation matrix from the given quaternion.","Creates an affine transformation matrix from the given …","","","","","","","","","","","","","","","","","","","","","","","","","","Gets the minimal rotation for transforming <code>from</code> to <code>to</code>.  …","Gets the minimal rotation for transforming <code>from</code> to <code>to</code>.  …","Gets the minimal rotation for transforming <code>from</code> to either …","Creates an affine transform from the given 3D <code>rotation</code> and …","Creates an affine transform from the given 3D <code>rotation</code> and …","Creates an affine transformation matrix from the given 3D …","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates an affine transformation matrix containing a 3D …","Creates a quaternion from the <code>angle</code> (in radians) around …","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates an affine transformation matrix containing a 3D …","Creates a quaternion from the <code>angle</code> (in radians) around …","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates an affine transformation matrix containing a 3D …","Creates a quaternion from the <code>angle</code> (in radians) around …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates an affine transform that changes scale. Note that …","Creates an affine transform that changes scale. Note that …","Creates an affine transformation matrix from the given …","Creates an affine transform that changes scale. Note that …","Creates an affine transform that changes scale. Note that …","Creates an affine transformation matrix from the given …","Creates an affine transformation matrix containing the …","Creates a 2x2 matrix containing the combining non-uniform …","Creates an affine transform from the given 2D <code>scale</code>, …","Creates an affine transformation matrix from the given 2D …","Creates an affine transform from the given 2D <code>scale</code>, …","Creates an affine transformation matrix from the given 2D …","Creates an affine transform from the given 3D <code>scale</code>, …","Creates an affine transform from the given 3D <code>scale</code>, …","Creates an affine transformation matrix from the given 3D …","Create a quaternion that rotates <code>v.length()</code> radians around …","Creates a vector from the first 3 values in <code>slice</code>.","Creates a rotation quaternion from a slice.","Creates a vector from the first 2 values in <code>slice</code>.","Creates a vector from the first 3 values in <code>slice</code>.","Creates a vector from the first 4 values in <code>slice</code>.","Creates a vector from the first 2 values in <code>slice</code>.","Creates a vector from the first 3 values in <code>slice</code>.","Creates a vector from the first 4 values in <code>slice</code>.","Creates a vector from the first 2 values in <code>slice</code>.","Creates a vector from the first 3 values in <code>slice</code>.","Creates a vector from the first 4 values in <code>slice</code>.","Creates an affine transformation from the given 2D …","Creates an affine transformation from the given 3D …","Creates an affine transformation matrix from the given 2D …","Creates an affine transformation from the given 2D …","Creates an affine transformation from the given 3D …","Creates an affine transformation matrix from the given 2D …","Creates an affine transformation matrix from the given 3D …","Creates a new rotation quaternion from a 4D vector.","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new rotation quaternion.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Retrieve a point at the given distance along the ray.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Rectangle half-size.","Rectangle half-size.","Rectangle half-size.","","","","","","","","","","","","Rectangle height (max.y - min.y).","Rectangle height (max.y - min.y).","Rectangle height (max.y - min.y).","<code>i32</code> vector types. ","<code>i64</code> vector types. ","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new rectangle with a constant inset.","Create a new rectangle with a constant inset.","Create a new rectangle with a constant inset.","Build a new rectangle formed of the intersection of this …","Build a new rectangle formed of the intersection of this …","Build a new rectangle formed of the intersection of this …","Returns the distance to the plane if the ray intersects it.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the inverse of this transform.","Return the inverse of this transform.","Returns the inverse of <code>self</code>.","Return the inverse of this transform.","Return the inverse of this transform.","Returns the inverse of <code>self</code>.","Returns the inverse of <code>self</code>.","Returns the inverse of <code>self</code>.","Returns the inverse of a normalized quaternion.","Calculates the inverse transpose of the 3x3 matrix and …","Check if the rectangle is empty.","Check if the rectangle is empty.","Check if the rectangle is empty.","Returns <code>true</code> if, and only if, all elements are finite.","Returns <code>true</code> if, and only if, all elements are finite.","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite.  If …","Returns <code>true</code> if, and only if, all elements are finite.","Returns <code>true</code> if, and only if, all elements are finite.","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite.  If …","Returns <code>true</code> if, and only if, all elements are finite.  If …","Returns <code>true</code> if, and only if, all elements are finite.  If …","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Performs <code>is_nan</code> on each element of self, returning a …","Performs <code>is_nan</code> on each element of self, returning a …","Performs <code>is_nan</code> on each element of self, returning a …","Performs <code>is_nan</code> on each element of self, returning a …","","Returns a bitmask with the lowest 3 bits set to the sign …","Returns a bitmask with the lowest 2 bits set to the sign …","Returns a bitmask with the lowest 3 bits set to the sign …","Returns a bitmask with the lowest 4 bits set to the sign …","Returns a bitmask with the lowest 2 bits set to the sign …","Returns a bitmask with the lowest 3 bits set to the sign …","Returns a bitmask with the lowest 4 bits set to the sign …","Returns whether <code>self</code> is length <code>1.0</code> or not.","Returns whether <code>self</code> of length <code>1.0</code> or not.","Returns whether <code>self</code> is length <code>1.0</code> or not.","Returns whether <code>self</code> is length <code>1.0</code> or not.","Returns whether <code>self</code> is length <code>1.0</code> or not.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Creates a left-handed view transform using a camera …","Creates a left-handed view transform using a camera …","Creates a left-handed view matrix using a camera position, …","Creates a right-handed view transform using a camera …","Creates a right-handed view transform using a camera …","Creates a right-handed view matrix using a camera …","Creates a left-handed view transform using a camera …","Creates a left-handed view transform using a camera …","Creates a left-handed view matrix using a camera position, …","Creates a right-handed view transform using a camera …","Creates a right-handed view transform using a camera …","Creates a right-handed view matrix using a camera …","Creates a 2x2 matrix from two column vectors.","Creates a 3x3 matrix from three column vectors.","Creates a 3x3 matrix from three column vectors.","Creates a 4x4 matrix from four column vectors.","","","Scaling, rotation, shears, and other non-translation …","","","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","The maximum corner point of the rect.","The maximum corner point of the rect.","The maximum corner point of the rect.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","The minimum corner point of the rect.","The minimum corner point of the rect.","The minimum corner point of the rect.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Multiplies two quaternions. If they each represent a …","Multiplies a quaternion by a scalar value.","Multiplies a quaternion and a 3D vector, returning the …","","","","","","","","","","","","","","","","","","","Fused multiply-add. Computes <code>(self * a) + b</code> element-wise …","Fused multiply-add. Computes <code>(self * a) + b</code> element-wise …","Fused multiply-add. Computes <code>(self * a) + b</code> element-wise …","Fused multiply-add. Computes <code>(self * a) + b</code> element-wise …","","","","","","","","","","","","","","","Multiplies two quaternions. If they each represent a …","","","","","","","","","","","","","","","","","","","Multiplies two 2x2 matrices.","Multiplies two 3x3 matrices.","Multiplies two 3x3 matrices.","Multiplies two 4x4 matrices.","Multiplies two quaternions. If they each represent a …","Multiplies a 3x3 matrix by a scalar.","Multiplies a 2x2 matrix by a scalar.","Multiplies a 3x3 matrix by a scalar.","Multiplies a 4x4 matrix by a scalar.","Transforms a 2D vector.","Transforms a 3D vector.","Transforms a 3D vector.","Multiplies a quaternion and a 3D vector, returning the …","Transforms a <code>Vec3A</code>.","Transforms a 4D vector.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new rectangle from two corner points.","Create a new rectangle from two corner points.","Create a new rectangle from two corner points.","Creates a new vector mask.","Creates a new vector mask.","Creates a new vector.","Creates a new vector.","Creates a new vector.","Creates a new vector.","Creates a new vector.","Creates a new vector.","Creates a new vector.","Creates a new vector.","Creates a new vector.","Creates a new vector.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The origin of the ray.","Creates a left-handed orthographic projection matrix with …","Creates a right-handed orthographic projection matrix with …","Creates a right-handed orthographic projection matrix with …","Returns a vector that is equal to <code>self</code> rotated by 90 …","Returns a vector that is equal to <code>self</code> rotated by 90 …","The perpendicular dot product of <code>self</code> and <code>rhs</code>. Also known …","The perpendicular dot product of <code>self</code> and <code>rhs</code>. Also known …","Creates an infinite left-handed perspective projection …","Creates an infinite left-handed perspective projection …","Creates an infinite reverse right-handed perspective …","Creates an infinite right-handed perspective projection …","Creates a left-handed perspective projection matrix with …","Creates a right-handed perspective projection matrix with …","Creates a right-handed perspective projection matrix with […","Returns a vector containing each element of <code>self</code> raised to …","Returns a vector containing each element of <code>self</code> raised to …","Returns a vector containing each element of <code>self</code> raised to …","Returns a vector containing each element of <code>self</code> raised to …","The <code>bevy_math</code> prelude.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Transforms the given 3D vector as a point, applying …","Creates a quaternion from <code>x</code>, <code>y</code>, <code>z</code> and <code>w</code> values.","Returns a vector containing the reciprocal <code>1.0/n</code> of each …","Returns a vector containing the reciprocal <code>1.0/n</code> of each …","Returns a vector containing the reciprocal <code>1.0/n</code> of each …","Returns a vector containing the reciprocal <code>1.0/n</code> of each …eturns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the element-wise remainder of Euclidean division …","Returns the element-wise remainder of Euclidean division …","Returns the element-wise remainder of Euclidean division …","Returns the element-wise remainder of Euclidean division …","Returns the element-wise remainder of Euclidean division …","Returns the element-wise remainder of Euclidean division …","Returns the element-wise remainder of Euclidean division …","Returns <code>rhs</code> rotated by the angle of <code>self</code>. If <code>self</code> is …","Returns <code>rhs</code> rotated by the angle of <code>self</code>. If <code>self</code> is …","Returns a vector containing the nearest integer to a …","Returns a vector containing the nearest integer to a …","Returns a vector containing the nearest integer to a …","Returns a vector containing the nearest integer to a …","Returns the matrix row for the given <code>index</code>.","Returns the matrix row for the given <code>index</code>.","Returns the matrix row for the given <code>index</code>.","Returns the matrix row for the given <code>index</code>.","Returns a vector containing the saturating addition of <code>self</code>…","Returns a vector containing the saturating addition of <code>self</code>…","Returns a vector containing the saturating addition of <code>self</code>…","Returns a vector containing the saturating addition of <code>self</code>…","Returns a vector containing the saturating addition of <code>self</code>…","Returns a vector containing the saturating addition of <code>self</code>…","Returns a vector containing the saturating division of <code>self</code>…","Returns a vector containing the saturating division of <code>self</code>…","Returns a vector containing the saturating division of <code>self</code>…","Returns a vector containing the saturating division of <code>self</code>…","Returns a vector containing the saturating division of <code>self</code>…","Returns a vector containing the saturating division of <code>self</code>…","Returns a vector containing the saturating multiplication …","Returns a vector containing the saturating multiplication …","Returns a vector containing the saturating multiplication …","Returns a vector containing the saturating multiplication …","Returns a vector containing the saturating multiplication …","Returns a vector containing the saturating multiplication …","Returns a vector containing the saturating subtraction of …","Returns a vector containing the saturating subtraction of …","Returns a vector containing the saturating subtraction of …","Returns a vector containing the saturating subtraction of …","Returns a vector containing the saturating subtraction of …","Returns a vector containing the saturating subtraction of …","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets the element at <code>index</code>.","","Sets the element at <code>index</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Rectangle size.","Rectangle size.","Rectangle size.","Performs a spherical linear interpolation between <code>self</code> and …","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","","","","","","","Subtracts the <code>rhs</code> quaternion from <code>self</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Subtracts two 2x2 matrices.","Subtracts two 3x3 matrices.","Subtracts two 3x3 matrices.","Subtracts two 4x4 matrices.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Traits adding swizzle methods to all vector types. ","Tests the value at <code>index</code>.","Tests the value at <code>index</code>.","<code>[x, y, z]</code>","<code>[x, y, z, w]</code>","<code>[x, y]</code>","<code>[x, y, z]</code>","<code>[x, y, z, w]</code>","<code>[x, y]</code>","<code>[x, y, z]</code>","<code>[x, y, z, w]</code>","<code>[x, y]</code>","<code>[x, y, z]</code>","<code>[x, y, z, w]</code>","Returns the rotation axis (normalized) and angle (in …","Creates a <code>[f32; 6]</code> array storing data in column major …","Creates a <code>[f32; 12]</code> array storing data in column major …","Creates a <code>[f32; 9]</code> array storing data in column major …","Creates a <code>[f64; 6]</code> array storing data in column major …","Creates a <code>[f64; 12]</code> array storing data in column major …","Creates a <code>[f64; 4]</code> array storing data in column major …","Creates a <code>[f64; 9]</code> array storing data in column major …","Creates a <code>[f64; 16]</code> array storing data in column major …","Creates a <code>[[f32; 2]; 3]</code> 2D array storing data in column …","Creates a <code>[[f32; 3]; 4]</code> 3D array storing data in column …","Creates a <code>[[f32; 3]; 3]</code> 3D array storing data in column …","Creates a <code>[[f64; 2]; 3]</code> 2D array storing data in column …","Creates a <code>[[f64; 3]; 4]</code> 3D array storing data in column …","Creates a <code>[[f64; 2]; 2]</code> 2D array storing data in column …","Creates a <code>[[f64; 3]; 3]</code> 3D array storing data in column …","Creates a <code>[[f64; 4]; 4]</code> 4D array storing data in column …","Returns the rotation angles for the given euler rotation …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Extracts <code>scale</code>, <code>angle</code> and <code>translation</code> from <code>self</code>.","Extracts <code>scale</code>, <code>angle</code> and <code>translation</code> from <code>self</code>.","Extracts <code>scale</code>, <code>rotation</code> and <code>translation</code> from <code>self</code>.","Extracts <code>scale</code>, <code>rotation</code> and <code>translation</code> from <code>self</code>.","Extracts <code>scale</code>, <code>rotation</code> and <code>translation</code> from <code>self</code>. The …","Returns the rotation axis scaled by the rotation in …","","","","","","","","","","","","","","","","","","","","","","Calculates the transpose of the affine 4x3 matrix to a 3x4 …","","Transforms the given 2D point, applying shear, scale, …","Transforms the given 2D vector as a point.","Transforms the given 2D point, applying shear, scale, …","Transforms the given 2D vector as a point.","Transforms the given 3D points, applying shear, scale, …","Transforms the given 3D points, applying shear, scale, …","Transforms the given 3D vector as a point.","Transforms the given <code>Vec3A</code>, applying shear, scale, …","Transforms the given 2D vector, applying shear, scale and …","Rotates the given 2D vector.","Transforms the given 2D vector, applying shear, scale and …","Rotates the given 2D vector.","Transforms the given 3D vector, applying shear, scale and …","Transforms the given 3D vector, applying shear, scale and …","Transforms the give 3D vector as a direction.","Transforms the given <code>Vec3A</code>, applying shear, scale and …","Translation","","","","","Returns the transpose of <code>self</code>.","Returns the transpose of <code>self</code>.","Returns the transpose of <code>self</code>.","Returns the transpose of <code>self</code>.","Returns a vector containing the integer part each element …","Returns a vector containing the integer part each element …","Returns a vector containing the integer part each element …","Returns a vector containing the integer part each element …","Creates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …","Creates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …","Creates a 3D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …","Creates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …","Creates a 3D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …","Creates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …","Creates a 3D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>u32</code> vector types. ","<code>u64</code> vector types. ","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","Build a new rectangle formed of the union of this …","Build a new rectangle formed of the union of this …","Build a new rectangle formed of the union of this …","Build a new rectangle formed of the union of this …","Build a new rectangle formed of the union of this …","Build a new rectangle formed of the union of this …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Rectangle width (max.x - min.x).","Rectangle width (max.x - min.x).","Rectangle width (max.x - min.x).","Returns a vector containing the wrapping addition of <code>self</code> …","Returns a vector containing the wrapping addition of <code>self</code> …","Returns a vector containing the wrapping addition of <code>self</code> …","Returns a vector containing the wrapping addition of <code>self</code> …","Returns a vector containing the wrapping addition of <code>self</code> …","Returns a vector containing the wrapping addition of <code>self</code> …","Returns a vector containing the wrapping division of <code>self</code> …","Returns a vector containing the wrapping division of <code>self</code> …","Returns a vector containing the wrapping division of <code>self</code> …","Returns a vector containing the wrapping division of <code>self</code> …","Returns a vector containing the wrapping division of <code>self</code> …","Returns a vector containing the wrapping division of <code>self</code> …","Returns a vector containing the wrapping multiplication of …","Returns a vector containing the wrapping multiplication of …","Returns a vector containing the wrapping multiplication of …","Returns a vector containing the wrapping multiplication of …","Returns a vector containing the wrapping multiplication of …","Returns a vector containing the wrapping multiplication of …","Returns a vector containing the wrapping subtraction of …","Returns a vector containing the wrapping subtraction of …","Returns a vector containing the wrapping subtraction of …","Returns a vector containing the wrapping subtraction of …","Returns a vector containing the wrapping subtraction of …","Returns a vector containing the wrapping subtraction of …","Writes the columns of <code>self</code> to the first 6 elements in <code>slice</code>…","Writes the columns of <code>self</code> to the first 12 elements in …","Writes the columns of <code>self</code> to the first 9 elements in <code>slice</code>…","Writes the columns of <code>self</code> to the first 6 elements in <code>slice</code>…","Writes the columns of <code>self</code> to the first 12 elements in …","Writes the columns of <code>self</code> to the first 4 elements in <code>slice</code>…","Writes the columns of <code>self</code> to the first 9 elements in <code>slice</code>…","Writes the columns of <code>self</code> to the first 16 elements in …","Writes the elements of <code>self</code> to the first 3 elements in …","Writes the quaternion to an unaligned slice.","Writes the elements of <code>self</code> to the first 2 elements in …","Writes the elements of <code>self</code> to the first 3 elements in …","Writes the elements of <code>self</code> to the first 4 elements in …","Writes the elements of <code>self</code> to the first 2 elements in …","Writes the elements of <code>self</code> to the first 3 elements in …","Writes the elements of <code>self</code> to the first 4 elements in …","Writes the elements of <code>self</code> to the first 2 elements in …","Writes the elements of <code>self</code> to the first 3 elements in …","Writes the elements of <code>self</code> to the first 4 elements in …eturns the vector part of the quaterniondimensional <code>bool</code> vector mask.","A 3-dimensional <code>bool</code> vector mask.","A 3-dimensional SIMD vector mask.","A 4-dimensional <code>bool</code> vector mask.","A 4-dimensional SIMD vector mask.","All false.","All false.","All false.","All true.","All true.","All true.","Returns true if all the elements are true, false otherwise.","Returns true if all the elements are true, false otherwise.","Returns true if all the elements are true, false otherwise.","Returns true if any of the elements are true, false …","Returns true if any of the elements are true, false …","Returns true if any of the elements are true, false …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a bitmask with the lowest 2 bits set from the …","Returns a bitmask with the lowest 3 bits set from the …","Returns a bitmask with the lowest 4 bits set from the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new vector mask.","Creates a new vector mask.","Creates a new vector mask.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets the element at <code>index</code>.","","Sets the element at <code>index</code>.","Sets the element at <code>index</code>.","","","","","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Tests the value at <code>index</code>.","Tests the value at <code>index</code>.","Tests the value at <code>index</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A spline interpolated continuously across the nearest four …","A spline interpolated continuously across the nearest four …","A spline composed of a single cubic Bezier curve.","A collection of <code>CubicSegment</code>s chained into a curve.","Implement this on cubic splines that can generate a curve …","A segment of a cubic curve, used to hold precomputed …","A spline interpolated continuously between the nearest two …","A point in space of any dimension that supports the math …","Instantaneous acceleration of a point at parametric value <code>t</code>…","Compute the second derivative with respect to t at <code>t</code>. This …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Given a <code>time</code> within <code>0..=1</code>, returns an eased value that …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Iterate over the curve split into <code>subdivisions</code>, sampling …","Iterate over the curve split into <code>subdivisions</code>, sampling …","A flexible iterator used to sample curves with arbitrary …","Iterate over the curve split into <code>subdivisions</code>, sampling …","Create a new cubic Bezier curve from sets of control …","Create a new Hermite curve from sets of control points.","Build a new Cardinal spline.","Build a new Cardinal spline.","Construct a cubic Bezier curve for animation easing, with …","Build a new Catmull-Rom spline, the special case of a …","","","Instantaneous position of a point at parametric value <code>t</code>.","Compute the position of a point on the cubic curve at the …","The list of segments contained in this <code>CubicCurve</code>.","Build a <code>CubicCurve</code> by computing the interpolation …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Instantaneous velocity of a point at parametric value <code>t</code>.","Compute the first derivative with respect to t at <code>t</code>. This …","","","","","","","The unit axes.","The unit axes.","The unit axes.","A 2D affine transform, which can represent translation, …","A 3D affine transform, which can represent translation, …","A 3x3 identity matrix, where all diagonal elements are <code>1</code>, …","A 2x2 identity matrix, where all diagonal elements are <code>1</code>, …","A 4x4 identity matrix, where all diagonal elements are <code>1</code>, …","The identity quaternion. Corresponds to no rotation.","All <code>f32::INFINITY</code>.","All <code>f32::INFINITY</code>.","All <code>f32::INFINITY</code>.","All <code>f32::MAX</code>.","All <code>f32::MAX</code>.","All <code>f32::MAX</code>.","All <code>f32::MIN</code>.","All <code>f32::MIN</code>.","All <code>f32::MIN</code>.","A 2x2 column major matrix.","A 3x3 column major matrix.","A 3x3 column major matrix.","A 4x4 column major matrix.","All NAN:s.","All <code>f32::NAN</code>.","All <code>f32::NAN</code>.","All NAN:s.","All NAN:s.","All NANs.","All <code>f32::NAN</code>.","All <code>f32::NEG_INFINITY</code>.","All <code>f32::NEG_INFINITY</code>.","All <code>f32::NEG_INFINITY</code>.","All negative ones.","All negative ones.","All negative ones.","A unit vector pointing along the negative W axis.","A unit vector pointing along the negative X axis.","A unit vector pointing along the negative X axis.","A unit vector pointing along the negative X axis.","A unit vector pointing along the negative Y axis.","A unit vector pointing along the negative Y axis.","A unit vector pointing along the negative Y axis.","A unit vector pointing along the negative Z axis.","A unit vector pointing along the negative Z axis.","All ones.","All ones.","All ones.","A quaternion representing an orientation.","A 2-dimensional vector.","A 3-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","A unit vector pointing along the positive W axis.","A unit vector pointing along the positive X axis.","A unit vector pointing along the positive X axis.","A unit vector pointing along the positive X axis.","A unit vector pointing along the positive Y axis.","A unit vector pointing along the positive Y axis.","A unit vector pointing along the positive Y axis.","A unit vector pointing along the positive Z axis.","A unit vector pointing along the positive Z axis.","A 3x3 matrix with all elements set to <code>0.0</code>.","All zeroes.","All zeroes.","A 2x2 matrix with all elements set to <code>0.0</code>.","A 4x4 matrix with all elements set to <code>0.0</code>.","All zeroes.","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","","","","","","","","Adds two quaternions.","","","","","","","","","","","","Adds two 2x2 matrices.","Adds two 3x3 matrices.","Adds two 4x4 matrices.","Returns the angle (in radians) between <code>self</code> and <code>rhs</code> in the …","Returns the angle (in radians) between two vectors.","Returns the angle (in radians) for the minimal rotation …","Returns some vector that is orthogonal to the given one.","Given a unit vector return two other vectors that together …","Returns any unit vector that is orthogonal to the given …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","","Casts all elements of <code>self</code> to <code>i64</code>.","Casts all elements of <code>self</code> to <code>i64</code>.","Casts all elements of <code>self</code> to <code>i64</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Casts all elements of <code>self</code> to <code>u64</code>.","Casts all elements of <code>self</code> to <code>u64</code>.","Casts all elements of <code>self</code> to <code>u64</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","","","","","","","","","","","","","","","Returns a vector containing the smallest integer greater …","Returns a vector containing the smallest integer greater …","Returns a vector containing the smallest integer greater …","Component-wise clamping of values, similar to <code>f32::clamp</code>.","Component-wise clamping of values, similar to <code>f32::clamp</code>.","Component-wise clamping of values, similar to <code>f32::clamp</code>.","Returns a vector with a length no less than <code>min</code> and no …","Returns a vector with a length no less than <code>min</code> and no …","Returns a vector with a length no less than <code>min</code> and no …","Returns a vector with a length no more than <code>max</code>","Returns a vector with a length no more than <code>max</code>","Returns a vector with a length no more than <code>max</code>","Returns a vector with a length no less than <code>min</code>","Returns a vector with a length no less than <code>min</code>","Returns a vector with a length no less than <code>min</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns the matrix column for the given <code>index</code>.","Returns the matrix column for the given <code>index</code>.","Returns the matrix column for the given <code>index</code>.","Returns a mutable reference to the matrix column for the …","Returns a mutable reference to the matrix column for the …","Returns a mutable reference to the matrix column for the …","Returns the quaternion conjugate of <code>self</code>. For a unit …","Returns a vector with signs of <code>rhs</code> and the magnitudes of …","Returns a vector with signs of <code>rhs</code> and the magnitudes of …","Returns a vector with signs of <code>rhs</code> and the magnitudes of …","","","","","","","","","","","","","","Computes the cross product of <code>self</code> and <code>rhs</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the determinant of <code>self</code>.","Returns the determinant of <code>self</code>.","Returns the determinant of <code>self</code>.","Computes the Euclidean distance between two points in …","Computes the Euclidean distance between two points in …","Computes the Euclidean distance between two points in …","Compute the squared euclidean distance between two points …","Compute the squared euclidean distance between two points …","Compute the squared euclidean distance between two points …","","","","","Divides a quaternion by a scalar value. The quotient is …","","","","","","","","","Returns the element-wise quotient of [Euclidean division] …","Returns the element-wise quotient of [Euclidean division] …","Returns the element-wise quotient of [Euclidean division] …","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>. The dot product …","Computes the dot product of <code>self</code> and <code>rhs</code>.","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a vector containing <code>e^self</code> (the exponential …","Returns a vector containing <code>e^self</code> (the exponential …","Returns a vector containing <code>e^self</code> (the exponential …","Creates a 3D vector from <code>self</code> and the given <code>z</code> value.","Creates a 4D vector from <code>self</code> and the given <code>w</code> value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a vector containing the largest integer less than …","Returns a vector containing the largest integer less than …","Returns a vector containing the largest integer less than …","","","","","","","","","","","","","","","Returns a vector containing the fractional part of the …","Returns a vector containing the fractional part of the …","Returns a vector containing the fractional part of the …","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","","","","Creates a quaternion from a 3x3 rotation matrix inside a …","Creates an affine transformation matrix from the given 2D …","Creates a 2D vector containing <code>[angle.cos(), angle.sin()]</code>. …","Creates a 2x2 matrix containing a rotation of <code>angle</code> (in …","Creates a new vector from an array.","Creates a new vector from an array.","Creates a rotation quaternion from an array.","Creates a new vector from an array.","Creates a 3D rotation matrix from a normalized rotation …","Creates an affine transformation matrix containing a 3D …","Create a quaternion for a normalized rotation <code>axis</code> and …","Creates a 3x3 matrix from three column vectors.","Creates a 2x2 matrix from two column vectors.","Creates a 4x4 matrix from four column vectors.","Creates a 3x3 matrix from a <code>[f32; 9]</code> array stored in …","Creates a 2x2 matrix from a <code>[f32; 4]</code> array stored in …","Creates a 4x4 matrix from a <code>[f32; 16]</code> array stored in …","Creates a 3x3 matrix from a <code>[[f32; 3]; 3]</code> 3D array stored …","Creates a 2x2 matrix from a <code>[[f32; 2]; 2]</code> 2D array stored …","Creates a 4x4 matrix from a <code>[[f32; 4]; 4]</code> 4D array stored …","Creates a 3x3 matrix from the first 9 values in <code>slice</code>.","Creates a 2x2 matrix from the first 4 values in <code>slice</code>.","Creates a 4x4 matrix from the first 16 values in <code>slice</code>.","Creates a 3x3 matrix with its diagonal set to <code>diagonal</code> and …","Creates a 2x2 matrix with its diagonal set to <code>diagonal</code> and …","Creates a 4x4 matrix with its diagonal set to <code>diagonal</code> and …","Creates a 3D rotation matrix from the given euler rotation …","Creates a affine transformation matrix containing a …","Creates a quaternion from the given Euler rotation …","Creates an affine transformation matrix from the given 2x2 …","Creates a 2x2 matrix from a 3x3 matrix, discarding the 2nd …","Creates an affine transformation matrix from the given 3x3 …","Creates a quaternion from a 3x3 rotation matrix.","Creates a 2x2 matrix from a 3x3 matrix, discarding the 2nd …","Creates an affine transformation matrix from the given 3x3 …","Creates a quaternion from a 3x3 SIMD aligned rotation …","Creates a 3x3 matrix from a 4x4 matrix, discarding the 4th …","Creates a quaternion from a 3x3 rotation matrix inside a …","","","","","","","Creates a 3D rotation matrix from the given quaternion.","Creates an affine transformation matrix from the given …","","","","","","","","Gets the minimal rotation for transforming <code>from</code> to <code>to</code>.  …","Gets the minimal rotation for transforming <code>from</code> to <code>to</code>.  …","Gets the minimal rotation for transforming <code>from</code> to either …","Creates an affine transformation matrix from the given 3D …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates an affine transformation matrix containing a 3D …","Creates a quaternion from the <code>angle</code> (in radians) around …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates an affine transformation matrix containing a 3D …","Creates a quaternion from the <code>angle</code> (in radians) around …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates an affine transformation matrix containing a 3D …","Creates a quaternion from the <code>angle</code> (in radians) around …","","","","","","","","Creates an affine transformation matrix from the given …","Creates an affine transformation matrix containing the …","Creates a 2x2 matrix containing the combining non-uniform …","Creates an affine transformation matrix from the given 2D …","Creates an affine transformation matrix from the given 3D …","Create a quaternion that rotates <code>v.length()</code> radians around …","Creates a vector from the first 2 values in <code>slice</code>.","Creates a vector from the first 3 values in <code>slice</code>.","Creates a rotation quaternion from a slice.","Creates a vector from the first 4 values in <code>slice</code>.","Creates an affine transformation matrix from the given 2D …","Creates an affine transformation matrix from the given 3D …","Creates a new rotation quaternion from a 4D vector.","","","","","","","","Creates a new rotation quaternion.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the inverse of <code>self</code>.","Returns the inverse of <code>self</code>.","Returns the inverse of <code>self</code>.","Returns the inverse of a normalized quaternion.","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite.  If …","Returns <code>true</code> if, and only if, all elements are finite.  If …","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite.  If …","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","","Returns <code>true</code> if any elements are <code>NaN</code>.","Performs <code>is_nan</code> on each element of self, returning a …","Performs <code>is_nan</code> on each element of self, returning a …","Performs <code>is_nan</code> on each element of self, returning a …","","Returns a bitmask with the lowest 2 bits set to the sign …","Returns a bitmask with the lowest 3 bits set to the sign …","Returns a bitmask with the lowest 4 bits set to the sign …","Returns whether <code>self</code> is length <code>1.0</code> or not.","Returns whether <code>self</code> is length <code>1.0</code> or not.","Returns whether <code>self</code> of length <code>1.0</code> or not.","Returns whether <code>self</code> is length <code>1.0</code> or not.","","","","","","","","","","","","","","","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Creates a left-handed view matrix using a camera position, …","Creates a right-handed view matrix using a camera …","Creates a left-handed view matrix using a camera position, …","Creates a right-handed view matrix using a camera …","Creates a 2x2 matrix from two column vectors.","Creates a 3x3 matrix from three column vectors.","Creates a 3x3 matrix from three column vectors.","Creates a 4x4 matrix from four column vectors.","","","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","","","","","","","","","","","","","","","","","","","","","","","","Multiplies a quaternion and a 3D vector, returning the …","Multiplies a quaternion by a scalar value.","Multiplies two quaternions. If they each represent a …","","","","Fused multiply-add. Computes <code>(self * a) + b</code> element-wise …","Fused multiply-add. Computes <code>(self * a) + b</code> element-wise …","Fused multiply-add. Computes <code>(self * a) + b</code> element-wise …","","","","","","","","","","","Multiplies two quaternions. If they each represent a …","","","Multiplies two 2x2 matrices.","Multiplies two 3x3 matrices.","Multiplies two 4x4 matrices.","Multiplies two quaternions. If they each represent a …","Multiplies a 3x3 matrix by a scalar.","Multiplies a 2x2 matrix by a scalar.","Multiplies a 4x4 matrix by a scalar.","Transforms a 2D vector.","Transforms a 3D vector.","Multiplies a quaternion and a 3D vector, returning the …","Transforms a <code>Vec3A</code>.","Multiplies a quaternion and a 3D vector, returning the …","Transforms a 4D vector.","","","","","","","","","","","","","","","Creates a new vector.","Creates a new vector.","Creates a new vector.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","","","","","","","","Creates a left-handed orthographic projection matrix with …","Creates a right-handed orthographic projection matrix with …","Creates a right-handed orthographic projection matrix with …","Returns a vector that is equal to <code>self</code> rotated by 90 …","The perpendicular dot product of <code>self</code> and <code>rhs</code>. Also known …","Creates an infinite left-handed perspective projection …","Creates an infinite left-handed perspective projection …","Creates an infinite reverse right-handed perspective …","Creates an infinite right-handed perspective projection …","Creates a left-handed perspective projection matrix with …","Creates a right-handed perspective projection matrix with …","Creates a right-handed perspective projection matrix with […","Returns a vector containing each element of <code>self</code> raised to …","Returns a vector containing each element of <code>self</code> raised to …","Returns a vector containing each element of <code>self</code> raised to …","","","","","","","","","","","","","","","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Transforms the given 3D vector as a point, applying …","Creates a quaternion from <code>x</code>, <code>y</code>, <code>z</code> and <code>w</code> values.","","","","","","","Returns a vector containing the reciprocal <code>1.0/n</code> of each …","Returns a vector containing the reciprocal <code>1.0/n</code> of each …","Returns a vector containing the reciprocal <code>1.0/n</code> of each …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","","","","","","","","","","","","","Returns the element-wise remainder of Euclidean division …","Returns the element-wise remainder of Euclidean division …","Returns the element-wise remainder of Euclidean division …","Returns <code>rhs</code> rotated by the angle of <code>self</code>. If <code>self</code> is …","Returns a vector containing the nearest integer to a …","Returns a vector containing the nearest integer to a …","Returns a vector containing the nearest integer to a …","Returns the matrix row for the given <code>index</code>.","Returns the matrix row for the given <code>index</code>.","Returns the matrix row for the given <code>index</code>.","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","","","","","","","","","","","","","","","","","","","","","","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Performs a spherical linear interpolation between <code>self</code> and …","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","","","","","","","","Subtracts the <code>rhs</code> quaternion from <code>self</code>.","","","","","","","","","","","","Subtracts two 2x2 matrices.","Subtracts two 3x3 matrices.","Subtracts two 4x4 matrices.","","","","","","","","","","","","","","","<code>[x, y]</code>","<code>[x, y, z]</code>","<code>[x, y, z, w]</code>","<code>[x, y, z, w]</code>","Returns the rotation axis (normalized) and angle (in …","Creates a <code>[f32; 9]</code> array storing data in column major …","Creates a <code>[f32; 4]</code> array storing data in column major …","Creates a <code>[f32; 16]</code> array storing data in column major …","Creates a <code>[[f32; 3]; 3]</code> 3D array storing data in column …","Creates a <code>[[f32; 2]; 2]</code> 2D array storing data in column …","Creates a <code>[[f32; 4]; 4]</code> 4D array storing data in column …","Returns the rotation angles for the given euler rotation …","","","","","","","","","","","","","","","Extracts <code>scale</code>, <code>rotation</code> and <code>translation</code> from <code>self</code>. The …","Returns the rotation axis scaled by the rotation in …","","","","","","","","","Transforms the given 2D vector as a point.","Transforms the given 3D vector as a point.","Transforms the given <code>Vec3A</code> as 3D point.","Rotates the given 2D vector.","Transforms the give 3D vector as a direction.","Transforms the give <code>Vec3A</code> as 3D vector.","","","Returns the transpose of <code>self</code>.","Returns the transpose of <code>self</code>.","Returns the transpose of <code>self</code>.","Returns a vector containing the integer part each element …","Returns a vector containing the integer part each element …","Returns a vector containing the integer part each element …","Creates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …","Creates a 3D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …","","","","","","","","","","","","","","","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","","","","","","","","","Writes the columns of <code>self</code> to the first 9 elements in <code>slice</code>…","Writes the columns of <code>self</code> to the first 4 elements in <code>slice</code>…","Writes the columns of <code>self</code> to the first 16 elements in …","","","","","","","Writes the elements of <code>self</code> to the first 2 elements in …","Writes the elements of <code>self</code> to the first 3 elements in …","Writes the quaternion to an unaligned slice.","Writes the elements of <code>self</code> to the first 4 elements in …eturns the vector part of the quaternionaffine transform, which can represent translation, …","A 3D affine transform, which can represent translation, …","A 2x2 column major matrix.","A 3x3 column major matrix.","A 4x4 column major matrix.","A quaternion representing an orientation.","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","Creates a 2x2 matrix from two column vectors.","Creates a 3x3 matrix from three column vectors.","Creates a 4x4 matrix from four column vectors.","Creates a quaternion from <code>x</code>, <code>y</code>, <code>z</code> and <code>w</code> values.","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","","","","","","","","","","","","","","","","","","","","","","","","","","","The unit axes.","The unit axes.","The unit axes.","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","All <code>i32::MAX</code>.","All <code>i32::MAX</code>.","All <code>i32::MAX</code>.","All <code>i32::MIN</code>.","All <code>i32::MIN</code>.","All <code>i32::MIN</code>.","All negative ones.","All negative ones.","All negative ones.","A unit vector pointing along the negative W axis.","A unit vector pointing along the negative X axis.","A unit vector pointing along the negative X axis.","A unit vector pointing along the negative X axis.","A unit vector pointing along the negative Y axis.","A unit vector pointing along the negative Y axis.","A unit vector pointing along the negative Y axis.","A unit vector pointing along the negative Z axis.","A unit vector pointing along the negative Z axis.","All ones.","All ones.","All ones.","A unit vector pointing along the positive W axis.","A unit vector pointing along the positive X axis.","A unit vector pointing along the positive X axis.","A unit vector pointing along the positive X axis.","A unit vector pointing along the positive Y axis.","A unit vector pointing along the positive Y axis.","A unit vector pointing along the positive Y axis.","A unit vector pointing along the positive Z axis.","A unit vector pointing along the positive Z axis.","All zeroes.","All zeroes.","All zeroes.","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","","","","Casts all elements of <code>self</code> to <code>i64</code>.","Casts all elements of <code>self</code> to <code>i64</code>.","Casts all elements of <code>self</code> to <code>i64</code>.","","","","","","","","","","","","","","","","","","","Casts all elements of <code>self</code> to <code>u64</code>.","Casts all elements of <code>self</code> to <code>u64</code>.","Casts all elements of <code>self</code> to <code>u64</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Component-wise clamping of values, similar to <code>i32::clamp</code>.","Component-wise clamping of values, similar to <code>i32::clamp</code>.","Component-wise clamping of values, similar to <code>i32::clamp</code>.","","","","","","","","","","","","","","","","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","","","","","","","Computes the cross product of <code>self</code> and <code>rhs</code>.","","","","","","","","","","","","","","","","Compute the squared euclidean distance between two points …","Compute the squared euclidean distance between two points …","Compute the squared euclidean distance between two points …","","","","","","","","","","","","","Returns the element-wise quotient of [Euclidean division] …","Returns the element-wise quotient of [Euclidean division] …","Returns the element-wise quotient of [Euclidean division] …","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a 3D vector from <code>self</code> and the given <code>z</code> value.","Creates a 4D vector from <code>self</code> and the given <code>w</code> value.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","Returns the argument unchanged.","Creates a new vector from an array.","Creates a new vector from an array.","Creates a new vector from an array.","","","","","","","","","","Creates a vector from the first 2 values in <code>slice</code>.","Creates a vector from the first 3 values in <code>slice</code>.","Creates a vector from the first 4 values in <code>slice</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Returns a bitmask with the lowest 2 bits set to the sign …","Returns a bitmask with the lowest 3 bits set to the sign …","Returns a bitmask with the lowest 4 bits set to the sign …","","","","","","","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","","","","","","","","","","","","","","","","","","","","","","Creates a new vector.","Creates a new vector.","Creates a new vector.","","","","","","","Returns a vector that is equal to <code>self</code> rotated by 90 …","The perpendicular dot product of <code>self</code> and <code>rhs</code>. Also known …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the element-wise remainder of Euclidean division …","Returns the element-wise remainder of Euclidean division …","Returns the element-wise remainder of Euclidean division …","Returns <code>rhs</code> rotated by the angle of <code>self</code>. If <code>self</code> is …","Returns a vector containing the saturating addition of <code>self</code>…","Returns a vector containing the saturating addition of <code>self</code>…","Returns a vector containing the saturating addition of <code>self</code>…","Returns a vector containing the saturating division of <code>self</code>…","Returns a vector containing the saturating division of <code>self</code>…","Returns a vector containing the saturating division of <code>self</code>…","Returns a vector containing the saturating multiplication …","Returns a vector containing the saturating multiplication …","Returns a vector containing the saturating multiplication …","Returns a vector containing the saturating subtraction of …","Returns a vector containing the saturating subtraction of …","Returns a vector containing the saturating subtraction of …","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","","","","","","","","","","","","","","","","","","","<code>[x, y]</code>","<code>[x, y, z]</code>","<code>[x, y, z, w]</code>","","","","","","","","","","Creates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …","Creates a 3D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a vector containing the wrapping addition of <code>self</code> …","Returns a vector containing the wrapping addition of <code>self</code> …","Returns a vector containing the wrapping addition of <code>self</code> …","Returns a vector containing the wrapping division of <code>self</code> …","Returns a vector containing the wrapping division of <code>self</code> …","Returns a vector containing the wrapping division of <code>self</code> …","Returns a vector containing the wrapping multiplication of …","Returns a vector containing the wrapping multiplication of …","Returns a vector containing the wrapping multiplication of …","Returns a vector containing the wrapping subtraction of …","Returns a vector containing the wrapping subtraction of …","Returns a vector containing the wrapping subtraction of …","","","","Writes the elements of <code>self</code> to the first 2 elements in …","Writes the elements of <code>self</code> to the first 3 elements in …","Writes the elements of <code>self</code> to the first 4 elements in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","","","","","","","","","","A spline interpolated continuously across the nearest four …","A 2-dimensional <code>bool</code> vector mask.","A 3-dimensional <code>bool</code> vector mask.","A 4-dimensional <code>bool</code> vector mask.","A spline interpolated continuously across the nearest four …","A spline composed of a single cubic Bezier curve.","Implement this on cubic splines that can generate a curve …","A segment of a cubic curve, used to hold precomputed …","Euler rotation sequences.","A spline interpolated continuously between the nearest two …","A rectangle defined by two opposite corners.","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","A 2x2 column major matrix.","A 3x3 column major matrix.","A 4x4 column major matrix.","A quaternion representing an orientation.","A ray is an infinite line starting at <code>origin</code>, going in …","A rectangle defined by two opposite corners.","A rectangle defined by two opposite corners.","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","A 2-dimensional vector.","","","","A 3-dimensional vector.","","","","A 4-dimensional vector.","","","","Intrinsic three-axis rotation XYZ","Intrinsic three-axis rotation XZY","Intrinsic three-axis rotation YXZ","Intrinsic three-axis rotation YZX","Intrinsic three-axis rotation ZXY","Intrinsic three-axis rotation ZYX","A normalized vector representing the direction of the ray.","The maximum corner point of the rect.","The maximum corner point of the rect.","The maximum corner point of the rect.","The minimum corner point of the rect.","The minimum corner point of the rect.","The minimum corner point of the rect.","The origin of the ray.","Build a <code>CubicCurve</code> by computing the interpolation …he unit axes.","The unit axes.","The unit axes.","All <code>u32::MAX</code>.","All <code>u32::MAX</code>.","All <code>u32::MAX</code>.","All <code>u32::MIN</code>.","All <code>u32::MIN</code>.","All <code>u32::MIN</code>.","All ones.","All ones.","All ones.","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","A unit vector pointing along the positive W axis.","A unit vector pointing along the positive X axis.","A unit vector pointing along the positive X axis.","A unit vector pointing along the positive X axis.","A unit vector pointing along the positive Y axis.","A unit vector pointing along the positive Y axis.","A unit vector pointing along the positive Y axis.","A unit vector pointing along the positive Z axis.","A unit vector pointing along the positive Z axis.","All zeroes.","All zeroes.","All zeroes.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","","","","Casts all elements of <code>self</code> to <code>i64</code>.","Casts all elements of <code>self</code> to <code>i64</code>.","Casts all elements of <code>self</code> to <code>i64</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","","","","","","","","","","","","","","","","","","","Casts all elements of <code>self</code> to <code>u64</code>.","Casts all elements of <code>self</code> to <code>u64</code>.","Casts all elements of <code>self</code> to <code>u64</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Component-wise clamping of values, similar to <code>u32::clamp</code>.","Component-wise clamping of values, similar to <code>u32::clamp</code>.","Component-wise clamping of values, similar to <code>u32::clamp</code>.","","","","","","","","","","","","","","","","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","","","","","","","Computes the cross product of <code>self</code> and <code>rhs</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a 3D vector from <code>self</code> and the given <code>z</code> value.","Creates a 4D vector from <code>self</code> and the given <code>w</code> value.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","","Creates a new vector from an array.","Creates a new vector from an array.","Creates a new vector from an array.","","","","","","","","","","Creates a vector from the first 2 values in <code>slice</code>.","Creates a vector from the first 3 values in <code>slice</code>.","Creates a vector from the first 4 values in <code>slice</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","","","","","","","","","","","","","","","","","","","Creates a new vector.","Creates a new vector.","Creates a new vector.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a vector containing the saturating addition of <code>self</code>…","Returns a vector containing the saturating addition of <code>self</code>…","Returns a vector containing the saturating addition of <code>self</code>…","Returns a vector containing the saturating division of <code>self</code>…","Returns a vector containing the saturating division of <code>self</code>…","Returns a vector containing the saturating division of <code>self</code>…","Returns a vector containing the saturating multiplication …","Returns a vector containing the saturating multiplication …","Returns a vector containing the saturating multiplication …","Returns a vector containing the saturating subtraction of …","Returns a vector containing the saturating subtraction of …","Returns a vector containing the saturating subtraction of …","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","","","","","","","","","","","","","","","","","","","<code>[x, y]</code>","<code>[x, y, z]</code>","<code>[x, y, z, w]</code>","","","","","","","","","","Creates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …","Creates a 3D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","","","","","Returns a vector containing the wrapping addition of <code>self</code> …","Returns a vector containing the wrapping addition of <code>self</code> …","Returns a vector containing the wrapping addition of <code>self</code> …","Returns a vector containing the wrapping division of <code>self</code> …","Returns a vector containing the wrapping division of <code>self</code> …","Returns a vector containing the wrapping division of <code>self</code> …","Returns a vector containing the wrapping multiplication of …","Returns a vector containing the wrapping multiplication of …","Returns a vector containing the wrapping multiplication of …","Returns a vector containing the wrapping subtraction of …","Returns a vector containing the wrapping subtraction of …","Returns a vector containing the wrapping subtraction of …","","","","Writes the elements of <code>self</code> to the first 2 elements in …","Writes the elements of <code>self</code> to the first 3 elements in …","Writes the elements of <code>self</code> to the first 4 elements in …dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","","","","","","","","","","","","","","","","","Combines the color of the fragments with the colors behind …","","","Sets how a material’s base color alpha channel is used …","An ambient light, which lights the entire scene equally.","","A more general form of the <code>FogFalloff::Exponential</code> mode. …","","","","","","","","The base color alpha value defines the opacity of the …","","","","","Controls how cascaded shadow mapping works. Prefer using …","Builder for <code>CascadeShadowConfig</code>.","","","Method by Ignacio Castaño for The Witness using 9 samples …","","Configuration of the clustering strategy for clustered …","Configure the far z-plane mode used for the furthest depth …","Configure the depth-slicing strategy for clustered forward …","","Constant max z-depth","","","","<code>ParallaxMappingMethod::Relief</code> with a 5 steps, a reasonable …","","","","","","","","","","","","","","Default render method used for opaque materials.","","","A Directional light.","A component bundle for <code>DirectionalLight</code> entities.","Controls the resolution of <code>DirectionalLight</code> shadow maps.","","","","","Environment map based ambient lighting representing light …","An exponential fog falloff with a given <code>density</code>.","A squared exponential fog falloff with a given <code>density</code>.","A material that extends a base <code>Material</code> with additional …","","","","","","","","Handle for the fog WGSL Shader internal asset","","Fixed number of <code>Z</code> slices, <code>X</code> and <code>Y</code> calculated to give …","Allows switching between different fog falloff modes, and …","Metadata for fog","A plugin that consolidates fog extraction, preparation and …","Configures the “classic” computer graphics distance fog…","","","","","","The GPU-side representation of the fog configuration that…","","","","","","","Hardware 2x2.","","Method by Jorge Jimenez for Call of Duty: Advanced Warfare …","","","A linear fog falloff that grows in intensity between <code>start</code> …","","","","","Maximum number of joints supported for skinned meshes.","","","","","","How many textures are allowed in the view bind group …","","","","","","","","","","","","Reduce transparency to fully opaque or fully transparent …","Materials are used alongside <code>MaterialPlugin</code> and …","","A subset of the <code>Material</code> trait for defining extensions to …","","","A component bundle for entities with a <code>Mesh</code> and a <code>Material</code>.","Render pipeline data for a given <code>Material</code>.","A key uniquely identifying a specialized <code>MaterialPipeline</code>.","Adds the necessary ECS resources and render logic to …","Common <code>Material</code> properties, calculated for a specific …","Calculate the required maximum z-depth based on currently …","","","Bind groups for meshes currently loaded.","","All possible <code>BindGroupLayout</code>s in bevy’s default mesh …","","MSAA uses the highest 3 bits for the MSAA log2(sample …","","A key that uniquely identifies a <code>MeshPipelineViewLayout</code>.","","","","","Combines the color of the fragments with the colors behind …","","","","","","Disable light cluster calculations for this view","Add this component to make a <code>Mesh</code> not cast shadows.","Add this component to make a <code>Mesh</code> not receive shadows.","","A simple linear interpolation, using a single texture …","Base color alpha values are overridden to be fully opaque …","Render method used for opaque materials.","","","","","","","","","","","","","","","","","","The parallax mapping method to use to compute depth based …","A component bundle for PBR entities with a <code>Mesh</code> and a …","Sets up the entire PBR infrastructure of bevy.","","A light that emits light in all directions from a central …","A component bundle for <code>PointLight</code> entities.","","Similar to <code>AlphaMode::Blend</code>, however assumes RGB channel …","All <code>Material</code> values of a given type that should be …","Data prepared for a <code>Material</code> instance.","","Sets up everything required to use the prepass pipeline.","Sets up the prepasses for a <code>Material</code>.","","","","","","A 2% contrast threshold was originally proposed by …","","Discovers the best depth value based on binary search.","","Stores all prepared representations of <code>Material</code> assets for …","","","","","","","","","","","","","Bundle to apply screen space ambient occlusion.","Plugin for screen space ambient occlusion.","","Component to apply screen space ambient occlusion to a 3d …","","Sets the bind group for a given <code>Material</code> at the configured …","","","","","Add this component to a <code>Camera3d</code> to control how to …","","","","","One single cluster. Optimal for low-light complexity …","","","","A light that emits light in a given direction from a …","A component bundle for spot light entities","A material with “standard” properties used in PBR …","Bitflags info about the material a shader is currently …","The pipeline key for <code>StandardMaterial</code>.","The GPU representation of the uniform data of a …","","","","","","","","","","","","","","","","","","","","","","","Inserted on each <code>Entity</code> with an <code>ExtractedView</code> to keep …","","","","","Explicit <code>X</code>, <code>Y</code> and <code>Z</code> counts (may yield non-square <code>X/Y</code> …","","","Controls if <code>DeferredPbrLightingPlugin</code> is added.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","When the alpha mode mask flag is set, any base color alpha …","Returns this material’s <code>AlphaMode</code>. Defaults to …","","","The <code>AlphaMode</code> of this material.","How to apply the alpha channel of the <code>base_color_texture</codehe color of the surface of the material before lighting.","Doubles as diffuse albedo for non-metallic, specular for …","The texture component of the material’s color before …","","","","","","","","","","","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Get the underlying bits value.","Get the underlying bits value.","","","Get the underlying bits value.","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …he (positive) distance to the far boundary of each …","A direct scale factor multiplied with <code>color</code> before being …","","Returns the cascade config as specified by this builderhe color of the fog effect.","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether to cull the “front”, “back” or neither …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns this material’s prepass fragment shader. If …","Returns this material’s deferred fragment shader. If …","","","Used for selecting the deferred lighting pass for deferred …","ID for specifying which deferred lighting pass should be …","","","Returns this material’s deferred vertex shader. If …","Returns this material’s deferred vertex shader. If …","","Add a bias to the view depth of the mesh which can be used …","","","Add a bias to the view depth of the mesh which can be used …","Adjust rendered depth.","The depth map used for parallax mappinghe intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","","","Color used to modulate the influence of directional light …","","","The exponent applied to the directional light alignment …","","","Support two-sided lighting by automatically flipping the …olor the material “emits” to the camera.","","The emissive map, multiplies pixels with <code>emissive</code> to get …","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Map of view entity to the visible entities for each …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","This system extracts all created or modified assets of the …","","","","","Determines which falloff mode to use, and its parameters.","Strategy for how to evaluate the far <code>Z</code> plane of the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets the far bound of the first cascade, relative to the …","Far <code>Z</code> plane of the first depth slice","The <code>StandardMaterialFlags</code> accessible in the <code>wgsl</code> shader.","","","Normal map textures authored for DirectX have their …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether to enable fog for this material.","","Returns this material’s fragment shader. If …","Returns this material’s fragment shader. If …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","","Convert from a bits value exactly.","","Convert from a bits value exactly.","Convert from a bits value exactly.","","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a <code>FogFalloff::Exponential</code> value from the given …","Creates a <code>FogFalloff::Atmospheric</code> value from the given …","Creates a <code>FogFalloff::Atmospheric</code> value from the given …","Creates a <code>FogFalloff::Exponential</code> value from the given …","Creates a <code>FogFalloff::Atmospheric</code> value from the given …","Creates a <code>FogFalloff::Atmospheric</code> value from the given …","Creates a <code>FogFalloff::ExponentialSquared</code> value from the …","Creates a <code>FogFalloff::ExponentialSquared</code> value from the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Generates all possible view layouts for the mesh pipeline, …","","Get the <code>BindGroup</code> for <code>GpuMesh</code> with given <code>handle_id</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Illuminance in lux","","","","","","","","","","Inherited visibility of an entity.","Inherited visibility of an entity.","Inherited visibility of an entity.","Inherited visibility of an entity.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Angle defining the distance from the spot light direction …","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Luminous power in lumens","Luminous power in lumens","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codehether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether or not all textures necessary to use the …","","","","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","","Calculates the extinction coefficient β, from V and Cₜ, …","","Builds a unique label for each layout based on the flags","","","","","","","","","","","In how many layers to split the depth maps for parallax …","In how many layers to split the depth maps for Steep …","Using <code>ParallaxMappingMethod::Relief</code>, how many additional …","The maximum shadow distance. Areas further from the camera …","","","","","","","","","How “metallic” the material appears, within <code>[0.0, 1.0]</code>.","From [0.0, 1.0], dielectric to pure metallic","Metallic and roughness maps, stored as a single texture.","","","","The minimum shadow distance, which can help improve the …","The (positive) distance to the near boundary of the first …","","The mesh model uniform (transform) and nothing else.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Also includes the uniform and <code>MorphAttributes</code> for morph …","","Also includes both uniforms for skinning and morph …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Prepare the layouts used by the default bevy <code>Mesh</code>.","Used to fake the lighting of bumps and dents on a material.","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The number of shadow cascades. More cascades increases …","Specifies the level of exposure to ambient light.","","","","","Returns if this material should be rendered by the …","","","Render method used for opaque materials. (Where <code>alpha_mode</code> …","Angle defining the distance from the spot light direction …","Sets the overlap proportion between cascades. The overlap …","The proportion of overlap each cascade has with the …","How deep the offset introduced by the depth map should be.","The depth of the <code>StandardMaterial::depth_map</code> to apply.","Which parallax mapping method to use.","","<code>MeshUniform</code>s are stored in arrays in buffers. If storage …","Linear perceptual roughness, clamped to <code>[0.089, 1.0]</code> in …","","","","","","","","","Prepares fog metadata and writes the fog-related uniform …","","This system prepares all assets of the corresponding …","","","","","","Controls if the prepass is enabled for the Material. For …","Controls if the prepass is enabled for the …","Returns this material’s prepass fragment shader. If …","Returns this material’s prepass fragment shader. If …","","","","","Returns this material’s prepass vertex shader. If …","Returns this material’s prepass vertex shader. If …pecular intensity for non-metals on a linear scale of …","Specular intensity for non-metals on a linear scale of […","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","","","","","","Is this material should be rendered by the deferred …","","Linear perceptual roughness, clamped to [0.089, 1.0] in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","","","","","","","","","","","A bias applied along the direction of the fragment’s …","A bias applied along the direction of the fragment’s …","A bias applied along the direction of the fragment’s …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Also includes the uniform for skinning","","","Customizes the default <code>RenderPipelineDescriptor</code> for a …","Customizes the default <code>RenderPipelineDescriptor</code> for a …","","","","","","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …he bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Whether to apply only the base color to this material.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns this material’s vertex shader. If …","Returns this material’s vertex shader. If …","","","","","","","","Algorithmically-computed indication of whether an entity …","Algorithmically-computed indication of whether an entity …","Algorithmically-computed indication of whether an entity …","Algorithmically-computed indication of whether an entity …","User indication of whether an entity is visible","Enables or disables the light","Enables or disables the light","Enables or disables the light","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Specify if clusters should automatically resize in <code>X/Y</code> if …","Specify if clusters should automatically resize in <code>X/Y</code> if …","","","","","Multiplier applied to the world distance (within the …","Multiplier applied to the world distance (within the …","Distance from the camera where fog is completely opaque, …","Controls how much light is removed due to atmospheric …","Controls how much light is added due to light scattering …","Distance from the camera where fog is completely …","","","","","","How many additional steps to use at most to find the depth …","Samples per slice side is also tweakable, but recommended …","Higher slice count means less noise, but worse performance.","","","","","","","","Component with a <code>depth_id</code> for specifying which …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Label for the shadow pass node.","Combines the color of the fragments with the colors behind …","Sets how a material’s base color alpha channel is used …","An ambient light, which lights the entire scene equally.","A more general form of the <code>FogFalloff::Exponential</code> mode. …","The base color alpha value defines the opacity of the …","A Directional light.","A component bundle for <code>DirectionalLight</code> entities.","Environment map based ambient lighting representing light …","An exponential fog falloff with a given <code>density</code>.","A squared exponential fog falloff with a given <code>density</code>.","Allows switching between different fog falloff modes, and …","Configures the “classic” computer graphics distance fog…","A linear fog falloff that grows in intensity between <code>start</code> …","Reduce transparency to fully opaque or fully transparent …","Materials are used alongside <code>MaterialPlugin</code> and …","A component bundle for entities with a <code>Mesh</code> and a <code>Material</code>.","Adds the necessary ECS resources and render logic to …","Combines the color of the fragments with the colors behind …","A simple linear interpolation, using a single texture …","Base color alpha values are overridden to be fully opaque …","The parallax mapping method to use to compute depth based …","A component bundle for PBR entities with a <code>Mesh</code> and a …","A light that emits light in all directions from a central …","A component bundle for <code>PointLight</code> entities.","Similar to <code>AlphaMode::Blend</code>, however assumes RGB channel …","Discovers the best depth value based on binary search.","Plugin for screen space ambient occlusion.","A light that emits light in a given direction from a …","A component bundle for spot light entities","A material with “standard” properties used in PBR …","","Returns this material’s <code>AlphaMode</code>. Defaults to …","How to apply the alpha channel of the <code>base_color_texture</code>.","The color of the surface of the material before lighting.","The texture component of the material’s color before …","A direct scale factor multiplied with <code>color</code> before being …","","","The color of the fog effect.","","","","","","","Whether to cull the “front”, “back” or neither …","Returns this material’s deferred fragment shader. If …","Used for selecting the deferred lighting pass for deferred …","Returns this material’s deferred vertex shader. If …","Add a bias to the view depth of the mesh which can be used …","Adjust rendered depth.","The depth map used for parallax mapping.","","","Color used to modulate the influence of directional light …","The exponent applied to the directional light alignment …","Support two-sided lighting by automatically flipping the …","Color the material “emits” to the camera.","The emissive map, multiplies pixels with <code>emissive</code> to get …","Determines which falloff mode to use, and its parameters.","Normal map textures authored for DirectX have their …","Whether to enable fog for this material.","Returns this material’s fragment shader. If …","","","","","","","Illuminance in lux","Inherited visibility of an entity.","Inherited visibility of an entity.","Inherited visibility of an entity.","Inherited visibility of an entity.","Angle defining the distance from the spot light direction …","Luminous power in lumens","Luminous power in lumens","","In how many layers to split the depth maps for parallax …","","How “metallic” the material appears, within <code>[0.0, 1.0]</code>.","Metallic and roughness maps, stored as a single texture.","Used to fake the lighting of bumps and dents on a material.","Specifies the level of exposure to ambient light.","Returns if this material should be rendered by the …","Render method used for opaque materials. (Where <code>alpha_mode</code> …","Angle defining the distance from the spot light direction …","How deep the offset introduced by the depth map should be.","Which parallax mapping method to use.","Linear perceptual roughness, clamped to <code>[0.089, 1.0]</code> in …","","Controls if the prepass is enabled for the Material. For …","Returns this material’s prepass fragment shader. If …","Returns this material’s prepass vertex shader. If …","","","","","Specular intensity for non-metals on a linear scale of …","","","","A bias applied along the direction of the fragment’s …","A bias applied along the direction of the fragment’s …","A bias applied along the direction of the fragment’s …","","","","Customizes the default <code>RenderPipelineDescriptor</code> for a …","","","","","","","Whether to apply only the base color to this material.","Returns this material’s vertex shader. If …","Algorithmically-computed indication of whether an entity …","Algorithmically-computed indication of whether an entity …","Algorithmically-computed indication of whether an entity …","Algorithmically-computed indication of whether an entity …","User indication of whether an entity is visible","Enables or disables the light","Enables or disables the light","Enables or disables the light","","","Multiplier applied to the world distance (within the …","Multiplier applied to the world distance (within the …","Distance from the camera where fog is completely opaque, …","Controls how much light is removed due to atmospheric …","Controls how much light is added due to light scattering …","Distance from the camera where fog is completely …","How many additional steps to use at most to find the depth …","Disables wireframe rendering for any entity it is attached …","","Enables wireframe rendering for any entity it is attached …","Sets the color of the <code>Wireframe</code> of the entity it is …","","","A <code>Plugin</code> that draws wireframes.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If <code>Self::global</code> is set, any <code>Entity</code> that does not have a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether to show wireframes for all meshes. Can be …","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the type name of this value’s type.","","","","","","Returns the UUID associated with this value’s type.","","","","","","","","","","","","","","","The <code>A</code> key.","Add this <code>Component</code> to an entity to draw its <code>Aabb</code> component.","Configuration for drawing the <code>Aabb</code> component on entities.","The <code>AbntC1</code> key.","The <code>AbntC2</code> key.","Independent of all other nodes, but relative to its parent …","Combines the color of the fragments with the colors behind …","Command that adds a child to an entity.","A filter on a component that only retains results added …","Emitted whenever an <code>Asset</code> is added.","Indicates that an alias of something is to be created.","Defines how each line is aligned within the flexbox.","How items are aligned according to the cross axis","How this item is aligned according to the cross axis. …","Indicates that the user can scroll by dragging the mouse.","Contains the set of permitted types by their <code>TypeId</code>.","Sets how a material’s base color alpha channel is used …","The <code>Left Alt</code> key. Maps to <code>Left Option</code> on Mac.","The <code>Right Alt</code> key. Maps to <code>Right Option</code> on Mac.","An ambient light, which lights the entire scene equally.","An <code>Iterator</code> of <code>Entity</code>s over the ancestors of an <code>Entity</code>.","A list of <code>VariableCurve</code>, and the <code>EntityPath</code> to which they …","Animation controls","Adds animation support to an app","The <code>AnyOf</code> query parameter fetches entities with any of the …","The <code>Apostrophe</code> / <code>&#39;</code> key.","A container of app logic and data.","A <code>Resource</code> storing <code>TypeRegistry</code> for type registrations …","The <code>Apps</code> key.","An arrow. This is the default cursor on most systems.    ","","","Adds asset-related builder methods to <code>App</code>.","Events that occur for a specific <code>Asset</code>, such as “value …","A unique runtime-only identifier for an <code>Asset</code>. This is …","","Provides “asset” loading and processing functionality. …","Loads and tracks the state of <code>Asset</code> values from a …","Stores <code>Asset</code> values identified by their <code>AssetId</code>.","The <code>Asterisk</code> / <code>*</code> key.","The <code>At</code> / <code>@</code> key.","The window’s top-left corner should be placed at the …","A UI node that is a texture atlas sprite","A more general form of the <code>FogFalloff::Exponential</code> mode. …","Bundle for playing a standard bevy audio asset","Used to control audio during playback.","Common interactions with an audio sink.","A source of audio data","Bundle for playing a sound.","Automatically determine the value based on the context and …","Use the parent node’s <code>AlignItems</code> value to determine how …","Use the parent node’s <code>JustifyItems</code> value to determine …","Track minimum size should be automatically sized","Track maximum size should be automatically sized","Repeat the track to fill available space","Repeat the track to fill available space but collapse any …","Position will be set by the window manager. Bevy will …","The <code>Ax</code> key.","Stores the position data of the input devices of type <code>T</code>.","The <code>B</code> key.","A spline interpolated continuously across the nearest four …","A 2-dimensional <code>bool</code> vector mask.","A 3-dimensional <code>bool</code> vector mask.","A 4-dimensional <code>bool</code> vector mask.","The <code>Back</code> / <code>Backspace</code> key.","The background color of the node","The <code>Backslash</code> / <code>\\\\</code> key.","Items are aligned at the baseline.","Items are aligned at the baseline.","This item will be aligned at the baseline.","This item will be aligned at the baseline.","The base color alpha value defines the opacity of the …","The border color of the UI node.","The <code>Left Bracket</code> / <code>[</code> key.","The <code>Right Bracket</code> / <code>]</code> key.","Trait for removing, adding and replacing children and …","Collection of methods similar to <code>BuildChildren</code>, but …","Trait that defines adding, changing and children and …","The <code>Bundle</code> trait enables insertion and removal of <code>Component</code>…","","Marker struct for buttons","A UI node that is a button","The C button.","The <code>C</code> key.","The calculated clip of the node","The <code>Calculator</code> key.","The defining <code>Component</code> for camera entities, storing …","","","Configuration for the “main 3d render graph”.","","The <code>Capital</code> key.","A spline interpolated continuously across the nearest four …","The <code>Caret</code> / <code>^</code> key.","Indicates that a cell (or set of cells) may be selected.","Leftmost &amp; rightmost characters are equidistant to the …","Items are aligned at the center.","Items are aligned at the center.","This item will be aligned at the center.","This item will be aligned at the center.","Each line moves towards the center of the cross axis.","Centered along the main axis.","Window will be centered on the selected monitor.","A filter on a component that only retains results added or …","Struct for building children entities and adding them to a …","Contains references to the child entities of this entity.","Command that clears all children from an entity and …","A <code>Resource</code> that stores the color that is used to clear the …","Hide overflowing items.","Indicates that a column can be resized horizontally.","The <code>Colon</code> / <code>:</code> key.","","A 2d material that renders 2d meshes with a texture tinted …","A component bundle for entities with a <code>Mesh2dHandle</code> and a …","Flex from top to bottom.","Items are placed by filling each column in turn, adding …","Combines <code>Column</code> with the dense packing algorithm.","Flex from bottom to top.","The <code>Comma</code> / <code>,</code> key.","A <code>Command</code> queue to perform impactful changes to the <code>World</code>.","Notifies when text should be inserted into the editor …","A data type that can be used to store data for an entity.","","The <code>Compose</code> key on Linux.","A system that determines if one or more scheduled systems …","Indicates that a context menu is available.","The <code>Left Control</code> key.","The <code>Right Control</code> key.","The <code>Convert</code> key.","Indicates something is to be copied.","The <code>Copy</code> key.","Repeat the track fixed number of times","A simple crosshair.   ","A spline composed of a single cubic Bezier curve.","Implement this on cubic splines that can generate a curve …","A segment of a cubic curve, used to hold precomputed …","Uses the current monitor of the window.","An event that is sent whenever the user’s cursor enters …","The icon to display for a <code>Window</code>’s <code>Cursor</code>.","An event that is sent whenever the user’s cursor leaves …","An event reporting that the mouse cursor has moved inside …","The <code>Cut</code> key.","The <code>D</code> key.","The down button of the D-Pad.","The left button of the D-Pad.","The right button of the D-Pad.","The up button of the D-Pad.","Convenient query for giving a human friendly name to an …","A type implementing this trait can be converted to a …","The type of the iterator of the audio samples, which …","The type of the audio samples. Usually a <code>u16</code>, <code>i16</code> or <code>f32</code>, …","The platform-dependent default cursor.","The items are packed in their default position as if no …","The items are packed in their default position as if no …","The items are packed in their default position as if no …","The items are packed in their default position as if no …","This plugin group will add all the default plugins for a …","A <code>SystemParam</code> that stores a buffer which gets applied to …","The <code>Delete</code> key.","Contains the set of prohibited types by their <code>TypeId</code>.","Implements <code>Deref</code> for structs. This is especially useful …","Implements <code>DerefMut</code> for structs. This is especially useful …","An <code>Iterator</code> of <code>Entity</code>s over the descendants of an <code>Entity</code>.","Despawns the given entity’s children recursively","Despawns the given entity and all its children recursively","Trait that holds functions for despawning recursively down …","Types that can read change detection information. This …","Types that implement reliable change detection.","Defines the text direction.","A Directional light.","A component bundle for <code>DirectionalLight</code> entities.","Notifies when the IME was disabled.","Defines the layout model used by this node.","The <code>Down</code> / <code>Down Arrow</code> key.","File is being dropped into a window.","Generates a dynamic plugin entry point function for the …","","Errors that can occur when loading a dynamic plugin","A collection of serializable resources and dynamic …","A <code>DynamicScene</code> builder, used to build a scene from a <code>World</code> …","A component bundle for a <code>DynamicScene</code> root.","The <code>E</code> key.","Indicates that an edge of a box is to be moved right …","The right action button of the action pad (i.e. PS: …","Notifies when the IME was enabled.","The <code>End</code> key.","Items are packed towards the end of the axis.","Items are packed towards the end of the axis.","This item will be aligned with the end of the axis.","This item will be aligned with the end of the axis.","Each line moves towards the end of the cross axis.","Items are packed toward the end of the axis.","Lightweight identifier of an entity.","Provides mutable access to a single entity and all of its …","Path to an entity, with <code>Name</code>s. Each entity in a path must …","A read-only reference to a particular <code>Entity</code> and all of …","A mutable reference to a particular <code>Entity</code>, and the entire …","Environment map based ambient lighting representing light …","The <code>Equals</code> / <code>=</code> key.","The <code>Escape</code> / <code>ESC</code> key, next to the <code>F1</code> key.","Euler rotation sequences.","A type that can be stored in an <code>Events&lt;E&gt;</code> resource You can …","","Reads events of type <code>T</code> in order and tracks which events …","Sends events of type <code>T</code>.","An event collection that represents the events that …","Indicates a bidirectional resize cursor.","An exponential fog falloff with a given <code>density</code>.","A squared exponential fog falloff with a given <code>density</code>.","Schedule which extract data from the main world and …","The <code>F</code> key.","The <code>F1</code> key.","The <code>F10</code> key.","The <code>F11</code> key.","The <code>F12</code> key.","The <code>F13</code> key.","The <code>F14</code> key.","The <code>F15</code> key.","The <code>F16</code> key.","The <code>F17</code> key.","The <code>F18</code> key.","The <code>F19</code> key.","The <code>F2</code> key.","The <code>F20</code> key.","The <code>F21</code> key.","The <code>F22</code> key.","The <code>F23</code> key.","The <code>F24</code> key.","The <code>F3</code> key.","The <code>F4</code> key.","The <code>F5</code> key.","The <code>F6</code> key.","The <code>F7</code> key.","The <code>F8</code> key.","The <code>F9</code> key.","","Events related to files being dragged and dropped on a …","Runs first in the schedule. This is run by the <code>Main</code> …","Track maximum size should be sized according to the …","Track maximum size should be sized according to the …","The fixed timestep game clock following virtual time.","The schedule that contains systems which only run after a …","Use Flexbox layout model to determine the position of this …","Defines how flexbox items are ordered within a flexbox","Items are packed towards the end of the axis, unless the …","This item will be aligned with the end of the axis, unless …","Each line moves towards the end of the cross axis, unless …","Pushed towards the end, unless the flex direction is …","Items are packed towards the start of the axis, unless the …","This item will be aligned with the start of the axis, …","Each line moves towards the start of the cross axis, …","Pushed towards the start, unless the flex direction is …","Defines if flexbox items appear on a single line or on …","Allows switching between different fog falloff modes, and …","Configures the “classic” computer graphics distance fog…","","The dimension as a fraction of the total available grid …","Adds frame counting functionality to Apps.","A trait that enables types to be dynamically constructed …","Derives the <code>FromReflect</code> trait.","Creates an instance of the type this trait is implemented …","The <code>G</code> key.","A gamepad with an associated <code>ID</code>.","An axis of a <code>Gamepad</code>.","A type of a <code>GamepadAxis</code>.","A button of a <code>Gamepad</code>.","A type of a <code>GamepadButton</code>.","A collection of connected <code>Gamepad</code>s.","A convenience trait which combines fetching and …","A trait which allows nested <code>Reflect</code> values to be retrieved …","A convenience trait which combines fetching and …","Plugin that provides gamepad handling to an <code>App</code>.","A <code>Resource</code> that stores configuration for gizmos.","A <code>SystemParam</code> for drawing gizmos.","Indicates the order in which this node should be rendered …","Describe the position of an entity relative to the …","Use this <code>Resource</code> to control the global volume of all …","Indicates that something can be grabbed.","Indicates that something is grabbed.","The <code>Grave</code> / <code>Backtick</code> / <code>`</code> key.","Use CSS Grid layout model to determine the position of …","Controls whether grid items are placed row-wise or …","Represents the position of a grid item in a single axis.","Errors that occur when setting constraints for a …","A <code>GridTrack</code> is a Row or Column of a CSS Grid. This struct …","How many times to repeat a repeated grid track","The <code>H</code> key.","A hand (often used to indicate links in web browsers).    ","A strong or weak handle to a specific <code>Asset</code>. If a <code>Handle</code> …","Returns a bool that describes if an entity has the …","Help indicator (often rendered as a “?”)    ","A spline interpolated continuously between the nearest two …","An entity with <code>Visibility::Hidden</code> will be unconditionally …","The base plugin for handling <code>Parent</code> and <code>Children</code> components","An extension trait for <code>Query</code> that adds hierarchy related …","The <code>Home</code> key.","The node has been hovered over","File is currently being hovered over a window.","File hovering was canceled.","HSL (hue, saturation, lightness) color with an alpha …","The <code>I</code> key.","A rectangle defined by two opposite corners.","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","","A UI node that is an image","Adds the <code>Image</code> as an asset and makes sure that they are …","A Input Method Editor event.","Wrapper type to mark a <code>SystemParam</code> as an input.","The input type to this system. See <code>System::In</code>.","The system’s input. See <code>In</code> for <code>FunctionSystem</code>s.","A small / efficient runtime identifier that can be used to …","Uses the monitor with the specified index.","Inherit from parent node.","An entity with <code>Visibility::Inherited</code> will inherit the …","Whether or not an entity is visible in the hierarchy. This …","The type contained within this smart pointer","A “press-able” input of type <code>T</code>.","The <code>Insert</code> key, next to the <code>Backspace</code> key.","Command that inserts a child at a given index of a parent…","Describes what type of input interaction has occurred for …","Conversion trait to turn something into a <code>System</code>.","Types that can convert into a <code>SystemConfigs</code>.","Types that can be converted into a <code>SystemSet</code>.","Types that can convert into a <code>SystemSetConfigs</code>.","","","The <code>J</code> key.","Defines how items are aligned according to the main axis","How items are aligned according to the main axis","How this item is aligned according to the main axis. …","The <code>K</code> key.","The <code>Kana</code> key.","The <code>Kanji</code> key.","The <code>0</code> key over the letters.","The <code>1</code> key over the letters.","The <code>2</code> key over the letters.","The <code>3</code> key over the letters.","The <code>4</code> key over the letters.","The <code>5</code> key over the letters.","The <code>6</code> key over the letters.","The <code>7</code> key over the letters.","The <code>8</code> key over the letters.","The <code>9</code> key over the letters.","The key code of a <code>KeyboardInput</code>.","List of keyframes for one of the attribute of a <code>Transform</code>.","The <code>L</code> key.","Marker struct for labels","Runs last in the schedule. This is run by the <code>Main</code> …","LCH(ab) (lightness, chroma, hue) color with an alpha …","Leftmost character is immediately to the right of the …","The <code>Left</code> / <code>Left Arrow</code> key.","The left mouse button.","The horizontal value of the left stick.","The vertical value of the left stick.","The left thumb stick button.","Text is written left to right.","The first left trigger.","The second left trigger.","The value of the left <code>Z</code> button.","","A linear fog falloff that grows in intensity between <code>start</code> …","Emitted whenever an <code>Asset</code> has been fully loaded (including …","A system local <code>SystemParam</code>.","Indicates the order in which this node should be rendered …","The <code>M</code> key.","The <code>Mail</code> key.","The schedule that contains the app logic that is evaluated …","Reduce transparency to fully opaque or fully transparent …","A 2x2 column major matrix.","A 3x3 column major matrix.","A 4x4 column major matrix.","Materials are used alongside <code>MaterialPlugin</code> and …","A component bundle for entities with a <code>Mesh</code> and a <code>Material</code>.","Adds the necessary ECS resources and render logic to …","Track minimum size should be content sized under a …","Track maximum size should be content sized under a …","","The <code>MediaSelect</code> key.","The <code>MediaStop</code> key.","A 3D object made out of vertices representing triangles, …","The middle mouse button.","Track minimum size should be content sized under a …","Track maximum size should be content sized under a …","","This plugin group will add the minimal plugins for a <em>Bevy</em> …","The <code>Minus</code> / <code>-</code> key.","The mode button.","Emitted whenever an <code>Asset</code> value is modified.","References a screen monitor.","Controls the morph targets for all child <code>Handle&lt;Mesh&gt;</code> …","A button on a mouse device.","Indicates something is to be moved.    ","Configuration resource for Multi-Sample Anti-Aliasing.","Combines the color of the fragments with the colors behind …","Unique mutable borrow of an entity’s component","The <code>Mute</code> key.","The <code>MyComputer</code> key.","The <code>N</code> key.","Indicates that an edge of a box is to be moved up (north).","Component used to identify an entity. Stores a hash for …","The <code>NavigateBackward</code> / <code>Next</code> key.","The <code>NavigateForward</code> / <code>Prior</code> key.","Indicates that an edge of a box is to be moved up and …","Indicates a bidirectional resize cursor.","The next state of <code>State&lt;S&gt;</code>.","The <code>NextTrack</code> key.","The <code>NoConvert</code> key.","Indicates that the dragged item cannot be dropped here.","","Single line, will overflow if needed.","Describes the size of a UI node","The basic UI node","","","Shared borrow of a non-<code>Send</code> resource.","Unique borrow of a non-<code>Send</code> resource.","Nothing has happened","Use no layout, don’t render this node and its children.","The upper action button of the action pad (i.e. PS: …","Cursor showing that something cannot be done.    ","Indicates a bidirectional resize cursor.","The <code>Numlock</code> key.","The <code>Numpad0</code> / <code>0</code> key.","The <code>Numpad1</code> / <code>1</code> key.","The <code>Numpad2</code> / <code>2</code> key.","The <code>Numpad3</code> / <code>3</code> key.","The <code>Numpad4</code> / <code>4</code> key.","The <code>Numpad5</code> / <code>5</code> key.","The <code>Numpad6</code> / <code>6</code> key.","The <code>Numpad7</code> / <code>7</code> key.","The <code>Numpad8</code> / <code>8</code> key.","The <code>Numpad9</code> / <code>9</code> key.","The <code>NumpadAdd</code> / <code>+</code> key.","The <code>NumpadComma</code> / <code>,</code> key.","The <code>NumpadDecimal</code> / <code>.</code> key.","The <code>NumpadDivide</code> / <code>/</code> key.","The <code>NumpadEnter</code> key.","The <code>NumpadEquals</code> / <code>=</code> key.","The <code>NumpadMultiply</code> / <code>*</code> key.","The <code>NumpadSubtract</code> / <code>-</code> key.","indicates that an edge of a box is to be moved up and left …","Indicates a bidirectional resize cursor.","The <code>O</code> key.","A simple linear interpolation, using a single texture …","The <code>Oem102</code> key.","","The label of a <code>Schedule</code> that runs whenever <code>State&lt;S&gt;</code> enters …","The label of a <code>Schedule</code> that runs whenever <code>State&lt;S&gt;</code> exits …","The label of a <code>Schedule</code> that <strong>only</strong> runs whenever <code>State&lt;S&gt;</code> …","Run once and stop.","Base color alpha values are overridden to be fully opaque …","A filter that tests if any of the given filters apply.","","Project a 3D space onto a 2D surface using parallel lines, …","Miscellaneous buttons, considered non-standard (i.e. Extra …","Non-standard support for other axis types (i.e. HOTAS …","Another mouse button with the associated number.","The return type of this system. See <code>System::Out</code>.","The system’s output.","The <code>Outline</code> component adds an outline outside the edge of …","Whether to show or hide overflowing items","Whether to show or hide overflowing items","The <code>P</code> key.","The <code>PageDown</code> key.","The <code>PageUp</code> key.","The parallax mapping method to use to compute depth based …","An alternative to <code>Commands</code> that can be used in parallel …","The <code>SystemParam</code>/s used by this system to access the <code>World</code>.","A collection of potentially conflicting <code>SystemParam</code>s …","Holds a reference to the parent entity of this entity. …","The <code>Paste</code> key.","The <code>Pause</code> / <code>Break</code> key, next to the <code>Scroll</code> key.","A component bundle for PBR entities with a <code>Mesh</code> and a …","Set the value as a percentage of its parent node’s …","Track minimum size should be a percentage value","Track maximum size should be a percentage value","The <code>Period</code> / <code>.</code> key.","","A 3D camera projection in which distant objects appear …","A source of sine wave sound","Bundle for playing a bevy note sound","The <code>PlayPause</code> key.","Initial settings to be used when audio starts playing. If …","A collection of Bevy app logic and configuration.","","Combines multiple <code>Plugin</code>s into a single unit.","The <code>Plus</code> / <code>+</code> key.","A light that emits light in all directions from a central …","A component bundle for <code>PointLight</code> entities.","The strategy used to position this node","The schedule that runs once after <code>Startup</code>. This is run by …","The schedule that contains logic that must run after <code>Update</code>…","The <code>Power</code> key.","The schedule that runs before <code>Startup</code>. This is run by the …","The schedule that contains logic that must run before …","Notifies when a new composing text should be set at the …","Similar to <code>AlphaMode::Blend</code>, however assumes RGB channel …","The node has been pressed.","The <code>PrevTrack</code> key.","Uses the primary monitor of the system.","Assets will be “pre-processed”. This enables assets to …","Progress indicator. Shows that processing is being done.","A configurable <code>CameraProjection</code> that can select its …","Command that pushes children to the end of the entity’s …","Set this value in logical pixels.","Track minimum size should be a fixed pixel value","Track maximum size should be a fixed pixel value","The <code>Q</code> key.","A quaternion representing an orientation.","System parameter that provides selective access to the …","Provides scoped access to a <code>World</code> state according to a …","The <code>R</code> key.","A ray is an infinite line starting at <code>origin</code>, going in …","<code>System</code> types that do not modify the <code>World</code> when run. This …","Real time clock representing elapsed wall clock time.","An event that is sent whenever a window receives a …","A rectangle defined by two opposite corners.","Shared borrow of an entity’s component with access to …","The core trait of <code>bevy_reflect</code>, used for accessing and …","The main derive macro used by <code>bevy_reflect</code> for deriving …","A struct used to operate on reflected <code>Component</code> of a type.","A struct used to provide the default value of a type.","A struct used to deserialize reflected instances of a type.","Type data that represents the <code>FromReflect</code> trait and allows …","Something that can be interpreted as a reflection path in …","A struct used to operate on reflected <code>Resource</code> of a type.","A struct used to serialize reflected instances of a type.","Relative to all other nodes with the <code>PositionType::Relative</code>…","Discovers the best depth value based on binary search.","Command that removes children from an entity, and removes …","Command that removes the parent of an entity, and removes …","Emitted whenever an <code>Asset</code> is removed.","A <code>SystemParam</code> that grants access to the entities that had …","Represents a <em>possibly</em> repeated <code>GridTrack</code>.","Reset when finished.","Command that clear all children from an entity, replacing …","Shared borrow of a <code>Resource</code>.","Unique mutable borrow of a <code>Resource</code>.","A type that can be inserted into a <code>World</code> as a singleton.","","The <code>Return</code> / <code>Enter</code> key.","sRGBA color","RGBA color in the Linear sRGB colorspace (often …","Rightmost character is immediately to the left of the …","The <code>Right</code> / <code>Right Arrow</code> key.","The right mouse button.","The horizontal value of the right stick.","The vertical value of the right stick.","The right thumb stick button.","Text is written right to left.","The first right trigger.","The second right trigger.","The value of the right <code>Z</code> button.","Keyframes for rotation.","Same way as text direction along the main axis.","Items are placed by filling each row in turn, adding new …","Combines <code>Row</code> with the dense packing algorithm.","Indicates that the row can be resized vertically.","Opposite way as text direction along the main axis.","Updates the running gamepad rumble effects.","The <code>S</code> key.","Indicates that an edge of a box is to be moved down …","","","","Keyframes for scale.","The scan code of a <code>KeyboardInput</code>.","To spawn a scene, you can use either:","A component bundle for a <code>Scene</code> root.","A filter used to control which types can be added to a …","Handles spawning and despawning scenes in the world, …","A collection of systems, and the metadata and executor …","Resource that stores <code>Schedule</code>s mapped to <code>ScheduleLabel</code>s.","Plugin for screen space ambient occlusion.","The <code>Scroll</code> / <code>Scroll Lock</code> key.","The cursor indicates that an edge of a box is to be moved …","The select button.","The <code>Semicolon</code> / <code>;</code> key.","The type of <code>SystemSet</code> this instance converts into.","A shader, as defined by its <code>ShaderSource</code> and <code>ShaderStage</code> …","The <code>Left Shift</code> key.","The <code>Right Shift</code> key.","The <code>Slash</code> / <code>/</code> key.","The <code>Sleep</code> key.","The <code>Snapshot</code> / <code>Print Screen</code> key.","The bottom action button of the action pad (i.e. PS: …","The <code>Space</code> / <code>Spacebar</code> / <code> </code> key.","Each line fills the space it needs, putting the remaining …","Remaining space is distributed around the items.","Each line fills the space it needs, putting the remaining …","Remaining space is distributed between the items.","The gap between the first and last items is exactly the …","Like <code>JustifyContent::SpaceAround</code> but with even spacing …","Used to control spatial audio during playback.","A <code>Bundle</code> that allows the correct positional rendering of …","Settings for the listener for spatial audio sources.","The schedule that contains scene spawning. This is run by …","A light that emits light in a given direction from a …","A component bundle for spot light entities","","","A Bundle of components for drawing a single sprite from a …","A material with “standard” properties used in PBR …","The start button.","Items are packed towards the start of the axis.","Items are packed towards the start of the axis.","This item will be aligned with the start of the axis.","This item will be aligned with the start of the axis.","Each line moves towards the start of the cross axis.","Items are packed toward the start of the axis.","The schedule that runs once when the app starts. This is …","A finite-state machine whose transitions have associated …","Runs state transitions. This is run by the <code>Main</code> schedule.","Types that can define world-wide states in a finite-state …","","The <code>Stop</code> key.","A marker type indicating the storage type used for this …","Items are stretched across the whole cross axis.","Items are stretched across the whole main axis.","This item will be stretched across the whole cross axis.","This item will be stretched across the whole main axis.","Each line will stretch to fill the remaining space.","A “strong” reference to a live (or loading) <code>Asset</code>. If …","","A trait used to power struct-like operations via reflection…","Describes the style of a UI container node","The <code>Left Super</code> key. Generic keyboards usually display this …","The <code>Right Super</code> key. Generic keyboards usually display …","The cursor indicates that an edge of a box is to be moved …","The <code>Sysrq</code> key.","An ECS system that can be added to a <code>Schedule</code>","The type of <code>System</code> that this instance converts into.","A trait implemented for all functions that can be used as …","Types that identify logical groups of systems.","Derive macro generating an impl of the trait <code>SystemSet</code>.","The <code>T</code> key.","The <code>Tab</code> / <code>   </code> key.","Helper for configuring and creating the default task …","Setup of default task pools: <code>AsyncComputeTaskPool</code>, …","","Indicates text that may be selected or edited.    ","The bundle of components needed to draw text in a 2D scene …","Describes horizontal alignment preference for positioning …","A UI node that is text","","","","An atlas containing multiple textures (like a spritesheet …","A builder which is used to create a texture atlas from …","","A generic clock resource that tracks how much it has …","Tracks elapsed time. Enters the finished state once …","Specifies <code>Timer</code> behavior.","A touch input event.","A collection of <code>Touch</code>es.","Describe the position of an entity. If the entity has a …","A <code>Bundle</code> of the <code>Transform</code> and <code>GlobalTransform</code> <code>Component</code>s, …","System parameter for computing up-to-date <code>GlobalTransform</code>s.","The base plugin for handling <code>Transform</code> components","A trait for point transformation methods.","Keyframes for translation.","A trait used to power tuple struct-like operations via …","A static accessor to type paths and names.","Derives the <code>TypePath</code> trait, providing a stable alternative …","Registration of default types to the <code>TypeRegistry</code> resource.","The <code>U</code> key.","A rectangle defined by two opposite corners.","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","Configuration for cameras related to UI.","The 2D texture displayed for this UI node","A type which is commonly used to define margins, paddings …","The current scale of the UI.","The atlas sprite to be used in a UI Texture Atlas Node","The <code>Underline</code> / <code>_</code> key.","The <code>Unlabeled</code> key.","Loads assets from their <code>AssetSource</code>’s default <code>AssetReader</code>…","Represents an unset filter.","An untyped variant of <code>Handle</code>, which internally stores the …","The <code>Up</code> / <code>Up Arrow</code> key.","The schedule that contains app logic. This is run by the …","A stable-across-runs / const asset identifier. This will …","The <code>V</code> key.","Set this value in percent of the viewport’s larger …","Set this value in percent of the viewport’s smaller …","Represents the possible value types for layout properties.","","Print a warning for each <code>Entity</code> with a <code>T</code> component whose …","Describes how an attribute of a <code>Transform</code> or <code>MorphWeights</code> …","A 2-dimensional vector.","","","","A 3-dimensional vector.","","","","A 4-dimensional vector.","","","","Indicates vertical text that may be selected or edited.","Set this value in percent of the viewport height","Algorithmically-computed indication or whether an entity …","The virtual game clock representing game time.","User indication of whether an entity is visible. …","A <code>Bundle</code> of the <code>Visibility</code>, <code>InheritedVisibility</code>, and …","Show overflowing items.","An entity with <code>Visibility::Visible</code> will be unconditionally …","The <code>VolumeDown</code> key.","The <code>VolumeUp</code> key.","Set this value in percent of the viewport width","The <code>W</code> key.","Indicates that an edge of a box is to be moved left (west).","Program busy indicator.    ","The <code>Wake</code> key.","A “weak” reference to an <code>Asset</code>. If a <code>Handle</code> is …","","The <code>WebBack</code> key.","The <code>WebFavorites</code> key.","The <code>WebForward</code> key.","The <code>WebHome</code> key.","The <code>WebRefresh</code> key.","The <code>WebSearch</code> key.","The <code>WebStop</code> key.","Keyframes for morph target weights.","The left action button of the action pad (i.e. PS: Square, …","The defining <code>Component</code> for window entities, storing …","An event that is sent when a window is repositioned in …","A <code>Plugin</code> that defines an interface for windowing support …","Defines where a <code>Window</code> should be placed on the screen.","The size limits on a <code>Window</code>.","Filter that selects entities with a component <code>T</code>.","Filter that selects entities without a component <code>T</code>.","Stores and exposes operations on entities, components, …","Struct for adding children to an entity directly through …","Multiple lines, if needed.","Same as <code>FlexWrap::Wrap</code> but new lines will appear before …","The <code>X</code> key.","Intrinsic three-axis rotation XYZ","Intrinsic three-axis rotation XZY","The <code>Y</code> key.","Intrinsic three-axis rotation YXZ","Intrinsic three-axis rotation YZX","The <code>Yen</code> key.","The Z button.","The <code>Z</code> key.","Indicates that this <code>Node</code> entity’s front-to-back ordering …","Intrinsic three-axis rotation ZXY","Intrinsic three-axis rotation ZYX","Indicates that the user can zoom in.","Indicates that the user can zoom out.","","Configuration for the <code>AabbGizmo</code>.","Adds a single child.","Adds a single child.","","Run after all systems in <code>set</code>.","Run after all systems in <code>set</code>.","For Flexbox containers, controls alignment of lines if …","For Flexbox containers, sets default cross-axis alignment …","For Flexbox items, controls cross-axis alignment of the …","The text’s internal alignment. Should not affect its …","Returns this material’s <code>AlphaMode</code>. Defaults to …","How to apply the alpha channel of the <code>base_color_texture</code>.","Suppress warnings and errors that would result from these …","Suppress warnings and errors that would result from …","Suppress warnings and errors that would result from these …","Suppress warnings and errors that would result from …","<code>Anchor</code> point of the sprite in the world","<code>Anchor</code> point of the sprite in the world","Returns a new run condition that only returns <code>true</code> if both …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Applies a reflected value to this value.","Instructs the executor to call <code>System::apply_deferred</code> on …","Applies any <code>Deferred</code> system parameters (or other system …","If a new state is queued in <code>NextState&lt;S&gt;</code>, this system:","Returns the system’s archetype component <code>Access</code>.","The area that the projection covers relative to …","Returns the value as a <code>&amp;dyn Any</code>.","Returns the value as a <code>&amp;mut dyn Any</code>.","Casts this type to a reflected value.","Casts this type to a mutable reflected value.","The aspect ratio of the node (defined as <code>width / height</code>)","The aspect ratio (width divided by height) of the viewing …","Used to determine number of async compute threads to …","The type of the axis.","The background color, which serves as a “fill” for …","The background color, which serves as a “fill” for …","The background color, which serves as a “fill” for …","The background color that will fill the containing node","The background color, which serves as a “fill” for …","The color of the surface of the material before lighting.","The texture component of the material’s color before …","Run before all systems in <code>set</code>.","Run before all systems in <code>set</code>.","","The amount of space between the margins of a node and its …","The color of the Node’s border","The color of the Node’s border","The value corresponding to the bottom side of the UI rect.","The vertical position of the bottom edge of the node.","A direct scale factor multiplied with <code>color</code> before being …","Configures the <code>App</code> to which this plugin is added.","Configures the <code>Plugin</code>s that are to be added.","Marker component that signals this node is a button","The type of the button.","Manually bypasses change detection, allowing you to mutate …","Raw data of the audio source.","The calculated size based on the given image","The calculated size based on the given image","The calculated size based on the given image","","","","","","","The “html canvas” element selector.","","","Treat this collection as a sequence of systems.","Treat this collection as a sequence of system sets.","Received character.","Checks any <code>Tick</code>s stored on this system and wraps their …","<code>Entity</code> whose parent must be removed.","Child entity to add.","Runs after all plugins are built and finished, but before …","Removes all children from this entity. The <code>Children</code> …","","The clear color operation to perform for the main 3d pass.","The rect of the clip","Clones the struct into a <code>DynamicStruct</code>.","Clones the struct into a <code>DynamicTupleStruct</code>.","Clones the value as a <code>Reflect</code> trait object.","Whether to close windows when they are requested to be …","The color of the box.","","","The sprite’s color tint","The tint color used to draw the sprite, defaulting to …","The color of the fog effect.","","","","","The color of the outline.","","The size of the gutters between items in a horizontal …","Returns the system’s component <code>Access</code>.","How the alpha channel of textures should be handled while …","Used to determine number of compute threads to allocate","Computed values for this camera, such as the projection …","Returns the name of the crate the type is in, or <code>None</code> if …","","","Whether to cull the “front”, “back” or neither …","The cursor of this window.","An optional custom size for the sprite that will be used …","An optional custom size for the sprite that will be used …","","System adapter that utilizes the …","","Debug formatter for the value.","Constructs an event at the debug level.","Constructs a span at the debug level.","Build and return a <code>Self::Decoder</code> of the implementing type","Should the window have decorations enabled?","An ergonomic abbreviation for <code>Default::default()</code> to make …","The default color for bounding box gizmos.","The default image sampler to use when <code>ImageSampler</code> is set …","Returns the system’s default system sets.","Returns this material’s deferred fragment shader. If …","Used for selecting the deferred lighting pass for deferred …","Returns this material’s deferred vertex shader. If …","Add a bias to the view depth of the mesh which can be used …","How closer to the camera than real geometry the line …","Adjust rendered depth.","The depth clear operation to perform for the main 3d pass.","The depth map used for parallax mapping.","The texture usages for the depth texture created for the …","Despawns all descendants of the given entity.","Despawns the provided entity alongside all descendants.","Function for despawning an entity and all its children","","A normalized vector representing the direction of the ray.","Defines the text direction. For example, English is …","","Color used to modulate the influence of directional light …","The exponent applied to the directional light alignment …","Which layout algorithm to use when laying out this node’…","Add a run condition to each contained system.","","Support two-sided lighting by automatically flipping the …","Draws all bounding boxes in the scene when set to <code>true</code>.","Duration for which sound will be played","Creates a boxed clone of the label corresponding to this …","Dynamically links a plugin at the given path. The plugin …","Gets a <code>&amp;T</code> to the specified element on the given <code>Reflect</code> …","Gets a <code>&amp;mut T</code> to the specified element on the given <code>Reflect</code>…","Color the material “emits” to the camera.","The emissive map, multiplies pixels with <code>emissive</code> to get …","Returns true if this sink has no more sounds to play.","Set to <code>false</code> to stop drawing gizmos.","Specifies which window control buttons should be enabled.","Entities contained in the dynamic scene.","The unique identifier of the entity as a fallback.","Target entity","Target entity","Window that moved.","System adapter that utilizes the …","Constructs an event at the error level.","Constructs a span at the error level.","Whether to exit the app when there are no open windows.","Determines which falloff mode to use, and its parameters.","The distance from the camera in world units of the viewing …","The distance of the far clipping plane in world units.","Returns a reference to the value of the field named <code>name</code> …","Returns a reference to the value of the field with index …","Returns a reference to the value of the field with index …","Returns a mutable reference to the value of the field with …","Returns the number of fields in the struct.","Returns the number of fields in the tuple struct.","Returns a mutable reference to the value of the field …","Returns a mutable reference to the value of the field with …","","The default file path to use (relative to the project …","Finish adding this plugin to the <code>App</code>, once all plugins …","Whether or not to fit the canvas element’s size to its …","The initial length of a flexbox in the main axis, before …","Whether a Flexbox container should be a row or a column. …","Defines how much a flexbox item should grow if there’s …","Defines how much a flexbox item should shrink if there’s …","Whether a Flexbox container should wrap its contents onto …","Normal map textures authored for DirectX have their …","Flip the sprite along the <code>X</code> axis","Whether to flip the sprite in the X axis","Whether to flip the sprite in the X axis","Whether the image should be flipped along its x-axis","Flip the sprite along the <code>Y</code> axis","Whether to flip the sprite in the Y axis","Whether to flip the sprite in the Y axis","Whether the image should be flipped along its y-axis","Whether this node should block interaction with lower nodes","Whether this node should block interaction with lower nodes","Whether this node should block interaction with lower nodes","Whether this node should block interaction with lower nodes","Whether this node should block interaction with lower nodes","Get/set whether the window is focused.","Whether to enable fog for this material.","","","The vertical height of rasterized glyphs in the font atlas …","Describes how hard the screen was pressed.","The vertical field of view (FOV) in radians.","Returns this material’s fragment shader. If …","Frequency at which sound will be played","The state being exited.","Constructs a concrete instance of <code>Self</code> from a reflected …","Creates <code>Self</code> using data from the given <code>World</code>.","","","","","","The gamepad on which the button is located on.","The gamepad on which the axis is located on.","Returns a reference to the value of the field named <code>name</code>, …","Returns a reference to the value of the field with index …","Returns a mutable reference to the value of the field …","Returns a mutable reference to the value of the field with …","Gets the tick indicating the last time this system ran.","Returns the <code>TypeInfo</code> of the type <em>represented</em> by this value.","The global transform of the entity.","Global transform of the scene root entity.","Global transform of the scene root entity.","","","The global transform of the text.","The global transform of the node","The global transform of the node","The global transform of the node","The global transform of the node","The global transform of the node","","","","","","","The global transform of the entity.","Defines the size of implicitly created columns. Columns …","Controls whether automatically placed grid items are …","Defines the size of implicitly created rows. Rows are …","The column in which a grid item starts and how many …","The row in which a grid item starts and how many rows it …","Defines the number of columns a grid has and the sizes of …","Defines the number of rows a grid has and the sizes of …","If this is set to <code>true</code>, the camera will use an …","The ideal height of the node. <code>height</code> is used when it is …","The <code>ID</code> of the gamepad.","The unique identifier of the finger.","System adapter that ignores the output of the previous …","List of <code>ComponentId</code>s to ignore when reporting system order …","Illuminance in lux","The image of the node","The image of the node","The size of the image in pixels","The size of the image in pixels","Should the window use Input Method Editor?","Sets location of IME candidate box in client area …","","","Add these systems to the provided <code>set</code>.","Add these system sets to the provided <code>set</code>.","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Texture index in <code>TextureAtlas</code>","Texture index in the TextureAtlas","System adapter that utilizes the <code>bevy_utils::tracing::info!</code>…","Constructs an event at the info level.","Constructs a span at the info level.","Inherited visibility of the scene root entity.","Inherited visibility of the scene root entity.","Inherited visibility of an entity.","","Inherited visibility of an entity.","Inherited visibility of an entity.","Inherited visibility of an entity.","Inherited visibility of an entity.","Inherited visibility of an entity.","Inherited visibility of an entity.","Inherited visibility of an entity.","Inherited visibility of an entity.","Inherited visibility of an entity.","Inherited visibility of an entity.","The inherited visibility of the entity.","","Initializes the given <code>Asset</code> in the <code>App</code> by:","Initializes the given loader in the <code>App</code>’s <code>AssetServer</code>.","Initialize the system.","Angle defining the distance from the spot light direction …","Inserts children at the given index.","Inserts children at the given index.","Luminous power in lumens","Luminous power in lumens","Describes whether and how the button has been interacted …","Stores internal state that isn’t directly accessible.","Returns the value as a <code>Box&lt;dyn Any&gt;</code>.","Casts this type to a boxed reflected value.","Turns this value into its corresponding <code>System</code>.","Converts this instance to its associated <code>SystemSet</code> type.","Used to determine number of IO threads to allocate","If this is set to <code>true</code>, this camera will be rendered to …","Returns <code>true</code> if this value was added after the system last …","Returns <code>true</code> if this system set is an <code>AnonymousSet</code>.","Returns <code>true</code> if this value was added or mutably …","Indicates whether or not this type is a <em>dynamic</em> type.","Returns true if the system must be run exclusively.","Is this sink paused?","Returns true if the system is <code>Send</code>.","If the plugin can be meaningfully instantiated several …","Returns an <code>Iterator</code> of <code>Entity</code>s over all of <code>entity</code>s …","Returns an <code>Iterator</code> of <code>Entity</code>s over all of <code>entity</code>s …","Returns an iterator over the values of the reflectable …","Returns an iterator over the values of the tuple struct’…","For Flexbox containers, controls alignment of items in the …","For Flexbox containers, this property has no effect. See …","For Flexbox items, this property has no effect. See …","Timestamp for each of the keyframes.","List of the keyframes.","Returns the change tick recording the time this data was …","The value corresponding to the left side of the UI rect.","The horizontal position of the left edge of the node.","Left ear position relative to the <code>GlobalTransform</code>.","Apply perspective to gizmo lines.","Line width specified in pixels.","How the text should linebreak when running out of the …","Safety","The transform of the entity.","The schedule that systems are added to by default.","Pass the output of this system into the passed function <code>f</code>, …","The amount of space around a node outside its border.","","The maximum corner point of the rect.","The maximum corner point of the rect.","The maximum corner point of the rect.","The maximum height of the node. <code>max_height</code> is used if it …","The maximum height the window can have.","In how many layers to split the depth maps for parallax …","If the number of physical cores is greater than …","The maximum width of the node. <code>max_width</code> is used if it is …","The maximum width the window can have.","","How “metallic” the material appears, within <code>[0.0, 1.0]</code>.","Metallic and roughness maps, stored as a single texture.","The minimum corner point of the rect.","The minimum corner point of the rect.","The minimum corner point of the rect.","The minimum height of the node. <code>min_height</code> is used if it …","The minimum height the window can have.","If the number of physical cores is less than …","The minimum width of the node. <code>min_width</code> is used if it is …","The minimum width the window can have.","The desired playback behavior.","The <code>AssetMode</code> to use for this server.","Which fullscreen or windowing mode should be used.","Returns the path to the module the type is in, or <code>None</code> if …","If this is enabled, a previous camera exists that shares …","Returns the system’s name.","Configures a name for the <code>Plugin</code> which is primarily used …","Configures a name for the <code>PluginGroup</code> which is primarily …","A <code>Name</code> that the entity might have that is displayed if …","Returns the name of the field with index <code>index</code>.","The distance from the camera in world units of the viewing …","The distance of the near clipping plane in world units.","Describes the logical size of the node","Describes the logical size of the node","Describes the logical size of the node","Describes the logical size of the node","Describes the logical size of the node","Used to fake the lighting of bumps and dents on a material.","Generates a <code>Condition</code> that inverses the result of passed …","Specifies the level of exposure to ambient light.","The amount of space between a node’s outline the edge of …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Returns if this material should be rendered by the …","Render method used for opaque materials. (Where <code>alpha_mode</code> …","Returns a new run condition that returns <code>true</code> if either …","Cameras with a higher order are rendered later, and thus …","The origin of the ray.","Angle defining the distance from the spot light direction …","The <code>CameraOutputMode</code> for this camera.","Whether overflowing content should be displayed or clipped.","The amount of space between the edges of a node and its …","How deep the offset introduced by the depth map should be.","Which parallax mapping method to use.","Parent entity to add the child to.","Parts of the path","Returns a statically typed reference to the value …","","Returns a statically typed mutable reference to the value …","Pauses playback of this sink.","Create the sink in paused state. Useful for “deferred …","Linear perceptual roughness, clamped to <code>[0.089, 1.0]</code> in …","The phase of the touch input.","Pass the output of this system <code>A</code> into a second system <code>B</code>, …","Resumes playback of a paused sink.","","The cursor position in logical pixels.","Where the window moved to in physical pixels.","Where the window should be placed.","The position of the finger on the touchscreen.","Whether a node should be laid out in-flow with, or …","Controls if the prepass is enabled for the Material. For …","Returns this material’s prepass fragment shader. If …","Returns this material’s prepass vertex shader. If …","Preregisters a loader for the given extensions, that will …","What presentation mode to give the window.","Whether or not to stop events from propagating out of the …","Settings for the primary window.","The default file path to use (relative to the project …","","","Pushes children to the back of the builder’s children. …","Pushes children to the back of the builder’s children. …","","","","","Has the plugin finished it’s setup? This can be useful …","An optional rectangle representing the region of the sprite…","Gets a reference to the specified element on the given …","Gets a mutable reference to the specified element on the …","Returns a hash of the value (which includes the type).","Returns a mutable enumeration of “kinds” of type.","Returns an owned enumeration of “kinds” of type.","Returns a “partial equality” comparison result.","Returns a reference to the value specified by <code>path</code>.","Returns a mutable reference to the value specified by <code>path</code>.","Returns an enumeration of “kinds” of type.","A macro that automatically generates type data for traits, …","Specular intensity for non-metals on a linear scale of …","Registers the given <code>loader</code> in the <code>App</code>’s <code>AssetServer</code>.","Registers the given <code>processor</code> in the <code>App</code>’s <code>AssetProcessor</code>…","Registers the asset type <code>T</code> using <code>[App::register]</code>, and adds …","Registers the given <code>AssetSourceBuilder</code> with the given <code>id</code>.","Removes the given children","Removes the given children","Removes the <code>Parent</code> of this entity.","Removes the <code>Parent</code> of this entity.","Make this entity parentless while preserving this entity’…","Describes which rendering layers gizmos will be rendered …","Removes all current children from this entity, replacing …","Overwrites this smart pointer with the given value, if and …","Should the window be resizable?","The limits of the window’s logical size (found in its …","What resolution the window should have.","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Resources stored in the dynamic scene.","The value corresponding to the right side of the UI rect.","The horizontal position of the right edge of the node.","Right ear position relative to the <code>GlobalTransform</code>.","Rotation of the entity.","The size of the gutters between items in a vertical …","Executes this system once. See <code>System::run</code> or …","Runs the system with the given input in the world.","Run the systems only if the <code>Condition</code> is <code>true</code>.","Run the systems in this set(s) only if the <code>Condition</code> is …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Runs this system with the given input in the world.","Runs the system with the given input in the world. Unlike …","The runner function is primarily responsible for managing …","The <code>ImageSampler</code> to use during rendering.","Scale of the entity.","Scales the projection in world units.","How the projection will scale when the viewport is resized.","Handle to the scene to spawn.","Handle to the scene to spawn.","","Returns a serializable version of the value.","Performs a type-checked assignment of a reflected value to …","Sets the value of the given <code>Plugin</code>, if it exists","Flags this value as having been changed.","Sets the default asset processor for the given <code>extension</code>.","Overwrites this smart pointer with the given value, if and …","Manually sets the change tick recording the time when this …","Overwrites the tick indicating the last time this system …","Sets the parent of this entity.","Sets the parent of this entity.","Change this entity’s parent while preserving this entity…","Changes the speed of the sound.","Changes the volume of the sound.","Initial settings that the audio starts playing with. If …","","","","","A bias applied along the direction of the fragment’s …","A bias applied along the direction of the fragment’s …","A bias applied along the direction of the fragment’s …","","","","Generation for some primitive shape meshes.","Returns a short, pretty-print enabled path to the type.","Whether to output UI to this camera view.","","Asset containing the audio data to play.","","Enables spatial audio for this source.","Customizes the default <code>RenderPipelineDescriptor</code> for a …","","Gets the speed of the sound.","Speed to play at.","","","The specific sprite from the texture atlas to be drawn, …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Stops the sink.","","Styles which control the layout (size and position) of the …","Styles which control the layout (size and position) of the …","Styles which control the layout (size and position) of the …","Styles which control the layout (size and position) of the …","Styles which control the layout (size and position) of the …","A collection of common adapters for piping the result of a …","Returns <code>Some</code> if this system set is a <code>SystemTypeSet</code>.","Attempts to downcast the given value to <code>Self</code> using, …","The “target” that this camera will render to.","Options for the <code>TaskPool</code> created at application start.","Contains the text.","Contains the text of the node","The maximum width and height of the text.","How the text is positioned relative to its transform.","Text system flags","Contains the size of the text and its glyph’s position …","Text layout information","","","The handle to the texture in which the sprites are stored","Handle to the texture","A handle to the texture atlas that holds the sprite images","A handle to the texture atlas to use for this Ui Node","The descriptor for which sprite to use from the given …","","","The specific areas of the atlas where each texture can be …","Stores the title of the window.","The state being entered.","Build a <code>CubicCurve</code> by computing the interpolation …","Toggles the playback of this sink.","","","The value corresponding to the top side of the UI rect.","The vertical position of the top edge of the node.","Constructs an event at the trace level.","Constructs a span at the trace level.","Transform of the scene root entity.","Transform of the scene root entity.","","Data pertaining to how the sprite is drawn on the screen","The transform of the text.","The transform of the node","The transform of the node","The transform of the node","The transform of the node","The transform of the node","","","","","","","The transform of the entity.","Transform a point.","Position of the entity. In 2d, the last value of the <code>Vec3</code> …","Should the window be transparent?","Returns the <code>TypeId</code> of the underlying system type.","Returns the name of the type, or <code>None</code> if it is anonymous.","Returns the type path of the underlying type.","Returns the fully qualified path of the underlying type.","Whether to apply only the base color to this material.","System adapter that unwraps the <code>Ok</code> variant of a <code>Result</code>. …","Update the system’s archetype component <code>Access</code>.","","Returns this material’s vertex shader. If …","Algorithmically-computed visibility of the scene root …","Algorithmically-computed visibility of the scene root …","Algorithmically-computed indication of whether an entity …","Algorithmically-computed indication of whether an entity …","Algorithmically-computed indication of whether an entity …","Algorithmically-computed indication of whether an entity …","Algorithmically-computed indication of whether an entity …","Algorithmically-computed indication of whether an entity …","Algorithmically-computed indication of whether an entity …","Algorithmically-computed indication of whether an entity …","Algorithmically-computed indication of whether an entity …","Algorithmically-computed indication of whether an entity …","Algorithmically-computed indication of whether an entity …","Algorithmically-computed indication of whether an entity …","The view visibility of the entity.","","If set, this camera will render to the given <code>Viewport</code> …","Specifies the origin of the viewport as a normalized …","User-driven visibility of the scene root entity.","User-driven visibility of the scene root entity.","User indication of whether an entity is visible","User indication of whether an entity is visible","The visibility properties of the text.","Describes the visibility properties of the node","Describes the visibility properties of the node","Describes the visibility properties of the node","Describes the visibility properties of the node","Describes the visibility properties of the node","User indication of whether an entity is visible","Enables or disables the light","Enables or disables the light","Enables or disables the light","The visibility of the entity.","The visibility of the entity.","Sets the window’s visibility.","","","","","Gets the volume of the sound.","Volume to play at.","The global volume of all audio.","","","","","System adapter that utilizes the <code>bevy_utils::tracing::warn!</code>…","Constructs an event at the warn level.","Constructs a span at the warn level.","If set, will override the default “watch for changes” …","The ideal width of the node. <code>width</code> is used when it is …","The width of the outline.","Window that the cursor moved inside.","Window that the cursor entered.","Window that the cursor left.","Window that received the character.","Where should the window appear relative to other …","Sets a specific theme for the window.","Takes a closure which builds children for this entity …","Takes a closure which builds children for this entity …","The main ECS <code>World</code> of the <code>App</code>. This stores and provides …","The world of the scene, containing its entities and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether to show or clip overflowing items on the x axis","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether to show or clip overflowing items on the y axis","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Indicates the depth at which the node should appear in the …","Indicates the depth at which the node should appear in the …","Indicates the depth at which the node should appear in the …","Indicates the depth at which the node should appear in the …","Indicates the depth at which the node should appear in the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Alpha channel. [0.0, 1.0]","Alpha channel. [0.0, 1.0]","Alpha channel. [0.0, 1.0]","Alpha channel. [0.0, 1.0]","Blue channel. [0.0, 1.0]","Blue channel. [0.0, 1.0]","Chroma channel. [0.0, 1.5]","Green channel. [0.0, 1.0]","Green channel. [0.0, 1.0]","Hue channel. [0.0, 360.0]","Hue channel. [0.0, 360.0]","Lightness channel. [0.0, 1.0]","Lightness channel. [0.0, 1.5]","Red channel. [0.0, 1.0]","Red channel. [0.0, 1.0]","Saturation channel. [0.0, 1.0]","Path to the file that was dropped in.","Path to the file that might be dropped in.","Window the file was dropped into.","Window a file is possibly going to be dropped into.","Window that had a canceled file drop.","Multiplier applied to the world distance (within the …","Multiplier applied to the world distance (within the …","Distance from the camera where fog is completely opaque, …","Controls how much light is removed due to atmospheric …","Controls how much light is added due to light scattering …","Distance from the camera where fog is completely …","Cursor begin and end position.","Current value.","Input string","Window that received the event.","Window that received the event.","Window that received the event.","Window that received the event.","How many additional steps to use at most to find the depth …","UV space is distributed by how much of the capsule …","An axis-aligned box defined by its minimum and maximum …","A cylinder with hemispheres at the top and bottom","Manner in which UV coordinates are distributed vertically.","A circle in the <code>XY</code> plane","","A cylinder which stands on the XZ plane","Upper third of the texture goes to the northern …","A sphere made from a subdivided Icosahedron.","A square on the <code>XZ</code> plane centered at the origin.","A rectangle on the <code>XY</code> plane centered at the origin.","A regular polygon in the <code>XY</code> plane","A torus (donut) shape.","A sphere made of sectors and stacks.","Hemispheres get UV space according to the ratio of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Height of the middle cylinder on the <code>Y</code> axis, excluding the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Horizontally-flip the texture coordinates of the resulting …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new box given the coordinates of two opposing …","","","","","","","","","","","","","Creates a new plane centered at the origin with the …","","","","","","","","","","","","","Height of the cylinder in the Y axis.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Number of latitudes, distributed by inclination. Must be …","Number of longitudes, or meridians, distributed by azimuth.","","","","","","","","Creates a new box centered at the origin with the supplied …","","Creates a regular polygon in the <code>XY</code> plane","Creates a circle in the <code>XY</code> plane","","","","","","","","","","","","","Radius on the <code>XZ</code> plane.","Radius in the XZ plane.","The radius of the sphere.","Circumscribed radius in the <code>XY</code> plane.","Inscribed radius in the <code>XY</code> plane.","","The radius of the sphere.","The number of vertices around each horizontal slice of the …","","Number of sections in cylinder between hemispheres.","Longitudinal sectors","The number of segments between the two ends. Setting this …","Number of sides.","","Full width and height of the rectangle.","The total side length of the square.","Latitudinal stacks","The number of subdivisions in the mesh.","The number of subdivisions applied.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Manner in which UV coordinates are distributed vertically.","The number of vertices used.","","","","","","","","","","","","","System adapter that utilizes the …","System adapter that utilizes the …","System adapter that ignores the output of the previous …","System adapter that utilizes the <code>bevy_utils::tracing::info!</code>…","Converts a regular function into a system adapter.","System adapter that unwraps the <code>Ok</code> variant of a <code>Result</code>. …","System adapter that utilizes the <code>bevy_utils::tracing::warn!</code>…","Used as a type argument to <code>Ptr</code>, <code>PtrMut</code> and <code>OwningPtr</code> to …","Trait that is only implemented for <code>Aligned</code> and <code>Unaligned</code> …","Type-erased Box-like pointer to some unknown type chosen …","Type-erased borrow of some unknown type chosen when …","Type-erased mutable borrow of some unknown type chosen …","Conceptually equivalent to <code>&amp;&#39;a [T]</code> but with length …","Used as a type argument to <code>Ptr</code>, <code>PtrMut</code> and <code>OwningPtr</code> to …","Extension trait for helper methods on <code>UnsafeCell</code>","","","","","","","","","","","","","","","","","","","Gets a mutable pointer from this owned pointer.","Gets the underlying pointer, erasing the associated …","Gets the underlying pointer, erasing the associated …","Gets the underlying pointer, erasing the associated …","Gets an immutable reference from this mutable reference","Gets an immutable pointer from this owned pointer.","Transforms this <code>Ptr</code> into an <code>PtrMut</code>","","","","","","","","","","","","","Calculates the offset from a pointer (convenience for …","Calculates the offset from a pointer (convenience for …","Calculates the offset from a pointer (convenience for …","Calculates the offset from a pointer. As the pointer is …","Calculates the offset from a pointer. As the pointer is …","Calculates the offset from a pointer. As the pointer is …","","","","","","","","","","","Creates a dangling pointer with specified alignment. See …","Safety","","","","","","Transforms this <code>Ptr&lt;T&gt;</code> into a <code>&amp;T</code> with the same lifetime","","Safety","Transforms this <code>PtrMut&lt;T&gt;</code> into a <code>&amp;mut T</code> with the same …","","","","","","","","","","","","","","","","","","","Consumes the <code>OwningPtr</code> to drop the underlying data of type …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","Indexes the slice without doing bounds checks","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Consumes a value and creates an <code>OwningPtr</code> to it while …","Creates a new instance from a raw pointer.","Creates a new instance from a raw pointer.","Creates a new instance from a raw pointer.","Transforms this <code>PtrMut</code> into an <code>OwningPtr</code>","Returns a copy of the contained value.","Consumes the <code>OwningPtr</code> to obtain ownership of the …","Consumes the <code>OwningPtr</code> to obtain ownership of the …","Gets a <code>PtrMut</code> from this with a smaller lifetime.","","","","","","","","","","","Removes the alignment requirement of this pointer","Removes the alignment requirement of this pointer","Removes the alignment requirement of this pointer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An error specific to accessing a field/index on a <code>Reflect</code>.","A trait used to power array-like operations via reflection.","","","","","A container for compile-time array info.","An iterator over an <code>Array</code>.","A fixed-size list of reflected values.","A dynamic representation of an enum.","A list of reflected values.","An ordered mapping between reflected values.","A struct type which allows fields to be added at runtime.","A tuple which allows fields to be added at runtime.","A tuple struct which allows fields to be added at runtime.","Dynamic dispatch for <code>TypePath</code>.","A dynamic representation of an enum variant.","A trait used to power enum-like operations via reflection.","","","","","A container for compile-time enum info, used by <code>TypeInfo</code>.","An iterator over the field values of a struct.","A trait that enables types to be dynamically constructed …","Derives the <code>FromReflect</code> trait.","Trait used to generate <code>TypeData</code> for trait reflection.","A convenience trait which combines fetching and …","A trait which allows nested <code>Reflect</code> values to be retrieved …","A convenience trait which combines fetching and …","A convenience trait which combines fetching and …","A trait which allows a type to generate its …","","","A trait used to power list-like operations via reflection.","","","","","A container for compile-time list info.","An iterator over an <code>List</code>.","A trait used to power map-like operations via reflection.","","","","","A container for compile-time map info.","An iterator over the key-value pairs of a <code>Map</code>.","The named field of a reflected struct.","An error that occurs when parsing reflect path strings.","","A pre-parsed path to an element within a type.","The core trait of <code>bevy_reflect</code>, used for accessing and …","The main derive macro used by <code>bevy_reflect</code> for deriving …","A struct used to deserialize reflected instances of a type.","<code>Reflect</code> values are commonly used in situations where the …","Type data that represents the <code>FromReflect</code> trait and allows …","A mutable enumeration of “kinds” of reflected type.","An owned enumeration of “kinds” of reflected type.","Something that can be interpreted as a reflection path in …","An error returned from a failed path string query.","An immutable enumeration of “kinds” of reflected type.","A struct used to serialize reflected instances of a type.","A trait used to power struct-like operations via reflection…","","","","","","","Struct enums take the form:","Struct enums take the form:","A container for compile-time named struct info.","Type info for struct variants.","","A trait used to power tuple-like operations via reflection.","","","","","","","Tuple enums take the form:","Tuple enums take the form:","An iterator over the field values of a tuple.","A container for compile-time tuple info.","A trait used to power tuple struct-like operations via …","","","","","An iterator over the field values of a tuple struct.","A container for compile-time tuple struct info.","Type info for tuple variants.","A trait used to type-erase type metadata.","Compile-time type information for various reflected types.","A static accessor to type paths and names.","Derives the <code>TypePath</code> trait, providing a stable alternative …","Provides dynamic access to all methods on <code>TypePath</code>.","Runtime storage for type metadata, registered into the …","A registry of reflected types.","A synchronized wrapper around a <code>TypeRegistry</code>.","A trait for types with a statically associated UUID.","","A trait for types with an associated UUID.","A static accessor to compile-time type information.","","Unit enums take the form:","Unit enums take the form:","Type info for unit variants.","The unnamed field of a reflected tuple or tuple struct.","A Universally Unique Identifier (UUID).","","","","","A container for compile-time info related to general value …","","An iterator over the fields in the current enum variant.","A container for compile-time enum variant info.","Describes the form of an enum variant.","Registers the type described by <code>registration</code>.","Applies a reflected value to this value.","","","","","","","","Applies the reflected array data to the given array.","The default debug formatter for <code>Array</code> types.","Returns the <code>u64</code> hash of the given array.","Compares two arrays (one concrete and one reflected) to …","Returns the value as a <code>&amp;dyn Any</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value as a <code>&amp;mut dyn Any</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Casts this type to a reflected value.","","","","","","","Convert <code>Ptr</code> into <code>&amp;dyn Reflect</code>.","","Casts this type to a mutable reflected value.","","","","","","","Convert <code>PtrMut</code> into <code>&amp;mut dyn Reflect</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The compile-time capacity of the array.","","","","","","","","","","","","","","","","","","","","","","","","","","Clones the map, producing a <code>DynamicMap</code>.","Clones the struct into a <code>DynamicStruct</code>.","Clones the struct into a <code>DynamicTuple</code>.","Clones the struct into a <code>DynamicTupleStruct</code>.","","Clones the list, producing a <code>DynamicArray</code>.","Clones the list, producing a <code>DynamicList</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Clones the value as a <code>Reflect</code> trait object.","","","","","","","","","","Checks if a variant with the given name exists within this …","Returns the name of the crate the type is in, or <code>None</code> if …","","","","","","","See <code>TypePath::crate_name</code>.","","Returns a reference to the value of type <code>T</code> in this …","Returns a mutable reference to the value of type <code>T</code> in this …","Debug formatter for the value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Deserializes a reflected value.","","","","","","","Downcasts the value to type <code>T</code>, consuming the trait object.","","","","","","Returns a boxed object from a boxed trait object if the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Downcasts the value to type <code>T</code> by mutable reference.","Returns a mutable reference to the object within the trait …","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …","Downcasts the value to type <code>T</code> by reference.","Returns a reference to the object within the trait object …","Drain the elements of this array to get a vector of owned …","Drain the elements of this list to get a vector of owned …","Drain the key-value pairs of this map to get a vector of …","Drain the fields of this tuple to get a vector of owned …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Gets a <code>&amp;T</code> to the specified element on the given <code>Reflect</code> …","Gets a <code>&amp;mut T</code> to the specified element on the given <code>Reflect</code>…","Create a type registry with <em>no</em> registered types.","The default debug formatter for <code>Enum</code> types.","Returns the <code>u64</code> hash of the given enum.","Compares an <code>Enum</code> with a <code>Reflect</code> value.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a reference to the value of the field named <code>name</code> …","Returns a reference to the value of the field with index …","Returns a reference to the value of the field with index …","Returns a reference to the value of the field (in the …","Get the field with the given name.","","","","","Get the field with the given name.","Returns a reference to the value of the field with index …","Returns a reference to the value of the field (in the …","Get the field at the given index.","","Get the field at the given index.","Get the field at the given index.","","Get the field at the given index.","Get the field at the given index.","Returns a mutable reference to the value of the field with …","Returns a mutable reference to the value of the field (in …","","","Returns the number of fields in the struct.","Returns the number of fields in the tuple.","Returns the number of fields in the tuple struct.","Returns the number of fields in the current variant.","The total number of fields in this struct.","","The total number of fields in this tuple.","","The total number of fields in this struct.","","","The total number of fields in this variant.","The total number of fields in this variant.","Returns a mutable reference to the value of the field …","Returns a mutable reference to the value of the field with …","Returns a mutable reference to the value of the field with …","Returns a mutable reference to the value of the field (in …","","","","","A slice containing the names of all fields in order.","A slice containing the names of all fields in order.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Create a <code>DynamicEnum</code> from an existing one.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a function pointer to turn a <code>Ptr</code> into <code>&amp;dyn Reflect</code> for …","Get a function pointer to turn a <code>PtrMut</code> into …","Create a <code>DynamicEnum</code> from an existing one.","Constructs a concrete instance of <code>Self</code> from a reflected …","Perform a <code>FromReflect::from_reflect</code> conversion on the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a reference to the element at <code>index</code>, or <code>None</code> if …","Returns a reference to the element at <code>index</code>, or <code>None</code> if …","Returns a reference to the value associated with the given …","Returns a reference to the <code>TypeRegistration</code> of the type …","","","","Returns the key-value pair at <code>index</code> by reference, or <code>None</code> …","","Returns the key-value pair at <code>index</code> by reference where the …","","Returns a reference to the value of the field named <code>name</code>, …","Returns a reference to the value of the field with index …","Returns a reference to the value of the field with index …","","","","","","","Returns a mutable reference to the value of the field …","Returns a mutable reference to the value of the field with …","Returns a mutable reference to the value of the field with …","","","","","","","Returns a mutable reference to the element at <code>index</code>, or …","Returns a mutable reference to the element at <code>index</code>, or …","Returns a mutable reference to the value associated with …","Returns a mutable reference to the <code>TypeRegistration</code> of the …","","","","Returns the <code>TypeInfo</code> of the type <em>represented</em> by this value.","","","","","","","","Turn the value into a serializable representation","Returns a reference to the <code>TypeData</code> of type <code>T</code> associated …","Returns a mutable reference to the <code>TypeData</code> of type <code>T</code> …","Returns the <code>TypeInfo</code> associated with the given <code>TypeId</code>.","","Returns a reference to the <code>TypeRegistration</code> of the type …","Returns a mutable reference to the <code>TypeRegistration</code> of the …","Returns a reference to the <code>TypeRegistration</code> of the type …","Returns a mutable reference to the <code>TypeRegistration</code> of the …","","","See <code>TypePath::type_ident</code>.","A macro used to generate a <code>FromReflect</code> trait …","A replacement for <code>#[derive(Reflect)]</code> to be used with …","A macro used to generate reflection trait implementations …","A replacement for deriving <code>TypePath</code> for use on foreign …","Derives <code>TypeUuid</code> for the given type. This is used …","","","","Returns the index of the field.","Returns the index of the field (in the current variant) …","Get the index of the field with the given name.","Gets the index of the field with the given name.","","Get the index of the variant with the given name.","Get the index of the field with the given name.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Inserts an element at position <code>index</code> within the list, …","Inserts an instance of <code>T</code> into this registration’s type …","","Inserts a typed key-value pair into the map.","Inserts a field named <code>name</code> with the typed value <code>value</code> into …","Appends a typed element with value <code>value</code> to the tuple.","Appends a typed element with value <code>value</code> to the tuple …","Inserts a key-value pair into the map.","","Inserts a field named <code>name</code> with value <code>value</code> into the …","Appends an element with value <code>value</code> to the tuple.","Appends an element with value <code>value</code> to the tuple struct.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the value as a <code>Box&lt;dyn Any&gt;</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Casts this type to a boxed reflected value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if the underlying value is of type <code>T</code>, or <code>false</code>","Returns true if the trait object wraps an object of type …","Check if the given type matches the array type.","Check if the given type matches the field type.","Check if the given type matches the field type.","Check if the given type matches the list type.","Check if the given type matches the map type.","Check if the given type matches the struct type.","Check if the given type matches the tuple type.","Check if the given type matches the tuple struct type.","Check if the given type matches the underlying type.","Check if the given type matches the value type.","Check if the given type matches the enum type.","Indicates whether or not this type is a <em>dynamic</em> type.","","","","","","","Returns <code>true</code> if the collection contains no elements.","Returns <code>true</code> if the collection contains no elements.","Returns <code>true</code> if the list contains no elements.","Returns true if the current variant’s type matches the …","Check if the given type matches the array item type.","Check if the given type matches the list item type.","The <code>TypeId</code> of the array item.","The <code>TypeId</code> of the list item.","A representation of the type path of the array item.","A representation of the type path of the list item.","Returns an iterator over the array.","Returns an iterator over the list.","Returns an iterator over the key-value pairs of the map.","Returns an iterator over the <code>TypeRegistration</code>s of the …","","","","Iterate over the fields of this struct.","Iterate over the fields of this tuple.","Iterate over the fields of this struct.","Iterate over the variants of this enum.","Iterate over the fields of this variant.","Iterate over the fields of this variant.","Returns an iterator over the values of the reflectable …","Returns an iterator over the values of the tuple’s …","Returns an iterator over the values of the tuple struct’…","Returns an iterator over the values of the current variant…","","","","","Returns a mutable iterator over the <code>TypeRegistration</code>s of …","Check if the given type matches the key type.","The <code>TypeId</code> of the key.","A representation of the type path of the key type.","Returns the number of elements in the array.","Returns the number of elements in the list.","Returns the number of elements in the map.","","","","Applies the elements of <code>b</code> to the corresponding elements of …","The default debug formatter for <code>List</code> types.","Returns the <code>u64</code> hash of the given list.","Compares a <code>List</code> with a <code>Reflect</code> value.","Applies the elements of reflected map <code>b</code> to the …","The default debug formatter for <code>Map</code> types.","Compares a <code>Map</code> with a <code>Reflect</code> value.","Returns the path to the module the type is in, or <code>None</code> if …","","","","","","","See <code>TypePath::module_path</code>.","","","The name of the field.","","The name of this variant.","The name of this variant.","The name of this variant.","Returns the name of the field with index <code>index</code>.","Returns the name of the field (in the current variant) …","","","Creates a new <code>ArrayIter</code>.","Creates a new <code>ListIter</code>.","Creates a new <code>MapIter</code>.","","","","Create a type registry with default registrations for …","","Create a new <code>ArrayInfo</code>.","","Create a new <code>NamedField</code>.","","Create a new <code>ListInfo</code>.","Create a new <code>MapInfo</code>.","Create a new <code>StructInfo</code>.","Create a new <code>TupleInfo</code>.","Create a new <code>TupleStructInfo</code>.","","Create a new <code>DynamicEnum</code> to represent an enum at runtime.","Create a new <code>EnumInfo</code>.","Create a new <code>StructVariantInfo</code>.","Create a new <code>TupleVariantInfo</code>.","Create a new <code>UnitVariantInfo</code>.","Create a new <code>DynamicEnum</code> with a variant index to represent …","","","","","","","","","","","","","","","","","Creates type registration information for <code>T</code>.","Creates a new table from a type.","Parses a <code>ParsedPath</code> from a string.","Similar to <code>Self::parse</code> but only works on <code>&amp;&#39;static str</code> and …","","Returns a statically typed reference to the value …","See <code>TypePath::type_path</code>.","Returns a statically typed mutable reference to the value …","Removes the <em>back</em> element from the list and returns it, or …","","","Appends an element to the <em>back</em> of the list.","Appends a typed value to the list.","","Appends a <code>Reflect</code> trait object to the list.","Takes a read lock on the underlying <code>TypeRegistry</code>.","See <code>TypePath::crate_name</code>.","","","","","","","","Gets a reference to the specified element on the given …","","Gets a mutable reference to the specified element on the …","","Returns a hash of the value (which includes the type).","","","","See <code>TypePath::module_path</code>.","","","","","","","","Returns a mutable enumeration of “kinds” of type.","","","","","","","","Returns an owned enumeration of “kinds” of type.","","","","","","","","Returns a “partial equality” comparison result.","","","","","","","","Returns a reference to the value specified by <code>path</code>.","Returns a mutable reference to the value specified by <code>path</code>.","Returns an enumeration of “kinds” of type.","","","","","","","","See <code>TypePath::short_type_path</code>.","","","","","","","","A macro that automatically generates type data for traits, …","See <code>TypePath::type_ident</code>.","","","","","","","","See <code>TypePath::type_path</code>.","","","","","","","","Registers the type <code>T</code>, adding reflect data as specified in …","Registers the type data <code>D</code> for type <code>T</code>.","Removes and returns the element at position <code>index</code> within …","Removes an entry from the map.","","","Returns <code>true</code> if the underlying value represents a value of …","","Returns a serializable version of the value.","Performs a type-checked assignment of a reflected value to …","","","","","","","","Sets the type to be represented by this <code>DynamicArray</code>.","Sets the type to be represented by this <code>DynamicList</code>.","Sets the type to be represented by this <code>DynamicMap</code>.","Sets the type to be represented by this <code>DynamicStruct</code>.","Sets the type to be represented by this <code>DynamicTuple</code>.","Sets the type to be represented by this <code>DynamicTupleStruct</code>.","Sets the type to be represented by this <code>DynamicEnum</code>.","Set the current enum variant represented by this struct.","Set the current enum variant represented by this struct …","See <code>TypePath::short_type_path</code>.","Returns a short, pretty-print enabled path to the type.","","","","","","","","","","","","","","","","","","","The default debug formatter for <code>Struct</code> types.","Compares a <code>Struct</code> with a <code>Reflect</code> value.","Downcasts the value to type <code>T</code>, unboxing and consuming the …","Attempts to downcast the given value to <code>Self</code> using, …pplies the elements of <code>b</code> to the corresponding elements of …","The default debug formatter for <code>Tuple</code> types.","Compares a <code>Tuple</code> with a <code>Reflect</code> value.","The default debug formatter for <code>TupleStruct</code> types.","Compares a <code>TupleStruct</code> with a <code>Reflect</code> value.","","","","","","","","","","","","Returns the <code>TypeId</code> of the type.","","","","The <code>TypeId</code> of the array.","","The <code>TypeId</code> of the field.","","","The <code>TypeId</code> of the field.","","","The <code>TypeId</code> of the list.","","The <code>TypeId</code> of the map.","","","","","","","","The <code>TypeId</code> of the struct.","","The <code>TypeId</code> of the tuple.","","","The <code>TypeId</code> of the tuple struct.","","","","The <code>TypeId</code> of the underlying type.","","The <code>TypeId</code> of the value.","","","","","Returns the <code>TypeId</code> that the <code>ReflectFromPtr</code> was constructed …","","","","The <code>TypeId</code> of the enum.","","","","","","","Returns the name of the type, or <code>None</code> if it is anonymous.","","","","","","","","Returns the compile-time info for the underlying type.","","Returns a reference to the registration’s <code>TypeInfo</code>","","Returns the type path of the underlying type.","Returns the fully qualified path of the underlying type.","","The stable, full type path of the array.","","The stable, full type path of the field.","The stable, full type path of the field.","The stable, full type path of the list.","","The stable, full type path of the map.","","The stable, full type path of the struct.","","The stable, full type path of the tuple.","","The stable, full type path of the struct.","","The stable, full type path of the underlying type.","The stable, full type path of the value.","","The stable, full type path of the value.","A representation of the type path of the array.","A representation of the type path of the field.","A representation of the type path of the field.","A representation of the type path of the list.","A representation of the type path of the map.","A representation of the type path of the struct.","A representation of the type path of the tuple.","A representation of the type path of the struct.","A representation of the type path of the underlying type.","A representation of the type path of the value.","A representation of the type path of the value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helpers for working with Bevy reflection.","","Check if the given type matches the value type.","The <code>TypeId</code> of the value.","A representation of the type path of the value type.","Get a variant with the given name.","Get a variant at the given index.","The index of the current variant.","","The number of variants in this enum.","The name of the current variant.","","A slice containing the names of all variants in order.","Returns the full path to the current variant.","Returns the full path to the given variant.","The type of the current variant.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Takes a write lock on the underlying <code>TypeRegistry</code>.","","","Position in the path string.","Position in <code>path</code>.","","An object-safe equivalent of Serde’s <code>Deserializer</code> trait.","Error when a <code>Serializer</code> or <code>Deserializer</code> trait object fails.","Result type alias where the error is <code>erased_serde::Error</code>.","An object-safe equivalent of Serde’s <code>Serialize</code> trait.","An object-safe equivalent of Serde’s <code>Serializer</code> trait.","","","","","","","","","","Deserialize a value of type <code>T</code> from the given trait object.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert any Serde <code>Deserializer</code> to a trait object.","Convert any Serde <code>Serializer</code> to a trait object.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Serialize the given type-erased serializable value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Implement <code>serde::Serialize</code> for a trait object that has …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A trait that enables types to be dynamically constructed …","Derives the <code>FromReflect</code> trait.","A convenience trait which combines fetching and …","A trait which allows nested <code>Reflect</code> values to be retrieved …","A convenience trait which combines fetching and …","The core trait of <code>bevy_reflect</code>, used for accessing and …","The main derive macro used by <code>bevy_reflect</code> for deriving …","A struct used to provide the default value of a type.","A struct used to deserialize reflected instances of a type.","Type data that represents the <code>FromReflect</code> trait and allows …","Something that can be interpreted as a reflection path in …","A struct used to serialize reflected instances of a type.","A trait used to power struct-like operations via reflection…","A trait used to power tuple struct-like operations via …","A static accessor to type paths and names.","Derives the <code>TypePath</code> trait, providing a stable alternative …","Applies a reflected value to this value.","Returns the value as a <code>&amp;dyn Any</code>.","Returns the value as a <code>&amp;mut dyn Any</code>.","Casts this type to a reflected value.","Casts this type to a mutable reflected value.","Clones the struct into a <code>DynamicStruct</code>.","Clones the struct into a <code>DynamicTupleStruct</code>.","Clones the value as a <code>Reflect</code> trait object.","Returns the name of the crate the type is in, or <code>None</code> if …","Debug formatter for the value.","Gets a <code>&amp;T</code> to the specified element on the given <code>Reflect</code> …","Gets a <code>&amp;mut T</code> to the specified element on the given <code>Reflect</code>…","Returns a reference to the value of the field named <code>name</code> …","Returns a reference to the value of the field with index …","Returns a reference to the value of the field with index …","Returns a mutable reference to the value of the field with …","Returns the number of fields in the struct.","Returns the number of fields in the tuple struct.","Returns a mutable reference to the value of the field …","Returns a mutable reference to the value of the field with …","Constructs a concrete instance of <code>Self</code> from a reflected …","","Returns a reference to the value of the field named <code>name</code>, …","Returns a reference to the value of the field with index …","Returns a mutable reference to the value of the field …","Returns a mutable reference to the value of the field with …","Returns the <code>TypeInfo</code> of the type <em>represented</em> by this value.","Returns the value as a <code>Box&lt;dyn Any&gt;</code>.","Casts this type to a boxed reflected value.","Indicates whether or not this type is a <em>dynamic</em> type.","Returns an iterator over the values of the reflectable …","Returns an iterator over the values of the tuple struct’…","Returns the path to the module the type is in, or <code>None</code> if …","Returns the name of the field with index <code>index</code>.","Returns a statically typed reference to the value …","Returns a statically typed mutable reference to the value …","Gets a reference to the specified element on the given …","Gets a mutable reference to the specified element on the …","Returns a hash of the value (which includes the type).","Returns a mutable enumeration of “kinds” of type.","Returns an owned enumeration of “kinds” of type.","Returns a “partial equality” comparison result.","Returns a reference to the value specified by <code>path</code>.","Returns a mutable reference to the value specified by <code>path</code>.","Returns an enumeration of “kinds” of type.","A macro that automatically generates type data for traits, …","Returns a serializable version of the value.","Performs a type-checked assignment of a reflected value to …","Returns a short, pretty-print enabled path to the type.","Attempts to downcast the given value to <code>Self</code> using, …","Returns the name of the type, or <code>None</code> if it is anonymous.","Returns the type path of the underlying type.","Returns the fully qualified path of the underlying type.","","","","","","","","A general purpose serializer for reflected types.","","","Contains data relevant to the automatic reflect powered …","Data needed for (de)serialization of a skipped field.","","","","A deserializer for type registrations.","A deserializer for reflected types whose <code>TypeInfo</code> is known.","A serializer for reflected types whose type is known and …","A general purpose deserializer for reflected typeseturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Generates a default instance of the skipped field at the …","Generates a default instance of the field.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if there are no skipped fields.","Returns true if the given index corresponds to a field …","Returns an iterator over the skipped fields.","Returns the number of skipped fields.","","","","","","","","Creates a new <code>SerializationData</code> instance with the given …","Create a new <code>SkippedField</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A struct used to provide the default value of a type.","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","A container for <code>TypedProperty</code> over generic types, allowing …","See <code>GenericTypeCell</code>.","See <code>GenericTypeCell</code>.","A container for <code>TypeInfo</code> over non-generic types, allowing …","See <code>NonGenericTypeCell</code>.","","Used to store a <code>String</code> in a <code>GenericTypePathCell</code> as part of …","A type that can be stored in a (<code>Non</code>)<code>GenericTypeCell</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns a reference to the <code>TypedProperty</code> stored in the …","Returns a reference to the <code>TypedProperty</code> stored in the …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Initialize a <code>NonGenericTypeCell</code> for non-generic types.","Initialize a <code>GenericTypeCell</code> for generic types.","Deterministic fixed state hasher to be used by …","","","","","","","","","","","","","","","","","","","Cleanup render resources here.","The copy of <code>apply_deferred</code> that runs immediately after …","A helper for accessing <code>MainWorld</code> content using a system …","The copy of <code>apply_deferred</code> that runs at the beginning of …","Schedule which extract data from the main world and …","","","The simulation <code>World</code> of the application, stored as a …","Create any additional views such as those used for shadow …","The copy of <code>apply_deferred</code> that runs immediately after …","Sort the <code>RenderPhases</code> here.","Prepare render resources from extracted data for the GPU …","Prepare assets that have been created/modified/removed …","A sub-set within <code>Prepare</code> for constructing bind groups, or …","The copy of <code>apply_deferred</code> that runs immediately after …","A sub-set within <code>Prepare</code> for initializing buffers, …","The copy of <code>apply_deferred</code> that runs between …","Queue drawable entities as phase items in <code>RenderPhase</code>s …","A sub-set within <code>Queue</code> where mesh entity queue systems are …","The main render schedule.","Actual rendering happens here. In most cases, only the …","A Label for the rendering sub-app.","The copy of <code>apply_deferred</code> that runs immediately after …","Contains the default Bevy rendering backend based on wgpu.","The labels of the default App rendering sets.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets up the base structure of the rendering <code>Schedule</code>.","","","","","","","","","","","","","","","","Initializes the renderer, sets up the <code>RenderSet</code> and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convenience logic for turning components from the main …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The modular rendering abstraction responsible for queuing, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The per-instance data to be inserted into the …","Data used for comparison between phase items. If the …","A trait to support getting data used for batching draw …","Add this component to mesh entities to disable automatic …","","","","","","","Batch the items in a render phase. This means comparing …","","","","","","","","Returns the argument unchanged.","","","Get the per-instance data to be inserted into the …","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Keeping the aspect ratio while the axes can’t be bigger …","Keeping the aspect ratio while the axes can’t be smaller …","The defining <code>Component</code> for camera entities, storing …","","Control how this camera outputs once rendering is …","","Trait to control the projection matrix of a camera.","Adds <code>Camera</code> driver systems for a given projection type.","Configures the <code>RenderGraph</code> name assigned to be run for a …","Label for <code>camera_system&lt;T&gt;</code>, shared across all <code>T</code>.","Holds internally computed <code>Camera</code> values.","","Manually specify the projection’s size, ignoring window …","Keep the projection’s width constant; height will be …","Keep the projection’s height constant; width will be …","Image to which the camera’s view is rendered.","Image to which the camera’s view is rendered.","A manually managed <code>TextureView</code> for use as a …","A unique id that corresponds to a specific …","Stores manually managed <code>ManualTextureView</code>s for use as a …","Camera component specifying a mip bias to apply when …","Normalized version of the render target.","","Project a 3D space onto a 2D surface using parallel lines, …","","A 3D camera projection in which distant objects appear …","A configurable <code>CameraProjection</code> that can select its …","The “target” that a <code>Camera</code> will render to. For …","Information about the current <code>RenderTarget</code>.","","Skips writing the camera output to the configured render …","","Cameras sorted by their order field. This is updated in …","A subpixel offset to jitter a perspective camera’s …","Texture View to which the camera’s view is rendered. …","Texture View to which the camera’s view is rendered. …","Render viewport configuration for the <code>Camera</code> component.","Window to which the camera’s view is rendered.","Window to which the camera’s view is rendered.","Match the viewport size. The argument is the number of …","Writes the camera output to configured render target.","","","","","","","","","","","The area that the projection covers relative to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The aspect ratio (width divided by height) of the viewing …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","System in charge of updating a <code>Camera</code> when its window or …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Computed values for this camera, such as the projection …","","","","","","","","","","","","","","","","","","","","","","","","","","","The minimum and maximum depth to render (on a scale from …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The distance from the camera in world units of the viewing …","The distance of the far clipping plane in world units.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The vertical field of view (FOV) in radians.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Retrieves the <code>TextureFormat</code> of this render target, if it …","","","","","","","","","","","","","","","If this is set to <code>true</code>, the camera will use an …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If this is set to <code>true</code>, this camera will be rendered to …","","","","","","","","","","","","The full logical size of this camera’s <code>RenderTarget</code>, …","The rendered logical bounds <code>Rect</code> of the camera. If the …","The logical size of this camera’s viewport. If the …","","","","","","","","","","","If this is enabled, a previous camera exists that shares …","","","","","","","","","","Given a position in Normalized Device Coordinates, use the …","The distance from the camera in world units of the viewing …","The distance of the near clipping plane in world units.","","Creates a new <code>CameraRenderGraph</code> from any string-like type.","Normalize the render target down to a more concrete value, …","","","","","","","","","","","","","","","","","Offset is in range [-0.5, 0.5].","","Cameras with a higher order are rendered later, and thus …","","The <code>CameraOutputMode</code> for this camera.","","","","The physical position to render this viewport to within …","The physical size of the viewport rectangle to render to …","The physical size of this render target (ignores scale …","The full physical size of this camera’s <code>RenderTarget</code>, …","","The rendered physical bounds <code>URect</code> of the camera. If the …","The physical size of this camera’s viewport. If the …","","The projection matrix computed using this camera’s …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Scales the projection in world units.","The scale factor of this render target.","How the projection will scale when the viewport is resized.","","","","","Sets the graph name.","","","","","","","","","","","","","","","","","","","","","","The “target” that this camera will render to.","","","Converts a physical size in this <code>Camera</code> to a logical sizef set, this camera will render to the given <code>Viewport</code> …","","Specifies the origin of the viewport as a normalized …","Returns a ray originating from the camera, that passes …","Returns a 2D world position computed from a position on …","","","","","","","","","","","","","","","","","","","","","","","","","","Given a position in world space, use the camera’s …","Given a position in world space, use the camera to compute …","The blend state that will be used by the pipeline that …","The color attachment load operation that will be used by …","","","","","","","","","","","","","","","","","","","","","","","","","","","HSL (hue, saturation, lightness) color with an alpha …","","","","LCH(ab) (lightness, chroma, hue) color with an alpha …","","","","","","","","","","","","sRGBA color","RGBA color in the Linear sRGB colorspace (often …","","","","","","","","","","","","Get alpha.","","","","","","","","","","","","","","","","","","","","","Converts a <code>Color</code> to variant <code>Color::Hsla</code>","Converts a <code>Color</code> to a <code>[f32; 4]</code> from HSL colorspace","Converts a <code>Color</code> to variant <code>Color::Lcha</code>","Converts a <code>Color</code> to a <code>[f32; 4]</code> from LCH colorspace","Converts a <code>Color</code> to a <code>[f32; 4]</code> from linear RGB colorspace","Converts Color to a u32 from linear RGB colorspace.","","","Converts a <code>Color</code> to variant <code>Color::Rgba</code>","Converts a <code>Color</code> to a <code>[f32; 4]</code> from sRGB colorspace","Converts a <code>Color</code> to variant <code>Color::RgbaLinear</code>","Converts <code>Color</code> to a <code>u32</code> from sRGB colorspace.","Converts a <code>Color</code> to a <code>[u8; 4]</code> from sRGB colorspace","Converts a Color to variant <code>Color::Rgba</code> and return blue in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","Converts a Color to variant <code>Color::Rgba</code> and return green …","","","Converts a Color to variant <code>Color::Hsla</code> and return hue","New <code>Color</code> from sRGB colorspace.","New <code>Color</code> with HSL representation in sRGB colorspace.","converts a color in HLS space to sRGB space","New <code>Color</code> with HSL representation in sRGB colorspace.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Converts a Color to variant <code>Color::Hsla</code> and return …","New <code>Color</code> with LCH representation in sRGB colorspace.","converts a color in LCH space to sRGB space","New <code>Color</code> with LCH representation in sRGB colorspace.","","","","","","","","","","","","","","converts a color in sRGB space to HLS space","converts a color in sRGB space to LCH space","","","Converts a Color to variant <code>Color::Rgba</code> and return red in …","","","","","","","","","","","","New <code>Color</code> from sRGB colorspace.","New <code>Color</code> from linear RGB colorspace.","New <code>Color</code> from sRGB colorspace.","New <code>Color</code> from sRGB colorspace.","New <code>Color</code> from linear RGB colorspace.","New <code>Color</code> from sRGB colorspace.","Converts a Color to variant <code>Color::Hsla</code> and return …","","","Set alpha.","Converts a Color to variant <code>Color::Rgba</code> and set blue","Converts a Color to variant <code>Color::Rgba</code> and set green","Converts a Color to variant <code>Color::Hsla</code> and set hue","Converts a Color to variant <code>Color::Hsla</code> and set lightness","Converts a Color to variant <code>Color::Rgba</code> and set red","Converts a Color to variant <code>Color::Hsla</code> and set saturation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns this color with a new alpha value.","Converts a Color to variant <code>Color::Rgba</code> and return this …","Converts a Color to variant <code>Color::Rgba</code> and return this …","Converts a Color to variant <code>Color::Hsla</code> and return this …","Converts a Color to variant <code>Color::Hsla</code> and return this …","Converts a Color to variant <code>Color::Rgba</code> and return this …","Converts a Color to variant <code>Color::Hsla</code> and return this …","","Alpha channel. [0.0, 1.0]","Alpha channel. [0.0, 1.0]","Alpha channel. [0.0, 1.0]","Alpha channel. [0.0, 1.0]","Blue channel. [0.0, 1.0]","Blue channel. [0.0, 1.0]","Chroma channel. [0.0, 1.5]","Green channel. [0.0, 1.0]","Green channel. [0.0, 1.0]","Hue channel. [0.0, 360.0]","Hue channel. [0.0, 360.0]","Lightness channel. [0.0, 1.0]","Lightness channel. [0.0, 1.5]","Red channel. [0.0, 1.0]","Red channel. [0.0, 1.0]","Saturation channel. [0.0, 1.0]","Stores all uniforms of the component type.","Stores the index of a uniform inside of <code>ComponentUniforms</code>.","Describes how a component gets extracted for rendering.","Implements <code>ExtractComponent</code> trait for a component. The …","This plugin extracts the components into the “render …","Filters the entities with additional constraints.","The output from extraction.","ECS <code>WorldQuery</code> to fetch the components to extract.","This plugin prepares the components of the corresponding …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Defines how the component is transferred into the “…","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Describes how to extract data needed for rendering from a …","This plugin extracts one or more components into the “…","Stores all extract instances of a type in the render world.","Filters the entities with additional constraints.","ECS <code>WorldQuery</code> to fetch the components to extract.","","","","","","","","","","","","","","","","","","","","","","","","Defines how the component is transferred into the “…","Creates a new <code>ExtractInstancesPlugin</code> that extracts to the …","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Creates a new <code>ExtractInstancesPlugin</code> that unconditionally …","","","","","","","","","","","","","","","Describes how a resource gets extracted for rendering.","","This plugin extracts the resources into the “render world…","","","","","","","","","","","","","This system extracts the resource of the corresponding …","Defines how the resource is transferred into the “render …","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","The buffer containing the <code>GlobalsUniform</code>","","Contains global values useful when writing shaders. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This plugin prepares the components of the corresponding …","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Per vertex coloring. Use in conjunction with …","Per vertex joint transform matrix index. Use in …","Per vertex joint transform matrix weight. Use in …","The direction the vertex normal is facing in. Use in …","Where the vertex is located in space. Use in conjunction …","The direction of the vertex tangent. Used for normal …","Texture coordinates for the vertex. Use in conjunction …","Alternate texture coordinates for the vertex. Use in …","","","","","Failed to generate tangents for the mesh.","The index/vertex buffer info of a <code>GpuMesh</code>.","The GPU-representation of a <code>Mesh</code>. Consists of a vertex …","","","An array of indices into the <code>VertexAttributeValues</code> for a …","","","Vertex data is a list of lines. Each pair of vertices …","Vertex data is a strip of lines. Each set of two adjacent …","A 3D object made out of vertices representing triangles, …","Adds the <code>Mesh</code> as an asset and makes sure that they are …","","","","","","","","","Vertex data is a list of points. Each vertex is a new …","Primitive type the input mesh is composed of.","","","","","","","","","","","","","Vertex data is a list of triangles. Each set of 3 vertices …","Vertex data is a triangle strip. Each set of three …","","","","","","","","","","","","","","","","","","Contains an array where each entry describes a property of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the values as float triples if possible.","","","","","","","Retrieves the data currently set to the vertex attribute …","","Retrieves the data currently set to the vertex attribute …","Returns an iterator that yields references to the data of …","Returns an iterator that yields mutable references to the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Compute the Axis-Aligned Bounding Box of the mesh vertices …","Calculates the <code>Mesh::ATTRIBUTE_NORMAL</code> of a mesh.","","","Counts all vertices of the mesh.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Duplicates the vertex attributes so that no vertices are …","","","","","","","","","","","","","","","","","Clones the mesh.","","","","","","","","","","","","","","","","","","","","","","","The format of the vertex attribute.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Generate tangents for the mesh using the <code>mikktspace</code> …","Flattens the <code>VertexAttributeValues</code> into a sequence of …","","","Computes and returns the index data of the mesh as bytes. …","","Get this <code>Mesh</code>’s <code>MeshVertexBufferLayout</code>, used in …","","","","","","Computes and returns the vertex data of the mesh as bytes. …","Whether this mesh has morph targets.","","","","The <em>unique</em> id of the vertex attribute. This will also …","","","","Retrieves the vertex <code>indices</code> of the mesh.","Retrieves the vertex <code>indices</code> of the mesh mutably.","","","","","","","","","","","","","","Sets the data for a vertex attribute (position, normal …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if there are no vertices in this …","Returns <code>true</code> if there are no indices.","Returns an iterator over the indices.","","","","","Returns the number of vertices in this …","Returns the number of indices.","","","","Gets a list of all morph target names, if they exist.","","The friendly name of the vertex attribute","","","","Construct a new mesh. You need to provide a …","","","Converts the extracted mesh a into <code>GpuMesh</code>.","Returns the topology of the mesh.","","","","","","","","","","","","","","","","","","","","","","Removes the data for a vertex attribute","","","Sets the vertex indices of the mesh. They describe how …","Sets the names of each morph target. This should …","Set morph targets image for this mesh. This requires a “…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Contains all attribute data for each vertex.","","","","","","","","","","","","","","","Consumes the mesh and returns a mesh with calculated …","Consumes the mesh and returns a mesh with no shared …","Consumes the mesh and returns a mesh with tangents …","Consumes the mesh and returns a mesh with the given vertex …","Consumes the mesh and returns a mesh with data set for a …","Consumes the mesh and returns a mesh with morph target …","Consumes the mesh and returns a mesh with the given morph …","Consumes the mesh and returns a mesh without the data for …","Contains all index data of a mesh.","","","How many components <code>MorphAttributes</code> has.","Max target count available for morph targets.","Control a specific <code>Mesh</code> instance’s morph targets. These …","Attributes <strong>differences</strong> used for morph targets.","","Inherit weights from glTF mesh parent entity to direct …","An image formatted for use with <code>MorphWeights</code> for rendering …","Controls the morph targets for all child <code>Handle&lt;Mesh&gt;</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The first child <code>Handle&lt;Mesh&gt;</code> primitive controlled by these …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","Bevy meshes are gltf primitives, <code>MorphWeights</code> on the bevy …","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Generate textures for each morph target.","","","","The vertex normal difference between base mesh and this …","","","","The vertex position difference between base mesh and this …","","","","","","","","","","","","","","","","","","","","","","","The vertex tangent difference between base mesh and this …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Channel to send the render app from the main thread to the …","The <code>PipelinedRenderingPlugin</code> can be added to your …","A Label for the sub app that runs the parts of pipelined …","Channel to send the render app from the render thread to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The defining <code>Component</code> for camera entities, storing …","","Schedule which extract data from the main world and …","An invisible <code>SpatialBundle</code>, with no translation, rotation, …","An entity with <code>Visibility::Hidden</code> will be unconditionally …","HSL (hue, saturation, lightness) color with an alpha …","A visible <code>SpatialBundle</code>, with no translation, rotation, …","","Adds the <code>Image</code> as an asset and makes sure that they are …","An entity with <code>Visibility::Inherited</code> will inherit the …","Whether or not an entity is visible in the hierarchy. This …","LCH(ab) (lightness, chroma, hue) color with an alpha …","A 3D object made out of vertices representing triangles, …","Controls the morph targets for all child <code>Handle&lt;Mesh&gt;</code> …","Configuration resource for Multi-Sample Anti-Aliasing.","","","Project a 3D space onto a 2D surface using parallel lines, …","","A 3D camera projection in which distant objects appear …","A configurable <code>CameraProjection</code> that can select its …","sRGBA color","RGBA color in the Linear sRGB colorspace (often …","","","","A shader, as defined by its <code>ShaderSource</code> and <code>ShaderStage</code> …","A <code>Bundle</code> that allows the correct positional rendering of …","Algorithmically-computed indication or whether an entity …","User indication of whether an entity is visible. …","A <code>Bundle</code> of the <code>Visibility</code>, <code>InheritedVisibility</code>, and …","An entity with <code>Visibility::Visible</code> will be unconditionally …","","The area that the projection covers relative to …","","","","The aspect ratio (width divided by height) of the viewing …","","","Computed values for this camera, such as the projection …","","","The default image sampler to use when <code>ImageSampler</code> is set …","","","","","The distance from the camera in world units of the viewing …","The distance of the far clipping plane in world units.","","","The vertical field of view (FOV) in radians.","","Returns the argument unchanged.","","Creates a new <code>SpatialBundle</code> from a <code>Transform</code>.","","The global transform of the entity.","If this is set to <code>true</code>, the camera will use an …","","","The inherited visibility of the entity.","","","Calls <code>U::from(self)</code>.","","","","","If this is set to <code>true</code>, this camera will be rendered to …","If this is enabled, a previous camera exists that shares …","The distance from the camera in world units of the viewing …","The distance of the near clipping plane in world units.","","Cameras with a higher order are rendered later, and thus …","The <code>CameraOutputMode</code> for this camera.","","The <code>ImageSampler</code> to use during rendering.","Scales the projection in world units.","How the projection will scale when the viewport is resized.","","","The “target” that this camera will render to.","","","","The transform of the entity.","","","","","The view visibility of the entity.","","If set, this camera will render to the given <code>Viewport</code> …","Specifies the origin of the viewport as a normalized …","The visibility of the entity.","The visibility of the entity.","","Alpha channel. [0.0, 1.0]","Alpha channel. [0.0, 1.0]","Alpha channel. [0.0, 1.0]","Alpha channel. [0.0, 1.0]","Blue channel. [0.0, 1.0]","Blue channel. [0.0, 1.0]","Chroma channel. [0.0, 1.5]","Green channel. [0.0, 1.0]","Green channel. [0.0, 1.0]","Hue channel. [0.0, 360.0]","Hue channel. [0.0, 360.0]","Lightness channel. [0.0, 1.0]","Lightness channel. [0.0, 1.5]","Red channel. [0.0, 1.0]","Red channel. [0.0, 1.0]","Saturation channel. [0.0, 1.0]","An axis-aligned bounding box, defined by:","","","A region of 3D space defined by the intersection of 6 …","A region of 3D space, specifically an open set whose …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the signed distance from the bisecting plane to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a bounding box enclosing the specified set of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","Returns a frustum derived from <code>view_projection</code>.","Returns a frustum derived from <code>view_projection</code>, but with a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Checks if an Oriented Bounding Box (obb) intersects the …","Checks if a sphere intersects the frustum.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Constructs a <code>HalfSpace</code> from a 4D vector whose first 3 …","Returns the unit normal vector of the bisecting plane that …","Returns the bisecting plane’s unit normal vector and the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calculate the relative radius of the AABB with respect to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The representation of the asset in the “render world”.","Temporarily stores the extracted and removed assets of the …","Specifies all ECS data required by …","","All assets that should be prepared next frame.","The GPU-representation of the asset.","Describes how an asset gets extracted and prepared for …","","This plugin extracts the changed assets from the “app …","Stores all GPU representations (<code>RenderAsset::PreparedAssets</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts the asset into a <code>RenderAsset::ExtractedAsset</code>.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Prepares the <code>extracted asset</code> for the GPU by transforming …","This system prepares all assets of the corresponding …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A GPU-accessible <code>Buffer</code>.","A GPU-accessible <code>Buffer</code>.","","An edge, which connects two <code>Nodes</code> in a <code>RenderGraph</code>.","","","","A collection of input and output <code>Edges</code> for a <code>Node</code>.","A <code>Node</code> without any inputs, outputs and subgraphs, which …","An entity from the ECS.","An entity from the ECS.","","A <code>Node</code> which acts as an entry point for a <code>RenderGraph</code> with …","The name of the <code>GraphInputNode</code> of this graph. Used to …","","","","","","","","","","","","","","","","","","A render node that can be added to a <code>RenderGraph</code>.","An edge describing to ordering of both nodes (<code>output_node</code> …","","","A <code>NodeLabel</code> is used to reference a <code>NodeState</code> by either its …","","The internal representation of a <code>Node</code>, with all data …","","","The render graph configures the modular, parallel and …","Adds common <code>RenderGraph</code> operations to <code>App</code>.","The context with all graph information required to run a …","","A <code>RenderGraph</code> <code>Node</code> that runs the configured graph name …","A command that signals the graph runner to run the sub …","","","A texture <code>Sampler</code> defines how a pipeline will sample from …","A texture <code>Sampler</code> defines how a pipeline will sample from …","An edge describing to ordering of both nodes (<code>output_node</code> …","The internal representation of a slot, which specifies its …","A collection of input or output <code>SlotInfos</code> for a <code>NodeState</code>.","A <code>SlotLabel</code> is used to reference a slot by either its name …","Describes the render resources created (output) or used …","A value passed between render <code>Nodes</code>. Corresponds to the …","","A <code>TextureView</code> describes a texture used in a pipeline.","A <code>TextureView</code> describes a texture used in a pipeline.","","","This trait should be used instead of the <code>Node</code> trait when …","This <code>Node</code> can be used to run any <code>ViewNode</code>. It will take …","The query that will be used on the view entity. It is …","","Adds the <code>node</code> with the <code>name</code> to the graph. If the name is …","Adds the <code>Edge::NodeEdge</code> to the graph. This guarantees that …","Add <code>node_edge</code>s based on the order of the given <code>edges</code> array.","Add node edge to the specified graph","Automatically add the required node edges based on the …","Add a <code>Node</code> to the <code>RenderGraph</code>:","","Adds the <code>Edge::SlotEdge</code> to the graph. This guarantees that …","Adds the <code>sub_graph</code> with the <code>name</code> to the graph. If the name …eturns a boxed object from a boxed trait object if the …","","","","","","","","","","","","","","","","","","","","","Returns a mutable reference to the object within the trait …","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …","Returns a reference to the object within the trait object …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Finishes the context for this <code>Node</code> by returning the sub …","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Retrieves the input slot value referenced by the <code>label</code>.","Retrieves the input slot value referenced by the <code>label</code> as …","Retrieves the input slot value referenced by the <code>label</code> as …","Returns the id of the <code>input_node</code>.","Returns the <code>NodeState</code> of the input node of this graph.","Retrieves the input slot value referenced by the <code>label</code> as …","Searches the <code>input_edges</code> for a <code>Edge::SlotEdge</code>, which …","Retrieves the input slot value referenced by the <code>label</code> as …","Retrieves the <code>Node</code> referenced by the <code>label</code>.","Retrieves the <code>NodeId</code> referenced by the <code>label</code>.","Retrieves the <code>Node</code> referenced by the <code>label</code> mutably.","Retrieves the <code>NodeState</code> referenced by the <code>label</code>.","Retrieves the <code>NodeState</code> referenced by the <code>label</code> mutably.","Returns the id of the <code>output_node</code>.","Searches the <code>output_edges</code> for a <code>Edge::SlotEdge</code>, which …","Retrieves the <code>SlotInfo</code> for the provided label.","Retrieves the index (inside input or output slots) of the …","Retrieves the <code>SlotInfo</code> for the provided label mutably.","Retrieves the sub graph corresponding to the <code>name</code>.","Retrieves the sub graph corresponding to the <code>name</code> mutably.","","Checks whether the <code>edge</code> already exists in the graph.","Checks whether the input edge already exists.","Checks whether the output edge already exists.","","Returns this node’s id.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Specifies the required input slots for this node. They …","Returns all “input edges” (edges going “in”) for …","Returns the <code>SlotInfos</code> of the inputs.","Returns the <code>NodeState</code> of the input node of this graph.","","Returns the input slot values for the node.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if the trait object wraps an object of type …","Returns true if there are no slots.","Returns an iterator over the slot infos.","Returns an iterator over a tuple of the input edges and …","Returns an iterator over a tuple of the output edges and …","Returns an iterator over the <code>NodeStates</code>.","Returns an iterator over the <code>NodeStates</code>, that allows …","Returns an iterator over the sub graphs.","Returns an iterator over the sub graphs, that allows …","Returns the count of slots.","","","","Creates a new render graph context for the <code>node</code>.","Creates an <code>NodeState</code> without edges, but the <code>input_slots</code> …","","","","","Retrieves the <code>Node</code>.","","Retrieves the <code>Node</code> mutably.","","","","","Specifies the produced output slots for this node. They …","Returns all “output edges” (edges going “out”) for …","Returns the <code>SlotInfos</code> of the outputs.","","Removes the <code>node</code> with the <code>name</code> from the graph. If the name …","Removes the <code>Edge::NodeEdge</code> from the graph. If either node …","Removes the <code>Edge::SlotEdge</code> from the graph. If any nodes or …","Removes the <code>sub_graph</code> with the <code>name</code> from the graph. If the …","Runs the graph node logic, issues draw calls, updates the …","Runs the graph node logic, issues draw calls, updates the …","","","","","Queues up a sub graph for execution after the node has …","Creates an <code>GraphInputNode</code> with the specified slots if not …","Sets the output slot value referenced by the <code>label</code>.","","Returns the <code>SlotType</code> of this value.","","","Retrieves the sub graph corresponding to the <code>name</code>.","Retrieves the sub graph corresponding to the <code>name</code> mutably.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Adds the <code>Edge::NodeEdge</code> to the graph. This guarantees that …","Adds the <code>Edge::SlotEdge</code> to the graph. This guarantees that …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The name of the type that implements <code>Node</code>.","","","","","","","","","","","","","","","","","","","","","","","","Updates internal node state using the current render <code>World</code> …","Updates internal node state using the current render <code>World</code> …","","Updates all nodes and sub graphs of the render graph. …","Verifies that the edge existence is as expected and checks …","Validates that each input slot corresponds to an input …","Validates that each output slot corresponds to an output …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Registers a <code>RenderCommand</code> as a <code>Draw</code> function. They are …","A <code>PhaseItem</code> item, that automatically sets the appropriate …","A draw function used to draw <code>PhaseItem</code>s.","An identifier for a <code>Draw</code> function stored in <code>DrawFunctions</code>.","Stores all draw functions for the <code>PhaseItem</code> type hidden …","Stores all <code>Draw</code> functions for the <code>PhaseItem</code> type.","","Specifies the ECS data of the item entity required by …","Specifies the general ECS data (e.g. resources) required …","An item (entity of the render world) which will be drawn …","<code>RenderCommand</code>s are modular standardized pieces of render …","The result of a <code>RenderCommand</code>.","Wraps a <code>RenderCommand</code> into a state so that it can be used …","A collection of all rendering instructions, that will be …","A <code>RenderCommand</code> that sets the pipeline for the …","The type used for ordering the items. The smallest values …","","A <code>RenderPass</code>, which tracks the current pipeline state to …","A distance calculator for the draw order of <code>PhaseItem</code>s.","Specifies the ECS data of the view entity required by …","Adds the <code>Draw</code> function and maps it to its own type.","Adds a <code>PhaseItem</code> to this render phase.","Adds the <code>RenderCommand</code> for the specified <code>RenderPhase</code> to …","Adds the <code>Draw</code> function and maps it to the type <code>T</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The range of instances that the batch covers. After doing …","","","","","","","","","","","","","","","","","","","","The id of the render pipeline, cached in the <code>PipelineCache</code>…","","","","","","","","","","","","","","","","","","","","","","","","","Calculates the distance, or view-space <code>Z</code> value, for the …","Calculates the distance, or view-space <code>Z</code> value, for the …","","","","","","","","","","Draws a <code>PhaseItem</code> by issuing zero or more <code>draw</code> calls via …","Fetches the ECS parameters for the wrapped <code>RenderCommand</code> …","Draws primitives from the active vertex buffer(s).","Specifies the <code>Draw</code> function used to render the item.","","Draws indexed primitives using the active index buffer and …","Draws indexed primitives using the active index buffer and …","Draws primitives from the active vertex buffer(s) based on …","","","","","","","","","","","","","","The corresponding entity that will be drawn.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Creates a 3D rangefinder for a view matrix.","","","","Retrieves the id of the <code>Draw</code> function corresponding to …","Retrieves the <code>Draw</code> function corresponding to the <code>id</code> …","","Retrieves the id of the <code>Draw</code> function corresponding to …","","","","","","","","","","","Insert a single debug marker.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An <code>Iterator</code> through the associated <code>Entity</code> for each …","Dispatches multiple draw calls from the active index …","Dispatches multiple draw calls from the active index …","Dispatches multiple draw calls from the active vertex …","Dispatches multiple draw calls from the active vertex …","Creates a new <code>RenderCommandState</code> for the <code>RenderCommand</code>.","Tracks the supplied render pass.","","","End the current debug group.","Prepares the draw function to be used. This is called once …","Prepares all draw function. This is called once and only …","Prepares the render command to be used. This is called …","Start a new debug group.","Accesses the draw functions in read mode.","Renders a <code>PhaseItem</code> by recording commands (e.g. setting …","","Renders all of its <code>PhaseItem</code>s using their corresponding …","Renders all <code>PhaseItem</code>s in the provided <code>range</code> (based on …","Sets the active bind group for a given bind group index. …","Sets the blend color as used by some of the blending modes.","Set the rendering viewport to the given camera <code>Viewport</code>.","Sets the active index buffer.","Set push constant data.","Sets the active <code>RenderPipeline</code>.","Sets the scissor region.","Sets the stencil reference.","Assign a vertex buffer to a slot.","Set the rendering viewport.","Sorts a slice of phase items into render order. Generally …","Sorts all of its <code>PhaseItem</code>s.","Determines the order in which the items are drawn.","This system sorts the <code>PhaseItem</code>s of all <code>RenderPhase</code>s of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Accesses the draw functions in write mode.","Enable writes to all channels.","Enable alpha channel writes","Blend mode that does standard alpha blending with …","Src + Dst","How edges should be handled in texture addressing.","Depth, Stencil, and Color.","Function always passes","Converts a value to a <code>BindGroup</code> with a given …","","An error that occurs during <code>AsBindGroup::as_bind_group</code> …","Converts a value to a <code>ShaderType</code> for use in a bind group. …","","block compressed texture. 16 bytes per block.","Enable blue channel writes","Back face","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","Blue, green, red, and alpha channels. 8 bit integer per …","Blue, green, red, and alpha channels. 8 bit integer per …","Bind groups are responsible for binding render resources …","Describes a group of bindings and the resources to be …","Helper for constructing bindgroups.","An element of a <code>BindGroupDescriptor</code>, consisting of a …","","","Describes a <code>BindGroupLayout</code>.","Describes a single binding inside a bind group.","","Resource that can be bound to a pipeline.","Specific type of a binding.","Describes a blend component of a <code>BlendState</code>.","Alpha blend factor.","Alpha blend operation.","Describe the blend state of a render pipeline, within …","","","Binding is backed by a buffer.","A buffer binding.","","Integral type used for buffer offsets.","Binding is backed by an array of buffers.","Describes the segment of a buffer to bind.","Specific type of a buffer binding.","Describes a <code>Buffer</code>.","","Describes a Buffer when allocating.","Integral type used for buffer slice sizes.","","Different ways that you can use a buffer.","A structure for storing raw bytes that have already been …","Enable red, green, and blue channel writes","Binding is visible from the compute shader of a compute …","Allow a buffer to be the destination buffer for a […","Allows a texture to be the destination in a  […","Allow a buffer to be the source buffer for a […","Allows a texture to be the source in a […","Index of a cached compute pipeline in a <code>PipelineCache</code>.","","State of a cached pipeline inserted into a <code>PipelineCache</code>.","Index of a cached render pipeline in a <code>PipelineCache</code>.","Triangles with vertices in counter clockwise order are …","Clamp the value to the border of the texture Requires …","Clamp the value to the edge of the texture","Clear with a specified value.","Describes the color state of a render pipeline.","Color write mask. Disabled color channels will not be …","Encodes a series of GPU operations.","Describes a <code>CommandEncoder</code>.","Comparison function used for depth and stencil operations.","Use as a comparison sampler instead of a normal sampler. …","","In-progress recording of a compute pass.","Describes the attachments of a compute pass.","A <code>ComputePipeline</code> represents a compute pipeline and its …","","Describes a compute pipeline.","","","Constant","","A cubemap texture. <code>texture_cube</code> in WGSL and <code>textureCube</code> in …","A cubemap array texture. <code>texture_cube_array</code> in WGSL and …","","Triangles with vertices in clockwise order are considered …","A one dimensional texture. <code>texture_1d</code> in WGSL and <code>texture1D</code>…","1D texture","A two dimensional texture. <code>texture_2d</code> in WGSL and <code>texture2D</code>…","2D texture","A two dimensional array texture. <code>texture_2d_array</code> in WGSL …","A three dimensional texture. <code>texture_3d</code> in WGSL and …","3D texture","Data that will be stored alongside the “prepared” bind …","Decrements stencil value by one, clamping on underflow.","Decrements stencil value by one, wrapping on underflow.","Use the “default” shader for the current context.","Sampling does the depth reference comparison.","Special depth format with 16 bit integer depth.","Special depth format with at least 24 bit integer depth.","Special depth/stencil format with at least 24 bit integer …","Special depth format with 32 bit floating point depth.","Special depth/stencil format with 32 bit floating point …","Describes the biasing setting for the depth target.","Depth.","Describes the depth/stencil state in a render pipeline.","D.component","D.alpha","","Stores data to be transferred to the GPU and made …","Stores data to be transferred to the GPU and made …","A writer that can be used to directly write elements into …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","Function passes if new value is equal to existing value. …","","","","","","","","","","","","An error occurred while trying to create the pipeline GPU …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","Extent of a texture related operation.","Binding is visible from the fragment shader of a render …","Face of a vertex.","Polygons are filled","Texel mixing mode when sampling between texels.","The sampling result is produced based on more than a …","Sampling returns floats.","Two half-precision floats (no Rust equiv). <code>vec2</code> in shaders.","Four half-precision floats (no Rust equiv). <code>vec4</code> in …","One single-precision float (f32). <code>float</code> in shaders.","Two single-precision floats (f32). <code>vec2</code> in shaders.","Three single-precision floats (f32). <code>vec3</code> in shaders.","Four single-precision floats (f32). <code>vec4</code> in shaders.","One double-precision float (f64). <code>double</code> in shaders. …","Two double-precision floats (f64). <code>dvec2</code> in shaders. …","Three double-precision floats (f64). <code>dvec3</code> in shaders. …","Four double-precision floats (f64). <code>dvec4</code> in shaders. …","","Describes the fragment process in a render pipeline.","Front face","Vertex winding order which classifies the “front” face …","Enable green channel writes","","","Stores an array of elements to be transferred to the GPU …","An index into a <code>GpuArrayBuffer</code> for a given element.","Trait for types able to go in a <code>GpuArrayBuffer</code>.","Function passes if new value is greater than existing value","Function passes if new value is greater than or equal to …","A handle to a shader stored in the <code>Assets&lt;Shader&gt;</code> resource","Ignore the stencil state for the face.","Allow a buffer to be the index buffer in a draw operation.","Allow a buffer to be the indirect buffer in an indirect …","An invalid cached render pipeline index, often used to …","An invalid cached compute pipeline index, often used to …","View of a buffer which can be used to copy to/from a …","View of a buffer which can be used to copy to/from a …","View of a texture which can be used to copy to/from a …","View of a texture which can be used to copy to/from a …","Layout of a texture in a buffer’s memory.","Subresource range within an image","Increments stencil value by one, clamping on overflow.","Increments stencil value by one, wrapping on overflow.","Format of indices used with pipeline.","Vertex data is advanced every instance.","","","","","Bitwise inverts stencil value.","","Keep stencil value unchanged.","","","","Function passes if new value less than existing value","Function passes if new value is less than or equal to …","Polygons are drawn as line segments","Vertex data is a list of lines. Each pair of vertices …","Vertex data is a strip of lines. Each set of two adjacent …","Linear Interpolation","Load from memory.","Operation to perform to the output attachment at the start …","Allow a buffer to be mapped for reading using […","Allow a buffer to be mapped for writing using […","Type of buffer mapping.","max(Src, Dst)","min(Src, Dst)","Repeat the texture, mirroring it every repeat","","Describes the multi-sampling state of a render pipeline.","Binding is not visible from any shader stage.","Naga module.","Nearest neighbor sampling.","Function never passes","The sampling result is produced based on a single color …","Function passes if new value is not equal to existing …","Blend state of (1 * src) + ((1 - src_alpha) * dst)","The pipeline GPU object was created successfully and is …","1.0","1.0 - Constant","1.0 - D.component","1.0 - D.alpha","1.0 - S.component","1.0 - S.alpha","Pair of load and store operations for an attachment aspect.","Origin of a copy to/from a texture.","An owned binding resource of any type (ex: a <code>Buffer</code>, …","Blend mode that does standard alpha blending with …","","An asset path leading to a shader","A pipeline defining the data layout and shader logic for a …","Cache for render and compute pipelines.","Type of error returned by a <code>PipelineCache</code> when the …","A descriptor for a <code>Pipeline</code>.","Handle to a pipeline layout.","Describes a <code>PipelineLayout</code>.","Polygons are drawn as points","Vertex data is a list of points. Each vertex is a new …","Type of drawing mode for polygons","A prepared bind group returned as a result of …","Describes the state of primitive assembly and …","Primitive type the input mesh is composed of.","","A range of push constant memory to pass to a shader stage.","Allow a buffer to be the destination buffer for a […","The pipeline GPU object is queued for creation.","Red channel only. 16 bit float per channel. Float in …","Red channel only. 16 bit integer per channel. Signed in …","Red channel only. 16 bit integer per channel. [0, 65535] …","Red channel only. 16 bit integer per channel. Unsigned in …","Red channel only. 16 bit integer per channel. [0, 65535] …","Red channel only. 32 bit float per channel. Float in …","Red channel only. 32 bit integer per channel. Signed in …","Red channel only. 32 bit integer per channel. Unsigned in …","Red channel only. 8 bit integer per channel. Signed in …","Red channel only. 8 bit integer per channel. [-127, 127] …","Red channel only. 8 bit integer per channel. Unsigned in …","Red channel only. 8 bit integer per channel. [0, 255] …","Enable red channel writes","Allows a texture to be an output attachment of a render …","Default blending state that replaces destination with the …","Blend mode that does no color blending, just overwrites …","Describes a compute pipeline.","Describes the fragment processing in a render pipeline.","Describes a render (graphics) pipeline.","Describes how the vertex buffer is interpreted.","Describes the vertex processing in a render pipeline.","Map only for reading","The texture can only be read in the shader and it must be …","The texture can be both read and written in the shader and …","Describes a color attachment to a <code>RenderPass</code>.","Describes a depth/stencil attachment to a <code>RenderPass</code>.","Describes the attachments of a render pass.","A <code>RenderPipeline</code> represents a graphics pipeline and its …","","Describes a render (graphics) pipeline.","","","Repeat the texture in a tiling fashion","Replace stencil value with value provided in most recent …","The bind group could not be generated. Try again next …","Dst - Src","Red, green, and blue channels. 11 bit float with no sign …","Red and green channels. 16 bit float per channel. Float in …","Red and green channels. 16 bit integer per channel. Signed …","Red and green channels. 16 bit integer per channel. [0, …","Red and green channels. 16 bit integer per channel. …","Red and green channels. 16 bit integer per channel. [0, …","Red and green channels. 32 bit float per channel. Float in …","Red and green channels. 32 bit integer per channel. Signed …","Red and green channels. 32 bit integer per channel. …","Red and green channels. 8 bit integer per channel. Signed …","Red and green channels. 8 bit integer per channel. [-127, …","Red and green channels. 8 bit integer per channel. …","Red and green channels. 8 bit integer per channel. [0, 255]…","Red, green, blue, and alpha channels. 10 bit integer for …","Packed unsigned float with 9 bits mantisa for each RGB …","Red, green, blue, and alpha channels. 16 bit float per …","Red, green, blue, and alpha channels. 16 bit integer per …","Red, green, blue, and alpha. 16 bit integer per channel. […","Red, green, blue, and alpha channels. 16 bit integer per …","Red, green, blue, and alpha channels. 16 bit integer per …","Red, green, blue, and alpha channels. 32 bit float per …","Red, green, blue, and alpha channels. 32 bit integer per …","Red, green, blue, and alpha channels. 32 bit integer per …","Red, green, blue, and alpha channels. 8 bit integer per …","Red, green, blue, and alpha channels. 8 bit integer per …","Red, green, blue, and alpha channels. 8 bit integer per …","Red, green, blue, and alpha channels. 8 bit integer per …","Red, green, blue, and alpha channels. 8 bit integer per …","Represents WGSL Size (equivalent to <code>ShaderType::min_size</code>)","Allow a buffer to be a <code>BufferBindingType::Storage</code> inside a …","Allows a texture to be a <code>BindingType::StorageTexture</code> in a …","A Sampler defines how a pipeline will sample from a …","Binding is a sampler.","A sampler that can be used to sample a texture.","","Binding is backed by an array of samplers.","Specific type of a sampler binding.","Describes a <code>Sampler</code>.","","A shader, as defined by its <code>ShaderSource</code> and <code>ShaderStage</code> …","","","","","","","Handle to a compiled shader module.","Descriptor for use with <code>Device::create_shader_module</code>.","","A reference to a shader asset.","","Trait implemented for all WGSL fixed-footprint types","Source of a shader module.","Stage of the programmable pipeline.","Describes the shader stages that a binding will be visible …","Base trait for all WGSL host-shareable types","","Sampling returns signed integers.","Two signed shorts (i16). <code>ivec2</code> in shaders.","Four signed shorts (i16). <code>ivec4</code> in shaders.","One signed int (i32). <code>int</code> in shaders.","Two signed ints (i32). <code>ivec2</code> in shaders.","Three signed ints (i32). <code>ivec3</code> in shaders.","Four signed ints (i32). <code>ivec4</code> in shaders.","Two signed bytes (i8). <code>ivec2</code> in shaders.","Four signed bytes (i8). <code>ivec4</code> in shaders.","Two signed shorts (i16). [-32767, 32767] converted to …","Four signed shorts (i16). [-32767, 32767] converted to …","Two signed bytes (i8). [-127, 127] converted to float [-1, …","Four signed bytes (i8). [-127, 127] converted to float […","","","","","","","","","SPIR-V module represented as a slice of words.","","","S.component","S.alpha","min(S.alpha, 1.0 - D.alpha)","Stencil format with 8 bit integer stencil.","Describes stencil state in a render pipeline.","Stencil.","Operation to perform on the stencil value.","State of the stencil operation (fixed-pipeline stage).","A storage buffer.","","Stores data to be transferred to the GPU and made …","A storage texture.","Specific type of a sample in a texture binding.","Src - Dst","","Allows a texture to be a <code>BindingType::Texture</code> in a bind …","A GPU-accessible texture.","A texture binding.","Kind of data the texture holds.","Describes a <code>Texture</code>.","Dimensionality of a texture.","Underlying texture data format.","","Specific type of a sample in a texture binding.","Different ways that you can use a texture.","Describes a <code>Texture</code> with its associated metadata required …","Binding is backed by a texture.","","Binding is backed by an array of textures.","Describes a <code>TextureView</code>.","Dimensions of a particular texture view.","","Vertex data is a list of triangles. Each set of 3 vertices …","Vertex data is a triangle strip. Each set of three …","","Allow a buffer to be a <code>BufferBindingType::Uniform</code> inside a …","Sampling returns unsigned integers.","Indices are 16 bit unsigned integers.","Two unsigned shorts (u16). <code>uvec2</code> in shaders.","Four unsigned shorts (u16). <code>uvec4</code> in shaders.","Indices are 32 bit unsigned integers.","One unsigned int (u32). <code>uint</code> in shaders.","Two unsigned ints (u32). <code>uvec2</code> in shaders.","Three unsigned ints (u32). <code>uvec3</code> in shaders.","Four unsigned ints (u32). <code>uvec4</code> in shaders.","Two unsigned bytes (u8). <code>uvec2</code> in shaders.","Four unsigned bytes (u8). <code>uvec4</code> in shaders.","A buffer for uniform values.","","Stores data to be transferred to the GPU and made …","Two unsigned shorts (u16). [0, 65535] converted to float […","Four unsigned shorts (u16). [0, 65535] converted to float […","Two unsigned bytes (u8). [0, 255] converted to float [0, 1]…","Four unsigned bytes (u8). [0, 255] converted to float [0, 1…","a map containing <code>OwnedBindingResource</code>s, keyed by the …","Binding is visible from the vertex shader of a render …","Allow a buffer to be the vertex buffer in a draw operation.","Binding is visible from the vertex and fragment shaders of …","","Vertex data is advanced every vertex.","","Vertex inputs (attributes) to shaders.","Describes how the vertex buffer is interpreted.","Vertex Format for a <code>VertexAttribute</code> (input).","","Whether a vertex buffer is indexed by vertex or by …","Information about an adapter.","Features that are not guaranteed to be supported.","Represents the sets of limits an adapter/device supports.","WGSL module as a string slice.","","","Map only for writing","The texture can only be written in the shader and it:","Zero origin.","0.0","Set stencil value to zero.","Adds an <code>Srgb</code> suffix to the given texture format, if the …","Add more <code>BufferUsages</code> to the buffer.","Add more <code>BufferUsages</code> to the buffer.","Add more <code>BufferUsages</code> to the buffer.","Add more <code>BufferUsages</code> to the buffer.","","How to deal with out of bounds accesses in the u (i.e. x) …","How to deal with out of bounds accesses in the v (i.e. y) …","How to deal with out of bounds accesses in the w (i.e. z) …","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Alpha equation.","When enabled, produces another sample mask per pixel based …","Must be at least 1. If this is not 1, all filter modes …","","Layer count. If <code>Some(count)</code>, <code>base_array_layer + count</code> must …","Layer count. If <code>Some(count)</code>, <code>base_array_layer + count</code> must …","The stride, in bytes, between elements of this buffer.","The stride, in bytes, between elements of this bufferreates a bind group for <code>self</code> matching the layout defined …","Return the <code>T</code> <code>ShaderType</code> for <code>self</code>. When used in <code>AsBindGroup</code> …spect of the texture. Color textures must be …","The copy aspect.","Aspect of the texture. Color textures must be …","Returns the aspect-specific format of the original format","Asserts that <code>Self</code> meets the requirements of the uniform …","","","","The list of attributes which comprise a single vertex.","The list of attributes which comprise a single vertex.","Back face mode.","Backend used for device","Base array layer.","Base array layer.","Base mip level.","Base mip level.","","Begins recording of a compute pass.","Start a pipeline statistics query on this render pass. It …","Begins recording of a render pass.","","Depth bias state.","","Creates the bind group layout matching all bind groups …","Returns a vec of bind group layout entries","Bind groups that this pipeline uses. The first entry will …","","","","","","Slot for which binding provides resource. Corresponds to …","Binding index. Must match shader index and be unique …","","","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","Get the underlying bits value.","","","Get the underlying bits value.","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The blending that is used for this pipeline.","Returns the dimension of a block of texels.","Returns the texel block size of this format.","Border color to use when address_mode is …he buffer to bind.","The buffer to be copied to/from.","The format of any vertex buffers used with this pipeline.","The format of any vertex buffers used with this pipeline.","Bytes per “row” in an image.","","Depth bias clamp value (absolute).","","","","","Clears buffer to zero.","Clears texture to zeroolor equation.","The color attachments of the render pass.","","If this is enabled, this is a comparison sampler using the …","Comparison function that determines if the fail_op or …","Get the texture dimension required of this texture view …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","Returns the number of components this format has.","Returns the number of components this format has taking …","If set to true, the primitives are rendered with …","Constant depth biasing factor, in basic units of the depth …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Returns true if the bitflags contains bits that are not …","Returns true if the bitflags contains bits that are not …","Returns true if the bitflags contains bits that are not …","Returns true if the bitflags contains bits that are not …","Contents of a buffer on creation.","Copy data from one buffer to another.","Copy data from a buffer to a texture.","Copy data from a texture to a buffer.","Copy data from one texture to another.","The number of samples calculated per pixel (for MSAA). For …","If this value is Some, indicates this entry is an array. …","","Creates a view of this texture.","The face culling mode.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Comparison function used to compare depth values in the …","Operation that is performed when depth test fails but …","What operations will be performed on the depth part of the …","The depth of the extent or the number of array layers","The effect of draw calls on the depth and stencil aspects …","The effect of draw calls on the depth and stencil aspects …","The depth and stencil attachment of the render pass, if …","If disabled, depth will not be written tocode>Backend</code>-specific device ID of the adapter","Type of device","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The dimension of the texture view. For 1D textures, this …","Dispatches compute work operations.","Dispatches compute work operations, based on the contents …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Driver name","Driver info","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Multiplier for the destination, which is stored in the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The dynamic offset to use when setting the bind group in a …","","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","","End the pipeline statistics query on this render pass. It …","The resources to bind to this bind group.","Array of entries in this BindGroupLayout","The name of the entry point in the compiled shader. There …","The name of the entry point in the compiled shader. There …","The name of the entry point in the compiled shader. There …","The name of the entry point in the compiled shader. There …","The name of the entry point in the compiled shader. There …","The name of the entry point in the compiled shader. There …he bitwise or (<code>|</code>) of the bits in each flags value.","","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","Operation that is preformed when stencil test fails.","","Finishes recording and returns a <code>CommandBuffer</code> that can be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>TextureFormat</code> of the image that this pipeline will …","Format of the texture view. Either must be the same as the …","Format of the depth/stencil buffer, must be special depth …","Format of the input","The compiled fragment stage, its entry point, and the …","The compiled fragment stage, its entry point, and the …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value exactly.","","","Convert from a bits value exactly.","","Convert from a bits value exactly.","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new densely packed <code>VertexBufferLayout</code> from an …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Front face mode.","The face to consider the front for the purpose of culling …","","","","","Try to retrieve a compute pipeline GPU object from a …","Get the compute pipeline descriptor a cached render …","Get the state of a cached compute pipeline.","","","","","","","","Try to retrieve a render pipeline GPU object from a cached …","Get the render pipeline descriptor a cached render …","Get the state of a cached render pipeline.","","Creates a writer that can be used to directly write …","Returns the format features guaranteed by the WebGPU spec.","Returns <code>true</code> if the format has a color aspect","Returns <code>true</code> if the format has a depth aspect","Returns true for buffer bindings with dynamic offset …","Returns <code>true</code> if the format has a stencil aspect","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Height of the extent","Returns the <code>BindGroupId</code>.","","","","","Returns the <code>ComputePipelineId</code>.","","","Returns the <code>TextureId</code>.","Returns the <code>TextureViewId</code>.","Returns the <code>SamplerId</code>.","","","","","","","","","The index to use in a shader into the array.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Inserts debug marker.","Inserts debug marker.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codehether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Returns <code>true</code> if the format is a combined depth-stencil …","Returns <code>true</code> for compressed formats.","Returns true if the depth testing is enabled.","Returns true if the state doesn’t mutate the depth …","Returns <code>true</code> if <code>self</code> is a depth or stencil component of …","Returns <code>true</code> if the format is a depth and/or stencil format","Whether all bits in this flags value are unset.","","","","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Returns true if the stencil test is enabled.","Returns true if the depth biasing is enabled.","Returns if the given range represents a full resource, …","Returns true if the state doesn’t mutate the target …","Returns true if the state doesn’t mutate either depth or …","Returns true if the face state doesn’t mutate the target …","Returns <code>true</code> for srgb formats.","Returns true if the state doesn’t mutate the stencil.","Returns true for strip topologies.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","label","Debug label of a buffer. This will show up in graphics …","Debug label of the shader module. This will show up in …","Debug label of the texture view. This will show up in …","Debug label of the pipeline layout. This will show up in …","Debug label of the sampler. This will show up in graphics …","Debug label of the bind group. This will show up in …","Debug label of the render pass. This will show up in …","Debug label of the pipeline. This will show up in graphics …","Debug label of the compute pass. This will show up in …","Debug label of the pipeline. This will show up in graphics …","Debug label of the bind group layout. This will show up in …","Debug label of the pipeline. This will show up in graphics …","","Returns the layer range of a subresource range describes …","The <code>BindGroupLayout</code> that corresponds to this bind group.","The layout of bind groups for this pipeline.","The layout of bind groups for this pipeline.","The layout of the texture data in this buffer.","The layout of bind groups for this pipeline.","","","","Processes the asset in an asynchronous closure.","How data should be read through this attachment.","Maximum level of detail (i.e. mip level) to use","Minimum level of detail (i.e. mip level) to use","How to filter the texture when it needs to be magnified …","Bitmask that restricts the samples of a pixel modified by …","Amount of bind groups that can be attached to a pipeline …","Maximum binding index allowed in <code>create_bind_group_layout</code>. …","A limit above which buffer allocations are guaranteed to …","Maximum value of the product of the <code>workgroup_size</code> …","The maximum value of the workgroup_size X dimension for a …","The maximum value of the workgroup_size Y dimension for a …","The maximum value of the workgroup_size Z dimension for a …","Maximum number of bytes used for workgroup memory in a …","The maximum value for each dimension of a …","Amount of storage buffer bindings that can be dynamic in a …","Amount of uniform buffer bindings that can be dynamic in a …","Maximum allowed number of components (scalars) of input or …","Calculates the maximum possible count of mipmaps.","Amount of storage available for push constants in bytes. …","Amount of sampled textures visible in a single shader …","Amount of samplers visible in a single shader stage. …","Maximum size in bytes of a binding to a storage buffer. …","Amount of storage buffers visible in a single shader …","Amount of storage textures visible in a single shader …","Maximum allowed value for the <code>size.depth_or_array_layers</code> …","Maximum allowed value for the <code>size.width</code> of a texture …","Maximum allowed value for the <code>size.width</code> and <code>size.height</code> …","Maximum allowed value for the <code>size.width</code>, <code>size.height</code>, and …","Maximum size in bytes of a binding to a uniform buffer. …","Amount of uniform buffers visible in a single shader …","Maximum length of <code>VertexBufferLayout::attributes</code>, summed …","Maximum value for <code>VertexBufferLayout::array_stride</code> when …","Maximum length of <code>VertexState::buffers</code> when creating a …","How to filter the texture when it needs to be minified …","Represents the minimum size of <code>Self</code> (equivalent to …","Required <code>BufferBindingType::Storage</code> alignment for …","Required <code>BufferBindingType::Uniform</code> alignment for …","The target mip level of the texture.","Mip level count. If <code>Some(count)</code>, <code>base_mip_level + count</code> …","Mip level count. If <code>Some(count)</code>, <code>base_mip_level + count</code> …","Calculates the extent at a given mip level. Does <em>not</em> …","Returns the mip level range of a subresource range …","How to filter between mip map levels","The compiled shader module for this stage.","The compiled shader module for this stage.","The compiled shader module for this stage.","","","The multi-sampling properties of the pipeline.","The multi-sampling properties of the pipeline.","If the pipeline will be used with a multiview render pass, …","Adapter name","Returns true if the stencil state uses the reference value …","Returns true if the face state uses the reference value …","Returns true if the comparison depends on the reference …","","","","","","","","","","","","","","","Create a new pipeline cache associated with the given …","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Base offset of the buffer, in bytes.","Byte offset of the start of the input","Offset into the buffer that is the start of the texture. …","The binary operation applied to the source and destination,","What operations will be performed on this color attachment.","The base texel of the texture in the selected <code>mip_level</code>. …","","Operation that is performed when stencil test success.","","Calculates the physical size backing a texture of the given","","","Controls the way each polygon is rasterized. Can be either …","Stops command recording and creates debug group.","Stops command recording and creates debug group.","The properties of the pipeline at the primitive assembly …","The properties of the pipeline at the primitive assembly …","Process the pipeline queue and create all pending …","","","Push data into the <code>DynamicUniformBuffer</code>’s internal …","","Set of push constant ranges this pipeline uses. Each …","The push constant ranges for this pipeline. Supply an …","","Start record commands and group it into debug marker group.","Start record commands and group it into debug marker group.","Insert a compute pipeline into the cache, and queue its …","Insert a render pipeline into the cache, and queue its …","Range in push constant memory to use for the stage. Must …","Stencil values are AND’d with this mask when reading and …","","","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Strips the <code>Srgb</code> suffix from the given texture format.","Returns the required features (if any) in order to use the …","Creates a <code>Buffer</code> on the <code>RenderDevice</code> with size at least …","Resolve a query set, writing the results into the supplied …","The view that will receive the resolved output if …","Resource to attach to the binding","","“Rows” that make up a single “image”.","Returns the sample type compatible with this format and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","","Set the data the buffer stores.","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Sets the active bind group for a given bind group index. …","","","","","","","Sets the active compute pipeline.","Set push constant data for subsequent dispatch calls.","The compiled shader module for this stage.","The compiled shader module for this stage.","The compiled shader module for this stage.","","","","","Location for this input. Must match the location in the …","","","Returns the size of <code>Self</code> at runtime","Returns the byte size of the format.","Size of the binding in bytes, or <code>None</code> for using the rest …","","Slope depth biasing factor.","","","","","Source code for the shader.","","","","","","","","Multiplier for the source, which is produced by the …","Stage push constant range is visible from. Each stage can …","","Stencil state.","What operations will be performed on the stencil part of …","How often this vertex buffer is “stepped” forward.","How often this vertex buffer is “stepped” forward.","Whether data will be written to through this attachment.","When drawing strip topologies with indices, this is the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The color state of the render targets.","The color state of the render targets.","The texture to be copied to/from.","Removes the third dimension from this origindds color space and premultiplied alpha information to …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The primitive topology used to interpret verticeshe type of the binding","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If set to true, the polygon depth is not clipped to 0-1 …","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Returns a vec of (binding index, <code>OwnedBindingResource</code>). In …","Convenience method to “unwrap” a pipeline state into …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Usages of a buffer. If the buffer is used in any way that …","Returns true if the state relies on the constant color, …","","","","","<code>Backend</code>-specific vendor ID of the adapter","The compiled vertex stage, its entry point, and the input …","The compiled vertex stage, its entry point, and the input …","The view to use as an attachment.","The view to use as an attachment.","Which shader stages can see this binding.","","Calculates the volume of the <code>Extent3d</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Width of the extent","","","","Queues writing of data from system RAM to VRAM using the …","Queues writing of data from system RAM to VRAM using the …","","Queues writing of data from system RAM to VRAM using the …","Queues writing of data from system RAM to VRAM using the …","","Mask which enables/disables writes to different …","Stencil values are AND’d with this mask when writing to …","Issue a timestamp command at this point in the queue. The …","Issue a timestamp command at this point in the queue. The …","X position of the origin","Y position of the origin","Z position of the origin","Allowed access to this texture.","Format of the texture.","Indicates that the binding has a dynamic offset.","The minimum size for a <code>BufferBinding</code> matching this entry, …","True if the texture has a sample count greater than 1. If …","Sample type of the texture binding.","Sub-type of the buffer binding.","Dimension of the texture view that is going to be sampled.","Dimension of the texture view that is going to be sampled.","If <code>true</code>, the buffer can only be read in the shader, and it:","compressed block dimensions","ASTC RGBA channel","If this is <code>false</code>, the texture can’t be sampled with a …","Helper type meant to be used together with the <code>ShaderType</code> …","Trait implemented for WGSL runtime-sized arrays and WGSL …","Dynamic storage buffer wrapper facilitating RW operations","Dynamic uniform buffer wrapper facilitating RW operations","Represents WGSL Size (equivalent to <code>ShaderType::min_size</code>)","Trait implemented for all WGSL fixed-footprint types","Base trait for all WGSL host-shareable types","","Storage buffer wrapper facilitating RW operations","Uniform buffer wrapper facilitating RW operations","","","","","","","","","","","","","","","","","","","","","","","","","Asserts that <code>Self</code> meets the requirements of the uniform …","","","","","","","","","","","Returns the size of <code>Self</code> assuming the (contained) …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","Used to implement <code>ShaderType</code> for the given matrix type","Used to implement <code>ShaderType</code> for the given runtime-sized …","Used to implement <code>ShaderType</code> for the given vector type","Used to implement <code>ShaderType</code> for the given wrapper type","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Module containing items necessary to implement <code>ShaderType</code> …","Represents the minimum size of <code>Self</code> (equivalent to …","","","Creates a new dynamic storage buffer wrapper with an …","Creates a new dynamic uniform buffer wrapper with an …","Creates a new dynamic storage buffer wrapper with a given …","Creates a new dynamic uniform buffer wrapper with a given …","","","","","","","","Module containing items necessary to implement <code>ShaderType</code> …","","","Returns the size of <code>Self</code> at runtime","","","","","","","","","","","","","","","","","","","","","","","","","","","Module containing items necessary to implement <code>ShaderType</code> …","","","","","","","","","","","Helper type for alignment calculations","","","","","","","","","","","Helper type for size calculations","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns an alignment that is the smallest power of two …","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if <code>n</code> is a multiple of this alignment","","Returns the max alignment from an array of alignments","","","","","","Returns the amount of padding needed so that <code>n + padding</code> …","","","","","Will round up the given <code>n</code> so that the returned value will …","Will round up the given <code>n</code> so that the returned value will …","length of the contained runtime sized array","max elements to read into the contained runtime sized array","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Enables writing to the matrix (via <code>&amp;mut [[T; R]; C]</code>)","Enables reading from the matrix (via <code>&amp;[[T; R]; C]</code>)","Enables the cration of a matrix (via <code>[[T; R]; C]</code>)","","","","","Used to implement <code>ShaderType</code> for the given matrix type","","","Used to implement <code>ShaderType</code> for the given runtime-sized …","","","Enables writing to the vector (via <code>&amp;mut [T; N]</code>)","Enables reading from the vector (via <code>&amp;[T; N]</code>)","Enables the cration of a vector (via <code>[T; N]</code>)","","","","","Used to implement <code>ShaderType</code> for the given vector type","","","","","","","","The handle to the physical device being used for rendering.","The <code>AdapterInfo</code> of the adapter in use by the renderer.","The context with all information required to interact with …","This GPU device is responsible for the creation of most …","","The GPU instance is used to initialize the <code>RenderQueue</code> and …","This queue is used to enqueue tasks for the GPU to execute …","Append a <code>CommandBuffer</code> to the queue.","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>TrackedRenderPass</code> for the context, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Gets the current <code>CommandEncoder</code>.","Initializes <code>Surface</code> for presentation.","Creates a new <code>BindGroup</code>.","Creates a <code>BindGroupLayout</code>.","Creates a <code>Buffer</code>.","Creates a <code>Buffer</code> and initializes it with the specified …","Creates an empty <code>CommandEncoder</code>.","Creates a <code>ComputePipeline</code>.","Creates a <code>PipelineLayout</code>.","Creates an empty <code>RenderBundleEncoder</code>.","Creates a <code>RenderPipeline</code>.","Creates a new <code>Sampler</code>.","Creates a <code>ShaderModule</code> from either SPIR-V or WGSL source …","Creates a new <code>Texture</code>.","Creates a new <code>Texture</code> and initializes it with the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","List all <code>Features</code> that may be used with this device.","Finalizes the queue and returns the queue of <code>CommandBuffer</code>…","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Initializes the renderer by retrieving and preparing the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","List all <code>Limits</code> that were requested of this device.","","Creates a new <code>RenderContext</code> from a <code>RenderDevice</code>.","","Check for resource cleanups and mapping callbacks.","Gets the underlying <code>RenderDevice</code>.","Updates the <code>RenderGraph</code> with all of its nodes and then …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the wgpu <code>Device</code>.","","","","","","","","","","","","","","Allows the use of <code>AddressMode::ClampToBorder</code> with a border …","Allows the use of <code>AddressMode::ClampToBorder</code> with a border …","Lets the rendering plugin create resources itself.","Supported when targeting the web through webassembly","Allows the user to create arrays of buffers in shaders:","Represents the backends that wgpu will use.","Enables clear to zero for textures.","Allows the user to set a …","WebGPU default features and limits","Allows for explicit creation of textures of format …","By default, polygon depth is clipped to 0-1 range …","Supported on Windows 7+","Supported on Windows 10","Selects which DX12 shader compiler to use.","The Dxc compiler is new, fast and maintained.","The maximum supported features and limits of the adapter …","The Fxc compiler (default) is old, slow and unmaintained.","Supported on Linux/Android, the web through webassembly …","Adapter that has the highest performance. This is often a …","Allows non-zero value for the “first instance” in …","Adapter that uses the least possible power. This is often …","Webgpu only allows the MAP_READ and MAP_WRITE buffer usage …","Supported on macOS/iOS","Enables multiview render passes and <code>builtin(view_index)</code> in …","Allows the user to call <code>RenderPass::multi_draw_indirect</code> …","Allows the user to call …","Allows renderer resource initialization to happen outside …","Power usage is not considered when choosing an adapter.","Allows the user to create bind groups continaing arrays …","Enables use of Pipeline Statistics Queries. These queries …","Allows the user to set <code>PolygonMode::Line</code> in …","Allows the user to set <code>PolygonMode::Point</code> in …","All the apis that wgpu offers first tier of support for.","Allows the use of push constants: small, fast bits of …","Power Preference when choosing a physical adapter.","Allows for usage of textures of format …","An enum describing how the renderer will initialize …","Allows shaders to index sampled texture and storage buffer …","All the apis that wgpu offers second tier of support for. …","Allows shaders to use the <code>early_depth_test</code> attribute.","Allows shaders to acquire the FP16 ability","Enables 64-bit floating point types in SPIR-V shaders.","Allows shaders to use i16. Not currently supported in <code>naga</code>…","Enables <code>builtin(primitive_index)</code> in fragment shaders.","Enables creating shader modules from SPIR-V binary data …","Allows the user to create uniform arrays of storage …","Enables device specific texture format features.","Allows the user to create uniform arrays of textures in …","Enables ASTC family of compressed textures. ASTC textures …","Enables ASTC HDR family of compressed textures.","Enables BCn family of compressed textures. All BCn …","Enables ETC family of compressed textures. All ETC …","Enables normalized <code>16-bit</code> texture formats.","Enables use of Timestamp Queries. These queries tell the …","Allows for timestamp queries inside render passes.","Allows shaders to index uniform buffer and storage texture …","Enables using 64-bit types for vertex attributes.","Enables bindings of writable storage buffers and textures …","Supported on Windows, Linux/Android, and macOS/iOS via …","WebGPU default limits plus additional constraints in order …","Features that are not guaranteed to be supported.","Represents the sets of limits an adapter/device supports.","Provides configuration for renderer initialization. Use …","Configures the priority used when automatically …","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Mask of all features that are only available when …","Mask of all features which are part of the upstream WebGPU …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Get the underlying bits value.","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","Compares every limits within self is within the limits …","Compares every limits within self is within the limits …","","","","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The constraints on limits allowed regardless of what the …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Returns true if the bitflags contains bits that are not …","Returns true if the bitflags contains bits that are not …","","","","","","","","","","","","","","","","","","","","","","","","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The features to ensure are disabled regardless of what the …","","","","","","","","","These default limits are guaranteed to be compatible with …","These default limits are guaranteed to be compatible with …","","","","","","","","","The shader compiler to use for the DX12 backend.","","","","","","","","","Get a flags value with all bits unset.","Get a flags value with all bits unset.","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The features to ensure are enabled regardless of what the …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","","Convert from a bits value exactly.","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","The imposed limits.","Function to create a <code>RenderCreation::Manual</code> variant.","Amount of bind groups that can be attached to a pipeline …","Maximum binding index allowed in <code>create_bind_group_layout</code>. …","A limit above which buffer allocations are guaranteed to …","Maximum value of the product of the <code>workgroup_size</code> …","The maximum value of the workgroup_size X dimension for a …","The maximum value of the workgroup_size Y dimension for a …","The maximum value of the workgroup_size Z dimension for a …","Maximum number of bytes used for workgroup memory in a …","The maximum value for each dimension of a …","Amount of storage buffer bindings that can be dynamic in a …","Amount of uniform buffer bindings that can be dynamic in a …","Maximum allowed number of components (scalars) of input or …","Amount of storage available for push constants in bytes. …","Amount of sampled textures visible in a single shader …","Amount of samplers visible in a single shader stage. …","Maximum size in bytes of a binding to a storage buffer. …","Amount of storage buffers visible in a single shader …","Amount of storage textures visible in a single shader …","Maximum allowed value for the <code>size.depth_or_array_layers</code> …","Maximum allowed value for the <code>size.width</code> of a texture …","Maximum allowed value for the <code>size.width</code> and <code>size.height</code> …","Maximum allowed value for the <code>size.width</code>, <code>size.height</code>, and …","Maximum size in bytes of a binding to a uniform buffer. …","Amount of uniform buffers visible in a single shader …","Maximum length of <code>VertexBufferLayout::attributes</code>, summed …","Maximum value for <code>VertexBufferLayout::array_stride</code> when …","Maximum length of <code>VertexState::buffers</code> when creating a …","Required <code>BufferBindingType::Storage</code> alignment for …","Required <code>BufferBindingType::Uniform</code> alignment for …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","","","","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","","","","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Get a features/limits priority from the environment …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","","","","","","","","Modify the current limits to use the buffer alignment …","Modify the current limits to use the resolution limits of …","","","","","","","","","Path to the <code>dxil.dll</code> file. Passing <code>None</code> will use standard …","Path to the <code>dxcompiler.dll</code> file. Passing <code>None</code> will use …","","","","","","","A cached GPU <code>Texture</code> with corresponding <code>TextureView</code>. This …","","","","","","Default image sampler, derived from the <code>ImagePlugin</code> setup.","A rendering resource for the default image sampler which …","Custom sampler for this image which will override global …","","","Loads EXR textures as Texture assets","Possible errors that can be produced by <code>ExrTextureLoader</code>","The extension of an image file, for example <code>&quot;png&quot;</code>.","A <code>RenderApp</code> resource that contains the default “fallback …","A <code>RenderApp</code> resource that contains a “cubemap fallback …","A Cache of fallback textures that uses the sample count …","","A <code>RenderApp</code> resource that contains a <em>zero-filled</em> “…","","","An error that occurs when loading a texture from a file.","The direct format of the image","","","","","The GPU-representation of an <code>Image</code>. Consists of the <code>Texture</code>…","","Loads HDR textures as Texture assets","","","","","","","","","Loader for images that can be read by the <code>image</code> crate.","","","Adds the <code>Image</code> as an asset and makes sure that they are …","Used in <code>Image</code>, this determines what image sampler to use …","The type of a raw image buffer.","Only cubemaps with six faces are supported.","","","","","","","","","","The mime type of an image, for example <code>&quot;image/png&quot;</code>.","","","","","","","","","","","","","","","","","This resource caches textures that are created repeatedly …","An error that occurs when loading a texture","Extends the wgpu <code>TextureFormat</code> with information about the …","","","","","","","Used to calculate the volume of an item.","","Get a flags value with all known bits set.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the aspect ratio (height/width) of a 2D image.","","","","","","","","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Convert a texture from a format to another. Only a few …","","Fallback image for <code>TextureViewDimension::Cube</code>.","Fallback image for <code>TextureViewDimension::CubeArray</code>.","Fallback image for <code>TextureViewDimension::D1</code>.","Fallback image for <code>TextureViewDimension::D2</code>.","Fallback image for <code>TextureViewDimension::D2Array</code>.","Fallback image for <code>TextureViewDimension::D3</code>.","","","","","","","","default is a 1x1x1 all ‘1.0’ texture","","","","","","Creates image settings with linear sampling by default.","","","","Creates image settings with nearest sampling by default.","The default image sampler to use when <code>ImageSampler</code> is set …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The intersection of a source flags value with the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a flags value with all bits unset.","","","","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","Clones the Image.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","Load a bytes buffer in a <code>Image</code>, according to type …","Converts a <code>DynamicImage</code> to an <code>Image</code>.","","","The bitwise or (<code>|</code>) of the bits in each flags value.","","Get a flags value with the bits of a flag with the given …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Retrieves a texture that matches the <code>descriptor</code>. If no …","","","","","Returns the height of a 2D image.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether all known bits in this flags value are set.","Whether the texture format is compressed or uncompressed","Whether all bits in this flags value are unset.","","Yield a set of contained flags values.","Yield a set of contained named flags values.","","","","","Returns an image sampler with <code>Linear</code> min and mag filters","Returns a sampler descriptor with <code>Linear</code> min and mag …","Processes the asset in an asynchronous closure.","","","Processes the asset in an asynchronous closure.","Processes the asset in an asynchronous closure.","","","","Returns an image sampler with <code>Nearest</code> min and mag filters","Returns a sampler descriptor with <code>Nearest</code> min and mag …","Creates a new image from raw binary data and the …","","Creates a new image from raw binary data and the …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","","","","","","","","","Returns the size of a pixel in bytes of the format.","Converts the extracted image into a <code>GpuImage</code>.","","","","","","","","","","Changes the <code>size</code>, asserting that the total number of data …","Takes a 2D image containing vertically stacked images of …","The intersection of a source flags value with the …","Resizes the image to the new size, by removing information …","","The <code>ImageSampler</code> to use during rendering.","","","","","","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","","Returns the size of a 2D image.","","Returns the size of a 2D image as f32.","","","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert a <code>Image</code> to a <code>DynamicImage</code>. Useful for editing image","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Updates the cache and only retains recently used textures.","Updates the <code>TextureCache</code> to only retains recently used …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the width of a 2D image.","Label for the <code>calculate_bounds</code> and <code>calculate_bounds_2d</code> …","Label for the <code>apply_deferred</code> call after …","Label for the <code>check_visibility</code> system updating …","Configures basic color grading parameters to adjust the …","","","","An entity that is invisible in the hierarchy.","An entity that cannot be seen from any views.","An entity with <code>Visibility::Hidden</code> will be unconditionally …","An entity with <code>Visibility::Inherited</code> will inherit the …","Whether or not an entity is visible in the hierarchy. This …","An identifier for a rendering layer.","Configuration resource for Multi-Sample Anti-Aliasing.","Use this component to opt-out of built-in frustum culling …","Token to ensure a system runs on the main thread.","","","Describes which rendering layers an entity belongs to.","","","","","The total number of layers supported.","Label for the <code>update_frusta&lt;OrthographicProjection&gt;</code> system.","Label for the <code>update_frusta&lt;PerspectiveProjection&gt;</code> system.","Label for the <code>update_frusta&lt;Projection&gt;</code> system.","","An entity that is visible in the hierarchy.","","","","","","","Algorithmically-computed indication or whether an entity …","User indication of whether an entity is visible. …","A <code>Bundle</code> of the <code>Visibility</code>, <code>InheritedVisibility</code>, and …","","Label for the system propagating the <code>InheritedVisibility</code> …","","An entity with <code>Visibility::Visible</code> will be unconditionally …","Collection of entities visible from the current view.","","","Create a new <code>RenderLayers</code> that belongs to all layersomputes and adds an <code>Aabb</code> component to entities with a …","System updating the visibility of entities each frame.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","By default, this structure includes layer <code>0</code>, which …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An entity that contains the components in <code>Window</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Exposure value (EV) offset, measured in stops.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Create a <code>RenderLayers</code> from a list of layers.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Non-linear luminance adjustment applied before …","Returns <code>true</code> if the entity is visible in the hierarchy. …","Returns <code>true</code> if the entity is visible in any view. …","Retrieve this target’s color attachment. This will use …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Retrieve an “unsampled” color attachment using …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Determine if a <code>RenderLayers</code> intersects another.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if and only if the main texture is …","Get an iterator of the layers.","","","","","","","","","","Create a new <code>RenderLayers</code> belonging to the given layer.","","The “main” unsampled texture.","","The <em>other</em> “main” unsampled texture. In most cases you …","The <em>other</em> “main” unsampled texture view. In most cases …","The “main” unsampled texture.","","","","","","","","","","","","","","Create a new <code>RenderLayers</code> that belongs to no layers.","","","","","","","","","","","","","","","The final texture this view will render to.","The format of the final texture this view will render to","","","","","This will start a new “post process write”, which …","Saturation adjustment applied after tonemapping. Values …","Saturation adjustment applied before tonemapping. Values …","","Creates and (re)configures window surfaces, and obtains a …","","","","","Creates a 3D rangefinder for a view","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The “main” sampled texture.","The “main” sampled texture view.","","","","","","","Sets the visibility to <code>true</code>. This should not be considered …","","","","","","","","","","","","","","","","","","","","Note: this will not always be the swap chain texture view. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Updates <code>Frustum</code>.","","","","","","","","","","","","The visibility of the entity.","","","","","","","","","","","","","","","","","","","","","","","","","","","Add the given layer.","Removes the given rendering layer.","","","Label for the <code>calculate_bounds</code> and <code>calculate_bounds_2d</code> …","Label for the <code>apply_deferred</code> call after …","Label for the <code>check_visibility</code> system updating …","An entity with <code>Visibility::Hidden</code> will be unconditionally …","An entity with <code>Visibility::Inherited</code> will inherit the …","Whether or not an entity is visible in the hierarchy. This …","An identifier for a rendering layer.","Use this component to opt-out of built-in frustum culling …","Describes which rendering layers an entity belongs to.","Label for the <code>update_frusta&lt;OrthographicProjection&gt;</code> system.","Label for the <code>update_frusta&lt;PerspectiveProjection&gt;</code> system.","Label for the <code>update_frusta&lt;Projection&gt;</code> system.","Algorithmically-computed indication or whether an entity …","User indication of whether an entity is visible. …","A <code>Bundle</code> of the <code>Visibility</code>, <code>InheritedVisibility</code>, and …","","Label for the system propagating the <code>InheritedVisibility</code> …","","An entity with <code>Visibility::Visible</code> will be unconditionally …","Collection of entities visible from the current view.","Computes and adds an <code>Aabb</code> component to entities with a …","System updating the visibility of entities each frame.","","","Updates <code>Frustum</code>.","","The visibility of the entity.","","","Token to ensure a system runs on the main thread.","","","","An entity that contains the components in <code>Window</code>.","","","","Creates and (re)configures window surfaces, and obtains a …","","","","","","","","","","Note: this will not always be the swap chain texture view. …","","","","A resource which allows for taking screenshots of the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Signals the renderer to take a screenshot of this frame.","","Signals the renderer to take a screenshot of this frame.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Contains the set of permitted types by their <code>TypeId</code>.","Contains the set of prohibited types by their <code>TypeId</code>.","A reflection-powered serializable representation of an …","A collection of serializable resources and dynamic …","A <code>DynamicScene</code> builder, used to build a scene from a <code>World</code> …","A component bundle for a <code>DynamicScene</code> root.","Unique id identifying a scene instance.","Information about a scene instance.","An IO Error","Scene contains a proxy without a represented type.","Scene with the given id does not exist.","Dynamic scene with the given id does not exist.","A RON Error","To spawn a scene, you can use either:","A component bundle for a <code>Scene</code> root.","A filter used to control which types can be added to a …","<code>InstanceId</code> of a spawned scene. It can be used with the …","Emitted when <code>crate::SceneInstance</code> becomes ready to use.","<code>AssetLoader</code> for loading serialized Bevy scene files as …","Possible errors that can be produced by <code>SceneLoader</code>","Plugin that provides scene functionality to an <code>App</code>.","Errors that can occur when spawning a scene.","Handles spawning and despawning scenes in the world, …","Scene contains an unregistered type which has a <code>TypePath</code>.","Scene contains an unregistered component type.","Scene contains an unregistered resource type.","Scene contains an unregistered type.","Represents an unset filter.","Allows the given component type, <code>T</code>, to be included in the …","Allow the given type, <code>T</code>.","Updates the filter to allow all component types.","Creates a filter where all types are allowed.","Updates the filter to allow all resource types.","Allow the given type.","Allows the given resource type, <code>T</code>, to be included in the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the builder, producing a <code>DynamicScene</code>.","","","","","","","","Clone the scene.","","A vector of boxed components that belong to the given …","","","","","","","","","","Denies the given component type, <code>T</code>, from being included in …","Deny the given type, <code>T</code>.","Updates the filter to deny all component types.","Creates a filter where all types are denied.","Updates the filter to deny all resource types.","Deny the given type.","Denies the given resource type, <code>T</code>, from being included in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Schedule the despawn of all instances of the provided …","Schedule the despawn of a scene instance, removing all its …","Immediately despawns a scene instance, removing all its …","Immediately despawns all scene instances scheduled for …","Immediately despawns all scenes scheduled for despawn by …","Immediately despawns all instances of a dynamic scene.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Entities contained in the dynamic scene.","The identifier of the entity, unique within a scene (and …","Mapping of entities from the scene world to the instance …","","","","","","","","","","","","","Extract entities from the builder’s <code>World</code>.","Extract one entity from the builder’s <code>World</code>.","Extract resources from the builder’s <code>World</code>.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Create a new scene from a given dynamic scene.","","","","","","","","","","","","","","","","","Create a new dynamic scene from a given scene.","Prepare a builder that will extract entities and their …","","","Create a new dynamic scene from a given world.","","","","","","","Global transform of the scene root entity.","Global transform of the scene root entity.","","","","Inherited visibility of the scene root entity.","Inherited visibility of the scene root entity.","","","","","","","","","","","","","","","","","","","Check that an scene instance spawned previously is ready …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if the given type, <code>T</code>, is allowed by the …","Returns true if the given type is allowed by the filter.","Returns true if the given type, <code>T</code>, is denied by the filter.","Returns true if the given type is denied by the filter.","Returns true if there are zero items in the filter.","Returns an iterator over the items in the filter.","Get an iterator over the entities in an instance, once it…","Returns the number of items in the filter.","Processes the asset in an asynchronous closure.","","","","Creates a new scene with the given world.","","","","","","","Entity to which the scene was spawned as a child.","","","","","","","","","","","","Despawns all entities with no components.","Resources stored in the dynamic scene.","Handle to the scene to spawn.","Handle to the scene to spawn.","System that will spawn scenes from <code>SceneBundle</code>.","System that handles scheduled scene instance spawning and …","<code>serde</code> serialization and deserialization implementation for …","Serialize a given Rust data structure into rust object …","Serialize this dynamic scene into rust object notation …","","","","Schedule the spawn of a new instance of the provided scene.","Schedule the spawn of a new instance of the provided scene …","Schedule the spawn of a new instance of the provided …","Schedule the spawn of a new instance of the provided …","Immediately spawns a new instance of the provided dynamic …","Immediately spawns all scenes scheduled for spawn.","Immediately spawns a new instance of the provided scene.","","","","","","","","","","","","","","","","","","","","","Transform of the scene root entity.","Transform of the scene root entity.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Iterate through all instances of the provided scenes and …","Algorithmically-computed visibility of the scene root …","Algorithmically-computed visibility of the scene root …","User-driven visibility of the scene root entity.","User-driven visibility of the scene root entity.","","","","","","","","","","","","","","","","","","","Specify a custom component <code>SceneFilter</code> to be used with …","Specify a custom resource <code>SceneFilter</code> to be used with this …","The world of the scene, containing its entities and …","Write the resources, the dynamic entities, and their …","Write the resources, the dynamic entities, and their …","Write the entities and their corresponding components to …","Id of the non-existent dynamic scene.","Id of the non-existent scene.","The [type name] for the unregistered type. [type name]: …","Type of the unregistered component.","Type of the unregistered resource.","The unregistered type.","The dynamic instance type.","Contains the set of permitted types by their <code>TypeId</code>.","Contains the set of prohibited types by their <code>TypeId</code>.","A collection of serializable resources and dynamic …","A <code>DynamicScene</code> builder, used to build a scene from a <code>World</code> …","A component bundle for a <code>DynamicScene</code> root.","To spawn a scene, you can use either:","A component bundle for a <code>Scene</code> root.","A filter used to control which types can be added to a …","Handles spawning and despawning scenes in the world, …","Represents an unset filter.","Entities contained in the dynamic scene.","Global transform of the scene root entity.","Global transform of the scene root entity.","Inherited visibility of the scene root entity.","Inherited visibility of the scene root entity.","Resources stored in the dynamic scene.","Handle to the scene to spawn.","Handle to the scene to spawn.","Transform of the scene root entity.","Transform of the scene root entity.","Algorithmically-computed visibility of the scene root …","Algorithmically-computed visibility of the scene root …","User-driven visibility of the scene root entity.","User-driven visibility of the scene root entity.","The world of the scene, containing its entities and …","Name of the serialized component field in an entity struct.","Name of the serialized entity struct type.","Handles serialization of multiple entities as a map of …","Handles entity serialization as a map of component type to …","Name of the serialized entities field in a scene struct.","Name of the serialized resources field in a scene struct.","Name of the serialized scene struct type.","Handles scene deserialization.","Handles deserialization for a collection of entities.","Handle deserialization of an entity and its components.","Handles deserialization of a sequence of values with …","Handles serializing a list of values with a unique type as …","Handles serialization of a scene as a struct containing …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The entities to serialize.","The entity to serialize.","Id of the deserialized entity.","List of boxed values of unique type to serialize.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a scene serializer.","Type registry in which the components and resources types …","Type registry in which the component types used by the …","Type registry in which the component types used by the …","Type registry in which the types used in <code>entries</code> are …","Type registry in which the types of the values to …","The scene to serialize.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Type registry in which the components and resources types …","Type registry in which the component types used by the …","Type registry in which the component types used by the …","","","","","","","","","","","","","","","","","How a sprite is positioned relative to its <code>Transform</code>. It …","","","","","","","","","A 2d material that renders 2d meshes with a texture tinted …","","","The GPU representation of the uniform data of a …","A component bundle for entities with a <code>Mesh2dHandle</code> and a …","Custom anchor point. Top left is <code>(-0.5, 0.5)</code>, center is …","","","","","","Helper utility to update <code>TextureAtlas</code> on the fly.","","","","","","","","","","","","","","","","","Materials are used alongside <code>Material2dPlugin</code> and …","","","Render pipeline data for a given <code>Material2d</code>","Adds the necessary ECS resources and render logic to …","A component bundle for entities with a <code>Mesh2dHandle</code> and a …","","","Component for rendering with meshes in the 2d pipeline, …","","","","","","","","","","","","","","All <code>Material2d</code> values of a given type that should be …","Data prepared for a <code>Material2d</code> instance.","","Stores all prepared representations of <code>Material2d</code> assets …","","","","","","","","","","","","","","","","","A Bundle of components for drawing a single sprite from a …","","","","","","","","","","","","","","","","","","","","","","","An atlas containing multiple textures (like a spritesheet …","A builder which is used to create a texture atlas from …","","","","","","","","","","Add a new texture to <code>TextureAtlas</code>. It is user’s …","Add a sprite to the list of textures in the <code>TextureAtlas</code> …","Adds a texture to be copied to the texture atlas.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","","<code>Anchor</code> point of the sprite in the world","<code>Anchor</code> point of the sprite in the worldontrol whether the added texture should be converted to …","","","","","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","Get the underlying bits value.","","Get the underlying bits value.","","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","System calculating and inserting an <code>Aabb</code> component to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Utilities for detecting if and on which side two …","","","","The sprite’s color tint","The tint color used to draw the sprite, defaulting to …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","","","","","","","","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","","","","","","","","","Change the on-screen size of the sprite","An optional custom size for the sprite that will be used …","An optional custom size for the sprite that will be used …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","This system extracts all created or modified assets of the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consumes the builder and returns a result with a new …","","","","","","Flip the sprite along the <code>X</code> axis","Whether to flip the sprite in the X axis","","Flip the sprite along the <code>Y</code> axis","Whether to flip the sprite in the Y axis","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets the texture format for textures in the atlas.","Returns this material’s fragment shader. If …","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value exactly.","","","Convert from a bits value exactly.","","Convert from a bits value exactly.","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","","","","","","","","","","","Generate a <code>TextureAtlas</code> by splitting a texture into a grid …","","","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","","","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the index of the texture corresponding to the …","","","","","","","","","","","","","","Asset ID of the <code>Image</code> of this sprite PERF: storing an …","","","Texture index in <code>TextureAtlas</code>","","Inherited visibility of an entity.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets the initial size of the atlas in pixels.","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codehether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Returns <code>true</code> if there are no textures in the <code>TextureAtlas</code>","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","","","","","","","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","","","The number of textures in the <code>TextureAtlas</code>","","","","Sets the max size of the atlas in pixels.","","","","","","","","","","","","","","","","","","","Create a new <code>DynamicTextureAtlasBuilder</code>","Create a new <code>TextureAtlasSprite</code> with a sprite index, it …","Create a new <code>TextureAtlas</code> that has a texture, but does not …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","","","","","","","","","","","","","","","","","","","","","","","For cases where additional ExtractedSprites are created …","Sets the amount of padding in pixels to add between the …","","","This system prepares all assets of the corresponding …","","","","","","","","","Select an area of the texture","An optional rectangle representing the region of the sprite…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","","","","","","","","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","","","","","","","","","","","","","","Customizes the default <code>RenderPipelineDescriptor</code>.","","","","","The specific sprite from the texture atlas to be drawn, …","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","The handle to the texture in which the sprites are stored","A handle to the texture atlas that holds the sprite images","The specific areas of the atlas where each texture can be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","Data pertaining to how the sprite is drawn on the screenhe bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns this material’s vertex shader. If …","","","Algorithmically-computed indication of whether an entity …","Algorithmically-computed indication of whether an entity …","","User indication of whether an entity is visible","User indication of whether an entity is visible","User indication of whether an entity is visible","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Axis-aligned bounding box collision with “side” …","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","A 2d material that renders 2d meshes with a texture tinted …","A component bundle for entities with a <code>Mesh2dHandle</code> and a …","","","A Bundle of components for drawing a single sprite from a …","An atlas containing multiple textures (like a spritesheet …","A builder which is used to create a texture atlas from …","","<code>Anchor</code> point of the sprite in the world","<code>Anchor</code> point of the sprite in the world","","The sprite’s color tint","The tint color used to draw the sprite, defaulting to …","An optional custom size for the sprite that will be used …","An optional custom size for the sprite that will be used …","Flip the sprite along the <code>X</code> axis","Whether to flip the sprite in the X axis","Flip the sprite along the <code>Y</code> axis","Whether to flip the sprite in the Y axis","","","Texture index in <code>TextureAtlas</code>","Inherited visibility of an entity.","","An optional rectangle representing the region of the sprite…","","","The specific sprite from the texture atlas to be drawn, …","","","The handle to the texture in which the sprites are stored","A handle to the texture atlas that holds the sprite images","The specific areas of the atlas where each texture can be …","","Data pertaining to how the sprite is drawn on the screen","Algorithmically-computed indication of whether an entity …","Algorithmically-computed indication of whether an entity …","User indication of whether an entity is visible","User indication of whether an entity is visible","A newtype for a task pool for CPU-intensive work that may …","A newtype for a task pool for CPU-intensive work that must …","A newtype for a task pool for IO-intensive work (i.e. …","<code>ParallelIterator</code> closely emulates the <code>std::iter::Iterator</code> …","Provides functions for mapping read-only slices across a …","Provides functions for mapping mutable slices across a …","A <code>TaskPool</code> scope for running one or more non-<code>&#39;static</code> …","Wraps <code>async_executor::Task</code>, a spawned future.","A thread pool for executing tasks.","Used to create a <code>TaskPool</code>","An executor that can only be ticked on the thread it was …","Used to tick the <code>ThreadExecutor</code>. The executor does not …","Tests if every element of the parallel iterator matches a …","Tests if any element of the parallel iterator matches a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Gets the logical CPU core count available to the current …","Blocks the current thread on a future, processing I/O …","","","","","","","","","","","","","","","","","","","Creates a new <code>TaskPool</code> based on the current options.","Borrows a parallel iterator, rather than consuming it.","Cancels the task and waits for it to stop running.","Takes two parallel iterators and returns a parallel …","Creates a parallel iterator which clones all of its items.","Transforms a parallel iterator into a collection.","Creates a parallel iterator which copies all of its items.","Consumes the parallel iterator and returns the number of …","Repeats a parallel iterator endlessly.","","","","","","","","","","","","","","","","","","","","","","","","","Detaches the task to let it keep running in the …","","","","","","","","","","","","","","","","","","","","","Creates a parallel iterator which uses a closure to …","Creates a parallel iterator that both filters and maps.","Creates a parallel iterator that works like map, but …","Creates a parallel iterator that flattens nested structure.","","","","","","","","","Repeatedly applies a function to items of each batch of a …","Calls a closure on each item of a parallel iterator.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Creates a parallel iterator which ends after the first …","Gets the global <code>ComputeTaskPool</code> instance.","Gets the global <code>AsyncComputeTaskPool</code> instance.","Gets the global <code>IoTaskPool</code> instance.","Gets the global <code>ComputeTaskPool</code> instance, or initializes …","Gets the global <code>AsyncComputeTaskPool</code> instance, or …","Gets the global <code>IoTaskPool</code> instance, or initializes it …","Each thread should only create one <code>ThreadExecutor</code>, …","","","","","","","","","","Does something with each item of a parallel iterator, …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if the current task is finished.","Returns true if <code>self</code> and <code>other</code>’s executor is same","Consumes the parallel iterator and returns the last item.","Takes a closure and creates a parallel iterator which …","Returns the maximum item of a parallel iterator.","Returns the item that gives the maximum value with respect …","Returns the item that gives the maximum value from the …","Returns the minimum item of a parallel iterator.","Returns the item that gives the minimum value with respect …","Returns the item that gives the minimum value from the …","Creates a new task from a given <code>async_executor::Task</code>","Creates a new <code>TaskPoolBuilder</code> instance","Create a <code>TaskPool</code> with the default configuration.","create a new <code>ThreadExecutor</code>","Returns the next batch of items for processing.","Consumes the parallel iterator and returns the nth item.","","","","Override the number of threads created for the pool. If …","Sets a callback that is invoked once for every created …","Sets a callback that is invoked once for every created …","Splits the slice in chunks of size <code>chunks_size</code> or less and …","Splits the slice in chunks of size <code>chunks_size</code> or less and …","Splits the slice into a maximum of <code>max_tasks</code> chunks, and …","Splits the slice into a maximum of <code>max_tasks</code> chunks, and …","Consumes a parallel iterator, creating two collections …","","Searches for an element in a parallel iterator, returning …","","Multiplies all the items of a parallel iterator.","Allows spawning non-<code>&#39;static</code> futures on the thread pool. …","This allows passing an external executor to spawn tasks …","Returns the bounds on the remaining number of items in the …","Spawns a static future onto the thread pool. The returned …","Spawns a scoped future onto the thread pool. The scope <em>must</em>…","Spawn a task on the thread executor","Spawns a static future on the thread-local async executor …","Spawns a scoped future onto the thread of the external …","Spawns a scoped future onto the thread the scope is run …","Override the stack size of the threads created for the pool","Sums the items of a parallel iterator.","Override the name of the threads created for the pool. If …","Return the number of threads owned by the task pool","Tick the thread executor.","A function used by <code>bevy_core</code> to tick the global tasks …","Gets the <code>ThreadExecutorTicker</code> for this executor. Use this …","","","","","","","","","","","","","","","","","","","Attempts to get the global <code>ComputeTaskPool</code> instance, or …","Attempts to get the global <code>AsyncComputeTaskPool</code> instance, …","Attempts to get the global <code>IoTaskPool</code> instance, or returns …","","","","","","","","","","","Synchronously try to tick a task on the executor. Returns …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Runs a function with the local executor. Typically used to …","A newtype for a task pool for CPU-intensive work that may …","A newtype for a task pool for CPU-intensive work that must …","A newtype for a task pool for IO-intensive work (i.e. …","<code>ParallelIterator</code> closely emulates the <code>std::iter::Iterator</code> …","Provides functions for mapping read-only slices across a …","Provides functions for mapping mutable slices across a …","Tests if every element of the parallel iterator matches a …","Tests if any element of the parallel iterator matches a …","Blocks the current thread on a future, processing I/O …","Borrows a parallel iterator, rather than consuming it.","Takes two parallel iterators and returns a parallel …","Creates a parallel iterator which clones all of its items.","Transforms a parallel iterator into a collection.","Creates a parallel iterator which copies all of its items.","Consumes the parallel iterator and returns the number of …","Repeats a parallel iterator endlessly.","Creates a parallel iterator which uses a closure to …","Creates a parallel iterator that both filters and maps.","Creates a parallel iterator that works like map, but …","Creates a parallel iterator that flattens nested structure.","Repeatedly applies a function to items of each batch of a …","Calls a closure on each item of a parallel iterator.","Creates a parallel iterator which ends after the first …","Does something with each item of a parallel iterator, …","Consumes the parallel iterator and returns the last item.","Takes a closure and creates a parallel iterator which …","Returns the maximum item of a parallel iterator.","Returns the item that gives the maximum value with respect …","Returns the item that gives the maximum value from the …","Returns the minimum item of a parallel iterator.","Returns the item that gives the minimum value with respect …","Returns the item that gives the minimum value from the …","Returns the next batch of items for processing.","Consumes the parallel iterator and returns the nth item.","Splits the slice in chunks of size <code>chunks_size</code> or less and …","Splits the slice in chunks of size <code>chunks_size</code> or less and …","Splits the slice into a maximum of <code>max_tasks</code> chunks, and …","Splits the slice into a maximum of <code>max_tasks</code> chunks, and …","Consumes a parallel iterator, creating two collections …","Searches for an element in a parallel iterator, returning …","Multiplies all the items of a parallel iterator.","Returns the bounds on the remaining number of items in the …","Sums the items of a parallel iterator.","Lines will be broken without discrimination on any …","","Determines how lines will be broken when preventing text …","Leftmost &amp; rightmost characters are equidistant to the …","","","","","","","An InvalidFont Error","","Possible errors that can be produced by <code>FontLoader</code>","","","An IO Error","Leftmost character is immediately to the right of the …","","No soft wrapping, where text is automatically broken up …","","Rightmost character is immediately to the left of the …","","","The maximum width and height of text. The text will wrap …","The bundle of components needed to draw text in a 2D scene …","Describes horizontal alignment preference for positioning …","","Render information for a corresponding <code>Text</code> component.","","","","","","<code>TextPlugin</code> settings","","","Unbounded text will not be truncated or wrapped.","Uses the Unicode Line Breaking Algorithm. Lines will be …","Text is rendered for two different view projections, …","","","","The text’s internal alignment. Should not affect its …","Allows font size to be set dynamically exceeding the …he vertical height of rasterized glyphs in the font atlas …","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Constructs a <code>Text</code> with a single section.","Constructs a <code>Text</code> from a list of sections.","Create an empty <code>TextSection</code> from a style. Useful when the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The global transform of the text.","","","","","","","","","","","","","Inherited visibility of an entity.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if the font atlas set contains no elements","","","","","","","","","","","Returns the number of font atlases in this set","","How the text should linebreak when running out of the …","Processes the asset in an asynchronous closure.","","","","Maximum number of font atlases supported in a <code>FontAtlasSet</code>.","","","","","","","","","","","","","","","","","","","","","","Create a new <code>TextSection</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The maximum width and height of text in logical pixels.","","","","Contains the text.","The maximum width and height of the text.","","How the text is positioned relative to its transform.","Contains the size of the text and its glyph’s position …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The transform of the text.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Updates the layout and size information whenever the text …","","","","","","","","Algorithmically-computed indication of whether an entity …","The visibility properties of the text.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns this <code>Text</code> with a new <code>TextAlignment</code>.","Returns this <code>Text</code> with soft wrapping disabled. Hard …","Leftmost &amp; rightmost characters are equidistant to the …","","","Leftmost character is immediately to the right of the …","","Rightmost character is immediately to the left of the …","","The bundle of components needed to draw text in a 2D scene …","Describes horizontal alignment preference for positioning …","","","","The text’s internal alignment. Should not affect its …","","","","The vertical height of rasterized glyphs in the font atlas …","The global transform of the text.","Inherited visibility of an entity.","How the text should linebreak when running out of the …","","","Contains the text.","The maximum width and height of the text.","How the text is positioned relative to its transform.","Contains the size of the text and its glyph’s position …","The transform of the text.","","Algorithmically-computed indication of whether an entity …","The visibility properties of the text.","<code>Time</code> will be automatically updated each frame using an …","The message could not be sent because the channel is …","The fixed timestep game clock following virtual time.","The message could not be sent because the channel is full.","<code>Time</code> will be incremented by the specified <code>Duration</code> each …","<code>Time</code> will be updated to the specified <code>Instant</code> value each …","Run once and stop.","Real time clock representing elapsed wall clock time.","Reset when finished.","A Stopwatch is a struct that track elapsed time when …","A generic clock resource that tracks how much it has …","Adds time functionality to Apps.","Channel resource used to receive time from the render …","Channel resource used to send time from the render world.","Updates the elapsed time. Any system that interacts with …","Configuration resource used to determine how the time …","Tracks elapsed time. Enters the finished state once …","Specifies <code>Timer</code> behavior.","An error returned from the <code>try_send</code> method.","The virtual game clock representing game time.","Advance this clock by adding a <code>delta</code> duration to it.","Advance this clock to a specific <code>elapsed</code> time.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a copy of this clock as fully generic clock …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Common run conditions","Returns a reference to the context of this specific clock.","Returns a mutable reference to the context of this …","","","","","","","","Creates channels used for sending time between the render …","","","","","","","","","","Returns how much time has advanced since the last <code>update</code>, …","Returns how much time has advanced since the last <code>update</code>, …","Returns how much time has advanced since the last <code>update</code>, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the duration of the timer.","","","","","","","","","Returns the speed the clock advanced relative to your …","Returns the speed the clock advanced relative to your …","Returns the elapsed time since the last <code>reset</code> of the …","Returns how much time has advanced since <code>startup</code>, as …","Returns the time elapsed on the timer. Guaranteed to be …","Returns how much time has advanced since <code>startup</code>, as <code>f32</code> …","Returns how much time has advanced since <code>startup</code>, as <code>f64</code> …","Returns how much time has advanced since <code>startup</code> modulo …","Returns how much time has advanced since <code>startup</code> modulo …","Returns the elapsed time since the last <code>reset</code> of the …","Returns the time elapsed on the timer as an <code>f32</code>. See also …","Returns the elapsed time since the last <code>reset</code> of the …","Returns how much time has advanced since <code>startup</code> modulo …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if the timer has reached its duration.","Returns the <code>Instant</code> when <code>Self::update</code> was first called, if …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Return new fixed time clock with given timestep as <code>Duration</code>","Return new fixed time clock with given timestep frequency …","Create new virtual clock with given maximum delta step …","","","","","","","","","","","","","","","","","","","","","Return new fixed time clock with given timestep seconds as …","Creates a new timer with a given duration in seconds.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unwraps the message.","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if the send operation failed because the …","Returns <code>true</code> if the send operation failed because the …","Returns <code>true</code> if the clock is currently paused.","","","","","","","","Returns <code>true</code> only on the tick the timer reached its …","Returns the <code>Instant</code> when <code>Self::update</code> was last called, if …","Returns the maximum amount of time that can be added to …","Returns the mode of the timer.","","","","","","","","","","","","","","","Create a new unpaused <code>Stopwatch</code> with no elapsed time.","Constructs a new <code>Time&lt;Real&gt;</code> instance with a specific …","Creates a new timer with a given duration.","Create a new clock from context with <code>Self::delta</code> and …","","","","","","","","","","Returns the amount of overstep time accumulated toward new …","Returns the amount of overstep time accumulated toward new …","Returns the amount of overstep time accumulated toward new …","Pauses the stopwatch. Any call to <code>tick</code> while paused will …","Stops the clock, preventing it from advancing until …","Pauses the Timer. Disables the ticking of the timer.","Returns <code>true</code> if the stopwatch is paused.","Returns <code>true</code> if the timer is paused.","Returns the percentage of the timer elapsed time (goes …","Returns the percentage of the timer remaining time (goes …","The Bevy Time Prelude.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the speed the clock advances relative to your …","Returns the speed the clock advances relative to your …","Returns the remaining time using Duration","Returns the remaining time in seconds","Resets the stopwatch. The reset doesn’t affect the …","Resets the timer. The reset doesn’t affect the <code>paused</code> …","Runs <code>FixedUpdate</code> zero or more times based on delta of …","","","","","","","","","","","Sets the duration of the timer.","Sets the elapsed time of the stopwatch.","Sets the elapsed time of the timer without any other …","Sets the maximum amount of time that can be added to this …","Sets the mode of the timer.","Sets the speed the clock advances relative to your system …","Sets the speed the clock advances relative to your system …","Sets the amount of virtual time that must pass before the …","Sets the amount of virtual time that must pass before the …","Sets the amount of virtual time that must pass before the …","Sets the modulus used to calculate <code>elapsed_wrapped</code>.","","","","","","","","Returns the <code>Instant</code> the clock was created.","Advance the stopwatch by <code>delta</code> seconds. If the stopwatch …","Advance the timer by <code>delta</code> seconds. Non repeating timer …","Returns the number of times a repeating timer finished …","Returns the amount of virtual time that must pass before …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unpauses the stopwatch. Resume the effect of ticking on …","Resumes the clock if paused.","Unpauses the Timer. Resumes the ticking of the timer.","","","","","","","","","","","","","","Updates the internal time measurements.","Updates time with a specified <code>Duration</code>.","Updates time with a specified <code>Instant</code>.","","","","Advances <code>Time&lt;Virtual&gt;</code> and <code>Time</code> based on the elapsed …","","","","","","","","","","","","","","Returns <code>true</code> if the clock was paused at the start of this …","Returns the modulus used to calculate <code>elapsed_wrapped</code>.","Run condition that is active on a regular time interval, …","Run condition that is active on a regular time interval, …","The fixed timestep game clock following virtual time.","Run once and stop.","Real time clock representing elapsed wall clock time.","Reset when finished.","A generic clock resource that tracks how much it has …","Tracks elapsed time. Enters the finished state once …","Specifies <code>Timer</code> behavior.","The virtual game clock representing game time.","An identity <code>TransformBundle</code> with no translation, rotation, …","A <code>Bundle</code> of the <code>Transform</code> and <code>GlobalTransform</code> <code>Component</code>s, …","The base plugin for handling <code>Transform</code> components","A trait for point transformation methods.","Propagates changes in transform to children’s …","Set enum for the systems relating to transform propagation","","","","","","","","","","","","","","","","","","","","","","","","","Extension to <code>EntityCommands</code> to modify <code>bevy_hierarchy</code> …","The basic components of the transform crate","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Creates a new <code>TransformBundle</code> from a <code>Transform</code>.","","","The global transform of the entity.","","System parameter for computing up-to-date <code>GlobalTransform</code>s.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","The transform of the entity.","","","Systems responsible for transform propagation","","","","","","Transform a point.","","","","","","","","","","","","","","","","Command similar to <code>AddChild</code>, but updating the child …","Collection of methods similar to <code>BuildChildren</code>, but …","Command similar to <code>RemoveParent</code>, but updating the child …","","","","","","","","","","","","","Child entity to add.","<code>Entity</code> whose parent must be removed.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Parent entity to add the child to.","Make this entity parentless while preserving this entity’…","Change this entity’s parent while preserving this entity…","","","","","","","","","","","","","Describe the position of an entity relative to the …","An identity <code>GlobalTransform</code> that maps all points in space …","An identity <code>Transform</code> with no translation, rotation, and a …","Describe the position of an entity. If the entity has a …","Returns the 3d affine transformation matrix as an <code>Affine3A</code>.","","","","","","","","","","","","","","","","","Return the local back vector (Z).","Equivalent to <code>local_z()</code>","","","","","","","","","","","","","","","","","Returns the 3d affine transformation matrix from this …","Returns the 3d affine transformation matrix as a <code>Mat4</code>.","Returns the 3d affine transformation matrix from this …","Returns the transformation as a <code>Transform</code>.","","","","","","","","","","","Return the local down vector (-Y).","Equivalent to <code>-local_y()</code>","","","","","","","","","","","","","","","","","","","Return the local forward vector (-Z).","Equivalent to <code>-local_z()</code>","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Extracts the translation, rotation, and scale from <code>matrix</code>. …","","","Creates a new <code>Transform</code>, with <code>rotation</code>. Translation will …","","","Creates a new <code>Transform</code>, with <code>scale</code>. Translation will be 0 …","Creates a new <code>Transform</code>, with <code>translation</code>. Rotation will …","","","Creates a new <code>Transform</code> at the position <code>(x, y, z)</code>. In 2d, …","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Return the local left vector (-X).","Equivalent to <code>-local_x()</code>","Get the unit vector in the local <code>X</code> direction.","Get the unit vector in the local <code>Y</code> direction.","Get the unit vector in the local <code>Z</code> direction.","Rotates this <code>Transform</code> so that <code>Transform::forward</code> points …","Rotates this <code>Transform</code> so that <code>Transform::forward</code> points …","Returns this <code>Transform</code> with a new rotation so that …","Returns this <code>Transform</code> with a new rotation so that …","","","","","","","","","Multiplies <code>self</code> with <code>transform</code> component by component, …","Multiplies <code>self</code> with <code>transform</code> component by component, …","","","","Get an upper bound of the radius from the given <code>extents</code>.","","","","","","","","","","","","","","","","","","","Returns the <code>Transform</code> <code>self</code> would have if it was a child of …","Return the local right vector (X).","Equivalent to <code>local_x()</code>","Rotates this <code>Transform</code> by the given rotation.","Rotates this <code>Transform</code> around a <code>point</code> in space.","Rotates this <code>Transform</code> around the given <code>axis</code> by <code>angle</code> (in …","Rotates this <code>Transform</code> by the given <code>rotation</code>.","Rotates this <code>Transform</code> around its local <code>axis</code> by <code>angle</code> (in …","Rotates this <code>Transform</code> around its local <code>X</code> axis by <code>angle</code> …","Rotates this <code>Transform</code> around its local <code>Y</code> axis by <code>angle</code> …","Rotates this <code>Transform</code> around its local <code>Z</code> axis by <code>angle</code> …","Rotates this <code>Transform</code> around the <code>X</code> axis by <code>angle</code> (in …","Rotates this <code>Transform</code> around the <code>Y</code> axis by <code>angle</code> (in …","Rotates this <code>Transform</code> around the <code>Z</code> axis by <code>angle</code> (in …","Rotation of the entity.","Scale of the entity.","","","","","","","","","","","Extracts <code>scale</code>, <code>rotation</code> and <code>translation</code> from <code>self</code>.","","Transforms the given <code>point</code>, applying shear, scale, …","Transforms the given <code>point</code>, applying scale, rotation and …","","Translates this <code>Transform</code> around a <code>point</code> in space.","Get the translation as a <code>Vec3</code>.","Position of the entity. In 2d, the last value of the <code>Vec3</code> …","Get the translation as a <code>Vec3A</code>.","","","","","","","","","","","","","Return the local up vector (Y).","Equivalent to <code>local_y()</code>","","","","","Returns this <code>Transform</code> with a new rotation.","Returns this <code>Transform</code> with a new scale.","Returns this <code>Transform</code> with a new translation.","Error returned by <code>TransformHelper::compute_global_transform</code>…","An ancestor is missing. This probably means that your …","The entity or one of its ancestors is missing the <code>Transform</code>…","The entity does not exist.","System parameter for computing up-to-date <code>GlobalTransform</code>s.","","","","","","","","","","","","Computes the <code>GlobalTransform</code> of the given entity from the …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Update <code>GlobalTransform</code> component of entities based on …","Update <code>GlobalTransform</code> component of entities that aren’t …","Independent of all other nodes, but relative to its parent …","Defines how each line is aligned within the flexbox.","How items are aligned according to the cross axis","How this item is aligned according to the cross axis. …","Automatically determine the value based on the context and …","Use the parent node’s <code>AlignItems</code> value to determine how …","Use the parent node’s <code>JustifyItems</code> value to determine …","Track minimum size should be automatically sized","Track maximum size should be automatically sized","Repeat the track to fill available space","Repeat the track to fill available space but collapse any …","The amount of space available to a node in a given axis …","The background color of the node","Items are aligned at the baseline.","Items are aligned at the baseline.","This item will be aligned at the baseline.","This item will be aligned at the baseline.","Blocks interaction","The border color of the UI node.","The calculated clip of the node","Items are aligned at the center.","Items are aligned at the center.","This item will be aligned at the center.","This item will be aligned at the center.","Each line moves towards the center of the cross axis.","Centered along the main axis.","Hide overflowing items.","Flex from top to bottom.","Items are placed by filling each column in turn, adding …","Combines <code>Column</code> with the dense packing algorithm.","Flex from bottom to top.","A node with a <code>ContentSize</code> component is a node where its …","Repeat the track fixed number of times","","","","","","","","","","","","","","","","","","","","","","","The items are packed in their default position as if no …","The items are packed in their default position as if no …","The items are packed in their default position as if no …","The items are packed in their default position as if no …","","The amount of space available is the specified number of …","Defines the text direction.","Defines the layout model used by this node.","","","Items are packed towards the end of the axis.","Items are packed towards the end of the axis.","This item will be aligned with the end of the axis.","This item will be aligned with the end of the axis.","Each line moves towards the end of the cross axis.","Items are packed toward the end of the axis.","","","","","Track maximum size should be sized according to the …","Track maximum size should be sized according to the …","A <code>FixedMeasure</code> is a <code>Measure</code> that ignores all constraints …","Use Flexbox layout model to determine the position of this …","Defines how flexbox items are ordered within a flexbox","Items are packed towards the end of the axis, unless the …","This item will be aligned with the end of the axis, unless …","Each line moves towards the end of the cross axis, unless …","Pushed towards the end, unless the flex direction is …","Items are packed towards the start of the axis, unless the …","This item will be aligned with the start of the axis, …","Each line moves towards the start of the cross axis, …","Pushed towards the start, unless the flex direction is …","Defines if flexbox items appear on a single line or on …","After this label, input interactions with UI entities have …","Describes whether the node should block interactions with …","The dimension as a fraction of the total available grid …","Indicates the order in which this node should be rendered …","Use CSS Grid layout model to determine the position of …","Controls whether grid items are placed row-wise or …","Represents the position of a grid item in a single axis.","Errors that occur when setting constraints for a …","A <code>GridTrack</code> is a Row or Column of a CSS Grid. This struct …","How many times to repeat a repeated grid track","The node has been hovered over","Inherit from parent node.","Describes what type of input interaction has occurred for …","","","","Defines how items are aligned according to the main axis","How items are aligned according to the main axis","How this item is aligned according to the main axis. …","After this label, the ui layout state has been updated","","","Text is written left to right.","Indicates the order in which this node should be rendered …","The amount of space available is indefinite and the node …","Track minimum size should be content sized under a …","Track maximum size should be content sized under a …","","A <code>Measure</code> is used to compute the size of a ui node when …","The amount of space available is indefinite and the node …","Track minimum size should be content sized under a …","Track maximum size should be content sized under a …","","Single line, will overflow if needed.","Describes the size of a UI node","Main query for <code>ui_focus_system</code>","Automatically generated <code>WorldQuery</code> item type for <code>NodeQuery</code>…","Automatically generated <code>WorldQuery</code> type for a read-only …","Automatically generated <code>WorldQuery</code> item type for …","","","Nothing has happened","Use no layout, don’t render this node and its children.","The <code>Outline</code> component adds an outline outside the edge of …","After this label, node outline widths have been updated","Whether to show or hide overflowing items","Whether to show or hide overflowing items","Lets interaction pass through","Set the value as a percentage of its parent node’s …","Track minimum size should be a percentage value","Track maximum size should be a percentage value","The strategy used to position this node","The node has been pressed.","Set this value in logical pixels.","Track minimum size should be a fixed pixel value","Track maximum size should be a fixed pixel value","Relative to all other nodes with the <code>PositionType::Relative</code>…","A component storing the position of the mouse relative to …","","Represents a <em>possibly</em> repeated <code>GridTrack</code>.","Text is written right to left.","Same way as text direction along the main axis.","Items are placed by filling each row in turn, adding new …","Combines <code>Row</code> with the dense packing algorithm.","Opposite way as text direction along the main axis.","","","Each line fills the space it needs, putting the remaining …","Remaining space is distributed around the items.","Each line fills the space it needs, putting the remaining …","Remaining space is distributed between the items.","The gap between the first and last items is exactly the …","Like <code>JustifyContent::SpaceAround</code> but with even spacing …","After this label, the <code>UiStack</code> resource has been updated","Items are packed towards the start of the axis.","Items are packed towards the start of the axis.","This item will be aligned with the start of the axis.","This item will be aligned with the start of the axis.","Each line moves towards the start of the cross axis.","Items are packed toward the start of the axis.","Items are stretched across the whole cross axis.","Items are stretched across the whole main axis.","This item will be stretched across the whole cross axis.","This item will be stretched across the whole main axis.","Each line will stretch to fill the remaining space.","Describes the style of a UI container node","","","","","The 2D texture displayed for this UI node","","","","","","The basic plugin for Bevy UI","A type which is commonly used to define margins, paddings …","The current scale of the UI.","The current UI stack, which contains all UI nodes ordered …","","The label enum labeling the types of systems in the Bevy UI","The atlas sprite to be used in a UI Texture Atlas Node","Set this value in percent of the viewport’s larger …","Set this value in percent of the viewport’s smaller …","Represents the possible value types for layout properties.","","Set this value in percent of the viewport height","Show overflowing items.","Set this value in percent of the viewport width","Multiple lines, if needed.","Same as <code>FlexWrap::Wrap</code> but new lines will appear before …","","","Indicates that this <code>Node</code> entity’s front-to-back ordering …","For Flexbox containers, controls alignment of lines if …","For Flexbox containers, sets default cross-axis alignment …","For Flexbox items, controls cross-axis alignment of the …","Creates a new <code>UiRect</code> where all sides have the same valuehe aspect ratio of the node (defined as <code>width / height</code>)","","Create a grid track which is automatically sized to fit …","Create a repeating set of grid tracks with automatic size","Place the grid item automatically (letting the <code>span</code> …","Creates a new <code>UiRect</code> where both <code>left</code> and <code>right</code> take the …","","","","The amount of space between the margins of a node and its …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>UiRect</code> where <code>bottom</code> takes the given value, …","The value corresponding to the bottom side of the UI rect.","The vertical position of the bottom edge of the node.","","","","Configuration for cameras related to UI.","Clip overflowing items on both axes","","The rect of the clip","Clip overflowing items on the x axis","Clip overflowing items on the y axishe color of the outline.","The size of the gutters between items in a horizontal …","","","","","","","","","","","","","","","","Compute free_space given the passed used_space","Compute the layout for each window entity’s …efines the text direction. For example, English is …","Which layout algorithm to use when laying out this node’…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Place the grid item specifying the <code>end</code> grid line (letting …","Place the grid item specifying the <code>end</code> grid line and how …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","SAFETY: we call <code>fetch</code> for each member that implements <code>Fetch</code>…","SAFETY: we call <code>fetch</code> for each member that implements <code>Fetch</code>…reate a fit-content() grid track with percentage limit","Create a repeating set of fit-content() grid tracks with …","Create a fit-content() grid track with fixed pixel limit","Create a repeating set of fit-content() grid tracks with …","Creates a <code>ContentSize</code> with a <code>Measure</code> that always returns …","Create a grid track with a <code>minmax(0, Nfr)</code> size.","Create a repeating set of grid tracks with a <code>minmax(0, Nfr)</code>…","The initial length of a flexbox in the main axis, before …","Whether a Flexbox container should be a row or a column. …","Defines how much a flexbox item should grow if there’s …","Defines how much a flexbox item should shrink if there’s …","Whether a Flexbox container should wrap its contents onto …","","Whether to flip the sprite in the X axis","Whether the image should be flipped along its x-axis","","Whether to flip the sprite in the Y axis","Whether the image should be flipped along its y-axis","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a grid track with an <code>fr</code> size. Note that this will …","Create a repeating set of grid tracks with an <code>fr</code> size. …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchangedeturns the grid line at which the item should end, or <code>None</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the layout geometry for the taffy node corresponding …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns span for this grid item, or <code>None</code> if not set.","Returns the grid line at which the item should start, or …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Defines the size of implicitly created columns. Columns …","Controls whether automatically placed grid items are …","Defines the size of implicitly created rows. Rows are …","The column in which a grid item starts and how many …","The row in which a grid item starts and how many rows it …","Defines the number of columns a grid has and the sizes of …","Defines the number of rows a grid has and the sizes of …","","","","","The ideal height of the node. <code>height</code> is used when it is …","Creates a new <code>UiRect</code> where <code>left</code> and <code>right</code> take the given …","","","","","","Texture index in the TextureAtlas","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeonvert to Option Definite values become Some(value). …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true for definite values, else false","Compare equality with another AvailableSpace, treating …","Overflow is visible on both axes","Overflow is visible on this axis","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","For Flexbox containers, controls alignment of items in the …","For Flexbox containers, this property has no effect. See …","For Flexbox items, this property has no effect. See …","Creates a new <code>UiRect</code> where <code>left</code> takes the given value, and …","The value corresponding to the left side of the UI rect.","The horizontal position of the left edge of the node.","Returns the logical pixel coordinates of the UI node, …","If passed value is Some then return …","The amount of space around a node outside its border.","","","Create a grid track which is automatically sized to fit …","Create a repeating set of grid tracks with max-content size","The maximum height of the node. <code>max_height</code> is used if it …","","The maximum width of the node. <code>max_width</code> is used if it is …","If passed value is Some then return …","Calculate the size of the node given the constraints.","","","Create a grid track which is automatically sized to fit …","Create a repeating set of grid tracks with min-content size","The minimum height of the node. <code>min_height</code> is used if it …","","The minimum width of the node. <code>min_width</code> is used if it is …","Create a minmax() grid track","Create a repeating set of minmax() grid track","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A helper function to check if the mouse is over the node","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>UiRect</code> from the values specified.","Create a new outline","","","This module contains basic node bundles used to build UIs","Cursor position relative to size and position of the Node.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The amount of space between a node’s outline the edge of …","Return self if definite or a default value","Return self if definite or a the result of the default …","Returns the thickness of the UI node’s outline. If this …","Whether overflowing content should be displayed or clipped.","The amount of space between the edges of a node and its …","Creates a new <code>UiRect</code> from the values specified in …","Create a grid track with a percentage size","Create a repeating set of grid tracks with a percentage …","Returns the physical pixel coordinates of the UI node, …","Returns the size of the node in physical pixels based on …","","","Whether a node should be laid out in-flow with, or …","","Creates a new <code>UiRect</code> from the values specified in logical …","Create a grid track with a fixed pixel size","Create a repeating set of grid tracks with a fixed pixel …emoves each entity from the internal map and then removes …","","","","Create a repetition of a set of tracks","Resolves a <code>Val</code> to its value in logical pixels and returns …","Resolve and update the widths of Node outlines","Creates a new <code>UiRect</code> where <code>right</code> takes the given value, …","The value corresponding to the right side of the UI rect.","The horizontal position of the right edge of the node.","The size of the gutters between items in a vertical …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set a <code>Measure</code> for the UI node entity with this component","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","SAFETY: we call <code>set_archetype</code> for each member that …","SAFETY: we call <code>set_archetype</code> for each member that …","Mutate the item, setting the <code>end</code> grid line","Mutate the item, setting the number of tracks the item …","Mutate the item, setting the <code>start</code> grid line","SAFETY: we call <code>set_table</code> for each member that implements …","SAFETY: we call <code>set_table</code> for each member that implements …","Set the ui node entities without a <code>Parent</code> as children to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The calculated node size as width and height in logical …","","","","","Place the grid item automatically, specifying how many …","","","Place the grid item specifying the <code>start</code> grid line …","Place the grid item specifying <code>start</code> and <code>end</code> grid lines (…","Place the grid item specifying the <code>start</code> grid line and how …","Handle to the texture","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>UiRect</code> where <code>top</code> takes the given value, and …","The value corresponding to the top side of the UI rect.","The vertical position of the top edge of the node.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Removes children from the entity’s taffy node if it …","Removes the measure from the entity’s taffy node if it …he system that sets Interaction for all UI elements based …","Updates the UI’s layout tree, computes the new layout …","","List of UI nodes ordered from back-to-front","The calculated node size as width and height in logical …","Return the definite value. Panic is the value is not …","Return the definite value or a default value","Return the definite value or the result of the default …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This module contains systems that update the UI when …","","","","Update the children of the taffy node corresponding to the …","","","Update the <code>MeasureFunc</code> of the taffy node corresponding to …","Retrieves the Taffy node associated with the given UI node …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>UiRect</code> where <code>top</code> and <code>bottom</code> take the given …","","Show overflowing items on both axes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This module contains the basic building blocks of Bevy’s …","The ideal width of the node. <code>width</code> is used when it is …","The width of the outline.","Flip the image along its x-axis","Flip the image along its y-axis","Whether to show or clip overflowing items on the x axis","Whether to show or clip overflowing items on the y axis","Configuration for cameras related to UI.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Whether to output UI to this camera view.","","","","","","","","","","","Prints a debug representation of the computed layout of …","","","","The amount of space available to a node in a given axis …","A node with a <code>ContentSize</code> component is a node where its …","The amount of space available is the specified number of …","A <code>FixedMeasure</code> is a <code>Measure</code> that ignores all constraints …","The amount of space available is indefinite and the node …","A <code>Measure</code> is used to compute the size of a ui node when …","The amount of space available is indefinite and the node …","Calculate the size of the node given the constraints.","","","A UI node that is a texture atlas sprite","A UI node that is a button","A UI node that is an image","The basic UI node","A UI node that is text","","","","","","","","","","","","","","","","The background color, which serves as a “fill” for …","The background color, which serves as a “fill” for …","The background color, which serves as a “fill” for …","The background color that will fill the containing node","The background color, which serves as a “fill” for …","The color of the Node’s border","The color of the Node’s border","","","","","","","","","","","Marker component that signals this node is a button","The calculated size based on the given image","The calculated size based on the given image","The calculated size based on the given image","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether this node should block interaction with lower nodes","Whether this node should block interaction with lower nodes","Whether this node should block interaction with lower nodes","Whether this node should block interaction with lower nodes","Whether this node should block interaction with lower nodes","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Create a <code>TextBundle</code> from a single section.","Create a <code>TextBundle</code> from a list of sections.","","","","","","The global transform of the node","The global transform of the node","The global transform of the node","The global transform of the node","The global transform of the node","The image of the node","The image of the node","The size of the image in pixels","The size of the image in pixels","Inherited visibility of an entity.","Inherited visibility of an entity.","Inherited visibility of an entity.","Inherited visibility of an entity.","Inherited visibility of an entity.","","","","","","Describes whether and how the button has been interacted …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Describes the logical size of the node","Describes the logical size of the node","Describes the logical size of the node","Describes the logical size of the node","Describes the logical size of the node","","","","","","Styles which control the layout (size and position) of the …","Styles which control the layout (size and position) of the …","Styles which control the layout (size and position) of the …","Styles which control the layout (size and position) of the …","Styles which control the layout (size and position) of the …","Contains the text of the node","Text system flags","Text layout information","A handle to the texture atlas to use for this Ui Node","The descriptor for which sprite to use from the given …","","","","","","","","The transform of the node","The transform of the node","The transform of the node","The transform of the node","The transform of the node","","","","","","","","","","","","","","","","","","","","","Algorithmically-computed indication of whether an entity …","Algorithmically-computed indication of whether an entity …","Algorithmically-computed indication of whether an entity …","Algorithmically-computed indication of whether an entity …","Algorithmically-computed indication of whether an entity …","Describes the visibility properties of the node","Describes the visibility properties of the node","Describes the visibility properties of the node","Describes the visibility properties of the node","Describes the visibility properties of the node","","","","","","Returns this <code>TextBundle</code> with a new <code>BackgroundColor</code>.","Returns this <code>TextBundle</code> with soft wrapping disabled. Hard …","Returns this <code>TextBundle</code> with a new <code>Style</code>.","Returns this <code>TextBundle</code> with a new <code>TextAlignment</code> on <code>Text</code>.","Indicates the depth at which the node should appear in the …","Indicates the depth at which the node should appear in the …","Indicates the depth at which the node should appear in the …","Indicates the depth at which the node should appear in the …","Indicates the depth at which the node should appear in the …","Updates clipping for all nodes","Marker struct for buttons","Used to calculate the size of UI image nodes","Marker struct for labels","Text system flags","","The size of the image’s texture","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Generates a new <code>Measure</code> for a text node on changes to its …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The size of the image’s texture","The size of the image’s texture","Updates the layout and size information for a UI text node …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Updates content size of the node based on the texture …","Updates content size of the node based on the image …","","","","","","","A <code>Hasher</code> for hashing an arbitrary stream of bytes.","A borrowed value","An owned and dynamically typed Future used when you can’…","Much like a <code>Cow</code>, but owned values are Arc-ed to make …","A <code>Duration</code> type to represent a span of time, typically …","A <code>BuildHasher</code> that results in a <code>EntityHasher</code>.","A <code>HashMap</code> pre-configured to use <code>EntityHash</code> hashing.","A <code>HashSet</code> pre-configured to use <code>EntityHash</code> hashing.","A very fast hash that is only designed to work on …","A shortcut alias for <code>hashbrown::hash_map::Entry</code>.","A hasher builder that will create a fixed hasher.","A wrapper for floats that implements <code>Ord</code>, <code>Eq</code>, and <code>Hash</code> …","A <code>HashMap</code> implementing aHash, a high speed keyed hashing …","A <code>HashSet</code> implementing aHash, a high speed keyed hashing …","A pre-hashed value of a specific type. Pre-hashing enables …","","The maximum duration.","The duration of one microsecond.","The duration of one millisecond.","UUID namespace for Domain Name System (DNS).","UUID namespace for ISO Object Identifiers (OIDs).","UUID namespace for Uniform Resource Locators (URLs).","UUID namespace for X.500 Distinguished Names (DNs).","The duration of one nanosecond.","A type which calls a function when dropped. This can be …","An owned <code>Arc</code>-ed value","A <code>BuildHasher</code> that results in a <code>PassHasher</code>.","A no-op hash that only works on <code>u64</code>s. Will panic if …","A <code>HashMap</code> pre-configured to use <code>Hashed</code> keys and <code>PassHash</code> …","Extension methods intended to add functionality to …","Provides a Hasher factory. This is typically used (e.g. by …","The duration of one second.","A stable hash map implementing aHash, a high speed keyed …","A stable hash set implementing aHash, a high speed keyed …","A static value reference. This exists to avoid conversion …","A Universally Unique Identifier (UUID).","A duration of zero time.","","","Helper macro to generate tuple pyramids. Useful to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a borrowed <code>Braced</code> formatter.","Returns a slice of 16 octets containing the value.","","","","","","Returns the four field values of the UUID.","Get a borrowed <code>Hyphenated</code> formatter.","Returns the total number of whole microseconds contained …","Returns the total number of whole milliseconds contained …","Returns the total number of nanoseconds contained by this …","","","","","","Returns the number of <em>whole</em> seconds contained by this …","Returns the number of seconds contained by this <code>Duration</code> …","Returns the number of seconds contained by this <code>Duration</code> …","Get a borrowed <code>Simple</code> formatter.","Returns a 128bit value containing the value.","Returns two 64bit values containing the value.","Get a borrowed <code>Urn</code> formatter.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a <code>Braced</code> formatter.","","","","Constructs a new AHasher with keys based on this …","Checked <code>Duration</code> addition. Computes <code>self + other</code>, …","Checked <code>Duration</code> division. Computes <code>self / other</code>, …","Checked <code>Duration</code> multiplication. Computes <code>self * other</code>, …","Checked <code>Duration</code> subtraction. Computes <code>self - other</code>, …","","","","","","","","","","","","","","","","","Clones into an owned [<code>CowArc&lt;&#39;static&gt;</code>]. If internally a …","","","","","","","","","","","","","","","","","","","","","Calls the <code>tracing::debug!</code> macro on a value.","","","An ergonomic abbreviation for <code>Default::default()</code> to make …","","","","","","","","","Constructs a new AHasher with fixed keys. If <code>std</code> is …","","","Macro to define a new label trait","Macro to define a new label trait","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Like <code>tracing::trace</code>, but conditional on cargo feature …","","","Divide <code>Duration</code> by <code>Duration</code> and return <code>f32</code>.","Divide <code>Duration</code> by <code>Duration</code> and return <code>f64</code>.","Divide <code>Duration</code> by <code>f32</code>.","Divide <code>Duration</code> by <code>f64</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A buffer that can be used for <code>encode_...</code> calls, that is …","","","","A fast impl of <code>PartialEq</code> that first checks that <code>other</code>’s …","","","","","","","","","","","","","","","","","","","","","","","","","","Processes a <code>Result</code> by calling the <code>tracing::error!</code> macro in …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Creates a UUID using the supplied bytes.","Creates a UUID using the supplied bytes in little endian …","Creates a reference to a UUID from a reference to the …","Creates a UUID from four field values.","Creates a UUID from four field values in little-endian …","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of …","","","","","","","","","","","","","","","","Creates a new <code>Duration</code> from the specified number of whole …","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of …","Creates a UUID using the supplied bytes.","Creates a UUID using the supplied bytes in little endian …","","Creates a UUID from a 128bit value.","Creates a UUID from a 128bit value in little-endian order.","Creates a UUID from two 64bit values.","","","","","","","","","","","Utilities for working with <code>Future</code>s.","Create a new <code>RandomState</code> <code>BuildHasher</code> based on the provided …","Tries to get or insert the value for the given <code>key</code> using …","","","Shortens a type name to remove all module paths.","If the UUID is the correct version (v1, v6, or v7) this …","","","Returns the variant of the UUID structure.","Returns the version of the UUID.","Returns the version number of the UUID.","","","The pre-computed hash.","","","","Calculates the hash of a single value. This provides a …","Get a <code>Hyphenated</code> formatter.","Calls the <code>tracing::info!</code> macro on a value.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consumes self and returns the underlying byte value of the …","Converts this into an “owned” value. If internally a …","","","","","","","","","","","","","","","","Tests if the UUID is nil (all zeros).","Returns true if this <code>Duration</code> spans no time.","Traits used by label implementations","","","","","Multiplies <code>Duration</code> by <code>f32</code>.","Multiplies <code>Duration</code> by <code>f64</code>.","","Pre-hashes the given value using the <code>BuildHasher</code> …","Returns an object that will invoke the specified callback …","Create a new <code>RandomState</code> <code>BuildHasher</code> using random keys.","Creates a new <code>Duration</code> from the specified number of whole …","Creates a random UUID.","The ‘nil UUID’ (all zeros).","","","","","","","","","","","","Parses a <code>Uuid</code> from a string of hexadecimal digits with …","","","","","","","","","","","","","","","","","","","","","","","","","","Saturating <code>Duration</code> addition. Computes <code>self + other</code>, …","Saturating <code>Duration</code> multiplication. Computes <code>self * other</code>, …","Saturating <code>Duration</code> subtraction. Computes <code>self - other</code>, …","","","","","","","","Get a <code>Simple</code> formatter.","","","Returns the fractional part of this <code>Duration</code>, in whole …","Returns the fractional part of this <code>Duration</code>, in whole …","Returns the fractional part of this <code>Duration</code>, in …","","","A reimplementation of the currently unstable …","A reimplementation of the currently unstable …","Returns the bytes of the UUID in little-endian order.","Returns the four field values of the UUID in little-endian …","","","","","","","","","","","","","","","","","","","","","","","","Returns a 128bit little-endian value containing the value.","","","","","","","","","","","","","","","","The checked version of <code>from_secs_f32</code>.","The checked version of <code>from_secs_f64</code>.","","","","","","","","","","","","","","Parses a <code>Uuid</code> from a string of hexadecimal digits with …","Parses a <code>Uuid</code> from a string of hexadecimal digits with …","","","","","","","","","","","","","","","","","","Returns the type name of this value’s type.","","","Returns the UUID associated with this value’s type.","","","","","","","","","","","","","","Get a <code>Urn</code> formatter.","","","","","","","","","","","","","","Processes a <code>Result</code> by calling the <code>tracing::warn!</code> macro in …","Build a <code>RandomState</code> from a single key. The provided key …","Allows for explicitly setting the seeds to used. All …","","","","","","","","","","","","Consumes the future, polls it once, and immediately …","The memory allocator returned an error","Error due to the computed capacity exceeding the collection…","Key equivalence trait.","A hash map implemented with quadratic probing and SIMD …","A hash set implemented as a <code>HashMap</code> where the value is <code>()</code>.","Low-level hash table with explicit hashing.","The error type for <code>try_reserve</code> methods.","Returns a reference to the underlying allocator.","Returns a reference to the underlying allocator.","Returns a reference to the underlying allocator.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the intersection of <code>self</code> and <code>rhs</code> as a new …","Returns the union of <code>self</code> and <code>rhs</code> as a new <code>HashSet&lt;T, S&gt;</code>.","Returns the symmetric difference of <code>self</code> and <code>rhs</code> as a new …","","","","","","","","","Returns the number of elements the map can hold without …","Returns the number of elements the set can hold without …","Returns the number of elements the table can hold without …","Clears the map, removing all key-value pairs. Keeps the …","Clears the set, removing all values.","Clears the table, removing all values.","","","","","","","","","","","","","","","","","","Returns <code>true</code> if the set contains a value.","Returns <code>true</code> if the map contains a value for the specified …","","","Creates an empty <code>HashMap&lt;K, V, S, A&gt;</code>, with the <code>Default</code> …","Creates an empty <code>HashSet&lt;T, S&gt;</code> with the <code>Default</code> value for …","","","","","","","","","","","","Visits the values representing the difference, i.e., the …","","","","","Clears the map, returning all key-value pairs as an …","","Clears the set, returning all elements in an iterator.","Clears the set, returning all elements in an iterator.","","","","","","","","Gets the given key’s corresponding entry in the map for …","Gets the given value’s corresponding entry in the set …","Returns an <code>Entry</code> for an entry in the table with the given …","Gets the given key’s corresponding entry by reference in …","","","","Checks if this value is equivalent to the given key.","","","","","","","","","","","","","","","Inserts all new key-values from the iterator to existing …","Inserts all new key-values from the iterator to existing …","Inserts all new key-values from the iterator to existing …","","","Drains elements which are true under the given predicate, …","Drains elements which are true under the given predicate, …","Drains elements which are true under the given predicate, …","Returns a reference to an entry in the table with the …","Returns an <code>OccupiedEntry</code> for an entry in the table with …","Returns a mutable reference to an entry in the table with …","","","","","Returns the argument unchanged.","Examples","Returns the argument unchanged.","","Examples","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Returns a reference to the value corresponding to the key.","Returns a reference to the value in the set, if any, that …","","","Returns the key-value pair corresponding to the supplied …","Returns the key-value pair corresponding to the supplied …","Attempts to get mutable references to <code>N</code> values in the map …","Attempts to get mutable references to <code>N</code> values in the map …","Attempts to get mutable references to <code>N</code> values in the map …","Attempts to get mutable references to <code>N</code> values in the map …","Attempts to get mutable references to <code>N</code> values in the map …","Attempts to get mutable references to <code>N</code> values in the map …","","Returns a mutable reference to the value corresponding to …","Inserts the given <code>value</code> into the set if it is not present, …","Inserts an owned copy of the given <code>value</code> into the set if …","","Inserts a value computed from <code>f</code> into the set if the given …","","","","","A hash map implemented with quadratic probing and SIMD …","A hash set implemented as a <code>HashMap</code> where the value is <code>()</code>.","A hash table implemented with quadratic probing and SIMD …","Returns a reference to the map’s <code>BuildHasher</code>.","Returns a reference to the set’s <code>BuildHasher</code>.","Returns a reference to the value corresponding to the …","","","","","Inserts a key-value pair into the map.","Adds a value to the set.","","Inserts an element into the <code>HashTable</code> with the given hash …","Insert a key-value pair into the map without checking if …","Insert a value the set without checking if the value …","Visits the values representing the intersection, i.e., the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Creates an iterator over the entries of a <code>HashMap</code> in …","Creates a consuming iterator, that is, one that moves each …","Creates an iterator over the entries of a <code>HashMap</code> in …","","Creates a consuming iterator, that is, one that moves each …","","","","Creates a consuming iterator visiting all the keys in …","","","","","","","Creates a consuming iterator visiting all the values in …","Returns <code>true</code> if <code>self</code> has no elements in common with <code>other</code>. …","Returns <code>true</code> if the map contains no elements.","Returns <code>true</code> if the set contains no elements.","Returns <code>true</code> if the set contains no elements.","Returns <code>true</code> if the set is a subset of another, i.e., <code>other</code>…","Returns <code>true</code> if the set is a superset of another, i.e., …","","An iterator visiting all key-value pairs in arbitrary …","An iterator visiting all elements in arbitrary order. The …","An iterator visiting all elements in arbitrary order. The …","An iterator visiting all key-value pairs in arbitrary …","An iterator visiting all elements in arbitrary order, with …","An iterator visiting all keys in arbitrary order. The …","","Returns the number of elements in the map.","Returns the number of elements in the set.","Returns the number of elements in the table.","","","Creates an empty <code>HashMap</code>.","Creates an empty <code>HashSet</code>.","Creates an empty <code>HashTable</code>.","Creates an empty <code>HashMap</code> using the given allocator.","Creates an empty <code>HashSet</code>.","Creates an empty <code>HashTable</code> using the given allocator.","","","","Experimental and unsafe <code>RawTable</code> API. This module is only …","Creates a raw immutable entry builder for the HashMap.","Creates a raw entry builder for the HashMap.","Returns a reference to the <code>RawTable</code> used underneath <code>HashMap</code>…","Returns a reference to the <code>RawTable</code> used underneath <code>HashSet</code>…","Returns a mutable reference to the <code>RawTable</code> used …","Returns a mutable reference to the <code>RawTable</code> used …","","","","","","","","","","","","","","","","","","Removes a key from the map, returning the value at the key …","","Removes a value from the set. Returns whether the value was","Removes a key from the map, returning the stored key and …","Adds a value to the set, replacing the existing value, if …","Reserves capacity for at least <code>additional</code> more elements to …","Reserves capacity for at least <code>additional</code> more elements to …","Reserves capacity for at least <code>additional</code> more elements to …","Retains only the elements specified by the predicate. …","Retains only the elements specified by the predicate.","Retains only the elements specified by the predicate.","","","","","","","Shrinks the capacity of the map with a lower limit. It …","Shrinks the capacity of the set with a lower limit. It …","Shrinks the capacity of the table with a lower limit. It …","Shrinks the capacity of the map as much as possible. It …","Shrinks the capacity of the set as much as possible. It …","Shrinks the capacity of the table as much as possible. It …","Returns the difference of <code>self</code> and <code>rhs</code> as a new …","Visits the values representing the symmetric difference, …","Removes and returns the value in the set, if any, that is …","","","","","","","","","","","","","Tries to insert a key-value pair into the map, and returns …","","","","","Tries to reserve capacity for at least <code>additional</code> more …","Tries to reserve capacity for at least <code>additional</code> more …","Tries to reserve capacity for at least <code>additional</code> more …","","","","","","","","","Returns the type name of this value’s type.","Returns the type name of this value’s type.","","","Returns the UUID associated with this value’s type.","Returns the UUID associated with this value’s type.","Visits the values representing the union, i.e., all the …","","","","","An iterator visiting all values in arbitrary order. The …","An iterator visiting all values mutably in arbitrary order.","","","","","Creates an empty <code>HashMap</code> with the specified capacity.","Creates an empty <code>HashSet</code> with the specified capacity.","Creates an empty <code>HashTable</code> with the specified capacity.","Creates an empty <code>HashMap</code> with the specified capacity, …","Creates an empty <code>HashSet</code> with the specified capacity, using","Creates an empty <code>HashMap</code> with the specified capacity, …","Creates an empty <code>HashSet</code> with the specified capacity, using","Creates an empty <code>HashMap</code> with the specified capacity using …","Creates an empty <code>HashSet</code> with the specified capacity.","Creates an empty <code>HashTable</code> with the specified capacity …","Creates an empty <code>HashMap</code> which will use the given hash …","Creates a new empty hash set which will use the given …","Creates an empty <code>HashMap</code> which will use the given hash …","Creates a new empty hash set which will use the given …","The layout of the allocation request that failed.","Default hasher for <code>HashMap</code>.","A draining iterator over the entries of a <code>HashMap</code> in …","A view into a single entry in a map, which may either be …","A view into a single entry in a map, which may either be …","A draining iterator over entries of a <code>HashMap</code> which don’…","A hash map implemented with quadratic probing and SIMD …","An owning iterator over the entries of a <code>HashMap</code> in …","An owning iterator over the keys of a <code>HashMap</code> in arbitrary …","An owning iterator over the values of a <code>HashMap</code> in …","An iterator over the entries of a <code>HashMap</code> in arbitrary …","A mutable iterator over the entries of a <code>HashMap</code> in …","An iterator over the keys of a <code>HashMap</code> in arbitrary order. …","An occupied entry.","An occupied entry.","An occupied entry.","A view into an occupied entry in a <code>HashMap</code>. It is part of …","A view into an occupied entry in a <code>HashMap</code>. It is part of …","The error returned by <code>try_insert</code> when the key already …","A builder for computing where in a <code>HashMap</code> a key-value …","A builder for computing where in a <code>HashMap</code> a key-value …","A view into a single entry in a map, which may either be …","A view into an occupied entry in a <code>HashMap</code>. It is part of …","A view into a vacant entry in a <code>HashMap</code>. It is part of the …","A vacant entry.","A vacant entry.","A vacant entry.","A view into a vacant entry in a <code>HashMap</code>. It is part of the …","A view into a vacant entry in a <code>HashMap</code>. It is part of the …","An iterator over the values of a <code>HashMap</code> in arbitrary …","A mutable iterator over the values of a <code>HashMap</code> in …","Provides in-place mutable access to an occupied entry …","Provides in-place mutable access to an occupied entry …","Provides in-place mutable access to an occupied entry …","Provides shared access to the key and owned access to the …","Provides shared access to the key and owned access to the …","Provides shared access to the key and owned access to the …he entry in the map that was already occupied.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a <code>RawEntryMut</code> from the given hash and matching …","Access an immutable entry by hash and matching function.","Creates a <code>RawEntryMut</code> from the given key.","Access an immutable entry by key.","Creates a <code>RawEntryMut</code> from the given key and its hash.","Access an immutable entry by a key and its hash.","","","","","","","","","","","","","","","","","","","","","","","Gets a reference to the value in the entry.","Gets a reference to the value in the entry.","Gets a reference to the value in the entry.","Gets a reference to the key and value in the entry.","Gets a mutable reference to the key and value in the entry.","Gets a mutable reference to the value in the entry.","Gets a mutable reference to the value in the entry.","Gets a mutable reference to the value in the entry.","","","","","","","","","","","","","","","","","","","","","","","Sets the value of the entry, and returns a …","Sets the value of the entry, and returns the entry’s old …","Sets the value of the entry with the VacantEntry’s key, …","Sets the value of the entry, and returns an OccupiedEntry.","Sets the value of the entry, and returns the entry’s old …","Sets the value of the entry with the VacantEntry’s key, …","Sets the value of the entry, and returns an …","Sets the value of the entry, and returns the entry’s old …","Sets the value of the entry with the VacantEntryRef’s …","Sets the value of the entry with the VacantEntry’s key, …","Sets the value of the entry, and returns the entry’s old …","Set the value of an entry with a custom hasher function.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts the entry into a mutable reference to the key in …","Take ownership of the key.","Take ownership of the key.","Converts the OccupiedEntry into a mutable reference to the …","Converts the OccupiedEntry into a mutable reference to the …","Converts the OccupiedEntry into a mutable reference to the …","Converts the OccupiedEntryRef into a mutable reference to …","","","","","","","","","","","","","","","","","","","","","","","Gets a reference to the key in the entry.","Returns a reference to this entry’s key.","Gets a reference to the key in the entry.","Gets a reference to the key that would be used when …","Returns a reference to this entry’s key.","Gets a reference to the key in the entry.","Gets a reference to the key that would be used when …","Gets a mutable reference to the key in the entry.","","","","","","","","","","","","","","","","","","","","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the result of …","Ensures a value is in the entry by inserting the result of …","Ensures a value is in the entry by inserting the result of …","Ensures a value is in the entry by inserting, if empty, …","Ensures a value is in the entry by inserting, if empty, …","Takes the value out of the entry, and returns it.","Takes the value out of the entry, and returns it. Keeps …","Takes the value out of the entry, and returns it. Keeps …","Take the ownership of the key and value from the map.","Take the ownership of the key and value from the map. …","Take the ownership of the key and value from the map. …","Replaces the entry, returning the old key and value. The …","Replaces the entry, returning the old key and value. The …","Provides shared access to the key and owned access to the …","Provides shared access to the key and owned access to the …","Provides shared access to the key and owned access to the …","Replaces the key in the hash map with the key used to …","Replaces the key in the hash map with the key used to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The value which was not inserted, because the entry was …","","","","","","","","","","","","","","","","","","","","","","","A lazy iterator producing elements in the difference of …","A draining iterator over the items of a <code>HashSet</code>.","A view into a single entry in a set, which may either be …","A draining iterator over entries of a <code>HashSet</code> which don’…","A hash set implemented as a <code>HashMap</code> where the value is <code>()</code>.","A lazy iterator producing elements in the intersection of …","An owning iterator over the items of a <code>HashSet</code>.","An iterator over the items of a <code>HashSet</code>.","An occupied entry.","A view into an occupied entry in a <code>HashSet</code>. It is part of …","A lazy iterator producing elements in the symmetric …","A lazy iterator producing elements in the union of <code>HashSet</code>…","A vacant entry.","A view into a vacant entry in a <code>HashSet</code>. It is part of the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Returns a reference to this entry’s value.","Gets a reference to the value in the entry.","Gets a reference to the value that would be used when …","","","","","","","","","","","","Sets the value of the entry, and returns an OccupiedEntry.","Sets the value of the entry with the VacantEntry’s value.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Take ownership of the value.","","","","","","","","","","","","Ensures a value is in the entry by inserting if it was …","Takes the value out of the entry, and returns it. Keeps …","Replaces the entry, returning the old value. The new value …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Type representing the absence of an entry, as returned by …","A draining iterator over the items of a <code>HashTable</code>.","A view into a single entry in a table, which may either be …","A draining iterator over entries of a <code>HashTable</code> which don…","Low-level hash table with explicit hashing.","An owning iterator over the entries of a <code>HashTable</code> in …","An iterator over the entries of a <code>HashTable</code> in arbitrary …","A mutable iterator over the entries of a <code>HashTable</code> in …","An occupied entry.","A view into an occupied entry in a <code>HashTable</code>. It is part …","A vacant entry.","A view into a vacant entry in a <code>HashTable</code>. It is part of …","Provides in-place mutable access to an occupied entry …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Gets a reference to the value in the entry.","Gets a mutable reference to the value in the entry.","","","","","","","","","","Sets the value of the entry, replacing any existing value …","Inserts a new element into the table with the hash that …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts the OccupiedEntry into a mutable reference to the …","","","","","","","","","","Converts the OccupiedEntry into a mutable reference to the …","Converts the VacantEntry into a mutable reference to the …","Converts the AbsentEntry into a mutable reference to the …","","","","","","","","","","Ensures a value is in the entry by inserting if it was …","Ensures a value is in the entry by inserting the result of …","Takes the value out of the entry, and returns it along …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A reference to a hash table bucket containing a <code>T</code>.","A reference to an empty bucket into which an can be …","Iterator which consumes elements without freeing the table …","Iterator which consumes a table and returns elements.","Iterator which returns a raw pointer to every full bucket …","Iterator over occupied buckets that could match a given …","A raw hash table with an unsafe API.","Return the information about memory allocated by the table.","Returns a reference to the underlying allocator.","","","","","","","","","","","","","","","","","","","","","","Returns a unique mutable reference to the <code>value</code>.","Acquires the underlying raw pointer <code>*mut T</code> to <code>data</code>.","Returns a shared immutable reference to the <code>value</code>.","","","","","","","","","","","","","","","Returns a pointer to an element in the table.","Returns the index of a bucket from a <code>Bucket</code>.","Returns the number of buckets in the table.","Returns the number of elements the map can hold without …","Removes all elements from the table without freeing the …","Marks all table buckets as empty without dropping their …","","","","","Variant of <code>clone_from</code> to use when a hasher is available.","","","","","","Copies <code>size_of&lt;T&gt;</code> bytes from <code>other</code> to <code>self</code>. The source and …","Returns pointer to one past last <code>data</code> element in the the …","Returns pointer to start of data table.","","","","","","","","","","","","","","","","","","","","","","","Returns an iterator which removes all elements from the …","Returns an iterator which removes all elements from the …","","","","","","","","","","","Erases an element from the table, dropping it in place.","Finds and erases an element from the table, dropping it in …","Searches for an element in the table.","Searches for an element in the table. If the element is …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Gets a reference to an element in the table.","Attempts to get mutable references to <code>N</code> entries in the …","","Gets a mutable reference to an element in the table.","","","","","","","","Inserts a new element into the table, and returns its raw …","Inserts a new element into the table, and returns a …","Inserts a new element into the table in the given slot, …","Inserts a new element into the table, without growing the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns an iterator which consumes all elements from the …","","","","","","","","Checks whether the bucket at <code>index</code> is full.","Returns <code>true</code> if the table contains no elements.","Returns an iterator over every element in the table. It is …","","","Returns an iterator over occupied buckets that could match …","Returns the number of elements in the table.","Creates a new empty hash table without allocating any …","Creates a new empty hash table without allocating any …","","","","","","Refresh the iterator so that it reflects an insertion into …","Refresh the iterator so that it reflects a removal from …","Removes an element from the table, returning it.","Finds and removes an element from the table, returning it.","Temporary removes a bucket, applying the given function to …","Ensures that at least <code>additional</code> items can be inserted …","Shrinks the table to fit <code>max(self.len(), min_size)</code> …","","","","","","","","","","","","","","","","","","","","","Attempts to insert a new element without growing the table …","","","","","","","","Tries to ensure that at least <code>additional</code> items can be …","Attempts to allocate a new hash table with at least enough …","Attempts to allocate a new hash table using the given …","","","","","","","","","","","","","","","","","","","","","","Allocates a new hash table with at least enough capacity …","Allocates a new hash table using the given allocator, with …","An object safe version of <code>Eq</code>. This trait is automatically …","An object safe version of <code>Hash</code>. This trait is …","Casts the type to <code>dyn Any</code>.","Casts the type to <code>dyn Any</code>.","This method tests for <code>self</code> and <code>other</code> values to be equal.","Feeds this value into the given <code>Hasher</code>.","An integer that is known not to equal its maximum value.","An integer that is known not to equal its maximum value.","An integer that is known not to equal its maximum value.","An integer that is known not to equal its maximum value.","An integer that is known not to equal its maximum value.","An integer that is known not to equal its maximum value.","An integer that is known not to equal its maximum value.","An integer that is known not to equal its maximum value.","An integer that is known not to equal its maximum value.","An integer that is known not to equal its maximum value.","An integer that is known not to equal its maximum value.","An integer that is known not to equal its maximum value.","An error type returned when an integer cannot be parsed …","An error type returned when a checked integral type …eturns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value as a primitive type.","Returns the value as a primitive type.","Returns the value as a primitive type.","Returns the value as a primitive type.","Returns the value as a primitive type.","Returns the value as a primitive type.","Returns the value as a primitive type.","Returns the value as a primitive type.","Returns the value as a primitive type.","Returns the value as a primitive type.","Returns the value as a primitive type.","Returns the value as a primitive type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new non-max if the given value is not the maximum","Creates a new non-max if the given value is not the maximum","Creates a new non-max if the given value is not the maximum","Creates a new non-max if the given value is not the maximum","Creates a new non-max if the given value is not the maximum","Creates a new non-max if the given value is not the maximum","Creates a new non-max if the given value is not the maximum","Creates a new non-max if the given value is not the maximum","Creates a new non-max if the given value is not the maximum","Creates a new non-max if the given value is not the maximum","Creates a new non-max if the given value is not the maximum","Creates a new non-max if the given value is not the maximum","Creates a new non-max without checking the value.","Creates a new non-max without checking the value.","Creates a new non-max without checking the value.","Creates a new non-max without checking the value.","Creates a new non-max without checking the value.","Creates a new non-max without checking the value.","Creates a new non-max without checking the value.","Creates a new non-max without checking the value.","Creates a new non-max without checking the value.","Creates a new non-max without checking the value.","Creates a new non-max without checking the value.","Creates a new non-max without checking the value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Marker type for a directed graph.","Edge direction.","Edge direction.","A graph’s edge type determines whether it has directed …","<code>Graph&lt;N, E, Ty, Ix&gt;</code> is a graph datastructure using an …","An <code>Incoming</code> edge is an inbound edge <em>to</em> the current node.","An <code>Incoming</code> edge is an inbound edge <em>to</em> the current node.","Convert an element like <code>(i, j)</code> or <code>(i, j, w)</code> into a triple …","","An <code>Outgoing</code> edge is an outward edge <em>from</em> the current node.","An <code>Outgoing</code> edge is an outward edge <em>from</em> the current node.","Marker type for an undirected graph.","","Add an edge from <code>a</code> to <code>b</code> to the graph, with its associated …","Add a node (also called vertex) with associated data <code>weight</code>…","","Simple adjacency list.","","Graph algorithms.","","","","","","","","","","","","","","","","","","","","","","","Return the current node and edge capacity of the graph.","Remove all nodes and edges","Remove all edges","","","","","","","","","","","","","","","","Lookup if there is an edge from <code>a</code> to <code>b</code>.","Compressed Sparse Row (CSR) is a sparse adjacency matrix …","Graph traits for associated data and graph construction.","","","","","","","","","","Simple graphviz dot file format output.","","","","","","","","","","","","","Return the number of edges in the graph.","Access the source and target nodes for <code>e</code>.","Return an iterator over the edge indices of the graph","Create an iterator over all edges, in indexed order.","","Access the weight for edge <code>e</code>.","","","Access the weight for edge <code>e</code>, mutably.","Return an iterator yielding immutable access to all edge …","Return an iterator yielding mutable access to all edge …","","Return an iterator of all edges of <code>a</code>.","Return an iterator over all the edges connecting <code>a</code> and <code>b</code>.","Return an iterator of all edges of <code>a</code>, in the specified …","","","","","","","Extend the graph from an iterable of edges.","Return an iterator over either the nodes without edges to …","Create a new <code>Graph</code> by mapping nodes and edges. A node or …","Lookup an edge from <code>a</code> to <code>b</code>.","Lookup an edge between <code>a</code> and <code>b</code>, in either direction.","Accessor for data structure internals: the first edge in …","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a new <code>Graph</code> from an iterable of edges.","","","","","","","","","<code>Graph&lt;N, E, Ty, Ix&gt;</code> is a graph datastructure using an …","<code>GraphMap&lt;N, E, Ty&gt;</code> is a graph datastructure where node …","","","","Return <code>0</code> for <code>Outgoing</code> and <code>1</code> for <code>Incoming</code>.","","","Index the <code>Graph</code> by two indices, any combination of node or …","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Convert the graph into either undirected or directed. No …","Convert the graph into a vector of Nodes and a vector of …","","","","","","","","Whether the graph has directed edges or not.","","","Create a new <code>Graph</code> by mapping node and edge weights to new …","<code>MatrixGraph&lt;N, E, Ty, NullN, NullE, Ix&gt;</code> is a graph …","Return an iterator of all nodes with an edge starting from …","","Return an iterator of all neighbors that have an edge …","","Return an iterator of all neighbors that have an edge …","Create a new <code>Graph</code> with directed edges.","Create a new <code>Graph</code> with undirected edges.","Accessor for data structure internals: the next edge for …","","Return the number of nodes (vertices) in the graph.","","","Return an iterator over the node indices of the graph.","","Access the weight for node <code>a</code>.","","Access the weight for node <code>a</code>, mutably.","","Return an iterator yielding immutable access to all node …","Return an iterator yielding mutable access to all node …","","Operators for creating new graphs from existings ones.","Return the opposite <code>Direction</code>.","","Commonly used items.","Access the internal edge array.","Access the internal node array.","Remove an edge and return its edge weight, or <code>None</code> if it …","Remove <code>a</code> from the graph if it exists, and return its …","Reserves capacity for at least <code>additional</code> more edges to be …","Reserves the minimum capacity for exactly <code>additional</code> more …","Reserves the minimum capacity for exactly <code>additional</code> more …","Reserves capacity for at least <code>additional</code> more nodes to be …","","Keep all edges that return <code>true</code> from the <code>visit</code> closure, …","Keep all nodes that return <code>true</code> from the <code>visit</code> closure, …","Reverse the direction of all edges","Shrinks the capacity of the graph as much as possible.","Shrinks the capacity of the underlying edges collection as …","Shrinks the capacity of the underlying nodes collection as …","<code>StableGraph</code> keeps indices stable across removals.","","","","","","","","","","","","","","","","","","","","","","","<code>UnionFind&lt;K&gt;</code> is a disjoint-set data structure.","","","","","Add or update an edge from <code>a</code> to <code>b</code>. If the edge already …","","Graph traits and graph traversals.","","","","","","Create a new <code>Graph</code> with estimated capacity.","","The default integer type for graph indices. <code>u32</code> is the …","Adjacency list edge index type, a pair of integers.","","A reference to an edge of the graph.","An iterator over the <code>EdgeReference</code> of all the edges of the …","Trait for the unsigned integer type used for node and edge …","An adjacency list with labeled edges.","An iterator over the indices of the neighbors of a node.","Adjacency list node index type, a plain integer.","An iterator over all node indices in the graph.","An Iterator over the indices of the outgoing edges from a …","Iterator over the <code>EdgeReference</code> of the outgoing edges from …","A very simple adjacency list with no node or label weights.","Add an edge from <code>a</code> to <code>b</code> to the graph, with its associated …","Add an edge from <code>a</code> to <code>b</code> to the graph, with its associated …","Adds a new node to the list. This allocates a new <code>Vec</code> and …","Adds a new node to the list. This allocates a new <code>Vec</code> and …","Adds a new node to the list by giving its list of …","Adds a new node to the list. This allocates a new <code>Vec</code> and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Removes all nodes and edges from the list.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Lookups whether there is an edge from <code>a</code> to <code>b</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the number of edges in the list","Returns the number of edges in the list","Accesses the source and target of edge <code>e</code>","Returns an iterator over all edge indices of the graph.","","","Accesses the weight of edge <code>e</code>","Accesses the weight of edge <code>e</code>","","","","","","","","","","","","Lookups whether there is an edge from <code>a</code> to <code>b</code>.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an iterator of all nodes with an edge starting …","","Creates a new, empty adjacency list.","","","","","","","","","","Returns the number of nodes in the list","","Returns an iterator over all node indices of the graph.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Updates or adds an edge from <code>a</code> to <code>b</code> to the graph, with its …","","","","","","","","","","","","Creates a new, empty adjacency list tailored for <code>nodes</code> …","","An algorithm error: a cycle was found in the graph.","Workspace for a graph traversal.","A floating-point measure.","Computed <em>matching</em> of the graph.","Associated data that can be used for measures (such as …","An iterator producing a minimum spanning forest of a graph.","An algorithm error: a cycle of negative weights was found …","A reusable state for computing the <em>strongly connected </em>…","Returns an iterator that produces all simple paths from …","","","","","","","","","","","","","","","","","","","","[Generic] A* shortest path algorithm.","Bellman-Ford algorithms.","[Generic] Compute shortest paths from node <code>source</code> to all …","","","","","","","","","","","","","","","","","","","","","","","","","Graph Condense every strongly connected component into a …","[Generic] Return the number of connected components of the …","Returns <code>true</code> if given edge is in the matching, or <code>false</code> …","Returns <code>true</code> if given node is in the matching, or <code>false</code> …","","","","","","","","","","","","","","","","[Generic] Dijkstra’s shortest path algorithm.","Compute dominators of a control-flow graph.","","","","","","","","","","","","","Iterates over all edges from the matching.","","","","[Generic] Find the path of a negative cycle reachable from …","","[Generic] Floyd–Warshall algorithm is an algorithm for …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","[Generic] Finds a feedback arc set: a set of edges in the …","[Generic] Compute a <em>matching</em> using a greedy heuristic.","[Generic] Check if there exists a path starting at <code>from</code> …","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Return <code>true</code> if the graph is bipartite. A graph is …","[Generic] Return <code>true</code> if the input directed graph contains …","[Generic] Return <code>true</code> if the input graph contains a cycle.","Returns <code>true</code> if the number of matched <strong>edges</strong> is 0.","[Generic] Return <code>true</code> if the graphs <code>g0</code> and <code>g1</code> are …","[Generic] Return <code>true</code> if the graphs <code>g0</code> and <code>g1</code> are …","[Generic] Return <code>true</code> if <code>g0</code> is isomorphic to a subgraph of …","[Generic] Return <code>true</code> if <code>g0</code> is isomorphic to a subgraph of …","Returns <code>true</code> if the matching is perfect.","","","[Generic] k’th shortest path algorithm.","[Generic] Compute the <em>strongly connected components</em> using …","Gets the number of matched <strong>edges</strong>.","","Gets the matched counterpart of given node, if there is …","","[Generic] Compute the <em>maximum matching</em> using Gabow’s …","","[Generic] Compute a <em>minimum spanning tree</em> of a graph.","","Creates a new <code>TarjanScc</code>","","Returns the index of the component in which v has been …","Return a node id that participates in the cycle","Iterates over all nodes from the matching.","","","","[Generic] Compute the <em>strongly connected components</em> using …","Renamed to <code>kosaraju_scc</code>.","","Using the VF2 algorithm, examine both syntactic and …","[Generic] Compute the <em>strongly connected components</em> using …","","","","","","","","","","","[Generic] Perform a topological sort of a directed graph.","Compute the transitive reduction and closure of a directed …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","[Generic] A* shortest path algorithm.","","","","","[Generic] Compute shortest paths from node <code>source</code> to all …","","","","","","","","","","","[Generic] Find the path of a negative cycle reachable from …","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","[Generic] Dijkstra’s shortest path algorithm.","Iterator for nodes dominated by a given node.","The dominance relation for some graph and root.","Iterator for a node’s dominators.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Iterate over all of the given node’s dominators …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Get the immediate dominator of the given node.","Iterate over all nodes immediately dominated by the given …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Get the root node used to construct these dominance …","This is an implementation of the engineered “Simple, …","","Iterate over the given node’s strict dominators.","","","","","","","","","","","","","","","","","","","","","","[Generic] Finds a feedback arc set: a set of edges in the …","[Generic] Floyd–Warshall algorithm is an algorithm for …","[Generic] Return <code>true</code> if the graphs <code>g0</code> and <code>g1</code> are …","[Generic] Return <code>true</code> if the graphs <code>g0</code> and <code>g1</code> are …","[Generic] Return <code>true</code> if <code>g0</code> is isomorphic to a subgraph of …","[Generic] Return <code>true</code> if <code>g0</code> is isomorphic to a subgraph of …","Using the VF2 algorithm, examine both syntactic and …","[Generic] k’th shortest path algorithm.","","","Computed <em>matching</em> of the graph.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","[Generic] Compute a <em>matching</em> using a greedy heuristic.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","[Generic] Compute the <em>maximum matching</em> using Gabow’s …","","","","","","","","","","","","","","","Returns an iterator that produces all simple paths from …","Creates a representation of the same graph respecting …","Computes the transitive reduction and closure of a DAG.","Compressed Sparse Row (<code>CSR</code>) is a sparse adjacency matrix …","The default integer type for graph indices. <code>u32</code> is the …","Csr edge index type, a plain integer.","","","","Csr creation error: edges were not in sorted order.","Trait for the unsigned integer type used for node and edge …","","","Csr node index type, a plain integer.","Iterator over all nodes of a graph.","Return <code>true</code> if the edge was added","Adds a new node with the given weight, returning the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Remove all edges","","","","","","","","","","","","","","","","","","","","","","","","","Computes in <strong>O(log |V|)</strong> time.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return an iterator of all edges of <code>a</code>.","Computes in <strong>O(1)</strong> time.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Create a new <code>Csr</code> from a sorted sequence of edges","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return an iterator of all neighbors of <code>a</code>.","Computes in <strong>O(1)</strong> time.","","Create an empty <code>Csr</code>.","","","","","","","","","","","","","Computes in <strong>O(1)</strong> time.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Access the edge’s weight.","","Create a new <code>Csr</code> with <code>n</code> nodes. <code>N</code> must implement <code>Default</code> …","A graph that can be extended with further nodes and edges","A graph that can be created","Access node and edge weights (associated data).","Access node and edge weights mutably.","A graph edge.","A graph element.","Iterator adaptors for iterators of <code>Element</code>.","An iterator that filters graph elements.","Create a graph from an iterator of elements.","A graph node.","Add a new edge. If parallel edges (duplicate) are not …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create an iterator adaptor that filters graph elements.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Add or update the edge from <code>a</code> to <code>b</code>. Return the id of the …","","","","","","","","<code>Dot</code> configuration.","<code>Dot</code> implements output to graphviz .dot format for a graph.","Use indices for edge labels.","Use no edge labels.","Do not print the graph/digraph string.","Use indices for node labels.","Use no node labels.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Create a <code>Dot</code> formatting wrapper with default configuration.","","","","","","","","","","","","","","","Create a <code>Dot</code> formatting wrapper with custom configuration.","The default integer type for graph indices. <code>u32</code> is the …","A <code>Graph</code> with directed edges.","The graph’s edge type.","Edge identifier.","Iterator over the edge indices of a graph.","Reference to a <code>Graph</code> edge.","Iterator over all edges of a graph.","Iterator yielding mutable access to all edge weights.","Iterator over the edges of from or to a node","Iterator over the multiple directed edges connecting a …","An iterator over either the nodes without edges to them or …","<code>Frozen</code> is a graph wrapper.","<code>Graph&lt;N, E, Ty, Ix&gt;</code> is a graph datastructure using an …","A <code>GraphIndex</code> is a node or edge index.","Trait for the unsigned integer type used for node and edge …","Iterator over the neighbors of a node.","The graph’s node type.","Node identifier.","Iterator over the node indices of a graph.","Iterator over all nodes of a graph.","Iterator yielding mutable access to all node weights.","A <code>Graph</code> with undirected edges.","A “walker” object that can be used to step through the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return a “walker” object that can be used to step …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Short version of <code>EdgeIndex::new</code>","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","Index the <code>Graph</code> by two indices, any combination of node or …","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new <code>Frozen</code> from a mutable reference to a graph.","Step to the next edge and its endpoint node in the walk …","","","","","","","","","","","","","","","","Accessor for data structure internals: the first edge in …","Accessor for data structure internals: the next edge for …","","","","","Short version of <code>NodeIndex::new</code>","","","","","","","","","","","","","Return the source node index.","","Return the target node index.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Access the edge’s weight.","","Associated node data.","Associated edge data.","","","A <code>GraphMap</code> with directed edges.","","","<code>GraphMap&lt;N, E, Ty&gt;</code> is a graph datastructure using an …","","","","","A trait group for <code>GraphMap</code>’s node identifier.","","A reference that is hashed and compared by its pointer …","A <code>GraphMap</code> with undirected edges.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Ptr is ordered by pointer value, i.e. an arbitrary but …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Ptr compares by pointer equality, i.e if they point to the …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A <code>MatrixGraph</code> with directed edges.","Iterator over all edges of a graph.","Iterator over the edges of from or to a node","Trait for the unsigned integer type used for node and edge …","<code>MatrixGraph&lt;N, E, Ty, Null&gt;</code> is a graph datastructure using …","Iterator over the neighbors of a node.","Iterator over the node identifiers of a graph.","Node identifier.","Iterator over all nodes of a graph.","<code>NotZero</code> is used to optimize the memory usage of edge …","Wrapper trait for an <code>Option</code>, allowing user-defined structs …","A <code>MatrixGraph</code> with undirected edges.","Base trait for types that can be wrapped in a <code>NotZero</code>.","Add an edge from <code>a</code> to <code>b</code> to the graph, with its associated …","","","Add a node (also called vertex) with associated data <code>weight</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Remove all nodes and edges.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the number of edges in the graph.","","","Access the weight for edge <code>e</code>.","Access the weight for edge <code>e</code>, mutably.","","Return an iterator of all edges of <code>a</code>.","","Return an iterator of all edges of <code>a</code>, in the specified …","Extend the graph from an iterable of edges.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a new <code>MatrixGraph</code> from an iterable of edges.","","","","","","","","","","","Return true if there is an edge between <code>a</code> and <code>b</code>.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return whether the graph has directed edges or not.","Return true if <code>self</code> is equal to the sentinel value.","","Return an iterator of all nodes with an edge starting from …","","Return an iterator of all neighbors that have an edge …","","","Create a new <code>MatrixGraph</code> with directed edges.","Create a new <code>MatrixGraph</code> with undirected edges.","","","","","","","","Return the number of nodes (vertices) in the graph.","","Short version of <code>NodeIndex::new</code> (with Ix = <code>DefaultIx</code>)","","Access the weight for node <code>a</code>.","Access the weight for node <code>a</code>, mutably.","","","Remove the edge from <code>a</code> to <code>b</code> to the graph.","Remove <code>a</code> from the graph.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Update the edge from <code>a</code> to <code>b</code> to the graph, with its …","","","","","","","","","Create a new <code>MatrixGraph</code> with estimated capacity for nodes.","Return the singleton object which can be used as a …","[Generic] complement of the graph","A breadth first search (BFS) of a graph.","Visit nodes of a graph in a depth-first-search (DFS) …","Visit nodes in a depth-first-search (DFS) emitting nodes …","A <code>Graph</code> with directed edges.","A <code>GraphMap</code> with directed edges.","Marker type for a directed graph.","Edge direction.","","Edge identifier.","An edge reference.","<code>Graph&lt;N, E, Ty, Ix&gt;</code> is a graph datastructure using an …","<code>GraphMap&lt;N, E, Ty&gt;</code> is a graph datastructure using an …","An <code>Incoming</code> edge is an inbound edge <em>to</em> the current node.","","Node identifier.","An <code>Outgoing</code> edge is an outward edge <em>from</em> the current node.","A <code>StableGraph</code> with directed edges.","<code>StableGraph&lt;N, E, Ty, Ix&gt;</code> is a graph datastructure using …","A <code>StableGraph</code> with undirected edges.","A <code>Graph</code> with undirected edges.","A <code>GraphMap</code> with undirected edges.","Marker type for an undirected graph.","","","Add an edge connecting <code>a</code> and <code>b</code> to the graph, with …","","Add node <code>n</code> to the graph.","","Return an iterator over all edges of the graph with their …","Return an iterator over all edges of the graph in …","","","","","","","","","","","","","","","","","","","","","Return the current node and edge capacity of the graph.","Remove all nodes and edges","","","","","","","","","","","","","Return <code>true</code> if the edge connecting <code>a</code> with <code>b</code> is contained …","Return <code>true</code> if the node is contained in the graph.","","","","","","","","","","","","","The map of discovered nodes","The map of discovered nodes","The map of discovered nodes","","","","","","","","","","Return the number of edges in the graph.","","","Return a reference to the edge weight connecting <code>a</code> with <code>b</code>, …","Return a mutable reference to the edge weight connecting <code>a</code> …","Return an iterator of target nodes with an edge starting …","","","Return an iterator of target nodes with an edge starting …","Create a new <strong>Dfs</strong> using the graph’s visitor map, and no …","Create a new <code>DfsPostOrder</code> using the graph’s visitor map, …","","The map of finished nodes","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a new <code>GraphMap</code> from an iterable of edges.","","Creates a <code>GraphMap</code> that corresponds to the given <code>Graph</code>.","","","","Create a <code>Dfs</code> from a vector and a visit map","","","","","","","","","The edge’s identifier.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Return a <code>Graph</code> that corresponds to this <code>GraphMap</code>.","","","","","","Whether the graph has directed edges.","Keep the discovered map, but clear the visit stack and …","Keep the discovered and finished map, but clear the visit …","","Return an iterator of all nodes with an edge starting from …","","Return an iterator of all neighbors that have an edge …","Create a new <strong>Dfs</strong>, using the graph’s visitor map, and put …","Create a new <code>DfsPostOrder</code> using the graph’s visitor map, …","Create a new <strong>Bfs</strong>, using the graph’s visitor map, and put …","Create a new <code>GraphMap</code>","Return the next node in the dfs, or <strong>None</strong> if the traversal …","Return the next node in the traversal, or <code>None</code> if the …","Return the next node in the bfs, or <strong>None</strong> if the traversal …","","","Return the number of nodes in the graph.","","","Return an iterator over the nodes of the graph.","","","","","Remove edge from <code>a</code> to <code>b</code> from the graph and return the edge …","Return <code>true</code> if node <code>n</code> was removed.","Clear the visit state","Clear the visit state","","The source node of the edge.","The stack of nodes to visit","The stack of nodes to visit","The queue of nodes to visit","The target node of the edge.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A reference to the weight of the edge.","","Create a new <code>GraphMap</code> with estimated capacity.","The default integer type for graph indices. <code>u32</code> is the …","Edge identifier.","Iterator over the edge indices of a graph.","Reference to a <code>StableGraph</code> edge.","Iterator over all edges of a graph.","Iterator over the edges of from or to a node","Iterator over the multiple directed edges connecting a …","An iterator over either the nodes without edges to them or …","A <code>GraphIndex</code> is a node or edge index.","Trait for the unsigned integer type used for node and edge …","Iterator over the neighbors of a node.","Node identifier.","Iterator over the node indices of a graph.","Iterator over all nodes of a graph.","A <code>StableGraph</code> with directed edges.","<code>StableGraph&lt;N, E, Ty, Ix&gt;</code> is a graph datastructure using …","A <code>StableGraph</code> with undirected edges.","A “walker” object that can be used to step through the …","","Add an edge from <code>a</code> to <code>b</code> to the graph, with its associated …","Add a node (also called vertex) with associated data <code>weight</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the current node and edge capacity of the graph.","Remove all nodes and edges","Remove all edges","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Lookup if there is an edge from <code>a</code> to <code>b</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return a “walker” object that can be used to step …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the number of edges in the graph.","Access the source and target nodes for <code>e</code>.","Short version of <code>EdgeIndex::new</code>","Return an iterator over the edge indices of the graph","Create an iterator over all edges in the graph, in indexed …","","Access the weight for edge <code>e</code>.","Access the weight for edge <code>e</code>, mutably","","Return an iterator yielding immutable access to all edge …","Return an iterator yielding mutable access to all edge …","","Return an iterator of all edges of <code>a</code>.","Return an iterator over all the edges connecting <code>a</code> and <code>b</code>.","","Return an iterator of all edges of <code>a</code>, in the specified …","","An invalid <code>EdgeIndex</code> used to denote absence of an edge, …","","","","","","","","","","","","Extend the graph from an iterable of edges.","Return an iterator over either the nodes without edges to …","Create a new <code>StableGraph</code> by mapping nodes and edges. A …","Lookup an edge from <code>a</code> to <code>b</code>.","Lookup an edge between <code>a</code> and <code>b</code>, in either direction.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a new <code>StableGraph</code> from an iterable of edges.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Index the <code>StableGraph</code> by two indices, any combination of …","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether the graph has directed edges or not.","Create a new <code>StableGraph</code> by mapping node and edge weights …","","","Return an iterator of all nodes with an edge starting from …","","Return an iterator of all neighbors that have an edge …","","Return an iterator of all neighbors that have an edge …","","Create a new <code>StableGraph</code> with directed edges.","","","","Step to the next edge and its endpoint node in the walk …","","","","","","","","","","","","","","","Return an upper bound of the node indices in the graph","","Return the number of nodes (vertices) in the graph.","","Short version of <code>NodeIndex::new</code>","Return an iterator over the node indices of the graph","","","Access the weight for node <code>a</code>.","","Access the weight for node <code>a</code>, mutably.","Return an iterator yielding immutable access to all node …","Return an iterator yielding mutable access to all node …","","","","","","Remove an edge and return its edge weight, or <code>None</code> if it …","Remove <code>a</code> from the graph if it exists, and return its …","","Keep all edges that return <code>true</code> from the <code>visit</code> closure, …","Keep all nodes that return <code>true</code> from the <code>visit</code> closure, …","Reverse the direction of all edges","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Add or update an edge from <code>a</code> to <code>b</code>. If the edge already …","","","","","","","","","","","","","","","","","","Access the edge’s weight.","Create a new <code>StableGraph</code> with estimated capacity.","","<code>UnionFind&lt;K&gt;</code> is a disjoint-set data structure. It tracks …","","","","","","","","","","","","","Returns <code>true</code> if the given elements belong to the same set, …","Return the representative for <code>x</code>.","Return the representative for <code>x</code>.","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","Return a vector mapping each element to its representative.","","Create a new <code>UnionFind</code> of <code>n</code> disjoint sets.","","","","","","Unify the two sets containing <code>x</code> and <code>y</code>.","","","The associated adjacency matrix type","An edge to an already visited node.","A breadth first search (BFS) of a graph.","Stop the DFS traversal and return the provided value.","Continue the DFS traversal as normal.","Control flow for <code>depth_first_search</code> callbacks.","Control flow for callbacks.","A cross or forward edge.","Define associated data for nodes and edges","Visit nodes of a graph in a depth-first-search (DFS) …","A depth first search (DFS) visitor event.","Visit nodes in a depth-first-search (DFS) emitting nodes …","","A graph with a known edge count.","An edge-filtering graph adaptor.","A filtered edges iterator.","A filtered neighbors iterator.","A filtered neighbors-directed iterator.","","edge identifier","The graph’s <code>NodeId</code>s map to indices","An edge reference.","","","The kind of edges in the graph.","","","","A graph filter for edges","A graph filter for nodes.","All edges from a node have been reported.","Create or access the adjacency matrix of a graph.","Base graph trait: defines the associated node identifier …","Edge kind property (directed or undirected edges)","A copyable reference to a graph.","Access to the sequence of the graph’s edges","Access to the edges of each node.","Access to all edges of each node, in the specified …","Access to the neighbors of each node","Access to the neighbors of each node, through incoming or …","Access to the sequence of the graph’s <code>NodeId</code>s.","Access to the sequence of the graph’s nodes","","The associated map type","","","The graph’s <code>NodeId</code>s map to indices, in a range without …","A graph with a known node count.","A node-filtering graph adaptor.","A filtered edges iterator.","A filtered edges iterator.","A filtered neighbors iterator.","A filtered node references iterator.","","","node identifier","","The graph’s <code>NodeId</code>s map to indices","A node reference.","","","","Prune the current node from the DFS traversal. No more …","An edge-reversing graph adaptor.","A reversed edge reference","A reversed edge references iterator.","A reversed edges iterator.","Strictly monotonically increasing event time for a depth …","A topological order traversal for a graph.","An edge of the tree formed by the traversal.","A mapping for storing the visited status for NodeId <code>N</code>.","A graph that can create a map that tracks the visited …","A walker is a traversal state, but where part of the …","A walker and its context wrapped into an iterator.","","","Create the adjacency matrix","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the original, unreversed edge reference.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the value in <code>Control::Break(_)</code>, if present.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A recursive depth first search.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The map of discovered nodes","The map of discovered nodes","The map of discovered nodes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return an upper bound of the edge indices in the graph …","","","","Return the number of edges in the graph.","","","","","","","","","","","","","","","","","","","","","","The map of finished nodes","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create an <code>NodeFiltered</code> adaptor from the closure <code>filter</code>.","Create an <code>EdgeFiltered</code> adaptor from the closure <code>filter</code>.","Convert <code>i</code> to a node index. <code>i</code> must be a valid value in the …","Convert <code>i</code> to an edge index. <code>i</code> must be a valid value in the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The edge’s identifier.","","","Return true to have the edge be part of the graph","Return true to have the node be part of the graph","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume <code>self</code> and return the original, unreversed edge …","Return true if there is an edge from <code>a</code> to <code>b</code>, false …","","","Return whether <code>a</code> has been visited before.","Create an iterator out of the walker and given <code>context</code>.","Return an iterator of the neighbors of node <code>a</code>.","","","","","","","","Create a new <code>Topo</code>, using the graph’s visitor map, and …","Return the next node in the current topological order …","","","","","","","","","","","Return an upper bound of the node indices in the graph …","","","","","","","","","","","","","","","","","","","","","","Clear visited state, and put all initial nodes in the to …","Reset the visitor map (and resize to new size of graph if …","","","","","","","","","","","","","","","","","The source node of the edge.","","The stack of nodes to visit","The stack of nodes to visit","The queue of nodes to visit","The target node of the edge.","","Convert <code>a</code> to an integer index.","Convert <code>a</code> to an integer index.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Mark <code>a</code> as visited.","Create a new visitor map","","","","","","","","","","","","","","","","","","","","","","Advance to the next item","","A reference to the weight of the edge.","","","An ergonomic abbreviation for <code>Default::default()</code> to make …","See <code>Exclusive</code> for stdlib’s upcoming implementation, …","","","","","","","","","","Returns the argument unchanged.","Build a mutable reference to a <code>SyncCell</code> from a mutable …","","Get a reference to this <code>SyncCell</code>’s inner value.","","Calls <code>U::from(self)</code>.","","","","","Construct a new instance of a <code>SyncCell</code> from the given …","For types that implement <code>Sync</code>, get shared access to this …","Deconstruct this <code>SyncCell</code> into its inner value.","","","","","","","<code>UnsafeCell</code>, but <code>Sync</code>.","The core primitive for interior mutability in Rust.","","","","","","","Returns a <code>&amp;[SyncUnsafeCell&lt;T&gt;]</code> from a <code>&amp;SyncUnsafeCell&lt;[T]&gt;</code>.","","","","","Creates an <code>SyncUnsafeCell</code>, with the <code>Default</code> value for T.","Creates an <code>UnsafeCell</code>, with the <code>Default</code> value for T.","","","","","","","","","","","","","Creates a new <code>SyncUnsafeCell&lt;T&gt;</code> containing the given value.","Returns the argument unchanged.","","Returns the argument unchanged.","Creates a new <code>UnsafeCell&lt;T&gt;</code> containing the given value.","","","","","","","","","Returns a <code>&amp;mut SyncUnsafeCell&lt;T&gt;</code> from a <code>&amp;mut T</code>.","Converts from <code>&amp;mut T</code> to <code>&amp;mut UnsafeCell&lt;T&gt;</code>.","","","","","","","Gets a mutable pointer to the wrapped value.","Gets a mutable pointer to the wrapped value.","Returns a mutable reference to the underlying data.","Returns a mutable reference to the underlying data.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Unwraps the value.","Unwraps the value, consuming the cell.","","","Constructs a new instance of <code>SyncUnsafeCell</code> which will …","Constructs a new instance of <code>UnsafeCell</code> which will wrap …","","","Gets a mutable pointer to the wrapped value.","Gets a mutable pointer to the wrapped value. The …","","","","","","","","","","","","","","","Trait implemented by callsites.","The “debug” level.","<code>Dispatch</code> trace data to a <code>Subscriber</code>.","The “error” level.","<code>Event</code>s represent single points in time where something …","The “info” level.","Identifies a span within the context of a subscriber.","Attaches spans to a <code>std::future::Future</code>.","Describes the level of verbosity of a span or event.","Metadata describing a span or event.","A handle representing a span, with the capability to enter …","Trait representing the functions required to collect trace …","The “trace” level.","A field value of an erased type.","The “warn” level.","","","","","","","","","","","","","","","","","","","","","","","Returns the string representation of the <code>Level</code>.","","","","","","","","","","","Callsites represent the source locations from which spans …","Returns an opaque <code>Identifier</code> that uniquely identifies the …","Constructs a new <code>Span</code> as child of the given parent span, …","","","","","","","","","Notifies the subscriber that a span ID has been cloned.","Notifies the subscriber that a span ID has been cloned.","","","","","","","Returns a handle to the span considered by the <code>Subscriber</code> …","Returns a type representing this subscriber’s view of …","Returns a type representing this subscriber’s view of …","Constructs an event at the debug level.","Constructs a span at the debug level.","Returns the current default dispatcher","","","","","","","","","","","Dispatches trace events to <code>Subscriber</code>s.","","","","","","If <code>self</code> is the same type as the provided <code>TypeId</code>, returns …","Returns some reference to this <code>Subscriber</code> value if it is …","Returns some reference to this <code>Subscriber</code> value if it is …","Returns some reference to this <code>[</code>Subscriber…","Returns some reference to this <code>Subscriber</code> value if it is …","Returns some reference to the <code>Subscriber</code> this <code>Dispatch</code> …","Creates a <code>WeakDispatch</code> from this <code>Dispatch</code>.","","","","","","","<strong>This method is deprecated.</strong>","Notifies the subscriber that a span ID has been dropped.","","","","","","Returns true if a span or event with the specified metadata…","Returns true if a span with the specified metadata would be","Checks whether a span or event is enabled based on the …","Records that a span has been entered.","Enters this span, returning a guard that will exit the …","Records that a span has been can_enter.","Enters this span, consuming it and returning a guard that …","","","","","","","","","","","","","","","","","","Constructs an event at the error level.","Constructs a span at the error level.","Events represent single points in time during the …","Records that an <code>Event</code> has occurred.","Records that an <code>Event</code> has occurred.","Constructs a new <code>Event</code>.","Determine if an <code>Event</code> should be recorded.","Tests whether an event with the specified level and target …","Records that a span has been exited.","Records that a span has been exited.","<code>Span</code> and <code>Event</code> key-value data.","Returns a <code>Field</code> for the field with the given <code>name</code>, if one …","Returns the names of the fields on the described span or …","Returns the name of the source code file where the span …","","","","","","","","","Indicates that the span with the given ID has an indirect …","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Constructs a new span ID from the given <code>NonZeroU64</code>.","","","","","","","Constructs a new span ID from the given <code>u64</code>.","","","","","","Returns true if this <code>Span</code> has a field for the given <code>Field</code> …","","","","Returns this span’s <code>Id</code>, if it is enabled.","Instruments this type with the current <code>Span</code>, returning an …","Executes the given function in the context of this span.","Constructs an event at the info level.","Constructs a span at the info level.","","","","","","Attach a span to a <code>std::future::Future</code>.","Instruments this type with the provided <code>Span</code>, returning an …","Instruments a function to create and enter a <code>tracing</code> span …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the span’s ID as a <code>NonZeroU64</code>.","","","","","","Returns the span’s ID as a <code>u64</code>.","Returns <code>true</code> if this <code>Subscriber</code> is the same type as <code>T</code>.","Returns <code>true</code> if this <code>Subscriber</code> is the same type as <code>T</code>.","Returns <code>true</code> if this <code>Subscriber</code> is the same type as <code>T</code>.","Returns <code>true</code> if this <code>Subscriber</code> is the same type as <code>T</code>.","Returns <code>true</code> if this <code>Dispatch</code> forwards to a <code>Subscriber</code> of …","Returns <code>true</code> if this span was disabled by the subscriber …","Returns true if the callsite kind is <code>Event</code>.","Returns <code>true</code> if this span was constructed by <code>Span::none</code> …","Return true if the callsite kind is <code>Span</code>.","","","Returns the level of verbosity of the described span or …","Trace verbosity level filtering.","Returns the line number in the source code file where the …","","","Returns the highest verbosity level that this <code>Subscriber</code> …","Metadata describing trace data.","Returns the metadata associated with the callsite.","Returns this span’s <code>Metadata</code>, if it is enabled.","Statically constructs new span metadata.","Returns the path to the Rust module where the span …","Returns the name of the span.","Constructs a new <code>Span</code> with the given metadata and set of …","Construct new metadata for a span or event, with a name, …","Returns a <code>Dispatch</code> that forwards to the given <code>Subscriber</code>.","Constructs a new disabled span with the given <code>Metadata</code>.","Constructs a new <code>Span</code> as the root of its own trace tree, …","Visit the construction of a new span, returning a new span …","Record the construction of a new span, returning a new ID …","Constructs a new span that is <em>completely disabled</em>.","Returns a new <code>Dispatch</code> that discards events and spans.","","Invoked when this subscriber becomes a <code>Dispatch</code>.","Returns this span, if it was enabled by the current …","","","Visits this value with the given <code>Visitor</code>.","Record a set of values on a span.","Records that the field described by <code>field</code> has the value …","Record a set of values on a span.","Records all the fields in the provided <code>ValueSet</code>.","Adds an indication that <code>span</code> follows from the span with …","Adds an indication that <code>span</code> follows from the span with …","Registers a new callsite with this subscriber, returning …","Registers a new callsite with this subscriber, returning …","Sets the <code>Interest</code> for this callsite.","Spans represent periods of time in which a program was …","Constructs a new span.","Tests whether a span with the specified level and target …","Collects and records trace data.","Returns a string describing the part of the system where …","","","","","","","","","","","Constructs an event at the trace level.","Constructs a span at the trace level.","Notifies the subscriber that a span ID has been dropped, …","Notifies the subscriber that a span ID has been dropped, …","","","","","","","","","","","","","","","","","","","","","","","","","","Constructs an event at the warn level.","Constructs a span at the warn level.","Invokes a function with a reference to this span’s ID …","Trait implemented by callsites.","A default <code>Callsite</code> implementation.","Uniquely identifies a <code>Callsite</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Returns the callsite’s cached <code>Interest</code>, or registers it …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Returns the metadata associated with the callsite.","","Returns a new <code>DefaultCallsite</code> with the specified <code>Metadata</code>.","Clear and reregister interest on every <code>Callsite</code>","Register a new <code>Callsite</code> with the global registry.","Registers this callsite with the global callsite registry.","Sets the <code>Interest</code> for this callsite.","","","","","","","","","","","","","","","A guard that resets the current default dispatcher to the …","<code>Dispatch</code> trace data to a <code>Subscriber</code>.","Returned if setting the global dispatcher fails.","<code>WeakDispatch</code> is a version of <code>Dispatch</code> that holds a …","","","","","","","","","","","","","","Returns the argument unchanged.","","Executes a closure with a reference to this thread’s …","","Calls <code>U::from(self)</code>.","","","","","Sets the dispatch as the default dispatch for the duration …","Sets this dispatch as the global default for the duration …","","","","","","","Attempts to upgrade this <code>WeakDispatch</code> to a <code>Dispatch</code>.","","Sets this dispatch as the default for the duration of a …","<code>Event</code>s represent single points in time where something …","","","","","","Constructs a new <code>Event</code> with the specified metadata and set …","","","Constructs a new <code>Event</code> with the specified metadata and set …","","","Returns an iterator over the set of values on this <code>Event</code>.","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","Returns true if the new event’s parent should be …","","Returns true if the new event should be a root.","Returns metadata describing this <code>Event</code>.","Returns a new <code>Event</code> in the current span, with the …","Returns a new <code>Event</code> as a child of the specified span, with …","","Returns the new event’s explicitly-specified parent, if …","Visits all the fields on this <code>Event</code> with the specified …","","","","","","","","Trait implemented to allow a type to be used as a field …","A <code>Value</code> which serializes as a string using <code>fmt::Debug</code>.","A <code>Value</code> which serializes using <code>fmt::Display</code>.","An empty field.","An opaque key allowing <em>O</em>(1) access to a field in a <code>Span</code>’…","Describes the fields present on a span.","An iterator over a set of fields.","A field value of an erased type.","A set of fields and values for a span.","Visits typed values.","","","","","","","","","","","","","","","","","","","","","","","","","","Attempts to convert <code>&amp;self</code> into a <code>Field</code> with the specified …","","","","","","","","","","","","","","","","","","Returns an <code>Identifier</code> that uniquely identifies the <code>Callsite</code>","Returns an <code>Identifier</code> that uniquely identifies the <code>Callsite</code>","","","","","","","","","","Returns <code>true</code> if <code>self</code> contains the given <code>field</code>.","Wraps a type implementing <code>fmt::Debug</code> as a <code>Value</code> that can be","","","","","","","","","","","","","","","Wraps a type implementing <code>fmt::Display</code> as a <code>Value</code> that can …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the <code>Field</code> named <code>name</code>, or <code>None</code> if no such field …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns whether or not this <code>FieldSet</code> has fields.","Returns true if this <code>ValueSet</code> contains <em>no</em> values.","Returns an iterator over the <code>Field</code>s in this <code>FieldSet</code>.","Returns the number of fields in this <code>FieldSet</code>.","Returns the number of fields in this <code>ValueSet</code> that would …","Returns a string representing the name of the field.","Constructs a new <code>FieldSet</code> with the given array of field …","","Visits this value with the given <code>Visitor</code>.","Visits all the fields in this <code>ValueSet</code> with the provided …","","","","Visit a boolean value.","Visit a value implementing <code>fmt::Debug</code>.","Records a type implementing <code>Error</code>.","Visit a double-precision floating point value.","Visit a signed 128-bit integer value.","Visit a signed 64-bit integer value.","Visit a string value.","Visit an unsigned 128-bit integer value.","Visit an unsigned 64-bit integer value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attaches spans to a <code>std::future::Future</code>.","A <code>Future</code> that has been instrumented with a <code>tracing</code> <code>Span</code>.","A <code>Future</code> that has been instrumented with a <code>tracing</code> …","Extension trait allowing futures to be instrumented with a …","","","","","","","","","","","","","","","","","","","","","Borrows the <code>Dispatch</code> that is entered when this type is …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Instruments this type with the current <code>Span</code>, returning an …","","","Borrows the wrapped type.","Borrows the wrapped type.","Mutably borrows the wrapped type.","Mutably borrows the wrapped type.","Get a pinned mutable reference to the wrapped type.","Get a pinned mutable reference to the wrapped type.","Get a pinned reference to the wrapped type.","Get a pinned reference to the wrapped type.","Instruments this type with the provided <code>Span</code>, returning an …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Consumes the <code>Instrumented</code>, returning the wrapped type.","Consumes the <code>Instrumented</code>, returning the wrapped type.","","","","","Borrows the <code>Span</code> that this type is instrumented by.","Mutably borrows the <code>Span</code> that this type is instrumented by.","","","","","","","","","","","","","","","","","Attaches the current default <code>Subscriber</code> to this type, …","Attaches the provided <code>Subscriber</code> to this type, returning a …","A filter comparable to a verbosity <code>Level</code>.","Indicates that a string could not be parsed to a valid …","The statically configured maximum trace level.","The “debug” level.","The “error” level.","<code>Event</code> callsite","<code>enabled!</code> callsite. <code>Subscriber</code>s can assume this <code>Kind</code> means …","The “info” level.","Indicates whether the callsite is a span or event.","Describes the level of verbosity of a span or event.","A filter comparable to a verbosity <code>Level</code>.","Metadata describing a span or event.","The “off” level.","Returned if parsing a <code>Level</code> fails.","Indicates that a string could not be parsed to a valid …","<code>Span</code> callsite","The “trace” level.","The “warn” level.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a <code>LevelFilter</code> that matches the most verbose <code>Level</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a <code>LevelFilter</code> that enables spans and events with …","","","","","","","","","","","Sets that this <code>Kind</code> is a hint.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Returns the most verbose <code>Level</code> that this filter accepts, …","","","","","Return true if the callsite kind is <code>Event</code>","Return true if the callsite kind is <code>Hint</code>","Return true if the callsite kind is <code>Span</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Trait implemented by types which have a span <code>Id</code>.","Attributes provided to a <code>Subscriber</code> describing a new span …","A guard representing a span which has been entered and is …","An owned version of <code>Entered</code>, a guard representing a span …","Identifies a span within the context of a subscriber.","A set of fields recorded by a span.","A handle representing a span, with the capability to enter …","","","","","","","","","","","","","Returns the <code>Id</code> of the span that <code>self</code> corresponds to, or …","","","","","","","","","Returns <code>Attributes</code> describing a new child span of the …","Returns <code>true</code> if this set of <code>Attributes</code> contains a value …","Returns <code>true</code> if this <code>Record</code> contains a value for the given …","","","","","","","","","","","","","","","","","","","","Exits this span, returning the underlying <code>Span</code>.","Returns the set of all fields defined by this span’s …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns this span’s <code>Id</code>, if it is enabled.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Returns true if the new span’s parent should be …","Returns true if this set of <code>Attributes</code> contains <em>no</em> values.","Returns true if this <code>Record</code> contains <em>no</em> values.","Returns true if the new span should be a root.","Returns the number of fields that would be visited from …","Returns a reference to the new span’s metadata.","Returns <code>Attributes</code> describing a new child span of the …","Constructs a new <code>Record</code> from a <code>ValueSet</code>.","Returns <code>Attributes</code> describing a new span at the root of …","Returns the new span’s explicitly-specified parent, if …","Records all the fields in this set of <code>Attributes</code> with the …","","Records all the fields in this <code>Record</code> with the provided …","","","","","","","","","","","","","","","","","","","","","","Returns a reference to a <code>ValueSet</code> containing any values …","","","","","A guard that resets the current default dispatcher to the …","Indicates a <code>Subscriber</code>’s interest in a particular …","A no-op <code>Subscriber</code>.","Returned if setting the global dispatcher fails.","Trait representing the functions required to collect trace …","Returns an <code>Interest</code> indicating the subscriber is always …","","","","","","","","","","","","","","","","","","","","","","","","","Notifies the subscriber that a span ID has been cloned.","","","Returns a type representing this subscriber’s view of …","","","","","","","","","","","","","","If <code>self</code> is the same type as the provided <code>TypeId</code>, returns …","","","","","","<strong>This method is deprecated.</strong>","Returns true if a span or event with the specified metadata…","","Records that a span has been entered.","","Records that an <code>Event</code> has occurred.","","Determine if an <code>Event</code> should be recorded.","Records that a span has been exited.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns <code>true</code> if the subscriber is always interested in …","Returns <code>true</code> if the subscriber is never interested in …","Returns <code>true</code> if the subscriber is sometimes interested in …","Returns the highest verbosity level that this <code>Subscriber</code> …","Returns an <code>Interest</code> indicating that the subscriber is …","Returns a new <code>NoSubscriber</code>.","Visit the construction of a new span, returning a new span …","","","Invoked when this subscriber becomes a <code>Dispatch</code>.","Record a set of values on a span.","","Adds an indication that <code>span</code> follows from the span with …","","Registers a new callsite with this subscriber, returning …","","Sets the <code>Subscriber</code> as the default for the current thread …","Sets this subscriber as the global default for the …","Returns an <code>Interest</code> indicating the subscriber is sometimes …","","","","","","","","Notifies the subscriber that a span ID has been dropped, …","","","","","","","","","","","","","","","","","","","","","Sets this <code>Subscriber</code> as the default for the current thread …","Indicates that an alias of something is to be created.","Indicates that the user can scroll by dragging the mouse.","The window will always be below <code>WindowLevel::Normal</code> and …","The window will always be on top of <code>WindowLevel::Normal</code> …","Application lifetime events","An arrow. This is the default cursor on most systems.    ","The window’s top-left corner should be placed at the …","Chooses either <code>Opaque</code> or <code>Inherit</code> automatically, depending …","Chooses Immediate -&gt; Mailbox -&gt; Fifo (on web) based on …","Chooses FifoRelaxed -&gt; Fifo based on availability.","Position will be set by the window manager. Bevy will …","The window should appear fullscreen by being borderless …","Indicates that a cell (or set of cells) may be selected.","Window will be centered on the selected monitor.","Indicates that a column can be resized horizontally.","Notifies when text should be inserted into the editor …","Specifies how the alpha channel of the textures should be …","The cursor is confined to the window area.","Indicates that a context menu is available.","Indicates something is to be copied.","A simple crosshair.   ","Uses the current monitor of the window.","Cursor data for a <code>Window</code>.","An event that is sent whenever the user’s cursor enters …","Defines if and how the <code>Cursor</code> is grabbed by a <code>Window</code>.","The icon to display for a <code>Window</code>’s <code>Cursor</code>.","An event that is sent whenever the user’s cursor leaves …","An event reporting that the mouse cursor has moved inside …","Use the dark variant.","The platform-dependent default cursor.","Notifies when the IME was disabled.","Keep application running headless even after closing all …","File is being dropped into a window.","Indicates that an edge of a box is to be moved right …","Notifies when the IME was enabled.","Specifies which <code>Window</code> control buttons should be enabled.","A more direct link to a window entity.","Indicates a bidirectional resize cursor.","Defines the specific conditions the application should …","Presentation frames are kept in a First-In-First-Out queue …","Presentation frames are kept in a First-In-First-Out queue …","Events related to files being dragged and dropped on a …","The window should be in “true”/“legacy” Fullscreen …","Indicates that something can be grabbed.","Indicates that something is grabbed.","A hand (often used to indicate links in web browsers).    ","Help indicator (often rendered as a “?”)    ","File is currently being hovered over a window.","File hovering was canceled.","A Input Method Editor event.","Presentation frames are not queued at all. The moment a …","Uses the monitor with the specified index.","The alpha channel, if it exists, of the textures is …","Stores internal <code>Window</code> state that isn’t directly …","Use the light variant.","The cursor is locked inside the window area to a certain …","Presentation frames are kept in a single-frame queue. …","References a screen monitor.","Indicates something is to be moved.    ","Indicates that an edge of a box is to be moved up (north).","Indicates that an edge of a box is to be moved up and …","Indicates a bidirectional resize cursor.","Indicates that the dragged item cannot be dropped here.","The cursor can freely leave the window.","The default group.","A flattened representation of a window reference for …","Cursor showing that something cannot be done.    ","Indicates a bidirectional resize cursor.","indicates that an edge of a box is to be moved up and left …","Indicates a bidirectional resize cursor.","Close application when all windows are closed","Close application when the primary window is closed","The alpha channel, if it exists, of the textures is …","The alpha channel, if it exists, of the textures is …","The alpha channel, if it exists, of the textures is …","Notifies when a new composing text should be set at the …","Presentation mode for a <code>Window</code>.","This will be linked to the primary window that is created …","Uses the primary monitor of the system.","Marker <code>Component</code> for the window considered the primary …","Progress indicator. Shows that processing is being done.","A wrapper over <code>RawWindowHandle</code> and <code>RawDisplayHandle</code> that …","An event that is sent whenever a window receives a …","An event that indicates all of the application’s windows …","The application was resumed.","Indicates that the row can be resized vertically.","Indicates that an edge of a box is to be moved down …","The cursor indicates that an edge of a box is to be moved …","The window should be in “true”/“legacy” Fullscreen …","The application just started.","The application was suspended.","The cursor indicates that an edge of a box is to be moved …","Indicates text that may be selected or edited.    ","A <code>RawHandleWrapper</code> that cannot be sent across threads.","Indicates vertical text that may be selected or edited.","Indicates that an edge of a box is to be moved left (west).","Program busy indicator.    ","The defining <code>Component</code> for window entities, storing …","An event that indicates a window’s OS-reported scale …","An event that is sent whenever the operating systems …","An event that is sent whenever a window is closed. This …","An event that is sent whenever a new window is created.","An event that is sent whenever a window is destroyed by …","An event that indicates a window has received or lost …","Specifies where a <code>Window</code> should appear relative to other …","Defines the way a <code>Window</code> is displayed.","An event that is sent when a window is repositioned in …","A <code>Plugin</code> that defines an interface for windowing support …","Defines where a <code>Window</code> should be placed on the screen.","Reference to a <code>Window</code>, whether it be a direct link to a …","The size limits on a <code>Window</code>.","A window event that is sent whenever a window’s logical …","Controls the size of a <code>Window</code>","An event that indicates a window’s scale factor has …","The <code>Window</code> theme variant to use.","An event sent when the system theme changes for a window.","The window should take a portion of the screen, using the …","Indicates that the user can zoom in.","Indicates that the user can zoom out.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The window scale factor as reported by the window backend.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The “html canvas” element selector.","Set the window to a specific monitor.","Received character.","Checks if the constraints are valid.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Enables the functionality of the close button.","Close the focused window whenever the escape key (Esc) is …","Close windows in response to <code>WindowCloseRequested</code> (e.g.  …","Whether to close windows when they are requested to be …","","","","","","","","How the alpha channel of textures should be handled while …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The cursor of this window.","The cursor position in this window in logical pixels.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Should the window have decorations enabled?","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Raw handle to the display server.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Specifies which window control buttons should be enabled.","Fetch the entity of this window reference","Window that moved.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether to exit the app when there are no open windows.","Exit the application when there are no open windows.","Exit the application when the primary window has been …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether or not to fit the canvas element’s size to its …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether it was focused (true) or lost focused (false).","Get/set whether the window is focused.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a <code>HasRawWindowHandle</code> + <code>HasRawDisplayHandle</code> impl, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether or not the cursor is locked by or confined within …","","","","","The window’s client area height in logical pixels.","The window’s client area height in logical pixels.","The new logical height of the window.","Set whether or not mouse events within <em>this</em> window are …","What the cursor should look like while inside the window.","Should the window use Input Method Editor?","Sets location of IME candidate box in client area …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Stores internal state that isn’t directly accessible.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codehe maximum height the window can have.","The maximum width the window can have.","Enables the functionality of the maximize button.","The minimum height the window can have.","The minimum width the window can have.","Enables the functionality of the minimize button.","Which fullscreen or windowing mode should be used.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>WindowPosition</code> at a position.","Creates a new <code>WindowResolution</code>.","Normalize the window reference so that it can be compared …","","","","","","","","","","","","","","","","","","","The cursor position in this window in physical pixels.","The window’s client area height in physical pixels.","The window’s client area height in physical pixels.","The window’s client area width in physical pixels.","The window’s client area width in physical pixels.","The cursor position in logical pixels.","Where the window moved to in physical pixels.","Where the window should be placed.","","What presentation mode to give the window.","Whether or not to stop events from propagating out of the …","Settings for the primary windowhould the window be resizable?","The limits of the window’s logical size (found in its …","What resolution the window should have.","The window’s scale factor.","The ratio of physical pixels to logical pixels.","The new scale factor.","The new scale factor.","The scale factor set with …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set the position to a specific point.","","Set the window’s logical resolution.","","","","","","","","","","Set the cursor position in this window in logical pixels.","Setting to true will attempt to maximize the window.","Setting to true will attempt to minimize the window.","Set the cursor position in this window in physical pixels.","Set the window’s physical resolution.","Set the window’s scale factor, this may get overridden …","Set the window’s scale factor, this will be used over …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consumes the current maximize request, if it exists. This …","Consumes the current minimize request, if it exists. This …","The new system theme.","Stores the title of the window.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Should the window be transparentets the window’s visibility.","Whether the cursor is visible or not.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The window’s client area width in logical pixels.","The window’s client area width in logical pixels.","The new logical width of the window.","Window that has changed.","Window that has been created.","Window to close.","Window that has been closed.","Window that has been destroyed.","Window that the cursor moved inside.","Window that the cursor entered.","Window that the cursor left.","Window that received the character.","Window that changed focus.","Window that had it’s scale factor changed.","Window that had it’s scale factor changed by the backend.","Window for which the system theme has changed.","Raw handle to a window.","Where should the window appear relative to other …","Sets a specific theme for the window.","Builder method for adding a scale factor override to the …","Path to the file that was dropped in.","Path to the file that might be dropped in.","Window the file was dropped into.","Window a file is possibly going to be dropped into.","Window that had a canceled file drop.","Cursor begin and end position.","Current value.","Input string","Window that received the event.","Window that received the event.","Window that received the event.","Window that received the event.","Indicates that an alias of something is to be created.","Indicates that the user can scroll by dragging the mouse.","An arrow. This is the default cursor on most systems.    ","The window’s top-left corner should be placed at the …","Position will be set by the window manager. Bevy will …","Indicates that a cell (or set of cells) may be selected.","Window will be centered on the selected monitor.","Indicates that a column can be resized horizontally.","Notifies when text should be inserted into the editor …","Indicates that a context menu is available.","Indicates something is to be copied.","A simple crosshair.   ","Uses the current monitor of the window.","An event that is sent whenever the user’s cursor enters …","The icon to display for a <code>Window</code>’s <code>Cursor</code>.","An event that is sent whenever the user’s cursor leaves …","An event reporting that the mouse cursor has moved inside …","The platform-dependent default cursor.","Notifies when the IME was disabled.","File is being dropped into a window.","Indicates that an edge of a box is to be moved right …","Notifies when the IME was enabled.","Indicates a bidirectional resize cursor.","Events related to files being dragged and dropped on a …","Indicates that something can be grabbed.","Indicates that something is grabbed.","A hand (often used to indicate links in web browsers).    ","Help indicator (often rendered as a “?”)    ","File is currently being hovered over a window.","File hovering was canceled.","A Input Method Editor event.","Uses the monitor with the specified index.","References a screen monitor.","Indicates something is to be moved.    ","Indicates that an edge of a box is to be moved up (north).","Indicates that an edge of a box is to be moved up and …","Indicates a bidirectional resize cursor.","Indicates that the dragged item cannot be dropped here.","Cursor showing that something cannot be done.    ","Indicates a bidirectional resize cursor.","indicates that an edge of a box is to be moved up and left …","Indicates a bidirectional resize cursor.","Notifies when a new composing text should be set at the …","Uses the primary monitor of the system.","Progress indicator. Shows that processing is being done.","An event that is sent whenever a window receives a …","Indicates that the row can be resized vertically.","Indicates that an edge of a box is to be moved down …","The cursor indicates that an edge of a box is to be moved …","The cursor indicates that an edge of a box is to be moved …","Indicates text that may be selected or edited.    ","Indicates vertical text that may be selected or edited.","Indicates that an edge of a box is to be moved left (west).","Program busy indicator.    ","The defining <code>Component</code> for window entities, storing …","An event that is sent when a window is repositioned in …","A <code>Plugin</code> that defines an interface for windowing support …","Defines where a <code>Window</code> should be placed on the screen.","The size limits on a <code>Window</code>.","Indicates that the user can zoom in.","Indicates that the user can zoom out.","The “html canvas” element selector.","Received character.","Whether to close windows when they are requested to be …","How the alpha channel of textures should be handled while …","The cursor of this window.","Should the window have decorations enabled?","Specifies which window control buttons should be enabled.","Window that moved.","Whether to exit the app when there are no open windows.","Whether or not to fit the canvas element’s size to its …","Get/set whether the window is focused.","Should the window use Input Method Editor?","Sets location of IME candidate box in client area …","Stores internal state that isn’t directly accessible.","The maximum height the window can have.","The maximum width the window can have.","The minimum height the window can have.","The minimum width the window can have.","Which fullscreen or windowing mode should be used.","The cursor position in logical pixels.","Where the window moved to in physical pixels.","Where the window should be placed.","What presentation mode to give the window.","Whether or not to stop events from propagating out of the …","Settings for the primary window.","Should the window be resizable?","The limits of the window’s logical size (found in its …","What resolution the window should have.","Stores the title of the window.","Should the window be transparent?","Sets the window’s visibility.","Window that the cursor moved inside.","Window that the cursor entered.","Window that the cursor left.","Window that received the character.","Where should the window appear relative to other …","Sets a specific theme for the window.","Path to the file that was dropped in.","Path to the file that might be dropped in.","Window the file was dropped into.","Window a file is possibly going to be dropped into.","Window that had a canceled file drop.","Cursor begin and end position.","Current value.","Input string","Window that received the event.","Window that received the event.","Window that received the event.","Window that received the event.","The <code>App</code> will update over and over, as fast as it possibly …","The <code>App</code> will update in response to the following, until an …","The <code>App</code> will update in response to the following, until an …","Determines how frequently an <code>App</code> should update.","A <code>Plugin</code> that uses <code>winit</code> to create and manage windows, and …","Settings for the <code>WinitPlugin</code>.","A resource mapping window entities to their <code>winit</code>-backend …","Helpers for mapping window entities to accessibility types","","","","","","","","","","","","","","","","","","","","","","","","","Creates a <code>winit</code> window and associates it with our entity.","","","","","","","","","","","","Default settings for desktop applications.","","","","","","","","","Maps entities to <code>winit</code> window identifiers.","","","","Determines how frequently the application can update when …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Default settings for games.","Gets the “best” videomode from a monitor.","Gets the “best” video mode which fits the given …","Get the winit window that is associated with our entity.","Get the entity associated with the winit window id.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Remove a window from winit.","Controls how the <code>EventLoop</code> is deployed.","Allows the window (and the event loop) to be created on …","","","","","","","","","","","","","","","","","","Determines how frequently the application can update when …","","","","","Returns the current <code>UpdateMode</code>.","","","","","Stores <code>winit</code> windows by window identifier.","The default <code>App::runner</code> for the <code>WinitPlugin</code> plugin.","Maps <code>winit</code> window identifiers to entities.","Compute the physical window position for a given …","The minimum time from the start of one update to the next.","The minimum time from the start of one update to the next.","Maps window entities to their <code>AccessKit</code> <code>Adapter</code>s.","Implements winit-specific <code>AccessKit</code> functionality.","Forwards <code>AccessKit</code> <code>ActionRequest</code>s from winit to an event …","Maps window entities to their respective <code>WinitActionHandler</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,4,6,4,6,4,6,0,0,4,6,4,6,4,6,0,0,4,6,4,6,0,4,6,4,6,0,0,4,6,4,6,0,0,0,0,4,6,0,4,6,4,6,4,6,4,6,4,6,0,0,0,0,0,0,0,0,0,0,0,0,4,6,0,4,6,4,6,4,6,0,4,6,0,4,6,0,0,0,0,0,0,0,0,0,21,16,27,18,19,20,26,21,21,16,27,18,19,20,26,21,16,27,18,19,20,26,21,21,16,27,18,19,20,26,21,16,27,18,19,20,26,21,16,18,19,20,21,18,19,20,21,18,19,20,21,20,18,19,26,16,27,27,18,18,19,19,20,20,26,26,21,16,27,27,18,18,19,19,20,20,26,26,21,16,27,18,19,20,26,21,16,27,18,19,20,26,21,21,21,21,21,21,21,21,21,18,19,21,16,27,18,19,20,20,26,21,20,16,27,18,19,20,26,21,18,19,26,18,19,20,21,16,27,18,19,20,26,21,16,27,18,19,20,26,21,16,27,18,19,20,26,21,16,27,18,19,20,26,21,16,27,18,19,20,26,21,21,16,27,18,19,20,26,21,21,18,19,26,18,19,18,19,20,21,16,27,18,19,20,26,21,16,27,18,19,20,26,21,16,27,18,19,20,26,21,16,27,18,19,20,26,21,16,27,18,19,20,26,21,16,27,18,19,20,26,21,55,0,0,0,0,0,55,55,55,0,55,60,61,55,0,55,55,43,48,57,55,55,55,55,55,64,59,55,0,63,59,59,55,43,55,55,55,55,55,55,55,55,55,0,43,72,66,45,55,55,43,43,0,55,55,60,55,55,55,55,55,62,55,63,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,66,66,55,55,55,55,43,46,46,54,45,55,55,55,43,59,55,55,55,55,58,55,55,55,55,62,55,0,55,55,55,43,56,46,55,55,55,63,55,43,48,55,0,59,64,55,55,55,55,64,57,55,55,55,55,48,55,55,55,55,55,0,62,0,45,55,55,55,55,55,55,62,55,55,55,55,55,55,55,54,55,55,55,0,0,0,0,0,55,55,63,72,40,61,59,0,60,63,45,55,55,55,55,55,55,55,0,61,55,55,59,55,55,55,0,55,43,64,57,0,55,55,55,55,55,55,43,55,43,43,43,43,43,72,43,72,43,55,55,55,55,59,43,72,43,43,72,43,43,43,0,55,66,0,58,55,55,63,55,55,45,55,65,55,65,55,55,55,55,55,55,55,55,55,0,0,0,55,0,0,55,45,55,55,55,55,55,55,57,0,55,62,55,55,0,58,54,45,62,59,55,59,60,55,72,0,56,0,55,66,55,55,55,40,36,42,41,36,37,33,73,37,33,40,40,36,42,41,33,40,40,42,41,69,70,36,37,33,46,40,36,42,41,55,55,43,43,56,56,57,57,58,58,54,54,59,59,60,60,45,45,48,48,61,61,62,62,63,63,64,64,65,65,66,66,39,39,67,67,68,68,69,69,50,37,33,70,70,71,72,73,46,40,36,42,41,55,43,56,57,58,54,59,60,45,48,61,62,63,64,65,66,39,67,68,69,50,37,33,70,71,72,73,46,40,36,42,41,55,43,56,57,58,54,59,60,45,48,61,62,63,64,65,66,39,67,68,69,50,37,33,70,71,72,73,46,55,43,56,57,54,59,60,45,48,61,62,63,64,65,66,39,37,33,37,33,46,40,36,42,41,55,43,56,57,58,54,59,60,45,48,61,62,63,64,65,66,39,67,68,69,50,37,33,70,71,72,73,46,40,36,42,41,55,43,56,57,58,54,59,60,45,48,61,62,63,64,65,66,39,67,68,69,50,37,33,70,71,72,73,37,33,33,68,37,33,37,33,37,33,37,33,37,33,37,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,37,33,46,40,36,42,41,55,43,56,57,58,54,59,60,45,48,61,62,63,64,65,66,39,67,68,69,50,37,33,70,71,72,73,46,40,36,42,41,55,43,56,57,58,54,59,60,45,48,61,62,63,64,65,66,39,67,68,69,50,37,33,70,71,72,73,46,40,36,42,41,55,43,56,57,58,54,59,60,45,48,61,62,63,64,65,66,39,67,68,69,50,37,33,70,71,72,73,55,43,37,33,55,43,36,37,33,37,33,73,46,40,36,42,41,55,50,33,37,33,46,40,36,42,41,55,43,56,57,58,54,59,60,45,48,61,62,63,64,65,66,39,67,68,69,50,37,33,70,71,72,73,46,40,36,42,41,55,43,56,57,58,54,59,60,45,48,61,62,63,64,65,66,39,67,68,69,50,37,33,70,71,72,73,37,33,37,33,67,37,33,46,42,41,42,41,1928,46,40,36,42,41,55,43,56,57,58,54,59,60,45,48,61,62,63,64,65,66,39,67,68,69,50,37,33,70,71,72,73,46,40,36,42,41,55,43,56,57,58,54,59,60,45,48,61,62,63,64,65,66,39,67,68,69,50,37,33,70,71,72,73,55,43,56,57,58,54,59,60,45,48,61,62,63,64,65,66,39,67,68,69,70,55,43,56,57,54,59,60,45,48,61,62,63,64,65,66,39,46,40,36,42,41,55,43,56,57,58,54,59,60,45,48,61,62,63,64,65,66,39,67,68,69,37,33,70,71,72,73,55,55,55,55,43,43,43,43,56,56,56,56,57,57,57,57,58,58,58,58,54,54,54,54,59,59,59,59,60,60,60,60,45,45,45,45,48,48,48,48,61,61,61,61,62,62,62,62,63,63,63,63,64,64,64,64,65,65,65,65,66,66,66,66,39,39,39,39,67,67,67,67,68,68,68,68,69,69,69,69,70,70,70,70,37,33,37,33,46,40,36,42,41,55,43,56,57,58,54,59,60,45,48,61,62,63,64,65,66,39,67,68,69,37,33,70,71,72,73,69,71,37,33,37,33,37,33,37,33,46,40,40,36,36,36,42,42,41,41,55,43,56,57,58,54,59,60,45,48,61,62,63,64,65,66,39,39,67,68,69,50,37,33,70,71,71,72,73,36,36,46,40,36,42,41,55,43,56,57,58,54,59,60,45,48,61,62,63,64,65,66,39,67,68,69,50,37,33,70,71,72,73,46,40,36,42,41,55,50,33,37,33,55,43,56,57,54,59,60,45,48,61,62,63,64,65,66,39,36,42,37,33,37,33,67,37,33,46,40,36,42,41,55,43,56,57,58,54,59,60,45,48,61,62,63,64,65,66,39,67,68,69,50,37,33,70,71,72,73,37,33,36,46,40,36,42,41,55,43,56,57,58,54,59,60,45,48,61,62,63,64,65,66,39,67,68,69,50,37,33,70,71,72,73,46,40,36,42,41,55,43,56,57,58,54,59,60,45,48,61,62,63,64,65,66,39,67,68,69,50,37,33,70,71,72,73,46,40,36,42,41,55,43,56,57,58,54,59,60,45,48,61,62,63,64,65,66,39,67,68,69,50,37,33,70,71,72,73,46,40,36,42,41,55,43,56,57,58,54,59,60,45,48,61,62,63,64,65,66,39,67,68,69,50,37,33,70,71,72,73,46,40,36,42,41,55,43,56,57,58,54,59,60,45,48,61,62,63,64,65,66,39,67,68,69,50,37,33,70,71,72,73,37,33,46,37,33,37,33,37,33,36,37,33,46,37,33,37,33,37,33,37,33,37,33,37,33,37,33,37,33,37,33,46,37,33,37,33,37,33,37,33,37,33,37,33,37,33,37,33,37,33,37,33,37,33,37,33,37,33,37,33,50,46,37,33,36,36,37,33,37,33,36,36,46,46,42,41,46,42,41,37,33,41,46,40,36,42,41,50,33,70,37,33,68,71,46,40,36,42,41,55,50,33,37,33,37,33,37,33,37,33,36,37,33,55,43,37,33,37,33,37,33,37,33,33,33,33,33,33,33,33,33,37,33,33,37,33,37,33,70,46,46,46,37,33,37,33,37,33,37,33,37,33,37,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,36,37,33,37,33,37,33,37,33,40,40,40,36,42,41,40,40,42,41,37,33,37,33,37,33,37,33,37,33,37,33,37,33,37,33,37,33,37,33,37,33,37,33,73,37,33,37,33,37,33,46,40,36,42,41,55,43,56,57,58,54,59,60,45,48,61,62,63,64,65,66,39,67,68,69,50,37,33,70,71,72,73,41,46,40,36,42,41,55,43,56,57,58,54,59,60,45,48,61,62,63,64,65,66,39,67,68,69,50,37,33,70,71,72,73,41,40,42,70,70,37,33,37,33,46,46,71,46,40,36,42,41,55,43,56,57,58,54,59,60,45,48,61,62,63,64,65,66,39,67,68,69,50,37,33,70,71,72,73,46,40,36,42,41,55,43,56,57,58,54,59,60,45,48,61,62,63,64,65,66,39,67,68,69,50,37,33,70,71,72,73,46,40,36,42,41,55,43,56,57,58,54,59,60,45,48,61,62,63,64,65,66,39,67,68,69,50,37,33,70,71,72,73,37,33,36,36,46,40,36,42,41,55,43,56,57,58,54,59,60,45,48,61,62,63,64,65,66,39,67,68,69,50,37,33,70,71,72,73,37,33,37,33,37,33,46,40,36,42,41,55,43,56,57,58,54,59,60,45,48,61,62,63,64,65,66,39,67,68,69,50,37,33,70,71,72,73,36,42,36,36,37,33,40,41,36,36,40,41,36,36,0,0,0,95,0,95,0,95,0,93,93,93,0,93,80,83,0,93,82,81,80,95,83,93,93,82,82,81,81,81,80,80,95,95,83,83,96,93,93,82,82,81,81,80,80,95,95,83,83,96,93,82,81,80,95,83,96,81,93,82,81,80,95,83,93,82,81,80,95,83,80,93,82,81,80,95,83,96,93,82,81,80,95,83,96,96,93,82,81,80,95,93,82,81,80,95,83,93,82,81,80,95,93,82,81,80,95,93,82,81,80,95,83,80,83,83,93,82,81,80,95,83,80,81,80,95,83,96,93,82,81,80,95,83,96,93,82,81,80,95,83,96,93,82,81,80,95,83,96,93,82,81,80,95,83,96,80,81,81,83,81,81,81,81,81,93,82,81,80,95,83,93,82,81,80,95,83,93,82,81,80,95,83,93,82,81,80,95,83,93,82,81,80,95,83,93,82,81,80,93,82,81,80,95,83,96,83,93,82,81,80,95,83,93,82,81,80,95,83,96,81,80,95,83,96,83,80,80,82,81,80,83,82,81,80,83,93,82,81,80,95,83,93,82,81,80,95,83,81,93,95,93,82,81,80,95,83,96,80,93,82,81,80,95,83,96,93,93,82,82,81,81,80,80,95,95,83,83,96,93,82,81,80,95,83,96,93,82,81,80,95,83,96,93,82,81,80,95,83,93,82,81,80,95,83,96,83,83,83,83,93,82,81,80,95,83,82,82,93,82,81,80,95,83,93,82,81,80,95,83,81,80,95,83,96,81,83,83,83,0,93,82,81,80,95,83,93,95,93,82,81,80,95,83,93,82,81,80,95,83,93,82,81,80,95,83,93,82,81,80,95,83,93,82,81,80,95,83,93,82,81,80,95,83,93,82,81,80,95,83,93,82,81,80,95,83,83,83,83,83,83,83,93,82,81,80,95,83,83,83,93,82,81,80,95,83,83,83,83,93,82,81,80,95,93,82,81,80,95,83,96,93,82,81,80,95,83,96,93,82,81,80,95,83,96,93,82,81,80,95,83,96,93,82,81,80,95,83,93,82,81,80,95,83,93,82,81,80,95,83,93,82,81,80,95,83,96,93,95,93,95,93,95,80,93,82,81,80,95,83,96,0,0,0,0,0,93,93,93,0,93,82,82,81,130,0,0,0,0,0,130,0,0,130,0,0,0,132,0,0,0,132,0,0,0,0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,5,5,17,5,17,17,17,17,17,17,17,17,17,17,17,17,136,17,136,128,5,127,127,130,130,131,114,114,115,115,116,116,117,117,118,118,119,119,120,120,121,121,122,122,123,123,124,124,125,125,126,126,135,132,129,17,136,128,5,127,130,131,114,115,116,117,118,119,120,121,122,123,124,125,126,135,132,129,17,136,128,5,127,130,131,114,115,116,117,118,119,120,121,122,123,124,125,126,135,132,129,127,114,114,115,115,116,116,117,117,118,118,119,119,120,120,121,121,122,122,123,123,124,124,125,125,126,126,137,127,114,115,116,117,118,119,120,121,122,123,124,125,126,137,127,17,136,128,5,127,130,131,114,115,116,117,118,119,120,121,122,123,124,125,126,135,132,129,17,136,128,5,127,130,131,114,115,116,117,118,119,120,121,122,123,124,125,126,135,132,129,109,1929,128,5,129,0,17,109,127,130,131,114,115,116,117,118,119,120,121,122,123,124,125,126,132,127,130,131,114,115,116,117,118,119,120,121,122,123,124,125,126,132,127,130,131,114,115,116,117,118,119,120,121,122,123,124,125,126,132,17,17,17,17,131,135,132,129,17,136,128,5,127,130,131,114,115,116,117,118,119,120,121,122,123,124,125,126,135,132,129,17,136,128,5,127,130,131,114,115,116,117,118,119,120,121,122,123,124,125,126,135,132,129,5,17,136,128,109,5,127,130,131,114,115,116,117,118,119,120,121,122,123,124,125,126,135,132,129,109,109,109,17,136,128,5,127,130,131,114,115,116,117,118,119,120,121,122,123,124,125,126,135,132,129,114,115,116,117,118,119,120,121,122,123,124,125,126,127,130,114,115,116,117,118,119,120,121,122,123,124,125,126,127,114,114,115,115,116,116,117,117,118,118,119,119,120,120,121,121,122,122,123,123,124,124,125,125,126,126,17,17,5,127,130,114,115,116,117,118,119,120,121,122,123,124,125,126,127,127,127,127,130,130,130,130,114,114,114,114,115,115,115,115,116,116,116,116,117,117,117,117,118,118,118,118,119,119,119,119,120,120,120,120,121,121,121,121,122,122,122,122,123,123,123,123,124,124,124,124,125,125,125,125,126,126,126,126,136,17,109,5,17,136,127,130,131,114,115,116,117,118,119,120,121,122,123,124,125,126,135,132,17,136,128,5,127,130,131,114,115,116,117,118,119,120,121,122,123,124,125,126,135,132,129,17,136,128,5,127,130,131,114,115,116,117,118,119,120,121,122,123,124,125,126,135,132,129,17,131,135,132,129,17,17,17,17,17,127,114,115,116,117,118,119,120,121,122,123,124,125,126,17,136,128,5,127,130,131,114,115,116,117,118,119,120,121,122,123,124,125,126,135,132,129,17,17,17,17,17,135,17,17,17,17,136,128,5,127,130,131,114,115,116,117,118,119,120,121,122,123,124,125,126,135,132,129,17,136,128,5,127,130,131,114,115,116,117,118,119,120,121,122,123,124,125,126,135,132,129,128,5,127,130,131,114,115,116,117,118,119,120,121,122,123,124,125,126,135,132,129,17,136,128,5,127,130,131,114,115,116,117,118,119,120,121,122,123,124,125,126,135,132,129,17,136,128,5,127,130,131,114,115,116,117,118,119,120,121,122,123,124,125,126,135,132,129,109,17,109,135,17,17,109,1929,17,136,17,131,135,132,129,17,0,17,109,17,17,17,17,17,17,17,17,17,136,129,114,129,129,17,1929,5,17,17,5,17,17,127,130,131,114,115,116,117,118,119,120,121,122,123,124,125,126,132,17,136,128,5,127,130,131,114,115,116,117,118,119,120,121,122,123,124,125,126,135,132,129,17,136,128,5,127,130,131,114,115,116,117,118,119,120,121,122,123,124,125,126,135,132,129,17,136,128,5,127,130,131,114,115,116,117,118,119,120,121,122,123,124,125,126,135,132,129,17,136,128,5,137,127,127,130,131,114,115,116,117,118,119,120,121,122,123,124,125,126,135,132,129,17,136,128,5,127,130,131,114,115,116,117,118,119,120,121,122,123,124,125,126,135,132,129,17,17,136,128,5,127,130,131,114,115,116,117,118,119,120,121,122,123,124,125,126,135,132,129,17,1930,0,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,109,1929,109,109,109,17,109,1929,109,17,1929,17,166,0,144,0,0,0,0,0,0,0,0,0,0,197,197,0,0,0,196,197,0,0,0,0,0,0,0,197,197,161,0,197,0,196,186,186,0,0,144,179,180,181,0,161,161,101,0,189,196,0,0,0,179,180,181,0,0,166,179,180,181,196,197,0,197,0,196,197,189,197,196,197,189,166,179,180,181,0,1931,178,0,0,0,0,166,197,144,84,154,0,0,1931,178,0,0,0,161,101,0,84,154,87,153,155,156,156,159,84,161,162,216,158,168,156,174,1931,159,159,159,87,194,166,166,217,177,188,84,84,84,154,154,161,161,161,101,101,195,186,196,162,162,162,189,189,153,169,155,178,178,179,179,180,180,181,181,197,198,199,182,182,163,163,164,164,216,158,168,156,174,1931,159,159,87,194,166,217,177,188,84,84,154,161,161,101,195,186,196,162,162,189,153,169,155,178,179,180,181,197,198,199,182,163,164,216,158,168,156,174,1931,159,87,194,166,217,177,188,84,154,161,101,195,186,196,162,189,153,169,155,178,179,180,181,197,198,199,182,163,164,159,84,154,161,101,162,182,163,163,164,164,163,164,159,84,161,162,159,84,161,162,87,156,1932,168,169,1932,187,168,217,153,156,216,158,168,156,174,1931,159,87,194,166,217,177,188,84,154,161,101,195,186,196,162,189,153,169,155,178,179,180,181,197,198,199,182,163,164,216,158,168,156,174,1931,159,87,194,166,217,177,188,84,154,161,101,195,186,196,162,189,153,169,155,178,179,180,181,197,198,199,182,163,164,1933,1934,174,1933,1933,159,166,177,84,154,161,101,162,153,169,155,178,179,180,181,182,163,164,159,84,161,159,166,177,84,154,161,101,162,153,169,155,178,179,180,181,182,163,164,162,159,166,177,84,154,161,101,162,153,169,155,178,179,180,181,182,163,164,159,84,161,162,84,154,1934,159,84,161,179,180,181,159,84,161,179,180,181,84,179,180,181,87,159,217,188,84,161,162,162,174,87,84,161,162,1932,195,216,158,168,156,174,1931,159,87,194,166,217,177,188,84,154,161,101,195,186,196,162,189,153,169,155,178,179,180,181,197,198,199,182,163,164,216,158,168,156,174,1931,159,87,194,166,217,177,188,84,154,161,101,195,186,196,162,189,153,169,155,178,179,180,181,197,198,199,182,163,164,159,162,1932,216,158,168,187,156,174,1931,159,87,194,166,217,177,188,84,154,161,101,195,186,196,162,189,153,169,155,178,179,180,181,197,198,199,182,163,164,169,187,187,187,216,158,168,156,174,1931,159,87,194,166,217,177,188,188,84,154,161,101,195,186,196,162,189,153,169,155,178,179,180,181,197,198,199,182,163,164,182,163,164,159,166,84,154,161,101,162,189,178,179,180,181,182,163,164,159,84,154,161,101,162,182,163,163,164,164,0,0,159,166,84,154,161,101,162,189,178,179,180,181,182,163,164,159,159,159,159,166,166,166,166,84,84,84,84,154,154,154,154,161,161,161,161,101,101,101,101,162,162,162,162,189,189,189,189,178,178,178,178,179,179,179,179,180,180,180,180,181,181,181,181,182,182,182,182,163,163,163,163,164,164,164,164,159,162,195,144,1932,161,84,159,84,161,159,84,161,159,84,161,159,84,161,159,84,161,174,156,1934,159,194,194,166,188,84,154,161,161,101,101,195,195,186,186,196,196,162,162,189,189,155,178,179,180,181,197,197,198,198,199,199,182,163,164,216,158,158,158,168,168,156,174,1931,159,87,194,166,217,177,188,84,154,161,161,161,161,161,161,161,161,161,101,101,101,101,195,186,186,196,196,196,196,196,196,162,162,162,162,162,162,162,189,153,169,155,178,179,180,181,197,197,197,197,197,197,198,199,182,163,164,84,179,180,181,158,158,158,158,162,159,84,161,162,216,158,168,156,174,1931,159,87,194,166,217,177,188,84,154,161,101,195,186,196,162,189,153,169,155,178,179,180,181,197,198,199,182,163,164,158,153,169,174,87,84,161,162,168,87,153,155,155,84,179,180,181,159,159,162,155,87,155,155,155,156,168,155,155,87,153,87,155,155,155,159,84,161,162,155,159,84,161,162,153,0,153,217,156,159,84,154,161,101,162,182,163,164,84,154,87,153,194,195,186,196,189,197,198,199,84,161,216,158,168,156,174,1931,159,87,194,166,217,177,188,84,154,161,101,195,186,196,162,189,153,169,155,178,179,180,181,197,198,199,182,163,164,1935,1935,187,87,217,153,216,158,168,156,174,1931,159,87,194,166,217,177,188,84,154,161,101,195,186,196,162,189,153,169,155,178,179,180,181,197,198,199,182,163,164,216,158,168,156,174,1931,159,159,87,194,166,217,177,188,84,84,154,161,161,101,195,186,196,162,162,189,153,169,155,178,179,180,181,197,198,199,182,163,164,216,158,168,156,174,1931,159,87,194,166,217,177,188,84,154,161,101,195,186,196,162,189,153,169,155,178,179,180,181,197,198,199,182,163,164,216,158,168,156,174,1931,159,87,194,166,217,177,188,84,154,161,101,195,186,196,162,189,153,169,155,178,179,180,181,197,198,199,182,163,164,182,216,162,159,84,161,162,216,158,168,156,174,1931,159,87,194,166,217,177,188,84,154,161,101,195,186,196,162,189,153,169,155,178,179,180,181,197,198,199,182,163,164,182,161,0,187,166,87,153,166,166,166,84,84,87,159,84,161,168,87,162,162,156,87,153,144,1932,156,155,156,155,0,0,155,156,155,0,154,155,174,159,217,188,84,161,162,159,84,161,155,158,216,174,87,84,161,162,162,162,159,84,161,179,180,181,156,84,154,162,0,1935,155,174,0,1933,156,1933,1933,1933,1933,155,159,217,188,84,161,162,84,161,162,159,217,188,84,161,162,159,84,161,162,159,84,161,162,159,84,161,162,159,84,161,162,159,217,188,84,161,162,159,217,188,84,161,162,159,217,188,84,161,162,155,1935,1935,1935,1935,155,155,87,153,162,87,177,0,159,162,159,84,161,162,1935,159,217,188,84,161,162,186,196,162,197,1933,168,162,159,166,177,84,154,161,101,162,153,169,155,178,179,180,181,182,163,164,216,158,168,156,174,1931,159,87,194,166,217,177,188,84,154,161,101,195,186,196,162,189,153,169,155,178,179,180,181,197,198,199,182,163,164,194,161,101,195,186,196,162,189,197,198,199,87,216,158,168,156,174,1931,159,87,194,166,217,177,188,84,154,161,101,195,186,196,162,189,153,169,155,178,179,180,181,197,198,199,182,163,164,216,158,168,156,174,1931,159,87,194,166,217,177,188,84,154,161,101,195,186,196,162,189,153,169,155,178,179,180,181,197,198,199,182,163,164,162,1932,216,158,168,156,174,1931,159,87,194,166,217,177,188,84,154,154,161,101,101,195,186,196,162,189,153,169,155,178,179,180,181,197,198,199,182,163,164,159,217,188,84,161,162,159,84,161,162,1932,162,159,217,188,84,161,162,154,101,169,154,101,154,101,84,161,216,158,168,156,174,1931,159,87,194,166,217,177,188,84,154,161,101,195,186,196,162,189,153,169,155,178,179,180,181,197,198,199,182,163,164,84,161,84,161,84,161,1936,217,84,154,216,158,168,156,174,1931,159,87,194,166,217,177,188,84,154,161,101,195,186,196,162,189,153,169,155,178,179,180,181,197,198,199,182,163,164,174,84,162,162,162,1934,1934,1934,1937,1938,1939,1940,1941,1941,1942,1943,1944,1945,1946,1944,1943,1946,1943,1945,1947,1948,1946,1943,1949,1949,1950,1950,235,235,235,0,0,0,0,0,0,0,0,0,0,0,0,0,146,205,239,0,0,0,0,235,235,146,205,0,0,235,235,235,235,235,235,235,0,0,213,219,241,146,146,147,234,206,237,204,238,205,239,235,235,213,219,241,146,147,234,206,237,204,238,205,239,235,213,219,241,146,147,234,206,237,204,238,205,239,235,146,146,213,219,241,146,147,234,206,237,204,238,205,239,235,213,219,241,146,147,234,206,237,204,238,205,239,235,1933,1934,213,147,234,1933,1933,146,235,146,235,146,146,235,1934,146,147,234,213,219,241,146,147,234,206,237,204,238,205,239,235,213,219,241,146,147,234,206,237,204,238,205,239,235,213,219,241,146,147,234,206,237,204,238,205,239,235,213,219,241,146,147,234,206,237,204,238,205,239,235,146,235,146,0,146,235,146,146,146,146,235,235,235,235,213,0,1934,146,146,206,206,237,237,204,204,238,238,205,205,239,239,235,213,219,241,146,146,146,146,146,147,234,206,237,204,238,205,205,239,239,235,213,219,241,146,147,234,206,237,204,238,205,239,235,146,147,234,213,219,0,219,213,213,213,234,146,213,219,206,237,204,238,205,239,213,219,241,146,147,234,206,237,204,238,205,239,235,234,234,213,219,241,146,147,234,206,237,204,238,205,239,235,213,219,241,146,147,234,206,237,204,238,205,239,235,213,219,241,146,147,234,206,237,204,238,205,239,235,213,219,241,146,147,234,206,237,204,238,205,239,235,146,213,219,241,146,147,234,206,237,204,238,205,239,235,244,219,219,219,219,0,241,146,146,147,234,147,241,213,213,147,147,213,147,0,244,1933,244,1933,244,244,1933,1933,1933,213,147,245,245,245,245,245,245,245,213,205,239,1933,146,235,213,219,241,146,147,234,206,237,204,238,205,239,235,146,206,237,204,238,205,239,213,219,241,146,147,234,206,237,204,238,205,239,235,213,219,241,146,147,234,206,237,204,238,205,239,235,213,219,241,146,147,234,206,237,204,238,205,239,235,213,219,241,146,147,234,206,237,204,238,205,239,235,213,219,241,146,147,234,206,237,204,238,205,239,235,147,147,147,147,147,147,147,245,1934,1934,245,245,245,1934,213,147,1951,1952,1953,1954,1952,1953,1954,1951,0,0,0,256,246,256,246,256,246,256,246,256,246,246,256,246,256,246,256,246,256,246,256,246,256,246,246,256,246,246,246,256,246,256,246,256,246,256,246,256,246,256,246,246,256,246,256,246,256,246,256,246,256,246,256,246,0,0,0,258,257,260,258,257,260,258,257,260,258,257,260,258,257,260,258,257,260,258,257,260,258,257,260,258,257,260,258,257,260,258,257,260,257,258,257,260,258,257,260,258,257,260,258,257,260,258,257,260,258,257,260,257,258,257,260,257,257,257,260,260,260,260,260,260,260,257,258,257,260,258,257,260,258,257,260,258,257,260,258,257,260,258,257,260,260,260,0,0,262,263,262,263,262,263,262,263,262,263,262,262,262,262,263,262,263,262,263,262,263,262,263,262,263,262,263,262,263,262,263,262,263,262,263,262,263,262,262,263,262,262,262,262,262,263,262,263,262,263,262,263,262,263,262,263,0,0,0,0,247,0,247,266,248,264,265,247,266,248,264,265,247,266,248,264,265,247,266,248,264,265,247,266,248,264,265,247,248,264,265,247,248,264,265,247,248,264,265,247,248,264,266,248,264,265,247,266,248,264,265,247,266,248,264,265,247,266,248,264,265,247,248,265,247,266,248,264,265,247,247,247,247,266,248,264,265,247,248,264,248,248,248,248,266,248,264,265,247,248,248,248,248,266,248,264,265,247,266,248,264,265,247,266,248,264,265,247,266,248,264,265,247,266,248,264,265,247,264,248,248,264,248,266,264,264,264,264,248,264,265,247,266,248,264,265,247,266,248,264,265,247,266,248,264,265,247,266,248,264,265,247,266,248,264,265,247,266,248,264,265,247,0,0,267,268,267,268,267,268,267,268,267,268,267,268,267,268,267,268,267,268,267,268,267,268,267,268,267,268,267,268,267,268,267,268,267,268,267,267,268,267,267,267,267,268,267,268,267,268,267,268,267,268,267,268,0,0,0,0,0,0,273,275,273,275,0,0,273,275,0,0,0,0,271,273,269,270,274,275,276,271,273,269,270,274,275,276,271,273,269,270,274,275,276,271,274,271,273,269,270,274,275,276,271,273,269,270,274,275,276,269,270,269,270,269,270,269,271,273,269,270,274,275,276,271,273,269,270,274,275,276,271,271,273,269,270,274,275,276,185,277,271,273,269,270,274,275,276,185,277,185,277,185,277,271,273,269,270,274,275,276,271,273,269,270,274,275,276,269,270,271,273,269,270,274,275,276,271,273,269,270,274,275,276,269,269,270,269,271,273,269,270,274,275,276,271,273,269,270,274,275,276,271,273,269,270,274,275,276,271,273,269,270,274,275,276,271,273,269,270,274,275,276,271,273,269,270,274,275,276,185,277,185,271,185,271,271,271,269,270,269,185,271,271,276,185,271,185,271,271,273,269,270,274,275,276,269,270,271,273,269,270,274,275,276,271,273,269,270,274,275,276,271,273,269,270,274,275,276,271,273,269,270,274,275,276,271,273,269,270,274,275,276,271,273,269,270,274,275,276,1955,1956,1955,1956,1957,1958,166,0,0,0,0,0,0,0,0,0,0,161,166,166,1931,166,84,154,1931,0,161,84,154,174,1935,1935,174,1935,174,1935,1935,1935,1935,1935,174,1937,1938,1939,1940,1941,1941,1942,291,0,0,291,291,291,291,290,290,289,0,291,282,292,292,283,0,283,287,287,0,0,0,291,291,291,291,291,291,282,145,0,0,0,0,0,281,282,283,0,0,0,291,0,289,145,281,290,289,0,292,0,291,1959,294,279,240,287,288,289,290,285,291,280,281,282,282,286,283,283,292,1959,294,279,240,287,288,289,290,285,291,280,281,282,286,283,292,1959,294,279,240,287,288,289,290,285,291,280,281,282,286,283,292,279,1959,294,279,240,287,288,289,290,285,291,280,281,282,286,283,292,1959,294,279,240,287,288,289,290,285,291,280,281,282,286,283,292,280,281,282,283,280,281,282,283,280,281,282,283,285,286,295,294,1959,294,279,240,287,288,289,290,285,291,280,281,282,286,283,292,1959,294,279,240,287,288,289,290,285,291,280,281,282,286,283,292,285,295,294,1959,294,279,240,287,288,289,290,285,291,280,281,282,286,283,292,1959,294,279,240,287,288,289,290,285,291,280,281,282,286,283,292,282,283,282,283,282,282,282,282,283,283,283,283,285,287,287,288,288,289,289,290,290,291,291,281,282,286,292,292,1959,294,294,294,279,240,287,287,288,289,289,290,285,291,291,291,291,291,291,291,291,291,280,281,282,286,283,292,294,294,294,294,1959,294,279,240,287,288,289,290,285,291,280,281,282,286,283,292,294,285,286,280,280,280,280,287,288,289,290,291,292,1959,294,279,240,287,288,289,290,285,291,280,281,282,286,283,292,1959,294,279,240,287,288,289,290,285,291,280,281,282,286,283,292,1959,294,279,240,287,288,289,290,285,291,280,281,282,286,283,292,1959,294,279,240,287,288,289,290,285,291,280,281,282,286,283,292,1959,294,279,240,287,288,289,290,285,291,280,281,282,286,283,292,1959,294,279,240,287,288,289,290,285,291,280,281,282,286,283,292,280,279,285,240,280,285,286,145,295,294,294,280,280,285,285,280,280,287,289,291,292,280,280,280,281,282,283,1959,294,279,240,287,288,289,290,285,291,280,281,282,286,283,292,287,288,289,290,291,292,1959,294,279,240,287,288,289,290,285,291,280,281,282,286,283,292,1959,294,279,240,287,288,289,290,285,291,280,281,282,286,283,292,1959,294,279,240,287,288,289,290,285,291,280,281,282,286,283,292,1959,294,279,240,287,288,289,290,285,291,280,281,282,286,283,292,1959,294,279,240,287,288,289,290,285,291,280,281,282,286,283,292,240,240,240,1960,1961,1962,1960,1961,1962,293,0,0,293,293,0,293,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,293,1963,296,296,296,296,1963,296,296,302,0,0,0,0,0,0,0,0,0,305,0,312,312,304,1964,1964,0,1964,305,304,305,304,0,0,0,0,305,302,304,0,1964,0,0,0,0,0,0,1964,1965,310,322,302,303,304,305,306,307,308,313,298,314,309,316,317,300,302,303,304,305,306,307,308,313,298,314,309,316,317,300,302,303,304,305,306,307,308,313,298,314,309,316,317,300,298,314,298,314,309,302,303,304,305,306,307,308,313,298,314,309,316,317,300,302,303,304,305,306,307,308,313,298,314,309,316,317,300,322,300,298,322,302,303,304,305,306,307,308,298,309,302,303,304,305,306,307,308,298,309,302,303,304,305,306,307,308,298,309,305,306,316,317,322,298,309,322,312,298,309,302,303,305,306,307,308,313,314,300,314,322,302,303,303,304,305,306,307,308,313,298,314,309,316,317,300,302,303,303,304,305,306,307,308,313,298,314,309,316,317,300,314,302,303,304,305,306,307,308,313,298,314,309,316,317,300,302,303,304,305,306,307,308,313,298,314,309,316,317,300,309,1966,316,317,298,298,314,314,322,302,303,304,305,306,298,309,309,302,303,304,305,306,307,308,313,298,314,309,316,317,300,305,306,316,317,1964,302,303,304,305,306,307,308,313,298,314,309,316,317,300,302,303,305,306,307,308,313,314,300,303,305,306,316,317,300,322,322,302,303,304,305,306,307,308,313,298,314,309,316,317,300,298,309,302,303,304,305,306,307,308,313,298,314,309,316,317,300,302,303,304,305,306,307,308,313,298,314,309,316,317,300,302,303,304,305,306,307,308,313,298,314,309,316,317,300,302,303,304,305,306,307,308,313,298,314,309,316,317,300,302,303,304,305,306,307,308,313,298,314,309,316,317,300,1966,316,317,306,310,314,314,322,322,322,305,298,309,1964,303,306,307,308,309,308,302,302,302,303,305,306,307,308,313,314,300,322,1966,316,317,305,305,322,1966,316,317,0,298,309,298,309,298,309,298,309,298,309,322,322,306,322,310,317,317,317,1966,316,317,1966,316,317,313,298,309,322,322,313,305,300,1966,316,317,322,305,1966,316,317,322,322,322,1964,302,303,304,305,306,307,308,298,309,1964,302,303,304,305,306,307,308,313,298,314,309,316,317,300,1964,1966,322,302,303,304,305,306,307,308,313,298,314,309,316,317,300,302,303,304,305,306,307,308,313,298,314,309,316,317,300,302,303,304,305,306,307,308,313,298,314,314,309,316,317,300,298,309,314,298,309,302,303,304,305,306,307,308,313,298,314,309,316,317,300,298,309,1966,316,317,305,307,302,303,304,305,306,307,308,313,298,314,309,316,317,300,305,305,305,310,0,0,0,0,0,0,312,312,0,0,0,0,0,0,298,312,309,1966,309,1966,306,305,1966,305,1966,306,1966,1966,313,313,305,1966,305,1966,1966,1966,305,307,0,0,0,0,0,0,0,0,0,0,0,0,0,0,90,1967,90,90,90,1968,345,340,341,335,336,342,337,1967,90,90,1968,345,340,341,335,336,342,337,1967,90,1968,345,340,341,335,336,342,337,90,90,90,90,90,341,1967,90,1968,345,340,341,335,336,342,337,1967,90,1968,345,340,341,335,336,342,337,335,336,337,0,0,90,340,341,342,90,90,340,341,342,90,340,341,342,90,90,90,90,341,90,341,90,90,341,335,336,342,337,1967,90,90,1968,345,340,341,335,336,342,337,1967,90,1968,345,340,341,335,336,342,337,90,1967,90,1968,345,340,341,335,336,342,337,1967,90,1968,345,340,341,335,336,342,337,90,90,1968,345,90,90,90,90,90,90,1968,90,90,90,90,90,1968,90,90,345,340,341,1967,90,90,90,1968,345,340,341,335,336,342,337,90,90,1967,90,1968,345,340,341,335,336,342,337,90,341,335,336,342,337,90,90,90,90,90,90,1967,90,1968,345,340,341,335,336,342,337,1968,1968,1967,90,1968,345,340,341,335,336,342,337,1967,90,90,1968,345,340,341,335,336,342,337,90,1968,345,340,341,335,336,342,337,1967,90,1968,345,340,341,335,336,342,337,90,1967,90,1968,345,340,341,335,336,342,337,341,90,1968,340,341,340,341,90,90,1968,345,90,90,90,341,335,336,342,337,90,340,0,90,90,90,90,90,90,90,90,90,90,90,90,1968,1968,90,1968,336,90,340,341,342,1967,90,1968,345,340,341,335,336,342,337,90,1967,90,1968,345,340,341,335,336,342,337,1967,90,1968,345,340,341,335,336,342,337,1967,90,1968,345,340,341,335,336,342,337,90,90,90,1967,90,1968,345,340,341,335,336,342,337,1968,1968,0,1967,90,1968,345,340,341,335,336,342,337,341,1969,0,0,0,0,0,0,341,341,1968,341,341,341,1968,336,0,0,356,355,356,355,356,355,0,0,356,355,356,355,355,0,356,356,356,356,0,0,0,355,0,356,355,356,355,356,355,356,355,0,356,356,355,356,356,355,355,0,0,356,356,355,356,355,356,355,356,355,356,355,356,355,0,355,0,0,356,356,355,0,356,355,356,355,356,355,356,355,0,356,355,0,0,0,0,357,359,358,358,357,359,358,357,359,358,358,358,357,359,358,357,359,358,357,358,358,358,357,359,358,357,359,358,357,359,358,357,359,358,358,358,358,358,358,358,358,357,357,359,358,357,359,358,359,358,357,359,358,357,359,358,357,359,358,357,359,358,357,359,358,357,359,358,359,358,359,359,358,358,357,359,358,357,359,358,357,359,358,357,359,358,357,359,358,357,359,358,363,0,0,0,0,363,361,361,361,361,362,363,364,361,361,362,362,363,363,363,364,361,361,362,362,363,363,364,361,362,363,363,361,362,363,361,362,363,364,361,362,363,364,361,362,363,364,361,362,363,361,362,363,361,362,363,361,362,363,361,362,363,361,361,361,362,363,361,362,364,361,362,363,364,361,362,363,364,361,362,363,364,361,362,363,363,363,363,363,363,363,363,361,361,362,363,361,362,363,361,362,363,361,362,363,361,362,363,364,364,361,362,363,361,361,362,363,364,361,362,363,361,362,361,361,362,361,362,361,362,363,361,362,363,363,361,363,364,361,362,363,361,364,361,362,363,364,361,361,362,362,363,363,364,361,362,363,364,361,362,363,361,362,363,364,361,362,363,361,362,363,361,361,361,362,363,361,362,363,361,362,361,361,362,363,363,361,362,363,361,362,363,361,362,363,361,362,363,361,362,363,361,362,363,361,362,363,361,362,363,361,362,363,361,362,363,362,362,361,362,363,364,361,362,363,364,361,362,363,364,361,362,363,364,361,362,363,361,362,363,361,362,363,361,362,363,364,361,362,363,363,363,363,364,361,362,363,0,0,365,365,365,365,366,365,365,366,366,365,365,366,366,365,366,365,366,365,366,365,366,365,366,365,366,365,366,365,366,365,366,365,366,365,366,365,366,365,366,366,365,366,366,365,365,366,365,366,365,366,365,366,365,365,365,366,365,366,365,366,365,366,365,366,365,366,365,366,366,366,365,366,365,366,365,365,366,365,366,365,365,366,366,365,366,365,366,365,366,365,366,365,366,365,366,365,365,366,365,366,365,365,366,365,366,365,366,365,366,365,366,365,366,365,366,365,366,365,365,366,365,366,365,366,365,366,365,366,365,366,365,366,365,366,365,366,365,366,365,366,365,365,365,365,366,0,0,0,0,0,0,0,369,370,373,371,369,369,370,370,374,372,372,1970,373,371,369,369,370,370,374,372,1970,373,371,369,370,374,372,1970,372,369,370,369,370,373,371,369,370,374,372,1970,373,371,369,370,374,372,1970,371,369,370,372,369,370,369,370,372,369,370,372,369,370,369,370,1970,369,370,369,370,369,373,371,369,370,374,372,1970,373,371,369,370,374,372,1970,373,371,369,370,374,372,1970,373,371,369,370,374,372,1970,372,372,369,372,372,372,372,372,369,369,370,369,369,369,370,369,370,371,373,371,369,370,374,372,1970,369,370,1970,369,370,373,371,369,370,374,372,1970,373,369,370,374,369,370,1970,369,370,369,370,369,370,369,370,372,373,371,369,370,374,372,1970,373,371,369,370,374,372,1970,373,371,369,369,370,370,374,372,1970,373,371,369,370,374,372,1970,373,371,369,370,374,372,1970,369,370,373,371,369,370,374,372,1970,369,370,369,370,369,369,370,369,370,369,370,369,370,369,370,369,370,369,370,369,370,369,370,369,370,373,369,370,369,369,370,374,369,370,372,373,371,369,370,374,372,1970,373,371,369,370,374,372,1970,373,371,369,370,374,372,1970,373,371,369,370,374,372,1970,369,370,369,370,369,370,373,371,369,370,374,372,1970,373,373,371,369,370,374,372,1970,0,0,0,0,0,0,378,389,381,379,378,378,383,389,381,379,378,378,383,389,381,379,378,383,378,378,379,379,379,389,381,379,378,383,389,381,379,378,383,381,379,383,383,383,378,378,378,378,378,378,378,378,383,378,383,389,381,379,378,383,389,381,379,378,383,389,381,379,378,383,379,379,389,381,379,378,383,379,379,379,379,379,378,0,378,378,378,378,378,389,381,379,378,383,378,378,389,381,379,378,383,389,378,383,383,378,378,378,378,378,383,0,389,381,379,378,383,389,381,379,378,383,389,381,379,378,378,383,389,381,379,378,383,389,381,379,378,383,378,389,381,379,378,383,378,378,378,383,378,383,379,383,378,378,378,378,378,378,378,378,378,389,378,378,379,379,379,378,389,381,379,378,383,383,383,389,381,379,378,383,389,381,379,378,383,389,381,379,378,383,378,378,378,389,381,379,378,383,389,383,389,381,379,378,383,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,392,0,392,0,0,0,0,390,391,392,396,393,394,395,390,390,391,391,392,392,398,399,400,396,393,394,395,390,390,391,391,392,392,398,399,400,396,393,394,395,390,391,392,398,399,400,390,391,392,390,391,392,393,394,395,393,394,395,393,394,395,396,393,394,395,390,391,392,398,399,400,396,393,394,395,390,391,392,398,399,400,396,393,394,395,398,398,398,0,390,390,391,392,390,391,392,390,391,392,390,391,392,390,391,392,398,390,390,391,392,390,392,398,399,400,390,390,396,393,394,395,390,391,392,398,399,400,396,393,394,395,390,391,392,398,399,400,392,393,394,395,398,396,393,394,395,390,391,392,398,399,400,393,394,395,393,394,395,396,393,394,395,390,391,392,398,399,400,393,394,395,393,394,395,393,394,395,393,394,395,393,394,395,392,0,390,0,390,391,392,390,392,390,392,390,391,392,390,391,392,392,396,393,394,395,390,391,391,392,398,399,400,390,390,391,392,396,393,394,395,390,391,392,398,399,400,390,392,398,399,400,398,390,390,391,390,391,390,391,392,390,391,392,398,0,392,396,393,394,395,390,391,392,398,399,400,396,393,394,395,390,391,392,398,399,400,396,393,394,395,390,390,391,391,392,392,398,399,400,396,393,394,395,390,391,392,398,399,400,396,393,394,395,390,391,392,398,399,400,390,391,392,396,393,394,395,390,391,392,398,399,400,390,391,392,390,391,392,390,392,390,392,398,399,400,393,394,395,0,0,398,390,391,392,392,390,391,392,390,391,392,390,391,392,390,391,392,390,391,392,390,391,392,390,391,392,390,391,392,399,400,392,390,391,392,390,391,392,393,394,395,393,394,395,390,391,392,396,393,394,395,390,391,392,398,399,400,398,398,396,393,394,395,390,391,392,398,399,400,396,393,394,395,390,391,392,398,399,400,396,393,394,395,390,391,392,398,399,400,390,391,392,390,391,392,390,391,392,396,393,394,395,390,391,392,398,399,400,392,392,392,398,396,393,394,395,390,391,392,398,399,400,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,404,405,404,405,404,405,404,405,404,405,404,405,404,405,404,405,404,405,0,404,405,404,405,404,405,404,405,404,405,404,405,404,405,404,405,404,405,404,405,404,405,404,405,404,405,404,405,404,405,404,405,404,405,404,405,404,405,404,405,0,404,405,404,405,404,405,404,405,404,405,404,405,404,405,404,405,404,405,0,0,0,0,407,406,407,1971,406,407,1971,406,407,1971,406,407,1971,406,407,1971,406,1971,407,406,407,1971,406,407,1971,406,407,1971,406,407,1971,406,406,407,1971,1971,406,407,1971,407,1971,406,407,1971,406,407,1971,406,407,1971,406,407,1971,406,407,1971,406,407,1971,407,407,1971,406,407,1971,406,407,1971,406,407,1971,406,407,1971,406,407,1971,406,407,1971,0,408,408,408,408,408,408,408,408,408,408,408,408,408,408,408,408,408,408,408,408,408,408,408,408,408,408,408,0,0,0,0,409,410,411,409,409,410,411,409,409,410,411,409,409,409,410,411,409,410,411,409,410,409,409,409,409,409,409,409,411,409,411,410,411,409,410,411,409,410,411,409,410,411,409,409,409,409,409,409,410,410,411,409,409,409,410,411,409,411,409,409,409,409,409,409,410,411,409,410,411,409,410,411,409,409,410,411,409,410,411,409,409,410,411,409,409,411,409,411,409,411,409,409,409,409,409,409,409,409,409,409,409,409,411,409,409,410,411,409,410,411,409,410,411,409,410,411,409,409,409,409,410,411,409,410,411,409,0,0,0,413,0,0,0,0,0,413,413,413,0,413,413,414,415,417,413,413,413,414,414,418,1972,416,416,415,417,413,413,414,414,418,1972,416,415,417,413,414,418,1972,416,413,416,413,414,413,414,415,417,413,414,418,1972,416,415,417,413,414,418,1972,416,415,413,414,416,413,414,413,414,416,413,414,416,413,414,414,1972,413,414,417,414,415,417,413,414,418,418,1972,416,415,417,413,414,418,1972,416,415,417,413,414,418,1972,416,415,417,413,414,418,1972,416,413,416,413,416,414,414,414,413,416,413,413,413,413,416,416,416,416,414,413,414,413,414,413,414,413,414,413,414,415,415,417,413,414,418,1972,416,414,1972,413,414,415,417,413,414,418,1972,416,417,414,418,414,1972,414,414,413,414,413,413,414,413,416,413,415,417,413,414,418,1972,416,415,417,413,414,418,1972,416,415,417,413,413,414,414,418,1972,416,415,417,413,414,418,1972,416,415,417,413,414,418,1972,416,413,414,415,417,413,414,418,1972,416,413,414,413,414,413,414,417,414,1972,0,413,414,413,413,414,413,414,413,414,413,414,413,414,413,414,413,414,413,414,417,413,414,413,414,418,413,414,416,415,417,413,414,418,1972,416,415,417,413,414,418,1972,416,415,417,413,414,418,1972,416,415,417,413,414,418,1972,416,413,414,413,414,413,414,415,417,413,414,418,1972,416,413,413,413,415,417,413,414,418,1972,416,0,0,0,421,422,1973,421,422,1973,421,422,1973,421,422,1973,421,422,1973,421,1973,421,422,1973,421,422,1973,421,422,1973,421,422,1973,421,422,1973,1973,421,422,1973,422,1973,421,422,1973,421,422,1973,421,422,1973,421,422,1973,421,422,1973,421,422,1973,422,421,422,1973,421,422,1973,421,422,1973,421,422,1973,421,422,1973,422,421,422,1973,0,0,0,0,0,383,398,383,398,383,398,378,390,398,383,390,390,398,383,398,383,398,383,398,383,398,383,398,383,398,0,0,0,0,0,0,0,0,0,423,424,425,426,427,428,423,423,424,424,425,425,426,426,868,427,428,423,423,424,424,425,425,426,426,868,427,428,423,424,425,426,868,423,424,425,426,423,424,425,426,427,428,427,428,427,428,427,428,423,424,425,426,868,427,428,423,424,425,426,868,427,428,423,424,425,426,423,424,425,426,423,424,425,426,868,423,424,425,426,423,424,425,426,868,868,868,427,428,423,424,425,426,868,427,428,423,424,425,426,868,427,428,427,428,423,424,425,426,868,427,428,427,428,427,428,423,424,425,426,868,427,428,427,428,427,428,427,428,427,428,423,424,425,426,423,424,425,426,423,424,425,426,423,424,425,426,423,424,425,426,427,428,423,424,425,426,868,423,424,425,426,868,423,424,425,426,427,428,423,424,425,426,868,423,424,425,426,423,424,425,426,868,423,424,425,426,423,424,425,426,423,424,425,426,423,424,425,426,427,428,423,424,425,426,868,427,428,423,424,425,426,868,427,428,423,423,424,424,425,425,426,426,868,427,428,423,424,425,426,868,427,428,423,424,425,426,868,423,424,425,426,427,428,423,424,425,426,868,423,424,425,426,423,424,425,426,868,423,424,425,426,0,868,423,424,425,426,427,428,423,424,425,426,423,424,425,426,423,424,425,426,423,424,425,426,423,424,425,426,423,424,425,426,423,424,425,426,423,424,425,426,423,424,425,426,423,424,425,426,423,424,425,426,868,427,428,427,428,427,428,423,424,425,426,868,427,428,423,424,425,426,868,427,428,423,424,425,426,868,427,428,423,424,425,426,868,423,424,425,426,423,424,425,426,423,424,425,426,427,428,423,424,425,426,868,427,428,423,424,425,426,868,0,429,429,429,429,429,429,429,429,429,429,429,429,429,429,429,429,429,429,429,429,429,429,429,429,429,429,429,430,430,430,0,431,431,430,430,430,430,0,0,0,0,0,0,430,0,430,431,432,435,433,436,430,430,430,434,434,1974,431,431,431,432,435,433,436,430,430,434,1974,431,431,432,435,433,436,430,434,1974,431,430,434,431,430,431,430,431,432,435,433,436,430,434,1974,431,432,435,433,436,430,434,1974,431,432,433,430,434,431,430,431,433,430,434,431,433,430,434,431,430,431,430,1974,431,430,431,435,430,431,432,435,433,436,430,434,1974,431,432,435,433,436,430,434,1974,431,432,435,433,436,430,434,1974,431,432,435,433,436,430,434,1974,431,430,434,431,430,434,431,430,434,431,430,430,430,430,434,434,434,434,431,431,431,431,430,431,433,430,431,430,431,430,431,430,431,430,431,432,430,434,431,432,435,433,436,430,434,1974,431,430,1974,431,430,431,432,435,433,436,430,434,1974,431,435,436,430,431,430,1974,431,0,0,430,431,430,431,430,434,431,430,431,432,435,433,436,430,434,1974,431,432,435,433,436,430,434,1974,431,432,435,433,436,430,430,434,1974,431,431,432,435,433,436,430,434,1974,431,432,435,433,436,430,434,1974,431,430,431,432,435,433,436,430,434,1974,431,430,430,431,0,430,431,430,431,435,430,431,0,430,431,430,431,430,431,430,431,430,431,430,431,430,431,430,431,430,431,430,431,435,430,431,430,431,436,433,430,434,431,432,435,433,436,430,434,1974,431,432,435,433,436,430,434,1974,431,432,435,433,436,430,434,1974,431,432,435,433,436,430,434,1974,431,430,431,430,431,430,431,432,435,433,436,430,434,1974,431,430,431,430,431,430,431,432,435,433,436,430,434,1974,431,0,0,0,439,440,1975,439,440,1975,439,440,1975,439,440,1975,439,440,1975,439,1975,440,439,440,1975,439,440,1975,439,440,1975,439,440,1975,439,440,1975,1975,439,440,1975,440,1975,439,440,1975,439,440,1975,439,440,1975,439,440,1975,439,440,1975,439,440,1975,440,440,439,440,1975,439,440,1975,439,440,1975,439,440,1975,439,440,1975,439,440,1975,449,0,0,0,0,0,0,447,0,448,448,448,0,0,0,449,0,0,441,148,443,443,446,444,444,442,148,441,443,447,448,449,450,446,444,442,148,441,443,447,448,449,450,446,444,442,148,441,443,447,448,449,450,444,148,446,444,442,148,441,443,447,448,449,450,446,444,442,148,441,443,447,448,449,450,446,447,448,449,450,148,444,444,444,444,444,446,446,444,441,447,448,449,450,446,444,442,148,441,443,447,448,449,450,446,444,442,148,441,443,447,448,449,450,447,448,446,444,442,148,441,443,447,448,449,450,446,444,442,148,441,443,447,448,449,450,148,444,444,444,444,444,444,444,446,446,444,442,148,441,446,444,442,148,441,443,447,448,449,450,446,444,442,148,441,443,447,448,449,450,444,446,444,441,447,448,449,450,441,148,441,441,443,444,148,148,446,444,442,148,441,443,447,448,449,450,443,446,444,442,148,441,443,447,448,449,450,446,444,442,148,441,443,447,448,449,450,446,444,442,148,441,443,447,448,449,450,446,444,442,148,441,443,447,448,449,450,446,444,442,148,441,443,447,448,449,450,148,441,441,148,148,148,148,443,446,444,441,447,448,449,450,444,1976,148,148,442,444,446,444,442,148,441,443,447,448,449,450,446,444,442,148,441,443,447,448,449,450,446,444,442,148,441,443,447,448,449,450,446,444,442,148,441,443,447,448,449,450,446,444,442,148,441,443,447,448,449,450,148,442,148,446,444,442,148,441,443,447,448,449,450,446,148,148,0,0,453,453,453,453,453,453,453,453,453,453,453,0,453,453,453,453,453,453,453,453,453,453,453,1977,453,453,453,453,453,453,453,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,456,0,455,456,454,459,349,454,455,455,456,456,458,457,351,351,459,349,454,455,456,458,457,351,459,349,454,455,456,458,457,351,456,351,459,349,454,455,456,458,457,351,459,349,454,455,456,458,457,351,455,456,457,351,455,456,457,351,455,456,457,351,456,456,349,349,458,459,349,454,455,456,458,457,351,459,349,454,455,456,458,457,351,459,349,454,455,456,458,457,351,459,349,454,455,456,458,457,351,455,456,351,456,351,349,454,349,459,349,455,456,351,455,455,455,455,456,456,456,456,351,351,351,351,455,456,457,351,459,349,454,455,456,458,457,351,459,349,454,455,456,458,457,351,458,454,454,458,349,454,458,351,349,458,456,351,349,454,454,455,456,454,459,349,454,455,456,458,457,351,454,457,459,349,454,455,456,458,457,351,459,349,454,455,456,458,457,351,459,349,454,455,456,458,457,351,459,349,454,455,456,458,457,351,459,349,454,455,456,458,457,351,349,454,349,454,455,456,458,456,349,351,349,349,459,455,456,457,351,459,349,454,455,456,458,457,351,459,349,454,455,456,458,457,351,459,349,454,455,456,458,457,351,459,349,454,455,456,458,457,351,459,349,454,455,456,458,457,351,459,349,454,455,456,458,457,351,0,0,0,0,0,0,464,460,460,465,464,460,465,464,460,465,460,464,460,465,464,460,465,460,460,460,464,465,464,460,465,464,460,465,464,460,465,464,460,465,460,460,460,460,460,460,460,460,464,460,465,464,460,465,465,465,465,465,460,460,464,460,464,460,465,465,464,460,465,464,460,465,464,460,465,464,460,465,464,460,465,465,460,460,464,460,465,464,460,465,464,460,465,464,460,465,464,460,465,464,460,465,0,0,0,1978,0,0,0,0,0,0,0,466,466,466,466,466,466,466,1978,466,466,466,466,466,466,466,466,466,466,466,466,466,466,1979,466,1979,466,1979,466,466,466,1978,1978,466,1978,1978,466,466,466,466,466,466,466,466,0,0,0,0,0,0,0,0,0,346,1980,461,0,475,0,461,0,0,0,474,471,476,1981,1982,461,461,472,353,353,473,23,346,346,474,471,476,1981,1982,461,472,353,473,23,346,474,471,476,1981,1982,461,472,353,473,23,346,474,471,476,353,1981,1982,461,472,353,473,23,346,474,471,476,1981,1982,461,472,353,473,23,346,474,471,476,474,461,472,353,473,346,474,471,461,472,353,473,346,474,471,461,472,353,473,346,471,353,353,23,461,23,1981,1982,461,472,353,473,23,346,474,471,476,476,1981,1982,461,472,353,473,23,346,474,471,476,1981,1982,461,472,353,473,23,346,474,471,476,1981,1982,461,472,472,353,473,23,346,474,471,476,461,353,346,353,461,353,346,461,461,461,461,353,353,353,353,346,346,346,346,461,472,353,473,23,346,474,471,1981,1982,461,472,353,353,473,23,346,474,471,476,1981,1982,461,472,353,473,23,346,474,471,476,461,23,346,476,23,23,23,23,23,476,23,353,353,472,353,1981,1982,461,472,353,473,23,346,474,471,476,23,23,23,23,23,476,1981,1982,461,472,353,473,23,346,474,471,476,1981,1982,461,472,353,473,23,346,474,471,476,1981,1982,461,472,353,473,23,346,471,476,1981,1982,461,472,353,473,23,346,474,471,476,1981,1982,461,472,353,473,23,346,474,471,476,471,471,23,346,472,23,471,472,23,472,473,353,473,346,476,473,473,461,23,353,23,346,471,353,472,473,461,472,353,473,346,474,471,1981,1982,461,472,353,473,23,346,474,471,476,1981,1982,461,472,353,473,23,346,474,471,476,1981,1982,461,472,353,473,23,346,474,471,476,1981,1982,461,472,472,353,473,473,23,346,474,471,476,1981,1982,461,472,353,473,23,346,474,471,476,1981,1982,461,472,353,473,23,346,474,471,476,0,0,0,0,0,343,0,451,451,343,478,478,480,481,343,343,343,451,478,480,481,343,343,451,478,480,481,343,451,478,343,343,343,480,481,343,451,478,480,481,343,451,478,451,343,478,343,478,343,478,343,343,343,451,343,480,481,343,451,478,480,481,343,451,478,343,480,481,343,451,478,480,481,343,451,478,343,343,343,478,343,343,343,343,343,343,451,451,451,343,451,478,451,480,481,343,343,451,478,343,343,343,480,481,343,451,478,343,451,480,480,480,451,343,343,343,343,343,480,481,343,451,478,343,343,451,480,481,343,451,478,480,481,343,343,451,478,480,481,343,451,478,480,481,343,451,478,481,343,480,481,343,451,478,451,451,1983,343,343,481,343,343,343,343,343,343,343,343,343,343,343,451,451,451,451,343,343,343,343,343,343,481,343,478,478,343,343,478,480,481,343,451,478,451,480,481,343,451,478,480,481,343,451,478,480,481,343,451,478,343,343,343,480,481,343,451,478,343,343,480,481,343,451,478,480,0,0,0,0,0,0,0,0,0,0,0,484,167,486,486,483,484,167,485,487,488,486,483,484,167,485,487,488,486,483,484,167,485,487,488,486,486,483,484,167,485,487,488,486,483,484,167,485,487,488,483,484,485,486,486,486,486,486,487,488,483,485,486,483,484,167,485,487,488,486,483,484,167,485,487,488,486,483,484,167,485,487,488,483,486,483,484,167,485,487,488,486,486,486,486,486,486,486,0,0,483,486,486,483,484,485,487,488,486,483,484,167,485,487,488,486,483,484,167,485,487,488,483,485,483,484,167,483,483,486,486,486,483,484,167,485,487,488,484,167,486,483,484,167,485,487,488,486,483,484,167,485,487,488,486,483,484,167,485,487,488,486,483,484,167,485,487,488,487,488,486,483,484,167,485,487,488,483,484,485,484,485,483,484,485,487,488,483,484,485,487,488,485,488,484,167,487,488,487,488,483,485,483,483,486,484,485,484,485,483,167,167,483,167,487,488,486,486,483,484,167,485,487,488,486,486,483,484,167,485,487,488,486,483,484,167,485,487,488,486,483,484,167,485,487,488,486,483,484,167,485,487,488,483,483,486,483,484,167,485,487,488,488,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,602,493,1978,0,0,0,0,0,0,0,0,0,0,0,0,0,602,493,0,602,0,0,0,0,0,0,0,0,0,0,0,0,0,0,492,0,0,0,475,0,501,0,0,0,0,0,0,113,134,113,134,113,134,494,0,0,0,493,0,493,113,134,1978,113,134,493,493,0,493,113,28,0,550,587,493,0,544,113,134,0,0,493,501,492,1979,28,1979,493,493,1979,501,493,0,0,494,501,1978,0,0,0,0,0,0,0,0,602,493,113,134,0,568,493,1978,1978,1978,493,0,0,0,28,550,493,0,493,0,0,0,0,0,0,0,0,0,0,1984,1984,1984,0,0,517,0,0,0,0,511,0,0,0,511,511,511,518,518,518,521,521,517,518,0,0,0,0,517,0,0,0,0,0,0,0,0,511,0,511,0,0,0,0,354,354,510,352,354,352,354,354,354,354,1985,1986,514,387,822,896,522,519,520,516,513,352,352,354,354,510,517,517,518,518,521,1987,1988,515,1985,1986,514,387,822,896,522,519,520,516,513,352,354,510,517,518,521,1987,1988,515,1985,1986,514,387,822,896,522,519,520,516,513,352,354,510,517,518,521,1987,1988,515,513,513,515,515,515,516,1985,1986,514,387,822,896,522,519,520,516,513,352,354,510,517,518,521,1987,1988,515,1985,1986,514,387,822,896,522,519,520,516,513,352,354,510,517,518,521,1987,1988,515,352,510,352,354,510,517,515,352,354,510,517,515,352,354,510,517,515,510,352,354,510,1985,1986,514,387,822,896,522,519,520,516,513,352,354,510,517,518,521,1987,1988,515,1985,1986,514,387,822,896,522,519,520,516,513,352,354,510,517,518,521,1987,1988,515,1985,1986,514,387,822,896,522,519,520,516,513,352,354,510,517,518,521,1987,1988,515,1985,1986,514,387,822,896,522,519,520,516,513,352,354,510,517,518,521,1987,1988,515,352,354,517,518,352,354,517,518,352,352,352,352,354,354,354,354,517,517,517,517,518,518,518,518,352,354,510,354,511,1985,1986,1986,1986,1986,1986,1986,1986,1986,1986,1986,1986,1986,1986,1986,1986,1986,514,387,822,896,896,896,896,896,896,896,896,896,896,896,896,896,896,896,896,1987,1988,519,520,511,896,896,896,896,896,896,896,896,896,896,896,896,896,896,896,896,1987,1988,515,513,352,354,510,517,517,518,518,521,521,516,513,516,513,513,1985,1986,514,387,822,896,522,519,520,516,513,352,354,510,510,517,518,521,1987,1988,515,1985,1986,514,387,822,896,522,519,520,516,513,352,354,510,517,518,521,1987,1988,515,513,352,354,510,513,513,352,354,510,510,513,513,513,513,513,513,513,513,513,513,352,352,352,352,352,352,352,517,518,521,1985,1986,514,387,822,896,522,519,520,516,513,513,352,354,510,517,518,521,1987,1988,515,511,1985,1986,1986,1986,1986,1986,1986,1986,1986,1986,1986,1986,1986,1986,1986,1986,1986,514,387,822,896,896,896,896,896,896,896,896,896,896,896,896,896,896,896,896,1987,1988,511,1985,1986,1986,1986,1986,1986,1986,1986,1986,1986,1986,1986,1986,1986,1986,1986,1986,514,387,822,896,896,896,896,896,896,896,896,896,896,896,896,896,896,896,896,1987,1988,1985,1986,514,387,822,896,522,519,520,516,513,352,354,510,517,518,521,1987,1988,515,1985,1986,514,387,822,896,522,519,520,516,513,352,354,510,517,518,521,1987,1988,515,1985,1986,514,387,822,896,516,513,352,354,510,517,518,521,1987,1988,515,1985,1986,514,387,822,896,522,519,520,516,513,352,354,510,517,518,521,1987,1988,515,522,519,520,1985,1986,514,387,822,896,522,519,520,516,513,352,354,510,517,518,521,1987,1988,515,352,354,510,513,513,513,513,513,513,513,513,513,513,513,522,511,1985,1986,1986,1986,1986,1986,1986,1986,1986,1986,1986,1986,1986,1986,1986,1986,1986,514,387,822,896,896,896,896,896,896,896,896,896,896,896,896,896,896,896,896,1987,1988,515,515,513,352,515,513,522,519,520,352,354,510,513,513,352,354,352,352,511,1985,1986,1986,1986,1986,1986,1986,1986,1986,1986,1986,1986,1986,1986,1986,1986,1986,514,387,822,896,896,896,896,896,896,896,896,896,896,896,896,896,896,896,896,1987,1988,511,1985,1986,1986,1986,1986,1986,1986,1986,1986,1986,1986,1986,1986,1986,1986,1986,1986,514,387,822,896,896,896,896,896,896,896,896,896,896,896,896,896,896,896,896,1987,1988,511,1985,1986,1986,1986,1986,1986,1986,1986,1986,1986,1986,1986,1986,1986,1986,1986,1986,514,387,822,896,896,896,896,896,896,896,896,896,896,896,896,896,896,896,896,1987,1988,513,513,522,519,520,352,354,510,517,515,1985,1986,514,387,822,896,522,519,520,516,513,352,354,510,517,518,521,1987,1988,515,517,518,521,1985,1986,514,387,822,896,522,519,520,516,513,352,354,510,517,518,521,1987,1988,515,1985,1986,514,387,822,896,522,519,520,516,513,352,354,510,517,518,521,1987,1988,515,1985,1986,514,387,822,896,522,519,520,516,513,352,354,510,517,518,521,1987,1988,515,1985,1986,514,387,822,896,522,519,520,516,513,352,354,510,517,518,521,1987,1988,515,511,1985,1986,1986,1986,1986,1986,1986,1986,1986,1986,1986,1986,1986,1986,1986,1986,1986,514,387,822,896,896,896,896,896,896,896,896,896,896,896,896,896,896,896,896,1987,1988,513,513,511,1985,1986,1986,1986,1986,1986,1986,1986,1986,1986,1986,1986,1986,1986,1986,1986,1986,514,387,822,896,896,896,896,896,896,896,896,896,896,896,896,896,896,896,896,1987,1988,513,1985,1986,514,387,822,896,522,519,520,516,513,352,354,510,517,518,521,1987,1988,515,352,354,352,0,0,0,0,0,0,0,0,0,525,528,529,530,531,533,525,528,529,530,531,533,525,530,528,531,532,529,533,534,525,530,528,531,532,529,533,534,525,530,528,531,532,529,533,534,525,530,528,531,532,529,533,534,525,530,528,531,532,529,533,534,525,530,528,531,532,529,533,534,525,530,528,531,532,529,533,534,525,530,528,531,532,529,533,534,528,531,528,529,531,533,534,525,530,528,531,532,529,533,534,534,525,530,528,531,532,529,533,534,534,525,530,528,531,532,529,533,534,525,530,528,531,532,529,533,534,525,528,529,525,530,528,531,532,529,533,534,525,530,528,531,532,529,533,534,525,528,532,529,525,528,534,530,531,525,530,528,531,532,529,533,534,525,528,529,530,531,533,1989,1989,525,530,528,531,532,529,533,534,525,530,528,531,532,529,533,534,525,530,528,531,532,529,533,534,525,530,528,531,532,529,533,534,525,530,528,531,532,529,533,534,532,532,525,530,528,531,529,533,534,528,529,531,533,528,529,531,528,529,531,533,525,528,529,530,531,533,1989,1989,525,530,528,531,532,529,533,534,525,530,528,531,532,529,533,534,525,530,528,531,532,529,533,534,525,530,528,531,532,529,533,534,525,530,528,531,532,529,533,534,525,530,528,531,532,529,533,534,525,530,528,531,532,529,533,534,0,0,0,0,0,0,537,479,538,539,537,479,538,539,537,479,538,539,537,479,538,539,537,479,538,539,537,537,479,479,479,538,539,479,538,538,539,537,479,538,538,539,537,479,538,539,537,479,538,539,537,537,479,538,539,479,538,539,537,479,538,539,537,538,539,539,539,537,479,538,539,537,539,537,479,538,539,537,479,538,539,537,479,538,539,537,479,538,539,537,479,538,539,537,537,537,537,537,539,537,538,539,537,537,537,537,537,539,479,479,538,539,537,479,538,539,537,479,538,539,537,479,538,539,537,479,538,539,537,539,479,538,539,537,554,0,0,0,0,0,0,35,554,0,554,554,560,0,554,554,554,560,0,0,0,0,0,559,0,0,0,35,0,0,0,0,0,0,0,0,0,0,0,0,0,0,556,492,554,559,0,559,0,0,0,0,556,0,0,0,0,0,0,0,0,554,554,560,111,35,35,113,134,544,544,133,35,35,113,134,35,35,113,134,494,546,547,0,111,0,1990,35,562,111,557,557,558,563,564,559,559,553,556,556,544,555,551,554,560,133,561,561,548,548,549,549,550,550,546,546,547,547,1990,35,562,111,557,558,563,564,559,553,556,544,555,551,554,560,133,561,548,549,550,546,546,547,547,1990,35,562,111,557,558,563,564,559,553,556,544,555,551,554,560,133,561,548,549,550,546,547,112,557,556,561,548,548,549,549,550,550,112,548,549,550,546,547,546,547,35,35,113,134,1990,35,562,111,557,558,563,564,559,553,556,544,555,551,554,560,133,561,548,549,550,546,547,1990,35,562,111,557,558,563,564,559,553,556,544,555,551,554,560,133,561,548,549,550,546,547,551,555,35,35,113,134,557,558,559,556,560,133,561,548,549,550,546,547,557,558,559,556,560,133,561,548,549,550,557,558,559,556,560,133,561,548,549,550,546,547,556,0,556,544,111,111,551,551,544,546,547,562,111,558,563,564,559,553,544,555,551,133,546,547,551,1990,35,562,111,557,558,563,564,559,553,556,544,555,551,554,560,133,561,548,549,550,546,546,547,1990,35,562,111,557,558,563,564,559,553,556,544,555,551,554,560,133,561,548,549,550,546,547,35,113,1990,35,562,111,557,558,563,564,559,553,556,544,555,551,554,560,133,561,548,549,550,546,547,1990,35,562,111,557,558,563,564,559,553,556,544,555,551,554,560,133,561,548,549,550,546,547,28,112,557,561,548,549,550,557,559,556,561,548,549,550,112,557,556,561,548,548,549,549,550,550,28,557,559,556,560,112,561,548,549,550,546,557,557,557,557,559,559,559,559,556,556,556,556,561,561,561,561,548,548,548,548,549,549,549,549,550,550,550,550,546,547,546,547,546,547,557,559,556,554,554,560,133,561,548,549,550,546,547,1990,35,562,111,557,558,563,564,559,553,556,544,555,551,554,560,133,561,548,549,550,546,547,550,546,547,1990,35,562,111,557,558,563,564,559,553,556,544,555,551,554,560,133,561,548,549,550,546,547,562,111,558,563,564,559,553,544,555,551,133,546,547,544,546,111,111,546,547,546,547,544,546,547,551,551,546,547,111,555,111,28,557,556,112,561,548,549,550,551,133,544,554,35,35,113,134,35,1990,35,562,111,557,558,563,564,559,553,556,544,555,551,554,560,133,561,548,549,550,546,547,111,551,112,544,1990,35,562,111,557,558,563,564,559,553,556,544,555,551,554,560,133,561,548,549,550,546,547,1990,35,562,111,557,558,563,564,559,553,556,544,555,551,554,560,133,561,548,549,550,546,546,547,547,1990,35,562,111,557,558,563,564,559,553,556,544,555,551,554,560,133,561,548,549,550,546,547,1990,35,562,111,557,558,563,564,559,553,556,544,555,551,554,560,133,561,548,549,550,546,547,557,561,546,547,1990,35,562,111,557,558,563,564,559,553,556,544,555,551,554,560,133,561,548,549,550,546,547,492,557,561,28,561,556,556,544,546,547,544,544,546,547,562,111,558,563,564,553,544,551,133,546,562,111,558,563,564,559,553,544,555,551,133,546,547,494,556,544,546,547,546,547,546,547,546,547,546,547,546,547,546,547,546,547,546,547,544,544,133,111,0,35,35,113,134,35,546,547,547,111,551,111,111,546,547,551,551,28,557,551,550,557,558,559,556,560,133,561,548,549,550,1990,35,562,111,557,558,563,564,559,553,556,544,555,551,554,560,133,561,548,549,550,546,547,554,1990,35,562,111,557,558,563,564,559,553,556,544,555,551,554,560,133,561,548,549,550,546,547,1990,35,562,111,557,558,563,564,559,553,556,544,555,551,554,560,133,561,548,549,550,546,547,1990,35,562,111,557,558,563,564,559,553,556,544,555,551,554,560,133,561,548,549,550,546,547,546,547,546,547,546,547,1990,35,562,111,557,558,563,564,559,553,556,544,555,551,554,560,133,561,548,549,550,546,547,133,1990,35,562,111,557,558,563,564,559,553,556,544,555,551,554,560,133,561,548,549,550,546,547,1991,1991,1991,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,575,350,573,570,572,569,574,463,463,344,344,571,24,575,350,573,570,572,569,574,463,344,571,24,575,350,573,570,572,569,574,463,344,571,24,575,350,573,570,572,569,574,463,344,571,24,575,350,573,570,572,569,574,463,344,571,24,569,570,569,571,463,344,463,344,463,344,350,572,569,573,570,569,574,24,575,350,573,570,572,569,574,463,344,571,24,575,350,573,570,572,569,574,463,344,571,24,575,350,573,570,572,569,574,463,344,571,24,575,575,350,573,570,572,569,574,463,344,571,24,463,344,463,350,350,350,463,344,463,463,463,463,344,344,344,344,572,569,463,344,571,575,350,573,570,572,569,574,463,344,571,24,575,350,573,570,572,569,574,463,344,571,24,573,570,569,574,24,573,570,572,569,574,571,572,571,571,571,572,571,571,571,350,575,571,571,571,571,571,569,569,509,575,572,571,571,572,350,575,573,463,344,573,569,575,350,573,570,572,569,574,463,344,571,24,569,575,350,573,570,572,569,574,463,344,571,24,575,350,573,570,572,569,574,463,344,571,24,569,463,344,575,350,573,570,572,569,574,463,344,571,24,575,350,573,570,572,569,574,463,344,571,24,350,573,570,572,569,574,571,575,571,350,573,570,569,574,569,573,570,572,569,574,571,569,463,344,24,573,570,569,574,24,569,24,509,24,24,463,344,575,350,573,570,572,569,574,463,344,571,24,575,350,573,570,572,569,574,463,344,571,24,575,350,573,570,572,569,574,463,344,571,24,575,350,573,570,572,569,574,463,344,571,24,575,350,573,570,572,569,574,463,344,571,24,569,569,575,350,573,570,572,569,574,463,344,571,24,569,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,604,599,600,602,493,0,0,0,0,0,1992,592,0,0,0,0,604,599,600,602,493,0,600,602,0,0,0,0,0,614,0,0,0,0,0,0,0,0,0,0,614,0,0,1992,592,0,0,501,0,0,0,614,0,0,0,0,0,0,0,0,0,604,578,386,578,580,579,609,581,582,584,585,586,588,589,590,591,593,592,619,619,619,619,619,619,619,619,610,612,594,594,608,386,595,596,597,598,493,496,601,603,499,493,496,601,603,499,86,165,605,496,581,578,582,584,585,586,588,589,590,591,601,593,603,89,619,610,611,612,616,497,499,594,608,386,595,596,597,445,149,613,606,607,607,598,614,86,165,605,496,581,578,582,584,585,586,588,589,590,591,601,593,603,89,619,610,611,612,616,497,499,594,608,386,595,596,597,445,149,613,606,607,598,614,86,165,605,496,581,578,582,584,585,586,588,589,590,591,601,593,603,89,619,610,611,612,616,497,499,594,608,386,595,596,597,445,149,613,606,607,598,614,165,605,607,165,605,86,165,605,606,0,0,0,86,165,605,496,581,578,582,584,585,586,588,589,590,591,601,593,603,89,619,610,611,612,616,497,499,594,608,386,595,596,597,445,149,613,606,607,598,614,86,165,605,496,581,578,582,584,585,586,588,589,590,591,601,593,603,89,619,610,611,612,616,497,499,594,608,386,595,596,597,445,149,613,606,607,598,614,585,586,595,582,584,165,605,493,496,601,603,499,578,86,496,603,499,445,607,598,496,603,499,445,607,598,496,603,499,445,607,598,599,608,578,89,493,496,601,603,499,89,89,594,496,601,603,493,499,86,86,165,165,605,605,496,581,578,582,584,585,586,588,589,590,591,601,593,603,89,619,610,610,611,611,612,612,616,497,499,594,608,386,595,596,597,445,149,149,613,606,606,607,598,614,86,165,165,605,605,496,581,578,582,584,585,586,588,589,590,591,601,593,603,89,619,610,610,611,612,612,616,497,499,594,608,386,595,596,597,445,149,149,613,606,607,598,614,578,578,578,86,165,605,496,581,578,582,584,585,586,588,589,590,591,601,593,603,89,619,610,611,612,616,497,499,594,608,386,595,596,597,445,149,613,606,607,598,614,86,165,605,496,581,578,582,584,585,586,588,589,590,591,601,593,603,89,619,610,611,612,616,497,499,594,608,386,595,596,597,445,149,613,606,607,598,614,607,607,386,585,586,596,597,607,607,607,607,607,86,165,605,89,493,611,595,596,597,149,613,606,606,607,598,614,89,89,86,86,165,605,496,581,578,582,584,585,586,588,589,590,591,601,593,603,89,619,610,611,611,612,616,497,499,594,608,386,595,596,597,445,149,613,606,607,598,614,86,165,605,496,581,578,582,584,585,586,588,589,590,591,601,593,603,89,619,610,611,612,616,497,499,594,608,386,595,596,597,445,149,613,606,607,598,614,593,594,593,89,89,89,89,386,89,493,496,601,603,499,593,593,89,89,593,89,386,1992,592,86,165,605,593,89,619,619,619,619,619,619,619,619,610,611,612,608,386,149,149,613,606,89,89,89,593,607,578,1992,86,165,605,496,581,578,582,584,585,586,588,589,590,591,601,593,593,603,89,619,610,611,612,616,497,499,594,608,386,595,596,597,445,149,149,613,606,607,598,614,386,592,86,165,605,89,619,619,619,619,619,619,619,619,610,611,612,608,386,149,613,606,493,496,601,603,499,616,578,578,386,578,578,386,86,165,605,496,581,578,582,584,585,586,588,589,590,591,601,593,603,89,619,610,611,612,616,497,499,594,608,386,595,596,597,445,149,613,606,607,598,614,86,165,605,496,581,578,582,584,585,586,588,589,590,591,601,593,603,89,619,610,611,612,616,497,499,594,608,386,595,596,597,445,149,613,606,607,598,614,86,165,605,496,581,578,582,584,585,586,588,589,590,591,601,593,603,89,619,610,611,612,616,497,499,594,608,386,595,596,597,445,149,613,606,607,598,614,86,165,605,496,581,578,582,584,585,586,588,589,590,591,601,593,603,89,619,610,611,612,616,497,499,594,608,386,595,596,597,445,149,613,606,607,598,614,496,601,603,499,86,165,605,612,86,165,165,89,89,149,149,86,165,605,496,581,578,582,584,585,586,588,589,590,591,601,593,603,89,619,610,611,612,616,497,499,594,608,386,595,596,597,445,149,613,606,607,598,614,501,496,601,603,499,86,165,605,611,86,165,605,611,89,493,496,601,603,499,493,496,601,603,499,445,89,89,89,89,89,89,89,89,89,89,89,89,86,165,605,613,0,578,89,89,501,165,605,593,593,493,496,601,603,499,445,606,496,588,590,593,499,386,597,598,89,592,619,619,619,619,619,619,619,619,612,608,386,386,594,619,619,619,619,619,619,619,619,619,619,619,619,619,619,619,619,619,619,619,619,619,619,619,619,619,619,619,619,619,619,619,619,619,619,619,619,89,89,501,594,578,165,605,578,578,578,578,578,578,386,578,589,600,602,496,601,493,499,568,386,1993,1993,493,496,601,603,499,165,605,165,605,493,496,601,603,499,445,578,578,89,89,386,386,386,616,613,496,603,499,445,607,598,89,86,165,605,496,581,578,582,584,585,586,588,589,590,591,601,593,603,89,619,610,611,612,616,497,499,594,608,386,595,596,597,445,149,613,606,607,598,614,606,86,165,605,496,581,578,582,584,585,586,588,589,590,591,601,593,603,89,619,610,611,612,616,497,499,594,608,386,595,596,597,445,149,613,606,607,598,614,578,86,165,605,496,581,578,582,584,585,586,588,589,590,591,601,593,603,89,619,610,611,612,616,497,499,594,608,386,595,596,597,445,149,613,606,607,598,614,493,86,165,605,496,496,581,578,582,584,585,586,588,589,590,591,601,601,593,603,603,89,619,610,611,612,616,497,499,499,594,608,386,595,596,597,445,149,613,606,607,598,614,86,165,605,496,581,578,582,584,585,586,588,589,590,591,601,593,603,89,619,610,611,612,616,497,499,594,608,386,595,596,597,445,149,613,606,607,598,614,493,496,601,603,499,593,593,86,165,605,496,581,578,582,584,585,586,588,589,590,591,601,593,603,89,619,610,611,612,616,497,499,594,608,386,595,596,597,445,149,613,606,607,598,614,578,579,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,526,34,34,34,620,526,535,34,621,470,620,526,625,622,623,624,34,535,524,524,621,470,620,526,625,622,623,624,34,535,524,621,470,620,526,625,622,623,624,34,535,524,470,524,470,620,621,470,34,34,621,470,620,526,625,622,623,624,34,535,524,621,470,620,526,625,622,623,624,34,535,524,34,470,34,34,34,34,34,34,34,535,524,535,524,535,524,34,34,620,526,535,620,526,535,34,34,620,526,535,34,621,621,470,470,620,526,625,622,623,623,624,624,34,535,524,621,470,470,620,526,625,622,623,624,624,34,535,524,526,34,526,526,621,470,620,526,625,622,623,624,34,535,524,621,470,620,526,625,625,622,622,623,623,624,624,34,535,524,524,524,34,34,34,34,524,524,524,524,524,0,621,620,535,621,470,34,524,621,621,470,470,470,620,620,620,526,625,622,623,624,34,535,535,535,535,535,524,621,470,620,526,625,622,623,624,34,535,524,587,34,524,620,526,34,535,620,526,34,535,620,526,535,620,526,535,34,34,34,34,620,526,34,620,526,34,34,34,622,34,622,34,34,34,524,620,526,535,622,34,34,622,34,34,34,524,524,620,526,34,535,34,621,470,620,526,625,622,623,624,34,535,524,34,34,621,620,535,34,34,621,620,34,535,524,526,526,526,526,34,34,34,34,34,34,621,470,620,526,625,622,623,624,34,535,524,621,470,620,526,625,622,623,624,34,535,524,621,470,620,526,34,535,524,621,470,620,526,625,622,623,624,34,535,524,621,470,621,470,470,625,621,470,620,526,625,622,623,624,34,535,524,526,621,470,621,470,34,34,34,34,34,621,470,625,620,526,535,34,34,621,470,621,620,535,621,470,34,524,625,622,34,622,34,34,526,34,34,34,470,620,34,526,526,34,34,526,34,34,34,34,34,34,622,34,622,34,34,34,34,34,34,622,34,622,34,622,34,621,620,535,470,470,526,621,620,535,621,620,535,625,524,34,34,34,34,526,535,524,621,470,620,526,625,622,623,624,34,535,524,621,470,620,526,625,622,623,624,34,535,524,621,470,620,526,625,622,623,624,34,535,524,34,34,621,470,620,526,625,622,623,624,34,535,524,0,621,470,620,526,625,622,623,624,34,535,524,621,620,535,621,620,535,526,621,470,620,526,625,622,623,624,34,535,524,526,526,526,526,0,628,628,628,628,628,628,628,628,628,628,628,628,628,628,628,628,628,628,628,628,628,628,628,628,628,628,628,0,0,536,214,214,536,214,536,214,536,214,536,214,536,214,214,214,536,214,536,214,536,214,536,536,536,214,536,214,536,214,536,214,536,214,214,214,536,214,536,536,536,536,536,214,536,536,214,214,214,214,536,214,214,214,214,214,536,214,214,536,214,536,214,536,214,536,214,536,214,536,214,536,214,214,214,536,214,536,214,536,214,536,214,536,214,536,214,536,214,536,214,214,0,0,629,630,630,629,630,629,630,630,629,630,629,630,629,630,630,630,629,629,630,629,630,629,630,629,630,630,630,630,630,630,630,630,630,630,629,630,629,630,629,630,629,630,629,630,629,630,629,630,629,630,630,629,630,630,629,630,629,630,629,630,629,630,629,630,629,630,629,630,0,0,0,0,633,631,632,633,634,631,631,632,633,634,631,631,632,633,634,631,631,631,632,633,634,631,632,633,634,631,632,633,634,631,633,634,633,634,631,631,631,631,633,634,631,634,633,632,633,634,631,632,633,634,631,632,633,634,631,634,632,633,634,631,633,631,631,631,631,631,632,631,632,633,634,631,631,631,632,633,634,631,633,634,631,631,631,631,631,631,0,632,633,634,631,632,633,634,631,632,633,634,631,631,632,633,634,631,632,633,634,631,631,632,633,634,631,631,633,633,631,631,633,634,631,0,631,631,631,631,631,631,631,631,631,633,631,631,633,634,632,633,634,631,632,633,634,631,632,633,634,631,632,633,634,631,631,631,631,632,633,634,631,632,633,634,631,0,0,0,0,0,635,635,639,641,640,638,635,639,641,640,638,635,639,641,640,638,635,639,641,640,638,635,639,641,640,638,635,635,635,641,635,639,641,640,638,635,639,641,640,638,635,639,641,640,638,635,639,639,641,641,640,640,638,638,635,639,641,640,638,635,639,641,640,638,635,635,639,641,640,638,635,635,639,641,640,638,635,639,641,640,638,635,639,641,640,638,635,639,641,640,638,635,639,641,640,638,635,635,635,635,635,635,635,635,635,635,635,635,635,635,635,635,639,640,638,635,639,641,640,638,635,639,641,640,638,635,639,641,640,638,635,639,641,640,638,635,639,641,640,638,635,639,641,640,638,635,0,0,0,0,633,631,634,633,634,633,633,633,633,651,651,651,651,0,651,0,0,0,0,0,0,0,651,651,651,651,651,651,651,651,644,652,646,650,651,644,652,647,648,649,646,646,650,651,644,652,647,648,649,646,646,650,651,644,652,647,648,649,646,646,646,650,650,652,647,648,649,650,651,644,652,647,648,649,646,650,651,644,652,647,648,649,646,644,647,647,648,649,646,646,647,648,649,646,647,648,649,646,646,646,652,647,648,649,646,650,644,646,650,652,650,651,644,652,647,648,649,646,650,651,644,652,647,648,649,646,650,650,651,644,652,647,648,649,646,650,651,644,652,647,648,649,646,650,650,647,648,649,646,646,646,646,646,644,651,651,652,647,648,649,646,650,651,651,651,651,651,651,651,651,651,644,652,647,648,649,646,646,646,650,651,644,652,647,648,649,646,644,646,646,646,646,646,646,651,650,651,644,652,647,648,649,646,652,647,648,649,650,651,644,652,647,648,649,646,650,651,644,652,647,648,649,646,646,650,651,644,652,647,648,649,646,650,651,644,652,647,648,649,646,646,650,651,644,652,647,648,649,646,646,650,650,649,649,652,647,649,652,652,647,648,649,646,646,652,652,652,652,652,652,644,646,648,652,647,648,649,646,652,647,648,649,646,646,646,646,646,652,647,648,649,646,652,647,648,649,646,652,647,648,649,646,652,646,652,647,648,649,646,651,650,647,648,649,646,650,651,644,652,647,648,649,646,651,647,650,651,644,652,647,648,649,646,650,651,644,652,647,648,649,646,650,650,651,644,652,647,648,649,646,652,647,648,649,646,646,650,652,647,648,649,646,650,651,644,652,647,648,649,646,646,652,647,648,649,650,651,644,652,647,648,649,646,1994,0,0,0,0,672,0,672,672,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1995,1996,658,659,660,661,662,88,663,664,665,666,667,668,659,660,661,662,658,669,618,617,88,88,663,663,663,664,665,666,667,668,674,672,672,673,670,659,660,661,662,658,669,618,617,88,88,663,663,664,665,666,667,668,674,672,673,670,659,660,661,662,658,669,618,617,88,663,664,665,666,667,668,674,672,673,670,88,663,88,663,663,659,660,661,662,658,669,618,617,88,663,664,665,666,667,668,674,672,673,670,659,660,661,662,658,669,618,617,88,663,664,665,666,667,668,674,672,673,670,669,670,0,662,666,1995,672,88,663,672,672,88,663,88,663,88,663,669,673,670,659,660,661,662,658,669,618,617,88,88,663,663,664,665,666,667,668,674,672,673,670,659,660,661,662,658,669,618,617,88,663,664,665,666,667,668,674,672,673,670,1997,1997,0,659,660,661,662,658,669,618,617,88,663,664,665,666,667,668,674,672,673,670,659,660,661,662,658,669,618,617,88,663,664,665,666,667,668,674,672,673,670,663,672,673,664,665,663,672,673,663,663,663,663,672,672,672,672,88,663,88,663,88,663,88,663,664,665,666,667,668,674,672,659,660,661,662,658,669,618,617,88,663,664,665,666,667,668,674,672,673,670,88,663,88,663,659,660,661,662,658,669,618,617,88,663,664,665,666,667,668,674,672,673,670,669,88,663,673,670,663,88,663,88,663,88,663,88,663,88,663,659,660,661,662,658,669,618,617,88,663,664,665,666,667,668,674,672,673,670,1995,1996,659,660,661,662,658,669,618,617,88,663,664,665,666,667,668,674,672,673,670,659,660,661,662,658,669,618,617,88,88,663,663,664,665,666,667,668,674,672,673,670,659,660,661,662,658,669,618,617,88,663,664,665,666,667,668,674,672,673,670,659,660,661,662,658,669,618,617,88,663,664,665,666,667,668,674,672,673,670,618,617,88,88,663,659,660,661,662,658,669,618,617,88,663,664,665,666,667,668,674,672,673,670,1998,1998,88,663,88,663,88,663,618,617,673,618,617,669,673,670,0,666,658,674,1995,1996,88,663,88,663,88,663,88,663,88,663,88,663,88,663,88,663,88,663,1995,1996,1995,1996,1995,88,663,1995,1996,88,663,88,88,88,88,88,658,674,658,674,88,672,659,660,661,662,658,669,618,617,88,663,664,665,666,667,668,674,672,673,670,659,660,661,662,658,669,618,617,88,663,664,665,666,667,668,674,672,673,670,659,660,661,662,658,669,618,617,88,663,664,665,666,667,668,674,672,673,670,659,660,661,662,658,669,618,617,88,663,664,665,666,667,668,674,672,673,670,88,663,88,663,88,663,659,660,661,662,658,669,618,617,88,663,664,665,666,667,668,674,672,673,670,659,660,661,662,658,669,618,617,88,663,664,665,666,667,668,674,672,673,670,1995,1996,1999,2000,2001,2001,1999,2000,2001,0,0,0,0,0,680,680,677,677,676,676,676,676,677,680,676,676,678,679,679,677,677,677,680,676,676,678,679,677,677,680,676,678,679,677,679,677,676,677,676,677,680,676,678,679,677,680,676,678,679,677,678,676,676,676,676,679,677,676,677,676,679,677,676,679,677,676,677,0,676,677,677,680,676,678,680,676,678,679,677,680,676,678,679,677,677,680,680,676,678,679,677,680,676,678,679,677,679,679,677,679,677,679,677,679,679,679,679,677,677,677,677,677,676,677,676,677,676,677,676,677,676,677,680,676,679,677,680,676,678,679,677,676,677,680,676,678,679,677,680,676,678,0,680,676,676,676,676,676,676,677,676,677,680,679,677,677,680,676,678,679,677,680,676,678,679,677,680,676,676,678,679,677,677,680,676,678,679,677,680,676,678,679,677,679,676,677,680,676,678,679,677,679,677,676,677,676,676,0,676,677,0,676,677,680,676,678,0,676,676,676,677,677,676,677,676,677,676,677,676,677,676,677,676,677,676,677,676,677,676,676,680,676,676,677,680,676,677,676,677,676,679,677,680,676,678,679,677,0,0,680,676,678,679,677,680,676,678,679,677,680,676,678,679,677,676,677,676,677,676,677,680,676,678,679,677,677,677,677,680,676,678,679,677,0,0,0,0,698,696,0,0,696,0,0,0,683,692,696,683,683,683,683,700,700,700,692,683,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,686,686,683,683,683,686,700,700,700,697,683,683,683,686,701,701,701,686,686,683,683,683,686,697,683,683,683,698,700,697,683,683,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,700,701,681,681,681,682,682,682,699,683,683,683,684,684,684,685,685,685,686,686,686,687,687,687,688,688,689,689,690,690,691,691,692,692,693,693,694,694,695,695,696,696,697,698,700,701,681,681,682,682,699,683,683,684,684,685,685,686,686,687,687,688,688,689,689,690,690,691,691,692,692,693,693,694,694,695,695,696,696,697,698,700,701,681,682,699,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,681,683,684,686,687,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,688,687,694,700,701,681,682,699,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,700,701,681,682,699,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,685,688,688,684,695,690,681,682,683,684,685,686,687,689,690,691,692,693,694,695,696,697,698,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,681,682,683,684,685,686,687,689,690,691,692,693,694,695,696,697,698,681,682,683,684,685,686,687,689,690,691,692,693,694,695,696,697,698,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,693,693,699,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,690,690,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,699,688,689,690,691,688,688,688,700,701,681,682,699,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,700,701,681,682,699,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,681,682,683,684,685,686,687,692,693,694,695,696,693,700,701,681,682,699,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,700,701,681,682,699,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,681,682,683,684,685,686,687,681,683,684,686,687,700,701,681,682,683,684,685,686,687,690,692,693,694,695,696,697,681,681,681,681,682,682,682,682,683,683,683,683,684,684,684,684,685,685,685,685,686,686,686,686,687,687,687,687,681,682,683,684,685,686,687,692,693,694,695,696,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,690,691,700,700,701,701,681,682,699,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,700,701,681,682,699,683,684,685,686,687,688,689,690,691,692,693,694,695,696,696,696,696,697,698,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,700,701,681,682,699,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,688,689,690,691,698,684,687,693,694,695,0,0,0,0,688,688,688,681,682,684,685,687,688,689,690,691,693,694,695,681,682,684,685,687,688,689,690,691,693,694,695,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,681,683,684,686,687,691,681,700,701,683,686,692,696,700,701,681,682,699,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,700,701,681,682,699,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,700,701,681,681,682,682,699,683,683,684,684,685,685,686,686,687,687,688,688,689,689,690,690,691,691,692,692,693,693,694,694,695,695,696,696,697,698,700,701,681,682,699,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,700,701,681,682,699,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,700,701,681,682,699,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,690,690,691,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,699,682,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,681,684,687,689,690,693,694,695,699,688,689,690,691,689,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,681,683,684,686,687,692,696,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,689,681,682,683,684,685,686,687,692,693,694,695,696,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,690,690,690,690,689,689,690,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,685,697,697,690,691,681,682,683,684,685,686,687,689,690,691,692,693,694,695,696,697,698,700,701,681,682,699,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,700,701,700,701,681,682,699,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,700,701,681,682,699,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,690,690,690,690,689,689,690,700,701,681,682,699,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,700,701,681,682,699,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,694,695,683,686,692,696,683,686,692,696,683,686,692,696,700,701,681,682,699,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,697,697,2002,2003,2002,2003,2004,2004,2005,2005,2006,2005,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,0,0,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,0,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,702,703,704,702,702,702,703,703,703,704,704,704,702,702,703,703,704,704,702,703,704,703,704,702,703,704,702,703,704,702,703,704,702,703,704,702,703,704,702,703,704,702,703,704,702,703,704,702,703,704,703,704,703,704,702,703,704,702,703,704,702,703,704,702,703,704,702,703,704,702,703,704,702,703,704,702,703,704,703,704,702,703,704,702,702,702,702,703,703,703,703,704,704,704,704,702,703,704,702,703,704,702,703,702,703,702,703,704,702,703,704,702,703,704,702,703,704,702,703,704,702,703,704,702,704,702,704,702,703,704,702,703,704,703,704,703,702,703,704,702,703,704,702,702,703,703,704,704,702,703,704,702,703,704,702,703,704,702,703,704,702,703,704,702,0,702,703,704,702,703,703,704,702,703,704,703,704,702,703,704,702,703,704,702,703,704,702,703,704,702,703,704,702,703,704,702,703,704,702,703,704,702,702,703,704,702,703,704,702,703,704,702,702,703,704,702,703,704,702,703,704,702,703,704,702,703,704,702,703,704,702,703,704,702,703,704,702,703,704,703,703,703,702,703,704,702,706,708,706,0,0,0,0,0,706,708,706,705,706,707,708,709,705,705,705,706,706,706,707,707,708,708,708,709,709,705,705,706,706,707,707,708,708,709,709,705,706,707,708,709,706,705,706,707,708,709,705,706,707,708,709,705,706,707,708,709,705,706,707,708,709,705,705,706,707,708,709,705,706,707,708,709,705,706,707,708,709,705,706,707,708,709,705,706,707,708,709,705,706,707,708,709,705,706,707,708,709,707,705,706,707,708,709,705,706,707,708,709,705,706,707,708,709,705,706,707,708,709,705,706,707,708,709,705,706,708,706,705,706,707,708,709,705,705,705,705,706,706,706,706,708,708,708,708,705,706,707,708,709,705,706,707,708,709,705,706,707,708,709,705,706,707,708,709,705,706,707,708,709,705,706,707,708,709,705,706,707,708,709,705,706,707,708,709,705,706,707,708,709,705,706,707,708,709,705,707,709,705,707,709,705,706,707,708,709,705,706,707,708,709,706,706,708,705,706,707,708,709,705,706,707,708,709,705,705,706,706,707,707,708,708,709,709,705,706,707,708,709,705,706,707,708,709,705,706,707,708,709,705,706,707,708,709,705,706,707,708,709,705,706,707,708,709,0,705,706,707,708,709,705,706,707,708,709,706,708,705,706,707,708,709,705,706,707,708,709,705,706,707,708,709,705,706,707,708,709,705,706,707,708,709,705,706,707,708,709,705,706,707,708,709,705,706,707,708,709,705,706,707,708,709,705,706,707,708,709,705,706,707,708,709,705,705,706,707,708,709,705,706,707,708,709,705,706,707,708,709,705,706,707,708,709,705,706,707,708,709,705,706,707,708,709,705,706,707,708,709,705,706,707,708,709,709,705,706,707,708,709,706,708,706,708,706,708,705,706,707,708,709,705,709,709,709,703,703,703,703,703,703,703,703,703,703,0,703,703,703,703,703,683,703,703,703,703,703,703,703,703,703,703,703,703,703,683,683,683,683,703,703,703,683,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,0,0,0,0,0,0,703,703,703,703,0,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,0,703,703,706,686,686,683,683,683,686,703,703,703,703,706,703,683,0,703,703,703,703,703,703,703,683,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,683,686,706,703,703,703,703,703,703,703,703,703,703,703,703,703,703,706,686,686,683,683,683,686,703,0,703,683,703,703,703,703,703,703,683,703,683,703,703,703,703,703,703,0,0,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,683,703,703,703,683,703,687,684,711,684,687,681,711,711,711,712,713,713,0,713,712,713,0,0,0,0,710,710,710,711,712,713,711,711,712,712,713,713,713,714,710,711,711,712,712,713,713,714,710,711,712,713,714,710,713,711,712,713,711,712,713,711,712,713,714,710,711,712,713,714,710,711,712,713,714,710,711,712,713,711,712,713,714,710,711,712,713,714,710,711,712,713,711,712,713,711,712,713,710,714,711,712,713,714,710,711,712,713,714,710,711,712,713,714,711,712,713,714,710,711,712,713,714,710,713,713,711,712,713,713,713,713,713,711,712,713,711,712,713,711,712,713,711,712,713,711,712,713,711,712,713,710,711,712,713,714,710,714,711,711,712,713,714,714,710,711,712,713,711,712,713,714,710,710,711,711,710,710,711,712,713,711,712,713,713,714,711,712,713,711,712,713,714,710,711,712,713,714,710,711,711,712,712,713,713,714,710,711,712,713,714,710,711,712,713,714,710,711,712,713,711,712,713,714,710,710,711,712,713,710,710,710,710,710,710,711,712,713,711,712,713,710,711,714,711,714,714,711,712,713,712,713,711,712,713,711,712,713,711,712,713,711,712,713,711,712,713,711,712,713,711,712,713,711,712,713,711,712,713,711,712,713,711,712,713,714,714,711,712,713,714,710,711,712,713,714,710,0,711,712,713,714,710,711,712,713,714,710,711,712,713,714,710,711,712,713,711,712,713,711,712,713,711,712,713,714,710,712,713,712,713,712,713,711,712,713,714,710,2007,2007,2007,0,0,715,716,715,715,716,716,715,715,716,716,715,716,715,716,715,716,715,716,715,716,715,716,715,716,715,716,715,716,715,716,715,716,715,716,715,716,715,716,715,716,715,716,715,716,715,716,715,716,715,716,715,716,715,716,715,716,715,716,715,716,715,716,715,716,715,716,715,716,715,716,715,716,715,716,715,715,716,716,715,716,715,716,715,716,715,716,715,716,715,716,715,716,715,716,715,716,715,716,715,716,715,716,715,716,715,716,715,716,715,716,715,716,715,716,715,716,715,716,715,716,715,716,715,716,715,716,715,716,715,716,715,716,715,716,0,0,717,717,717,717,717,717,0,0,717,717,717,717,717,0,0,717,717,717,717,0,0,717,717,717,717,717,717,717,717,0,717,0,0,717,717,717,717,717,0,0,0,0,0,0,0,0,0,0,0,0,718,719,720,721,722,723,724,735,736,737,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,738,739,0,0,0,725,726,727,728,729,730,731,732,733,718,719,720,721,0,0,0,0,718,719,720,721,722,723,724,735,736,737,718,719,720,721,722,723,724,735,736,737,0,0,0,0,725,726,727,718,728,729,730,731,732,733,719,720,721,718,719,720,721,718,719,720,721,722,723,724,721,724,718,719,720,721,722,723,724,718,719,720,721,722,723,724,718,720,721,723,724,718,719,720,721,722,723,724,735,736,737,0,0,0,738,739,0,0,0,0,0,0,0,0,2008,2009,0,0,2010,2009,0,0,0,2010,2008,0,721,724,737,718,719,720,721,722,723,724,735,736,737,743,743,718,719,720,721,722,723,724,735,736,737,743,743,718,720,721,723,724,736,737,725,726,727,718,728,729,730,731,732,719,720,721,722,723,724,735,736,737,743,743,718,719,720,721,722,723,724,725,726,727,718,728,729,730,731,732,733,719,720,721,727,718,718,730,731,732,733,719,719,720,720,721,721,722,722,723,723,724,724,735,735,736,736,737,737,727,718,718,730,731,732,719,719,720,720,721,721,722,722,723,723,724,724,735,735,736,736,737,737,730,727,731,732,738,739,718,733,719,720,738,739,718,720,718,720,718,720,740,741,742,743,738,739,725,726,727,718,728,729,730,731,732,733,719,720,721,722,723,724,735,736,737,758,754,740,740,740,741,741,742,742,742,743,743,743,738,738,738,739,739,739,725,725,726,726,727,727,718,718,728,728,729,729,730,730,731,731,732,732,733,733,719,719,720,720,721,721,722,722,722,723,723,723,724,724,724,735,735,735,736,736,736,737,737,737,758,754,740,740,741,741,742,742,743,743,738,738,739,739,725,725,726,726,727,727,718,718,728,728,729,729,730,730,731,731,732,732,733,733,719,719,720,720,721,721,722,722,723,723,724,724,735,735,736,736,737,737,758,754,740,741,742,743,738,739,725,726,727,718,728,729,730,731,732,733,719,720,721,722,723,724,735,736,737,727,722,735,718,723,736,724,737,740,742,743,738,739,722,723,724,735,736,737,733,719,735,718,720,736,721,737,741,742,719,722,735,718,720,723,736,721,724,737,730,731,732,718,730,731,732,719,720,721,722,723,724,735,736,737,740,742,718,730,731,732,733,719,720,721,722,723,724,735,736,737,740,741,742,743,738,739,725,726,727,718,728,729,730,731,732,733,719,720,721,722,723,724,735,736,737,740,741,742,743,738,739,725,726,727,718,728,729,730,731,732,733,719,720,721,722,723,724,735,736,737,719,722,718,720,723,721,724,740,741,719,722,735,718,720,723,736,721,724,737,719,722,735,720,723,736,720,723,736,721,724,737,738,739,722,722,723,723,724,724,735,735,736,736,737,737,738,739,738,739,738,739,722,722,723,723,724,724,735,735,736,736,737,737,738,739,738,739,722,722,723,723,724,724,735,735,736,736,737,737,738,739,0,758,754,740,741,742,743,738,739,725,726,727,718,728,729,730,731,732,733,719,720,721,722,723,724,735,736,737,758,754,740,741,742,743,738,739,725,726,727,718,728,729,730,731,732,733,719,720,721,722,723,724,735,736,737,718,719,720,721,740,741,742,718,719,720,721,722,723,724,735,736,737,718,719,720,721,718,719,720,721,718,719,720,721,754,740,741,742,743,738,739,725,726,727,718,728,729,730,731,732,733,719,720,721,722,723,724,735,736,737,740,741,742,725,726,727,718,728,729,730,731,732,733,719,720,721,722,723,724,735,736,737,754,740,741,742,743,738,739,725,726,727,718,728,729,730,731,732,733,719,720,721,722,723,724,735,736,737,754,740,741,742,743,738,739,725,726,727,718,728,729,730,731,732,733,719,720,721,722,723,724,735,736,737,740,741,742,743,738,739,725,726,727,718,728,729,730,731,732,733,719,720,721,722,723,724,735,736,737,718,719,720,721,722,723,724,735,736,737,718,719,720,721,722,723,724,735,736,737,718,719,720,721,722,723,724,735,736,737,718,719,720,721,722,723,724,735,736,737,718,719,720,721,722,723,724,735,736,737,718,719,720,721,722,723,724,735,736,737,727,730,731,732,727,730,731,732,733,740,741,742,718,719,720,721,740,741,742,743,738,739,725,726,727,718,728,729,730,731,732,733,719,720,721,722,723,724,735,736,737,718,720,723,736,0,740,741,742,743,738,739,725,726,727,718,728,729,730,731,732,733,719,720,721,722,723,724,735,736,737,754,740,741,742,743,738,739,725,726,727,718,728,729,730,731,732,733,719,720,721,722,723,724,735,736,737,758,754,740,741,742,743,738,739,725,725,726,726,727,718,718,728,728,729,729,730,731,732,733,719,720,721,722,723,724,735,736,737,758,754,740,741,742,743,738,739,725,725,726,726,727,718,718,728,728,729,729,730,731,732,733,719,720,721,722,723,724,735,736,737,754,740,741,742,743,738,739,725,726,727,718,728,729,730,731,732,733,719,720,721,722,723,724,735,736,737,727,730,731,732,754,718,719,720,721,718,719,720,721,722,723,724,718,718,733,719,719,720,720,721,721,722,722,723,723,724,724,735,735,736,736,737,737,718,718,719,719,720,720,721,721,722,722,723,723,724,724,735,735,736,736,737,737,718,719,720,721,722,723,724,0,0,0,718,733,719,720,721,722,723,724,735,736,737,718,719,720,721,722,723,724,735,736,737,758,754,740,741,742,743,738,739,725,726,727,718,728,729,730,731,732,733,719,720,721,722,723,724,735,736,737,0,758,754,740,741,742,743,738,739,725,726,727,718,728,729,730,731,732,733,719,720,721,722,723,724,735,736,737,0,0,0,740,742,743,738,739,722,723,724,735,736,737,740,742,743,738,739,722,723,724,735,736,737,754,740,741,742,743,738,739,725,726,727,718,728,729,730,731,732,733,719,720,721,722,723,724,735,736,737,740,740,740,740,742,742,742,742,743,743,743,743,738,738,738,738,739,739,739,739,722,722,722,722,723,723,723,723,724,724,724,724,735,735,735,735,736,736,736,736,737,737,737,737,754,740,741,742,743,738,739,725,726,727,718,728,729,730,731,732,733,719,720,721,722,723,724,735,736,737,718,719,720,721,718,719,720,722,723,735,736,0,0,740,741,742,725,726,727,718,728,729,730,731,732,733,719,720,721,722,723,724,735,736,737,740,741,742,725,726,727,718,728,729,730,731,732,733,719,720,721,722,723,724,735,736,737,740,741,742,725,726,727,718,728,729,730,731,732,733,719,720,721,722,723,724,735,736,737,740,741,742,725,726,727,718,728,729,730,731,732,733,719,720,721,722,723,724,735,736,737,740,741,742,725,726,727,718,728,729,730,731,732,733,719,720,721,722,723,724,735,736,737,718,719,720,721,754,740,741,742,743,738,738,739,739,725,725,726,726,727,727,718,718,728,728,729,729,730,730,731,731,732,732,733,733,719,719,720,720,721,721,722,722,723,723,724,724,735,735,736,736,737,737,718,719,720,721,758,758,754,740,741,742,743,738,739,725,726,726,727,727,727,718,718,718,718,718,718,718,728,729,730,731,731,732,732,733,719,719,719,719,719,719,720,720,720,720,720,720,720,721,721,721,721,721,721,721,721,721,721,721,722,722,722,722,723,723,723,723,723,724,724,724,724,724,724,724,724,735,735,735,735,736,736,736,736,736,737,737,737,737,737,737,737,737,733,725,727,728,730,731,719,725,728,718,733,719,720,721,722,723,724,735,736,737,726,727,729,731,732,733,740,741,742,740,741,742,725,726,727,728,729,730,731,732,725,726,727,728,729,730,731,732,725,726,727,728,729,730,731,732,725,726,727,728,729,730,731,732,740,741,742,727,730,731,732,727,731,732,733,725,727,728,731,725,728,725,726,728,729,730,732,733,726,729,725,726,727,729,731,733,726,727,729,731,732,740,741,742,743,738,739,725,726,727,718,728,729,730,731,732,733,719,720,721,722,723,724,735,736,737,733,733,733,726,729,732,726,727,729,731,732,733,726,727,729,731,732,733,726,727,729,731,732,733,758,754,740,741,742,743,738,739,725,726,727,718,728,729,730,731,732,733,719,720,721,722,723,724,735,736,737,725,726,727,728,729,731,732,730,725,727,728,731,726,729,732,733,718,733,719,720,721,722,723,724,735,736,737,725,726,727,728,729,731,732,733,754,740,741,742,743,738,739,725,726,727,718,728,729,730,731,732,733,719,720,721,722,723,724,735,736,737,733,740,741,742,725,726,727,718,728,729,730,731,732,733,719,720,721,722,723,724,735,736,737,740,741,742,725,726,727,718,728,729,730,731,732,733,719,720,721,722,723,724,735,736,737,754,740,741,742,743,738,739,725,726,727,718,728,729,730,731,732,733,719,720,721,722,723,724,735,736,737,740,741,742,743,738,739,725,726,727,718,728,729,730,731,732,733,719,720,721,722,723,724,735,736,737,740,741,742,740,742,743,738,739,722,723,724,735,736,737,740,741,742,0,0,0,0,0,718,719,720,721,722,723,724,735,736,737,718,719,720,721,722,723,724,735,736,737,758,754,740,741,742,743,738,739,725,726,727,718,728,729,730,731,732,733,719,720,721,722,723,724,735,736,737,740,741,742,740,741,742,754,758,754,740,741,742,743,738,739,725,726,727,718,728,729,730,731,732,733,719,720,721,722,723,724,735,736,737,758,754,740,740,741,741,742,742,743,743,738,738,739,739,725,725,726,726,727,727,718,718,728,728,729,729,730,730,731,731,732,732,733,733,719,719,720,720,721,721,722,722,723,723,724,724,735,735,736,736,737,737,758,754,740,741,742,743,738,739,725,726,727,718,728,729,730,731,732,733,719,720,721,722,723,724,735,736,737,758,754,740,741,742,743,738,739,725,726,727,718,728,729,730,731,732,733,719,720,721,722,723,724,735,736,737,740,741,742,743,738,739,725,726,727,718,728,729,730,731,732,733,719,720,721,722,723,724,735,736,737,758,754,740,741,742,743,738,739,725,726,727,718,728,729,730,731,732,733,719,720,721,722,723,724,735,736,737,725,726,727,728,729,730,731,732,733,758,740,741,742,725,726,727,718,728,729,730,731,732,733,719,720,721,725,726,727,718,728,729,730,731,732,733,719,720,721,718,719,720,721,733,718,719,720,721,722,723,724,718,733,719,720,721,725,726,727,718,728,729,730,731,732,733,719,720,721,722,723,724,735,736,737,740,741,742,725,726,727,718,728,729,730,731,732,733,719,720,721,722,723,724,735,736,737,0,0,0,718,733,719,720,721,718,733,719,720,721,718,733,719,720,721,722,723,724,735,736,737,718,733,719,720,721,726,729,732,726,729,732,726,729,732,726,729,732,0,0,0,0,725,728,758,726,729,718,719,720,721,722,723,724,735,736,737,740,741,742,718,719,720,721,722,723,724,735,736,737,718,719,720,721,722,723,724,735,736,737,740,741,742,718,719,720,721,722,723,724,735,736,737,740,741,742,743,738,739,725,726,727,718,728,729,730,731,732,733,719,720,721,722,723,724,735,736,737,725,725,725,726,726,727,727,727,727,727,718,718,728,728,729,729,730,730,730,731,731,731,731,732,732,732,732,733,733,733,719,719,720,720,721,721,722,722,723,723,724,724,735,735,736,736,737,737,718,719,720,721,725,726,727,727,718,718,728,729,730,730,731,731,732,732,733,719,719,720,720,721,721,722,722,723,723,724,724,735,735,736,736,737,737,730,727,731,732,733,727,730,731,732,730,727,731,733,727,732,740,741,742,725,726,727,718,728,729,730,731,732,733,719,720,721,722,723,724,735,736,737,727,718,730,731,732,733,719,720,721,722,723,724,740,741,742,738,739,718,719,720,721,722,723,724,735,736,737,718,733,719,720,721,718,719,720,721,738,739,722,723,724,735,736,737,754,740,741,742,743,738,739,725,726,727,718,728,729,730,731,732,733,719,720,721,722,723,724,735,736,737,754,732,732,732,719,722,719,722,732,732,732,732,732,732,732,718,719,720,721,0,725,726,727,727,718,718,728,729,730,730,731,731,732,732,733,733,719,719,720,720,721,721,722,722,723,723,724,724,735,735,736,736,737,737,718,719,720,721,718,719,720,721,732,0,718,719,720,721,740,741,742,743,738,739,725,726,727,718,728,729,730,731,732,733,719,720,721,722,723,724,735,736,737,740,742,722,723,724,735,736,737,740,741,742,743,738,739,725,726,727,718,728,729,730,731,732,733,719,720,721,722,723,724,735,736,737,740,741,742,743,738,739,725,726,727,718,728,729,730,731,732,733,719,720,721,722,723,724,735,736,737,740,741,742,743,738,739,725,726,727,718,728,729,730,731,732,733,719,720,721,722,723,724,735,736,737,740,741,742,725,726,727,718,728,729,730,731,732,733,719,720,721,722,723,724,735,736,737,740,741,742,743,738,739,725,726,727,718,728,729,730,731,732,733,719,720,721,722,723,724,735,736,737,740,741,742,743,738,739,725,726,727,718,728,729,730,731,732,733,719,720,721,722,723,724,735,736,737,740,741,742,743,738,739,725,726,727,718,728,729,730,731,732,733,719,720,721,722,723,724,735,736,737,740,741,742,743,738,739,725,726,727,718,728,729,730,731,732,733,719,720,721,722,723,724,735,736,737,718,719,720,721,718,719,720,721,718,718,719,719,720,720,721,721,722,722,723,723,724,724,735,735,736,736,737,737,718,718,719,719,720,720,721,721,722,722,723,723,724,724,735,735,736,736,737,737,718,719,720,721,722,723,724,719,722,718,719,720,721,727,730,731,732,722,723,724,735,736,737,722,723,724,735,736,737,722,723,724,735,736,737,722,723,724,735,736,737,718,719,720,721,722,723,724,735,736,737,754,740,741,742,743,738,739,725,726,727,718,728,729,730,731,732,733,719,720,721,722,723,724,735,736,737,740,741,742,743,738,738,739,739,725,726,727,718,728,729,730,731,732,733,719,720,721,722,723,724,735,736,737,722,722,722,722,722,722,722,722,722,722,723,723,723,723,723,723,723,723,723,723,724,724,724,724,724,724,724,724,724,724,735,735,735,735,735,735,735,735,735,735,736,736,736,736,736,736,736,736,736,736,737,737,737,737,737,737,737,737,737,737,740,741,742,743,738,739,725,726,727,718,728,729,730,731,732,733,719,720,721,722,723,724,735,736,737,722,722,722,722,722,722,722,722,722,722,723,723,723,723,723,723,723,723,723,723,724,724,724,724,724,724,724,724,724,724,735,735,735,735,735,735,735,735,735,735,736,736,736,736,736,736,736,736,736,736,737,737,737,737,737,737,737,737,737,737,718,719,720,721,722,723,724,740,741,742,733,738,739,718,719,720,721,722,723,724,735,736,737,727,718,718,730,731,732,733,719,719,720,720,721,721,722,722,723,723,724,724,735,735,736,736,737,737,727,718,718,730,731,732,719,719,720,720,721,721,722,722,723,723,724,724,735,735,736,736,737,737,730,727,731,732,727,727,718,718,730,730,731,731,732,732,733,733,719,719,720,720,721,721,722,722,723,723,724,724,735,735,736,736,737,737,0,738,739,718,733,719,720,721,722,723,724,735,736,737,733,725,726,727,728,729,730,731,732,725,726,727,728,729,730,731,732,733,754,740,741,742,743,738,739,725,726,727,718,728,729,730,731,732,733,719,720,721,722,723,724,735,736,737,758,754,740,741,742,743,738,739,725,726,727,718,728,729,730,731,732,733,719,720,721,722,723,724,735,736,737,725,728,726,729,732,733,738,739,725,726,727,718,728,729,730,731,732,733,719,720,721,722,723,724,735,736,737,758,726,725,727,728,731,726,729,732,726,725,727,728,731,726,729,732,726,758,725,726,728,729,727,730,731,732,718,719,720,721,718,720,721,723,724,736,737,758,754,740,741,742,743,738,739,725,726,727,718,728,729,730,731,732,733,719,720,721,722,722,723,723,724,724,735,735,736,736,737,737,758,754,740,741,742,743,738,739,725,726,727,718,728,729,730,731,732,733,719,720,721,722,723,724,735,736,737,718,719,720,721,758,754,740,741,742,743,738,739,725,726,727,718,728,729,730,731,732,733,719,720,721,722,723,724,735,736,737,740,741,742,743,738,739,725,726,727,718,728,729,730,731,732,733,719,720,721,722,723,724,735,736,737,740,741,742,743,738,739,725,726,727,718,728,729,730,731,732,733,719,720,721,722,723,724,735,736,737,740,741,742,743,738,739,725,726,727,718,728,729,730,731,732,733,719,720,721,722,723,724,735,736,737,0,0,0,0,0,740,741,742,740,741,742,758,754,740,741,742,743,738,739,725,726,727,718,728,729,730,731,732,733,719,720,721,722,723,724,735,736,737,0,0,0,0,0,0,0,758,754,740,741,742,743,738,739,725,726,727,718,728,729,730,731,732,733,719,720,721,722,723,724,735,736,737,757,733,721,746,752,724,737,749,732,740,741,742,722,723,724,735,736,737,722,723,724,735,736,737,722,723,724,735,736,737,722,723,724,735,736,737,725,726,727,728,729,730,731,732,718,733,719,720,721,722,723,724,735,736,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,755,756,757,636,328,733,719,720,721,744,745,746,750,751,752,722,723,724,735,736,737,748,727,749,730,731,732,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2010,2008,2009,718,719,720,721,722,723,724,735,736,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2010,2008,2009,718,719,720,721,722,723,724,735,736,737,2009,721,724,737,2010,2008,2009,718,719,720,721,722,723,724,735,736,737,2010,2008,2009,718,719,720,721,722,723,724,735,736,737,2008,2009,718,720,721,723,724,736,737,2010,2008,2009,718,719,720,721,722,723,724,735,736,737,2009,721,724,737,2010,2008,2009,718,719,720,721,722,723,724,735,736,737,2010,2008,2009,718,719,720,721,722,723,724,735,736,737,2008,2009,718,720,721,723,724,736,737,2008,2009,718,720,721,723,724,736,737,2009,721,724,737,2008,2009,718,720,721,723,724,736,737,2008,2009,718,720,721,723,724,736,737,2008,2009,718,720,721,723,724,736,737,2008,2009,2010,718,719,720,721,722,723,724,735,736,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2010,2008,2009,718,719,720,721,722,723,724,735,736,737,2009,721,724,737,2010,2008,2009,718,719,720,721,722,723,724,735,736,737,2010,2008,2009,718,719,720,721,722,723,724,735,736,737,2008,2009,718,720,721,723,724,736,737,2010,2008,2009,718,719,720,721,722,723,724,735,736,737,2009,721,724,737,2010,2008,2009,718,719,720,721,722,723,724,735,736,737,2010,2008,2009,718,719,720,721,722,723,724,735,736,737,2008,2009,718,720,721,723,724,736,737,2009,2008,718,733,720,721,723,724,736,737,2009,721,724,737,2008,2009,718,720,721,723,724,736,737,2008,2009,718,720,721,723,724,736,737,2008,2009,718,720,721,723,724,736,737,2008,2009,718,720,721,723,724,736,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2008,2009,718,720,721,723,724,736,737,2009,721,724,737,2008,2009,718,720,721,723,724,736,737,2008,2009,718,720,721,723,724,736,737,2008,2009,718,720,721,723,724,736,737,2008,2009,718,720,721,723,724,736,737,2009,721,724,737,2008,2009,718,720,721,723,724,736,737,2008,2009,718,720,721,723,724,736,737,2008,2009,718,720,721,723,724,736,737,2008,2009,718,720,721,723,724,736,737,2009,721,724,737,2008,2009,718,720,721,723,724,736,737,2008,2009,718,720,721,723,724,736,737,2008,2009,718,720,721,723,724,736,737,755,756,757,636,328,733,719,720,721,744,745,746,750,751,752,722,723,724,735,736,737,748,727,749,730,731,732,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2010,2008,2009,718,719,720,721,722,723,724,735,736,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2010,2008,2009,718,719,720,721,722,723,724,735,736,737,2009,721,724,737,2010,2008,2009,718,719,720,721,722,723,724,735,736,737,2010,2008,2009,718,719,720,721,722,723,724,735,736,737,2008,2009,718,720,721,723,724,736,737,2010,2008,2009,718,719,720,721,722,723,724,735,736,737,2009,721,724,737,2010,2008,2009,718,719,720,721,722,723,724,735,736,737,2010,2008,2009,718,719,720,721,722,723,724,735,736,737,2008,2009,718,720,721,723,724,736,737,2008,2009,718,720,721,723,724,736,737,2009,721,724,737,2008,2009,718,720,721,723,724,736,737,2008,2009,718,720,721,723,724,736,737,2008,2009,718,720,721,723,724,736,737,2010,2008,2009,718,719,720,721,722,723,724,735,736,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2010,2008,2009,718,719,720,721,722,723,724,735,736,737,2009,721,724,737,2010,2008,2009,718,719,720,721,722,723,724,735,736,737,2010,2008,2009,718,719,720,721,722,723,724,735,736,737,2008,2009,718,720,721,723,724,736,737,2010,2008,2009,718,719,720,721,722,723,724,735,736,737,2009,721,724,737,2010,2008,2009,718,719,720,721,722,723,724,735,736,737,2010,2008,2009,718,719,720,721,722,723,724,735,736,737,2008,2009,718,720,721,723,724,736,737,2008,2009,718,720,721,723,724,736,737,2009,721,724,737,2008,2009,718,720,721,723,724,736,737,2008,2009,718,720,721,723,724,736,737,2008,2009,718,720,721,723,724,736,737,2008,2009,718,720,721,723,724,736,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2008,2009,718,720,721,723,724,736,737,2009,721,724,737,2008,2009,718,720,721,723,724,736,737,2008,2009,718,720,721,723,724,736,737,2008,2009,718,720,721,723,724,736,737,2008,2009,718,720,721,723,724,736,737,2009,721,724,737,2008,2009,718,720,721,723,724,736,737,2008,2009,718,720,721,723,724,736,737,2008,2009,718,720,721,723,724,736,737,2008,2009,718,720,721,723,724,736,737,2009,721,724,737,2008,2009,718,720,721,723,724,736,737,2008,2009,718,720,721,723,724,736,737,2008,2009,718,720,721,723,724,736,737,756,757,328,733,720,721,745,746,751,752,723,724,736,737,748,727,749,731,732,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2008,2009,718,720,721,723,724,736,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2008,2009,718,720,721,723,724,736,737,2009,721,724,737,2008,2009,718,720,721,723,724,736,737,2008,2009,718,720,721,723,724,736,737,2008,2009,718,720,721,723,724,736,737,2008,2009,718,720,721,723,724,736,737,2009,721,724,737,2008,2009,718,720,721,723,724,736,737,2008,2009,718,720,721,723,724,736,737,2008,2009,718,720,721,723,724,736,737,2008,2009,718,720,721,723,724,736,737,2009,721,724,737,2008,2009,718,720,721,723,724,736,737,2008,2009,718,720,721,723,724,736,737,2008,2009,718,720,721,723,724,736,737,2008,2009,718,720,721,723,724,736,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2008,2009,718,720,721,723,724,736,737,2009,721,724,737,2008,2009,718,720,721,723,724,736,737,2008,2009,718,720,721,723,724,736,737,2008,2009,718,720,721,723,724,736,737,2008,2009,718,720,721,723,724,736,737,2009,721,724,737,2008,2009,718,720,721,723,724,736,737,2008,2009,718,720,721,723,724,736,737,2008,2009,718,720,721,723,724,736,737,2008,2009,718,720,721,723,724,736,737,2009,721,724,737,2008,2009,718,720,721,723,724,736,737,2008,2009,718,720,721,723,724,736,737,2008,2009,718,720,721,723,724,736,737,2008,2009,718,720,721,723,724,736,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2009,721,724,737,2008,2009,718,720,721,723,724,736,737,2009,721,724,737,2008,2009,718,720,721,723,724,736,737,2008,2009,718,720,721,723,724,736,737,2008,2009,718,720,721,723,724,736,737,2008,2009,718,720,721,723,724,736,737,2009,721,724,737,2008,2009,718,720,721,723,724,736,737,2008,2009,718,720,721,723,724,736,737,2008,2009,718,720,721,723,724,736,737,2008,2009,718,720,721,723,724,736,737,2009,721,724,737,2008,2009,718,720,721,723,724,736,737,2008,2009,718,720,721,723,724,736,737,2008,2009,718,720,721,723,724,736,737,0,0,0,0,0,755,756,757,755,756,757,755,756,757,755,756,757,755,756,757,755,755,755,756,756,756,757,757,757,755,755,756,756,757,757,755,756,757,755,756,757,755,756,757,755,756,757,755,756,757,755,756,757,755,756,757,755,756,757,755,756,757,755,756,757,755,756,757,755,756,757,755,756,757,755,756,757,755,756,757,755,756,757,755,756,757,755,756,757,755,756,757,755,756,757,755,756,757,755,756,757,755,756,757,755,756,757,755,756,757,755,756,757,755,756,757,755,756,757,755,756,757,755,755,755,755,756,756,756,756,757,757,757,757,755,756,757,755,756,757,755,756,757,755,756,757,755,756,757,755,756,757,755,755,756,756,757,757,755,756,757,755,756,757,755,756,757,755,756,757,755,756,757,755,756,757,755,756,757,755,756,757,755,756,757,755,756,757,755,756,757,755,755,756,756,757,757,755,756,757,755,756,757,755,756,757,755,756,757,755,756,757,755,756,757,755,756,757,755,756,757,755,756,757,755,756,757,755,756,757,755,756,757,755,756,757,755,756,757,755,756,757,755,756,757,755,756,757,755,756,757,755,756,757,755,756,757,755,755,756,756,757,757,755,756,757,755,756,757,755,756,757,755,756,757,755,756,757,755,756,757,755,756,757,755,756,757,755,756,757,755,756,757,755,756,757,755,756,757,755,756,757,755,756,757,757,755,756,757,755,756,757,756,757,0,0,0,0,0,0,0,0,764,765,766,767,768,769,764,765,766,767,768,769,764,765,766,767,768,769,764,765,766,767,768,769,764,765,766,767,768,769,764,765,764,765,764,765,764,765,764,765,766,767,768,769,764,765,766,767,768,769,764,765,766,767,768,769,764,765,766,767,768,769,764,765,764,764,765,764,765,766,767,768,769,764,765,766,767,768,769,764,765,764,765,766,767,768,769,764,765,766,767,768,769,764,765,766,767,768,769,764,765,766,767,768,769,764,765,766,767,768,769,764,765,766,767,768,769,764,765,765,765,765,765,766,767,768,769,764,768,764,765,764,765,765,2011,766,767,768,769,764,765,766,767,768,769,764,765,766,767,768,769,764,765,766,767,768,769,764,765,766,767,768,769,764,765,766,767,768,769,764,765,764,765,766,767,768,769,764,765,636,328,753,0,0,748,747,749,643,636,328,753,636,328,753,636,328,753,0,0,0,0,748,636,328,747,749,643,753,636,328,753,636,328,753,753,636,328,753,636,328,753,328,753,636,328,753,0,0,0,0,0,753,636,328,753,636,328,753,328,753,748,636,328,747,749,753,636,328,753,748,636,328,747,749,643,753,748,636,636,328,328,747,749,643,753,753,748,636,636,328,328,747,749,753,753,747,748,749,636,328,643,328,328,328,748,636,328,747,749,643,753,748,748,636,636,328,328,747,747,749,749,643,643,753,753,748,748,636,636,328,328,747,747,749,749,643,643,753,753,748,636,328,747,749,643,753,747,748,749,636,328,753,643,636,328,753,636,328,753,748,636,328,747,749,753,748,636,328,747,749,753,748,636,328,747,749,643,753,748,636,328,747,749,753,748,636,328,747,749,643,753,748,636,328,747,749,643,753,636,328,753,636,328,753,748,636,328,747,749,643,753,748,636,328,747,749,643,753,636,328,753,636,328,753,636,328,753,636,328,753,636,328,753,748,636,328,747,749,643,753,748,636,328,747,749,643,753,748,636,328,747,749,643,753,748,636,328,747,749,643,753,748,636,328,747,749,643,753,636,328,753,636,328,753,636,328,753,636,328,753,636,328,753,636,328,753,748,747,749,748,747,749,643,636,328,753,748,636,328,747,749,643,753,748,636,328,747,749,753,328,748,636,328,747,749,643,753,748,636,328,747,749,643,753,748,636,328,747,747,749,643,643,753,753,748,636,328,747,747,749,643,643,753,753,748,636,328,747,749,643,753,748,747,749,636,328,753,636,328,753,636,636,328,328,643,753,753,636,636,328,328,753,753,636,328,753,636,328,643,753,636,328,753,748,636,328,747,749,643,753,748,636,328,747,749,643,753,748,636,328,747,749,643,753,748,636,328,747,749,643,753,636,328,753,636,328,748,636,328,747,749,643,753,748,636,328,747,749,643,753,748,636,328,747,749,643,753,748,636,328,747,749,643,753,748,636,328,747,749,643,753,636,328,753,748,748,636,636,328,328,747,747,749,749,643,643,753,753,636,328,753,748,748,748,636,636,636,328,328,328,328,328,747,749,749,643,753,753,753,753,753,753,753,753,753,753,753,753,643,748,636,747,636,328,643,753,748,749,643,748,747,749,748,747,749,748,747,749,748,747,749,748,747,749,748,749,643,748,747,749,643,747,749,643,748,643,748,636,328,747,749,753,748,749,748,636,328,747,749,643,753,643,643,643,749,748,749,643,748,749,643,748,749,643,748,636,328,747,749,643,753,748,749,747,748,749,643,636,328,643,753,748,749,643,748,636,328,747,749,643,753,643,748,636,328,747,749,643,753,748,636,328,747,749,643,753,748,636,328,747,749,643,753,748,636,328,747,749,643,753,636,328,753,636,328,753,748,636,328,747,749,643,753,748,636,328,747,749,643,753,748,748,636,636,328,328,747,747,749,749,643,643,753,753,748,636,328,747,749,643,753,748,636,328,747,749,643,753,748,636,328,747,749,643,753,748,636,328,747,749,643,753,748,747,749,643,748,636,328,747,749,643,753,748,636,328,747,749,643,753,636,328,753,643,636,328,753,636,328,643,753,748,636,328,747,749,643,753,748,636,328,747,749,643,753,636,328,643,753,636,328,643,753,636,328,643,753,636,328,643,753,749,749,749,749,0,0,0,0,725,726,636,328,753,636,328,753,636,328,753,636,328,753,748,636,328,747,749,643,753,748,748,748,748,748,636,636,328,328,747,747,747,749,749,749,749,643,643,643,643,753,753,636,328,753,748,748,636,636,328,328,747,747,749,749,643,753,753,747,748,749,643,748,747,749,747,748,643,748,643,749,748,636,328,747,749,643,753,748,636,328,747,749,643,753,636,328,753,636,328,643,753,636,328,753,748,636,328,747,749,643,753,749,749,749,636,636,749,749,749,749,749,749,749,636,328,753,748,748,636,636,328,328,747,747,749,749,643,643,753,753,636,328,753,636,328,753,749,0,748,636,328,747,749,753,636,328,753,748,636,328,747,749,643,753,748,636,328,747,749,643,753,748,636,328,747,749,643,753,748,636,328,747,749,643,753,748,636,328,747,749,643,753,748,636,328,747,749,643,753,748,636,328,747,749,643,753,748,636,328,747,749,643,753,748,636,328,747,749,643,753,636,328,753,636,328,753,636,636,328,328,753,753,636,636,328,328,753,753,636,328,753,636,636,328,753,748,747,749,636,328,753,748,636,328,747,749,643,753,748,636,328,747,749,643,753,748,636,328,747,749,643,753,636,328,753,643,636,328,753,748,636,636,328,328,747,749,643,753,753,748,636,636,328,328,747,749,753,753,747,748,749,748,748,636,636,328,328,747,747,749,749,643,643,753,753,636,328,643,753,643,748,747,749,748,747,749,643,748,636,328,747,749,643,753,748,636,328,747,749,643,753,749,643,748,636,328,747,749,643,753,749,748,749,749,748,749,749,725,726,748,747,749,636,328,753,328,753,748,636,328,747,749,643,753,748,636,328,747,749,643,753,636,328,753,748,636,328,747,749,643,753,748,636,328,747,749,643,753,748,636,328,747,749,643,753,748,636,328,747,749,643,753,748,636,328,747,749,643,753,0,0,0,0,748,636,328,747,749,643,753,749,748,747,749,748,636,328,747,749,753,636,328,643,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,636,328,748,727,749,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,636,328,753,753,753,753,753,753,636,328,753,753,636,328,753,636,328,753,328,753,636,328,753,753,636,328,753,636,328,753,328,753,328,753,753,328,753,328,753,328,753,636,328,753,753,753,753,753,753,636,328,753,753,636,328,753,636,328,753,328,753,636,328,753,753,636,328,753,636,328,753,328,753,328,643,753,753,328,753,328,753,328,753,328,753,753,753,753,753,753,328,753,753,328,753,328,753,328,753,328,753,753,328,753,328,753,328,753,328,753,753,328,753,328,753,328,753,636,328,748,727,749,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,636,328,753,753,753,753,753,753,636,328,753,753,636,328,753,636,328,753,328,753,636,328,753,753,636,328,753,636,328,753,328,753,328,753,753,328,753,328,753,328,753,636,328,753,753,753,753,753,753,636,328,753,753,636,328,753,636,328,753,328,753,636,328,753,753,636,328,753,636,328,753,328,753,328,753,753,328,753,328,753,328,753,328,753,753,753,753,753,753,328,753,753,328,753,328,753,328,753,328,753,753,328,753,328,753,328,753,328,753,753,328,753,328,753,328,753,328,748,727,749,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,328,753,753,753,753,753,753,328,753,753,328,753,328,753,328,753,328,753,753,328,753,328,753,328,753,328,753,753,328,753,328,753,328,753,328,753,753,753,753,753,753,328,753,753,328,753,328,753,328,753,328,753,753,328,753,328,753,328,753,328,753,753,328,753,328,753,328,753,328,753,753,753,753,753,753,328,753,753,328,753,328,753,328,753,328,753,753,328,753,328,753,328,753,328,753,753,328,753,328,753,328,753,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,728,729,728,729,733,721,732,733,719,720,721,730,731,732,733,719,720,721,730,731,732,733,720,721,731,732,744,745,746,0,0,0,744,745,746,744,745,746,744,745,746,746,744,745,746,744,745,746,745,746,744,745,746,746,744,745,746,744,745,746,745,746,744,745,746,744,745,746,744,744,745,745,746,746,744,744,745,745,746,746,744,745,746,744,744,744,745,745,745,746,746,746,744,744,745,745,746,746,744,745,746,744,745,746,744,745,746,744,745,746,744,745,746,744,745,746,744,745,746,744,745,746,744,745,746,744,745,746,744,745,746,744,745,746,744,745,745,746,744,744,745,745,746,746,744,744,745,745,746,746,744,744,745,745,746,746,744,745,746,744,745,746,744,745,746,744,745,746,744,745,746,744,745,746,744,745,746,744,745,746,744,745,746,744,745,746,744,745,746,744,745,746,744,745,746,744,745,746,744,745,746,744,745,746,745,744,745,746,744,745,746,744,745,746,744,745,746,744,745,746,744,745,746,744,744,745,745,746,746,744,744,745,745,746,746,744,745,746,744,745,746,744,745,746,744,745,746,744,745,746,744,745,746,744,745,746,744,745,746,744,744,744,744,745,745,745,745,746,746,746,746,744,745,746,744,745,744,745,746,744,745,746,744,745,746,744,745,746,744,745,746,744,744,745,745,746,746,744,744,744,745,745,745,745,746,746,746,746,746,746,746,744,745,746,744,745,746,744,745,746,744,745,746,744,745,746,744,745,746,744,745,746,744,745,746,744,745,746,744,745,746,744,745,746,744,745,746,744,745,746,744,745,746,744,745,746,744,744,745,745,746,746,744,745,746,744,745,746,744,745,746,744,745,746,744,745,746,744,745,746,744,745,746,0,0,0,744,745,746,744,745,746,744,745,746,744,745,746,744,745,746,744,745,746,744,744,745,745,746,746,744,744,745,745,746,746,744,745,746,744,745,746,744,745,746,744,745,746,744,745,746,744,744,744,744,745,745,746,746,744,745,746,744,745,746,744,745,746,744,745,746,744,745,746,744,745,746,744,745,746,744,745,746,744,745,746,744,745,746,744,745,746,744,744,745,745,746,746,744,744,745,745,746,746,744,745,746,744,744,745,746,744,745,746,744,745,746,744,745,746,744,745,746,744,745,746,744,745,746,744,744,744,744,744,744,744,744,744,744,745,745,745,745,745,745,745,745,745,745,746,746,746,746,746,746,746,746,746,746,744,745,746,744,744,744,744,744,744,744,744,744,744,745,745,745,745,745,745,745,745,745,745,746,746,746,746,746,746,746,746,746,746,744,745,746,744,745,746,744,744,745,745,746,746,744,744,745,745,746,746,744,744,745,745,746,746,744,745,746,744,745,746,744,745,746,744,745,746,745,746,744,744,744,744,745,745,745,745,746,746,746,746,744,745,746,744,745,746,744,745,746,744,745,746,744,745,746,744,745,746,744,745,746,746,744,745,746,744,745,746,744,745,746,744,745,746,744,745,746,744,745,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,744,745,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,744,745,746,746,746,746,746,746,744,745,746,746,744,745,746,744,745,746,745,746,744,745,746,746,744,745,746,744,745,746,745,746,745,746,746,745,746,745,746,745,746,744,745,746,746,746,746,746,746,744,745,746,746,744,745,746,744,745,746,745,746,744,745,746,746,744,745,746,744,745,746,745,746,745,746,746,745,746,745,746,745,746,745,746,746,746,746,746,746,745,746,746,745,746,745,746,745,746,745,746,746,745,746,745,746,745,746,745,746,746,745,746,745,746,745,746,744,745,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,744,745,746,746,746,746,746,746,744,745,746,746,744,745,746,744,745,746,745,746,744,745,746,746,744,745,746,744,745,746,745,746,745,746,746,745,746,745,746,745,746,744,745,746,746,746,746,746,746,744,745,746,746,744,745,746,744,745,746,745,746,744,745,746,746,744,745,746,744,745,746,745,746,745,746,746,745,746,745,746,745,746,745,746,746,746,746,746,746,745,746,746,745,746,745,746,745,746,745,746,746,745,746,745,746,745,746,745,746,746,745,746,745,746,745,746,745,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,745,746,746,746,746,746,746,745,746,746,745,746,745,746,745,746,745,746,746,745,746,745,746,745,746,745,746,746,745,746,745,746,745,746,745,746,746,746,746,746,746,745,746,746,745,746,745,746,745,746,745,746,746,745,746,745,746,745,746,745,746,746,745,746,745,746,745,746,745,746,746,746,746,746,746,745,746,746,745,746,745,746,745,746,745,746,746,745,746,745,746,745,746,745,746,746,745,746,745,746,745,746,0,0,0,0,0,0,724,722,723,724,722,723,724,723,724,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2008,2009,0,0,2010,2009,0,0,2010,2008,0,743,743,743,743,743,743,754,740,741,742,740,741,742,754,2011,757,746,752,749,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,755,756,757,636,328,744,745,746,750,751,752,748,749,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2010,2008,2009,2009,2009,2009,2009,2009,2010,2008,2009,2009,2010,2008,2009,2010,2008,2009,2008,2009,2010,2008,2009,2009,2010,2008,2009,2010,2008,2009,2008,2009,2008,2009,2009,2008,2009,2008,2009,2008,2009,2008,2009,2010,2009,2009,2009,2009,2009,2010,2008,2009,2009,2010,2008,2009,2010,2008,2009,2008,2009,2010,2008,2009,2009,2010,2008,2009,2010,2008,2009,2008,2009,2009,2008,2009,2008,2009,2008,2009,2008,2009,2008,2009,2009,2009,2009,2009,2009,2008,2009,2009,2008,2009,2008,2009,2008,2009,2008,2009,2009,2008,2009,2008,2009,2008,2009,2008,2009,2009,2008,2009,2008,2009,2008,2009,755,756,757,636,328,744,745,746,750,751,752,748,749,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2010,2008,2009,2009,2009,2009,2009,2009,2010,2008,2009,2009,2010,2008,2009,2010,2008,2009,2008,2009,2010,2008,2009,2009,2010,2008,2009,2010,2008,2009,2008,2009,2008,2009,2009,2008,2009,2008,2009,2008,2009,2010,2008,2009,2009,2009,2009,2009,2009,2010,2008,2009,2009,2010,2008,2009,2010,2008,2009,2008,2009,2010,2008,2009,2009,2010,2008,2009,2010,2008,2009,2008,2009,2008,2009,2009,2008,2009,2008,2009,2008,2009,2008,2009,2009,2009,2009,2009,2009,2008,2009,2009,2008,2009,2008,2009,2008,2009,2008,2009,2009,2008,2009,2008,2009,2008,2009,2008,2009,2009,2008,2009,2008,2009,2008,2009,756,757,328,745,746,751,752,748,749,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2008,2009,2009,2009,2009,2009,2009,2008,2009,2009,2008,2009,2008,2009,2008,2009,2008,2009,2009,2008,2009,2008,2009,2008,2009,2008,2009,2009,2008,2009,2008,2009,2008,2009,2008,2009,2009,2009,2009,2009,2009,2008,2009,2009,2008,2009,2008,2009,2008,2009,2008,2009,2009,2008,2009,2008,2009,2008,2009,2008,2009,2009,2008,2009,2008,2009,2008,2009,2008,2009,2009,2009,2009,2009,2009,2008,2009,2009,2008,2009,2008,2009,2008,2009,2008,2009,2009,2008,2009,2008,2009,2008,2009,2008,2009,2009,2008,2009,2008,2009,2008,2009,2008,2009,0,2010,2009,0,2010,2008,0,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2010,2008,2009,2009,2009,2009,2009,2009,2010,2008,2009,2009,2010,2008,2009,2010,2008,2009,2008,2009,2010,2008,2009,2009,2010,2008,2009,2010,2008,2009,2008,2009,2008,2009,2009,2008,2009,2008,2009,2008,2009,2008,2009,2010,2009,2009,2009,2009,2009,2010,2008,2009,2009,2010,2008,2009,2010,2008,2009,2008,2009,2010,2008,2009,2009,2010,2008,2009,2010,2008,2009,2008,2009,2009,2008,2009,2008,2009,2008,2009,2008,2009,2008,2009,2009,2009,2009,2009,2009,2008,2009,2009,2008,2009,2008,2009,2008,2009,2008,2009,2009,2008,2009,2008,2009,2008,2009,2008,2009,2009,2008,2009,2008,2009,2008,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2010,2008,2009,2009,2009,2009,2009,2009,2010,2008,2009,2009,2010,2008,2009,2010,2008,2009,2008,2009,2010,2008,2009,2009,2010,2008,2009,2010,2008,2009,2008,2009,2008,2009,2009,2008,2009,2008,2009,2008,2009,2010,2008,2009,2009,2009,2009,2009,2009,2010,2008,2009,2009,2010,2008,2009,2010,2008,2009,2008,2009,2010,2008,2009,2009,2010,2008,2009,2010,2008,2009,2008,2009,2008,2009,2009,2008,2009,2008,2009,2008,2009,2008,2009,2009,2009,2009,2009,2009,2008,2009,2009,2008,2009,2008,2009,2008,2009,2008,2009,2009,2008,2009,2008,2009,2008,2009,2008,2009,2009,2008,2009,2008,2009,2008,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2008,2009,2009,2009,2009,2009,2009,2008,2009,2009,2008,2009,2008,2009,2008,2009,2008,2009,2009,2008,2009,2008,2009,2008,2009,2008,2009,2009,2008,2009,2008,2009,2008,2009,2008,2009,2009,2009,2009,2009,2009,2008,2009,2009,2008,2009,2008,2009,2008,2009,2008,2009,2009,2008,2009,2008,2009,2008,2009,2008,2009,2009,2008,2009,2008,2009,2008,2009,2008,2009,2009,2009,2009,2009,2009,2008,2009,2009,2008,2009,2008,2009,2008,2009,2008,2009,2009,2008,2009,2008,2009,2008,2009,2008,2009,2009,2008,2009,2008,2009,2008,2009,750,751,752,750,751,752,750,751,752,750,751,752,0,0,0,752,750,751,752,750,751,752,751,752,750,751,752,750,750,751,751,752,752,750,750,751,751,752,752,750,751,752,750,750,750,751,751,751,752,752,752,750,750,751,751,752,752,750,751,752,750,751,752,750,751,752,750,751,752,750,751,752,750,751,752,750,751,752,750,751,752,750,751,752,750,751,752,750,751,752,750,751,752,750,751,751,752,750,750,751,751,752,752,750,750,751,751,752,752,750,750,751,751,752,752,750,751,752,750,751,752,750,751,752,750,751,752,750,751,752,750,751,752,750,751,752,750,751,752,750,751,752,750,751,752,750,751,752,750,751,752,750,751,752,750,751,752,750,751,752,750,751,752,751,750,751,752,750,751,752,750,751,752,750,751,752,750,751,752,750,750,751,751,752,752,750,750,751,751,752,752,750,751,752,750,751,752,750,751,752,750,751,752,750,751,752,750,751,752,750,751,752,750,750,750,750,751,751,751,751,752,752,752,752,750,751,752,750,751,750,751,752,750,751,752,750,751,752,750,751,752,750,751,752,750,750,751,751,752,752,750,750,750,751,751,751,751,752,752,752,752,752,752,752,750,751,752,750,751,752,750,751,752,750,751,752,750,751,752,750,751,752,750,751,752,750,751,752,750,751,752,750,751,752,750,751,752,750,751,752,750,751,752,750,751,752,750,751,752,750,750,751,751,752,752,750,751,752,750,751,752,750,751,752,750,751,752,750,751,752,750,751,752,750,751,752,750,751,752,750,751,752,750,751,752,750,751,752,750,751,752,750,750,751,751,752,752,750,750,751,751,752,752,750,751,752,750,751,752,750,751,752,750,751,752,750,750,751,751,752,752,750,751,752,750,751,752,750,751,752,750,751,752,750,751,752,750,751,752,750,751,752,750,751,752,750,751,752,750,751,752,750,751,752,750,750,751,751,752,752,750,750,751,751,752,752,750,751,752,750,751,752,750,751,752,750,751,752,750,751,752,750,751,752,750,751,752,750,750,750,750,750,750,750,750,750,750,751,751,751,751,751,751,751,751,751,751,752,752,752,752,752,752,752,752,752,752,750,751,752,750,750,750,750,750,750,750,750,750,750,751,751,751,751,751,751,751,751,751,751,752,752,752,752,752,752,752,752,752,752,750,751,752,750,750,751,751,752,752,750,750,751,751,752,752,750,750,751,751,752,752,750,751,752,750,751,752,750,751,752,750,751,752,751,752,750,750,750,750,751,751,751,751,752,752,752,752,750,751,752,750,751,752,750,751,752,750,751,752,750,751,752,750,751,752,0,0,0,750,751,752,752,750,751,752,750,751,752,750,751,752,750,751,752,750,751,752,750,751,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,750,751,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,750,751,752,752,752,752,752,752,750,751,752,752,750,751,752,750,751,752,751,752,750,751,752,752,750,751,752,750,751,752,751,752,751,752,752,751,752,751,752,751,752,750,751,752,752,752,752,752,752,750,751,752,752,750,751,752,750,751,752,751,752,750,751,752,752,750,751,752,750,751,752,751,752,751,752,752,751,752,751,752,751,752,751,752,752,752,752,752,752,751,752,752,751,752,751,752,751,752,751,752,752,751,752,751,752,751,752,751,752,752,751,752,751,752,751,752,750,751,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,750,751,752,752,752,752,752,752,750,751,752,752,750,751,752,750,751,752,751,752,750,751,752,752,750,751,752,750,751,752,751,752,751,752,752,751,752,751,752,751,752,750,751,752,752,752,752,752,752,750,751,752,752,750,751,752,750,751,752,751,752,750,751,752,752,750,751,752,750,751,752,751,752,751,752,752,751,752,751,752,751,752,751,752,752,752,752,752,752,751,752,752,751,752,751,752,751,752,751,752,752,751,752,751,752,751,752,751,752,752,751,752,751,752,751,752,751,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,751,752,752,752,752,752,752,751,752,752,751,752,751,752,751,752,751,752,752,751,752,751,752,751,752,751,752,752,751,752,751,752,751,752,751,752,752,752,752,752,752,751,752,752,751,752,751,752,751,752,751,752,752,751,752,751,752,751,752,751,752,752,751,752,751,752,751,752,751,752,752,752,752,752,752,751,752,752,751,752,751,752,751,752,751,752,752,751,752,751,752,751,752,751,752,752,751,752,751,752,751,752,0,0,0,0,0,0,737,735,736,737,735,736,737,736,737,774,774,774,774,774,774,774,778,826,826,0,0,826,787,804,774,776,776,776,776,776,778,0,0,777,0,0,0,0,0,799,826,0,0,0,0,800,0,807,776,805,788,790,791,788,790,791,776,777,776,774,776,777,774,0,804,2012,0,0,0,0,0,774,776,0,787,787,0,0,0,0,0,0,774,774,0,0,802,0,0,0,0,804,0,0,0,0,0,0,0,0,0,0,776,799,807,799,0,0,787,807,0,0,823,0,823,0,776,0,0,0,0,0,0,0,774,0,776,776,777,776,777,778,0,0,0,0,0,0,0,0,0,0,800,807,0,0,0,0,0,0,0,0,0,0,0,0,778,774,775,776,776,777,802,0,0,774,805,778,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,776,0,0,0,2012,0,0,0,778,0,0,0,0,0,0,0,0,0,0,787,0,805,0,0,0,0,776,0,776,776,776,776,775,0,775,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,802,0,0,2012,0,0,0,0,0,0,810,776,776,776,776,776,776,776,776,776,776,776,774,774,775,774,0,807,810,826,826,0,0,0,0,0,0,802,813,0,818,774,775,776,777,808,779,781,782,2013,782,778,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,782,806,807,906,907,812,813,824,824,2014,2013,876,844,814,815,2015,816,810,809,884,2016,2017,2018,2019,817,818,778,778,778,825,783,783,784,784,845,846,847,785,785,781,786,786,787,787,788,788,789,789,790,790,791,791,792,792,793,793,794,794,795,795,796,796,797,797,798,798,799,799,799,826,826,800,800,801,801,802,802,848,821,841,827,803,803,804,804,828,828,849,850,805,805,805,782,782,774,808,829,829,830,2020,870,851,2021,852,831,853,2022,897,866,832,842,843,833,834,835,836,2023,2024,2025,2026,2027,2028,871,854,2012,823,819,867,837,775,855,2029,838,776,776,856,839,840,777,777,2030,2031,857,858,806,806,806,807,807,807,2032,906,907,812,813,824,2014,2013,876,844,814,815,2015,816,810,809,884,2016,2017,2018,2019,817,818,778,778,825,783,783,784,784,845,846,847,785,785,781,786,786,787,787,788,788,789,789,790,790,791,791,792,792,793,793,794,794,795,795,796,796,797,797,798,798,799,799,826,800,800,801,801,802,802,848,821,841,827,803,803,804,804,828,849,850,805,805,782,782,774,808,829,830,2020,870,851,2021,852,831,853,2022,897,866,832,842,843,833,834,835,836,2023,2024,2025,2026,2027,2028,871,854,2012,823,819,867,837,775,855,2029,838,776,856,839,840,777,2030,2031,857,858,806,806,807,807,2032,906,907,812,813,824,2014,2013,876,844,814,815,2015,816,810,809,884,2016,2017,2018,2019,817,818,778,825,783,784,845,846,847,785,781,786,787,788,789,790,791,792,793,794,795,796,797,798,799,826,800,801,802,848,821,841,827,803,804,828,849,850,805,782,782,774,808,829,830,2020,870,851,2021,852,831,853,2022,897,866,832,842,843,833,834,835,836,2023,2024,2025,2026,2027,2028,871,854,2012,823,819,867,837,775,855,2029,838,776,856,839,840,777,2030,2031,857,858,806,807,2032,824,826,829,776,777,806,807,778,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,782,806,807,778,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,782,806,807,781,782,2016,781,782,808,782,809,809,809,876,907,824,840,781,782,810,876,774,775,776,777,774,775,776,777,774,775,776,777,774,775,776,777,774,774,775,775,776,776,777,777,774,775,776,777,774,775,776,777,906,907,812,813,824,2014,2013,876,844,814,815,2015,816,810,809,884,2016,2017,2018,2019,817,818,778,825,783,784,845,846,847,785,781,786,787,788,789,790,791,792,793,794,795,796,797,798,799,826,800,801,802,848,821,841,827,803,804,828,849,850,805,782,774,808,829,830,2020,870,851,2021,852,831,853,2022,897,866,832,842,843,833,834,835,836,2023,2024,2025,2026,2027,2028,871,854,2012,823,819,867,837,775,855,2029,838,776,856,839,840,777,2030,2031,857,858,806,807,2032,906,907,812,813,824,2014,2013,876,844,814,815,2015,816,810,809,884,2016,2017,2018,2019,817,818,778,825,783,784,845,846,847,785,781,786,787,788,789,790,791,792,793,794,795,796,797,798,799,826,800,801,802,848,821,841,827,803,804,828,849,850,805,782,774,808,829,830,2020,870,851,2021,852,831,853,2022,897,866,832,842,843,833,834,835,836,2023,2024,2025,2026,2027,2028,871,854,2012,823,819,867,837,775,855,2029,838,776,856,839,840,777,2030,2031,857,858,806,807,2032,793,796,857,812,813,814,815,816,817,818,819,809,0,843,847,847,0,823,824,778,825,783,784,785,781,786,787,788,789,790,791,792,793,794,795,796,799,826,800,801,802,821,827,803,804,828,805,782,808,829,830,831,832,833,834,835,836,837,838,776,839,840,777,806,807,778,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,782,806,807,824,778,825,783,784,785,781,786,787,788,789,790,791,792,793,794,795,796,799,826,800,801,802,821,827,803,804,828,805,782,808,829,830,831,832,833,834,835,836,837,838,776,839,840,777,806,807,824,778,825,783,784,785,781,786,787,788,789,790,791,792,793,794,795,796,799,826,800,801,802,821,827,803,804,828,805,782,808,829,830,831,832,833,834,835,836,837,838,776,839,840,777,806,807,778,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,782,806,807,838,786,788,790,791,796,774,775,776,777,783,784,785,786,788,790,791,793,794,797,798,799,802,848,821,828,830,2020,2021,2022,897,866,2023,2024,2025,2026,2027,2028,2012,823,867,2029,2030,2031,806,2032,841,774,775,776,777,778,783,784,785,781,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,782,806,807,808,830,831,832,842,843,833,834,835,837,845,845,782,778,782,812,813,844,814,815,818,778,825,783,784,845,846,847,786,788,789,790,791,792,793,794,795,796,797,798,799,801,802,848,821,841,803,804,828,849,850,805,782,808,851,852,831,853,832,842,843,833,834,854,819,855,856,857,858,806,807,0,803,780,779,781,782,782,808,870,870,780,779,781,779,781,782,2013,782,782,858,2025,906,907,812,813,824,2014,2013,876,844,814,815,2015,816,810,809,884,2016,2017,2018,2019,817,818,778,825,783,784,845,846,847,785,781,786,787,788,789,790,791,792,793,794,795,796,797,798,799,826,800,801,802,848,821,841,827,803,804,828,828,849,850,850,805,782,774,808,829,830,2020,870,851,2021,852,831,853,2022,897,866,832,842,843,833,834,835,836,2023,2024,2025,2026,2027,2028,871,854,2012,823,819,867,837,775,855,855,2029,838,776,856,839,840,777,2030,2031,857,858,806,807,2032,906,907,812,813,824,2014,2013,876,844,814,815,2015,816,810,809,884,2016,2017,2018,2019,817,818,778,825,783,784,845,846,847,785,781,786,787,788,789,790,791,792,793,794,795,796,797,798,799,826,800,801,802,848,821,841,827,803,804,828,828,849,850,850,805,782,774,808,829,830,2020,870,851,2021,852,831,853,2022,897,866,832,842,843,833,834,835,836,2023,2024,2025,2026,2027,2028,871,854,2012,823,819,867,837,775,855,855,2029,838,776,856,839,840,777,2030,2031,857,858,806,807,2032,838,774,775,776,777,785,847,786,2026,2026,786,836,809,782,906,907,812,813,824,2014,2013,876,844,814,815,2015,816,810,809,884,2016,2017,2018,2019,817,818,778,825,783,784,845,846,847,785,781,786,787,788,789,790,791,792,793,794,795,796,797,798,799,826,800,801,802,848,821,841,827,803,804,828,849,850,805,782,774,808,829,830,2020,870,851,2021,852,831,853,2022,897,866,832,842,843,833,834,835,836,2023,2024,2025,2026,2027,2028,871,854,2012,823,819,867,837,775,855,2029,838,776,856,839,840,777,2030,2031,857,858,806,807,2032,0,809,809,906,907,812,813,824,2014,2013,876,844,814,815,2015,816,810,809,884,2016,2017,2018,2019,817,818,778,825,783,784,845,846,847,785,781,786,787,788,789,790,791,792,793,794,795,796,797,798,799,826,800,801,802,848,821,841,827,803,804,828,849,850,805,782,774,808,829,830,2020,870,851,2021,852,831,853,2022,897,866,832,842,843,833,834,835,836,2023,2024,2025,2026,2027,2028,871,854,2012,823,819,867,837,775,855,2029,838,776,856,839,840,777,2030,2031,857,858,806,807,2032,838,826,824,778,799,826,828,805,829,776,777,806,807,824,826,829,776,777,806,807,809,809,809,782,808,782,774,775,776,777,784,809,809,871,824,778,799,826,828,805,829,776,777,806,807,824,824,824,824,778,778,778,778,799,799,799,799,826,826,826,826,828,828,828,828,805,805,805,805,829,829,829,829,776,776,776,776,777,777,777,777,806,806,806,806,807,807,807,807,774,775,776,777,781,0,0,785,786,799,806,0,0,0,796,803,0,786,801,778,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,782,806,807,778,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,804,805,782,806,807,778,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,804,805,782,806,807,778,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,782,806,807,778,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,782,806,807,813,814,817,818,819,812,801,808,867,837,782,778,783,784,845,846,847,786,787,788,789,790,791,792,793,794,795,796,826,800,801,802,848,821,803,804,805,782,774,774,774,774,831,866,832,833,834,835,775,775,775,775,776,776,776,776,776,777,777,777,777,777,782,803,780,779,781,782,906,827,906,907,812,813,824,2014,2013,876,844,814,815,2015,816,810,809,884,2016,2017,2018,2019,817,818,778,825,783,784,845,846,847,785,781,786,787,788,789,790,791,792,793,793,794,795,796,797,798,799,826,800,801,802,848,821,841,827,803,804,828,849,850,805,782,782,782,774,808,829,829,830,2020,870,851,2021,852,831,853,2022,897,866,832,842,843,833,834,835,836,2023,2024,2025,2026,2027,2028,871,854,2012,823,819,867,837,837,775,855,2029,838,776,856,839,840,777,777,777,777,2030,2031,857,858,806,807,2032,774,775,776,777,774,774,775,775,776,776,777,777,774,775,776,777,783,784,785,786,788,790,791,793,794,797,798,799,802,848,821,828,830,2020,2021,2022,897,866,2023,2024,2025,2026,2027,2028,2012,823,867,2029,2030,2031,806,2032,776,774,775,776,777,776,774,775,776,777,776,778,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,782,806,807,906,907,812,813,824,2014,2013,876,844,814,815,2015,816,810,809,884,2016,2017,2018,2019,817,818,778,825,783,784,845,846,847,785,781,786,787,788,789,790,791,792,793,794,795,796,797,798,799,826,800,801,802,848,821,841,827,803,804,828,849,850,805,782,774,808,829,830,2020,870,851,2021,852,831,853,2022,897,866,832,842,843,833,834,835,836,2023,2024,2025,2026,2027,2028,871,854,2012,823,819,867,837,775,855,2029,838,776,856,839,840,777,2030,2031,857,858,806,807,2032,787,787,787,787,787,787,787,787,812,813,844,814,815,818,778,825,783,784,845,846,847,786,788,789,790,791,792,793,794,795,796,797,798,799,801,802,848,821,841,827,803,804,828,849,850,805,782,808,870,851,852,831,853,832,842,843,833,834,836,871,854,819,855,838,856,857,858,806,807,847,846,0,783,856,838,876,0,0,783,784,785,786,788,790,791,793,794,797,798,799,802,848,821,828,830,2020,2021,2022,897,866,2023,2024,2025,2026,2027,2028,2012,823,867,2029,2030,2031,806,2032,783,784,785,786,788,789,790,791,792,793,794,795,796,797,798,801,803,782,806,783,784,785,786,788,789,790,791,792,793,794,795,796,797,798,801,803,782,806,838,783,778,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,782,806,807,778,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,782,806,807,838,825,845,846,847,853,871,824,826,829,776,777,806,807,791,2031,778,787,799,800,802,804,805,807,825,845,846,847,906,907,812,813,824,2014,2013,876,844,814,815,2015,816,810,809,884,2016,2017,2018,2019,817,818,778,825,783,784,845,846,847,785,781,786,787,788,789,790,791,792,793,794,795,796,797,798,799,826,800,801,802,848,821,841,827,803,804,828,849,850,805,782,774,808,829,830,2020,870,851,2021,852,831,853,2022,897,866,832,842,843,833,834,835,836,2023,2024,2025,2026,2027,2028,871,854,2012,823,819,867,837,775,855,2029,838,776,856,839,840,777,2030,2031,857,858,806,807,2032,790,781,782,774,775,776,777,788,790,774,775,776,777,774,775,776,777,906,907,812,813,824,2014,2013,876,844,814,815,2015,816,810,809,884,2016,2017,2018,2019,817,818,778,825,783,784,845,846,847,785,781,786,787,788,789,790,791,792,793,794,795,796,797,798,799,826,800,801,802,848,821,841,827,803,804,828,849,850,805,782,774,808,829,830,2020,870,851,2021,852,831,853,2022,897,866,832,842,843,833,834,835,836,2023,2024,2025,2026,2027,2028,871,854,2012,823,819,867,837,775,855,2029,838,776,856,839,840,777,2030,2031,857,858,806,807,2032,906,907,812,813,824,2014,2013,876,844,814,815,2015,816,810,809,884,2016,2017,2018,2019,817,818,778,778,825,783,783,784,784,845,846,847,785,785,781,786,786,787,787,788,788,789,789,790,790,791,791,792,792,793,793,794,794,795,795,796,796,797,797,798,798,799,799,826,800,800,801,801,802,802,848,821,841,827,803,803,804,804,828,849,850,805,805,782,782,774,808,829,830,2020,870,851,2021,852,831,853,2022,897,866,832,842,843,833,834,835,836,2023,2024,2025,2026,2027,2028,871,854,2012,823,819,867,837,775,855,2029,838,776,856,839,840,777,2030,2031,857,858,806,806,807,807,2032,906,907,812,813,824,2014,2013,876,844,814,815,2015,816,810,809,884,2016,2017,2018,2019,817,818,778,825,783,784,845,846,847,785,781,786,787,788,789,790,791,792,793,794,795,796,797,798,799,826,800,801,802,848,821,841,827,803,804,828,849,850,805,782,774,808,829,830,2020,870,851,2021,852,831,853,2022,897,866,832,842,843,833,834,835,836,2023,2024,2025,2026,2027,2028,871,854,2012,823,819,867,837,775,855,2029,838,776,856,839,840,777,2030,2031,857,858,806,807,2032,906,907,812,813,824,2014,2013,876,844,814,815,2015,816,810,809,884,2016,2017,2018,2019,817,818,778,825,783,784,845,846,847,785,781,786,787,788,789,790,791,792,793,794,795,796,797,798,799,826,800,801,802,848,821,841,827,803,804,828,849,850,805,782,774,808,829,830,2020,870,851,2021,852,831,853,2022,897,866,832,842,843,833,834,835,836,2023,2024,2025,2026,2027,2028,871,854,2012,823,819,867,837,775,855,2029,838,776,856,839,840,777,2030,2031,857,858,806,807,2032,826,774,775,776,777,778,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,782,806,807,906,907,812,813,824,2014,2013,876,844,814,815,2015,816,810,809,884,2016,2017,2018,2019,817,818,778,825,783,784,845,846,847,785,781,786,787,788,789,790,791,792,793,794,795,796,797,798,799,826,800,801,802,848,821,841,827,803,804,828,849,850,805,782,774,808,829,830,2020,870,851,2021,852,831,853,2022,897,866,832,842,843,833,834,835,836,2023,2024,2025,2026,2027,2028,871,854,2012,823,819,867,837,775,855,2029,838,776,856,839,840,777,2030,2031,857,858,806,807,2032,826,837,837,774,775,776,777,821,774,775,776,777,785,783,821,841,774,775,776,777,778,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,782,806,807,783,774,775,776,777,876,787,782,777,821,823,2027,827,825,2016,906,827,870,870,782,808,808,812,825,2016,907,824,870,838,906,827,782,808,782,810,823,823,812,793,839,839,778,783,784,785,781,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,782,806,807,839,839,839,839,776,823,778,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,804,805,782,806,807,884,871,823,839,782,858,774,775,776,777,812,813,844,814,815,818,778,825,783,784,845,846,847,786,788,789,790,791,792,793,794,795,796,797,798,799,801,802,848,821,841,803,804,828,849,850,805,782,808,851,852,831,853,832,842,843,833,834,854,819,855,856,857,858,806,807,812,782,2021,2022,2028,823,779,781,782,782,790,812,793,782,808,782,2025,838,782,809,845,821,2026,2026,836,0,0,0,0,0,0,0,0,0,0,813,818,780,779,781,782,870,870,780,779,781,867,837,776,876,823,823,806,0,0,0,788,790,788,790,808,830,831,832,842,843,833,834,835,837,778,783,784,785,781,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,782,806,807,778,787,799,800,802,804,805,807,778,783,784,785,781,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,782,806,807,778,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,782,806,807,778,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,782,806,807,778,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,782,806,807,778,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,782,806,807,778,783,784,785,781,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,782,806,807,778,783,784,785,781,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,782,806,807,778,783,784,785,781,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,782,806,807,782,808,774,775,776,777,2014,2015,2017,2018,2019,2013,856,808,884,2032,778,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,782,774,775,776,777,806,807,803,803,858,0,2016,788,790,791,788,790,791,788,790,791,778,783,784,785,781,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,782,806,807,808,830,831,832,842,843,833,834,835,837,789,792,839,839,809,809,780,779,781,827,782,870,838,785,846,821,774,775,776,777,774,775,776,777,774,775,776,777,840,824,778,825,783,784,785,781,786,787,788,789,790,791,792,793,794,795,796,799,826,800,801,802,821,827,803,804,828,805,782,808,829,830,831,832,833,834,835,836,837,838,776,839,840,777,806,807,906,907,812,813,824,2014,2013,876,844,814,815,2015,816,810,809,884,2016,2017,2018,2019,817,818,778,825,783,784,845,846,847,785,781,786,787,788,789,790,791,792,793,794,795,796,797,798,799,826,800,801,802,848,821,841,827,803,804,828,849,850,805,782,774,808,829,830,2020,870,851,2021,852,831,853,2022,897,866,832,842,843,833,834,835,836,2023,2024,2025,2026,2027,2028,871,854,2012,823,819,867,837,775,855,2029,838,776,856,839,840,777,2030,2031,857,858,806,807,2032,774,775,776,777,825,845,846,847,867,837,2016,906,907,812,813,824,2014,2013,876,844,814,815,2015,816,810,809,884,2016,2017,2018,2019,817,818,778,825,783,784,845,846,847,785,781,786,787,788,789,790,791,792,793,794,795,796,797,798,799,826,800,801,802,848,821,841,827,803,804,828,849,850,805,782,774,808,829,830,2020,870,851,2021,852,831,853,2022,897,866,832,842,843,833,834,835,836,2023,2024,2025,2026,2027,2028,871,854,2012,823,819,867,837,775,855,2029,838,776,856,839,840,777,2030,2031,857,858,806,807,2032,906,907,812,813,824,2014,2013,876,844,814,815,2015,816,810,809,884,2016,2017,2018,2019,817,818,778,825,783,784,845,846,847,785,781,786,787,788,789,790,791,792,793,794,795,796,797,798,799,826,800,801,802,848,821,841,827,803,804,828,849,850,805,782,774,808,829,830,2020,870,851,2021,852,831,853,2022,897,866,832,842,843,833,834,835,836,2023,2024,2025,2026,2027,2028,871,854,2012,823,819,867,837,775,855,2029,838,776,856,839,840,777,2030,2031,857,858,806,807,2032,906,907,812,813,824,2014,2013,876,844,814,815,2015,816,810,809,884,2016,2017,2018,2019,817,818,778,825,783,784,845,846,847,785,781,786,787,788,789,790,791,792,793,794,795,796,797,798,799,826,800,801,802,848,821,841,827,803,804,828,849,850,805,782,774,808,829,830,2020,870,851,2021,852,831,853,2022,897,866,832,842,843,833,834,835,836,2023,2024,2025,2026,2027,2028,871,854,2012,823,819,867,837,775,855,2029,838,776,856,839,840,777,2030,2031,857,858,806,807,2032,778,783,784,785,781,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,782,806,807,778,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,782,806,807,778,783,784,785,781,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,782,806,807,851,774,775,776,777,782,781,782,906,907,812,813,824,2014,2013,876,844,814,815,2015,816,810,809,884,2016,2017,2018,2019,817,818,778,825,783,784,845,846,847,785,781,786,787,788,789,790,791,792,793,794,795,796,797,798,799,826,800,801,802,848,821,841,827,803,804,828,849,850,805,782,774,808,829,830,2020,870,851,2021,852,831,853,2022,897,866,832,842,843,833,834,835,836,2023,2024,2025,2026,2027,2028,871,854,2012,823,819,867,837,775,855,2029,838,776,856,839,840,777,2030,2031,857,858,806,807,2032,884,0,0,0,0,0,0,2030,778,787,799,800,802,804,805,807,778,787,799,800,802,804,805,807,778,787,799,800,802,804,805,807,780,779,781,906,827,854,870,870,830,825,845,846,847,825,845,846,847,846,847,781,782,906,907,812,813,824,2014,2013,876,844,814,815,2015,816,810,809,884,2016,2017,2018,2019,817,818,778,825,783,784,845,846,847,785,781,786,787,788,789,790,791,792,793,794,795,796,797,798,799,826,800,801,802,848,821,841,827,803,804,828,849,850,805,782,774,808,829,830,2020,870,851,2021,852,831,853,2022,897,866,832,842,843,833,834,835,836,2023,2024,2025,2026,2027,2028,871,854,2012,823,819,867,837,775,855,2029,838,776,856,839,840,777,2030,2031,857,858,806,807,2032,0,823,808,830,831,832,842,843,833,834,835,837,2033,2033,2034,2034,2033,2034,2034,2035,2036,2037,2038,2038,2037,2039,2040,2039,2040,2041,2042,2043,2043,0,0,0,0,0,0,0,0,911,912,913,914,2044,911,912,913,914,2044,911,912,913,914,2044,911,912,913,914,2044,911,912,913,914,2044,911,912,912,912,912,2044,912,912,913,911,912,913,914,2044,911,912,913,914,2044,911,912,913,914,2044,911,912,913,914,2044,912,911,911,912,913,914,2044,912,2044,911,912,913,914,2044,912,913,914,912,912,2044,911,912,913,914,2044,0,911,912,913,914,2044,911,912,913,914,2044,911,912,913,914,2044,911,912,913,914,2044,911,912,913,914,2044,912,912,913,2044,0,912,913,912,912,914,912,911,912,913,914,2044,911,912,913,914,2044,911,912,913,914,2044,911,912,913,914,2044,911,912,913,914,2044,911,912,913,914,2044,912,0,0,778,0,0,787,778,0,0,0,787,787,0,0,787,778,0,0,0,778,805,778,0,0,0,0,778,805,0,0,0,0,813,779,782,782,782,796,847,847,786,788,790,791,796,845,845,782,779,782,779,779,782,782,785,847,786,786,782,782,782,786,782,782,779,847,846,825,845,846,847,791,825,845,846,847,790,788,790,825,782,825,782,782,782,782,779,782,790,782,782,782,845,813,779,779,788,790,788,790,782,788,790,791,788,790,791,788,790,791,779,785,846,825,845,846,847,782,779,825,845,846,847,825,845,846,847,846,847,2035,2036,2037,2038,2038,2037,2042,0,0,0,0,0,0,0,915,916,917,918,919,915,915,915,916,916,917,917,917,918,918,920,919,915,915,916,916,917,917,918,918,920,919,915,916,917,918,920,915,916,917,918,915,916,917,918,920,920,919,915,916,917,918,920,919,915,916,917,918,920,919,915,916,917,918,920,915,916,917,918,915,916,917,918,920,915,916,917,918,920,915,916,917,918,916,920,915,916,917,915,916,917,918,920,919,915,916,917,918,920,918,919,915,916,917,918,920,919,915,916,917,918,920,919,915,916,917,918,920,919,915,916,917,918,920,915,917,915,917,915,915,915,915,917,917,917,917,918,915,916,917,918,915,916,917,918,915,916,917,918,915,916,917,918,915,916,917,918,919,915,916,917,918,920,920,919,915,916,917,918,920,915,916,917,915,916,917,918,919,915,916,917,918,920,919,915,916,917,918,920,915,916,917,915,916,917,918,915,916,917,918,915,916,917,918,915,916,917,918,918,919,915,916,917,918,920,920,919,915,916,917,918,920,919,915,915,916,916,917,917,918,918,920,919,915,916,917,918,920,919,915,916,917,918,920,915,916,917,918,919,915,916,917,918,920,915,916,917,918,920,915,916,917,918,920,915,916,917,918,919,915,916,917,918,920,915,916,917,918,920,915,916,917,918,920,915,916,917,918,915,916,917,918,915,916,917,918,915,916,917,918,915,916,917,918,920,915,916,917,918,920,915,916,917,918,920,915,916,917,918,915,916,917,918,920,920,915,916,917,918,920,919,915,916,917,918,920,919,915,916,917,918,920,919,915,916,917,918,920,919,915,916,917,918,920,915,916,917,918,920,915,916,917,918,920,915,916,917,918,920,920,920,919,915,916,917,918,920,920,919,915,916,917,918,920,703,0,0,703,703,1532,778,0,0,166,1878,0,0,0,1878,1368,0,703,703,0,0,0,0,0,0,703,0,0,703,1878,0,0,0,0,0,0,0,0,0,703,703,1898,0,787,0,0,0,0,0,1513,1523,1524,1535,1536,1538,1538,1898,703,0,703,0,0,0,0,703,0,703,1521,1522,1523,1524,778,0,703,703,0,0,0,0,0,0,0,683,703,0,703,0,0,0,0,0,703,0,703,1878,1473,1521,1522,1523,1524,1525,1526,1898,0,0,0,0,0,1531,1878,703,0,0,0,1529,1534,1534,1529,703,0,1887,0,0,703,0,1878,703,703,703,1878,703,1538,1878,0,0,0,1901,0,0,0,0,703,703,683,683,683,683,0,0,312,312,1878,1521,1522,1525,1526,0,0,703,1368,0,0,0,0,0,0,0,0,0,0,0,1887,0,703,1890,0,0,0,0,0,0,703,1878,683,1887,703,1521,1522,1523,1524,1525,1526,0,0,0,0,0,0,703,703,0,0,0,0,0,0,1878,787,787,0,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,1468,0,0,1536,1536,0,0,1528,0,1521,1523,1525,1526,1521,1523,1525,1526,0,0,0,0,1536,0,0,0,0,703,0,0,0,0,0,0,0,0,0,0,0,0,1547,0,0,1878,1878,703,1528,0,0,0,0,0,703,1878,0,0,1878,0,1348,0,0,703,1516,1890,1890,637,703,0,0,0,0,0,0,0,0,0,602,493,161,1901,1527,1348,0,1978,0,703,0,0,0,0,0,0,1557,1557,703,0,0,0,703,703,703,703,703,703,703,703,703,703,703,703,703,0,0,703,0,0,637,1473,703,706,686,686,683,1527,683,683,686,453,787,166,0,1547,703,703,0,778,0,0,0,0,0,0,1535,1536,0,703,703,0,706,1535,1536,0,0,703,683,166,0,0,0,1878,0,778,0,703,703,703,1878,0,703,703,1878,1878,0,703,703,1878,1468,1533,0,0,1553,1553,0,0,1516,1528,683,1878,1878,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,1878,1878,703,805,703,397,0,0,0,1498,778,0,1030,0,683,686,706,602,493,0,0,0,703,703,703,0,0,602,0,0,703,703,0,1513,1535,1536,703,1030,0,0,0,703,0,0,453,0,703,0,0,0,0,0,703,0,0,1887,778,1516,703,1901,1931,1878,0,0,1513,1535,1536,703,0,0,0,703,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1532,805,0,0,166,0,0,1498,0,0,0,0,0,703,637,637,1473,703,706,686,686,683,1527,683,683,686,93,1529,1534,1534,1878,1529,0,703,1878,397,397,397,93,0,0,0,0,0,0,0,0,703,1878,683,703,492,0,703,703,703,703,703,683,703,1525,1526,1525,1526,1525,1526,0,0,0,0,0,0,0,0,0,0,683,1521,1522,1523,1524,1525,1526,0,0,0,0,0,703,475,1521,1522,1523,1524,1525,84,154,0,0,703,703,1878,703,0,501,0,0,0,703,703,0,0,0,1878,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,93,0,0,0,0,703,0,0,0,0,0,0,0,0,0,703,703,1931,1368,0,703,0,161,703,1513,1513,0,0,0,0,0,2008,2009,0,0,2010,2009,0,0,2010,2008,0,1878,1513,0,0,0,0,1531,1348,703,703,1513,703,1878,1878,703,84,154,703,703,703,703,703,703,703,93,683,0,0,0,0,0,0,0,0,0,1533,1533,703,743,743,703,743,743,703,683,703,0,743,743,1878,1878,813,633,1995,1996,1223,113,134,1520,1520,1520,1471,779,782,113,134,113,134,1399,1401,494,0,0,94,0,493,0,493,1033,94,94,94,94,1520,1031,341,687,1577,1579,1580,1581,1578,782,782,113,134,0,1520,1577,1578,1514,1520,796,109,1929,1578,684,1978,298,1579,1580,1581,383,398,383,398,383,398,1488,847,847,113,134,1886,493,662,666,109,1995,378,390,1546,970,972,94,1908,631,1397,1474,1399,1401,786,788,790,791,796,1544,398,1520,493,1488,341,860,160,845,845,782,1488,1399,1401,2,0,383,94,0,0,312,1488,0,634,1316,493,779,782,779,779,633,782,390,782,390,1997,1997,0,785,754,1520,847,786,786,1520,113,398,782,634,309,28,0,922,922,782,782,1966,633,1488,1369,1968,664,665,1891,0,0,0,1908,786,1031,1033,970,972,970,970,970,972,970,972,1223,174,109,1488,1520,1520,1520,1520,1520,782,1399,1401,1542,1545,1399,1401,1542,1545,1577,1579,1580,1581,1578,1488,782,1459,1474,1474,711,1031,779,309,550,545,587,847,383,846,398,960,684,687,2045,2046,2045,2046,493,94,1507,1374,1375,1409,1410,1480,1577,1579,1580,1581,1578,383,825,845,846,847,398,1088,1520,1520,1520,1520,1520,1520,1520,860,1520,681,711,0,544,791,1579,1578,1579,1580,1488,1488,1223,1223,113,134,0,1401,1542,0,0,0,1374,1375,1409,1410,1480,1577,1579,1580,1581,1578,825,845,846,847,1088,1358,1935,1935,493,790,1995,1996,788,790,1578,1488,94,94,501,492,341,860,1979,28,1979,94,493,1966,493,109,1998,1998,970,972,1520,1520,1520,82,82,1979,1514,1520,306,633,633,1471,1977,1507,17,501,1520,825,740,741,742,1520,1896,782,341,1520,1896,825,782,782,740,741,742,1520,1896,341,1520,1896,305,174,1488,160,860,493,109,1929,1968,970,1031,1033,1577,1579,1580,1581,1578,782,0,782,1544,0,779,782,494,860,754,790,860,1520,1520,782,782,666,81,2047,1223,2047,1966,305,782,711,501,1966,845,1883,1891,1488,711,1520,813,779,779,1935,1488,1488,1908,174,383,398,1995,1996,788,790,788,790,109,1399,922,922,94,94,94,94,2047,2047,94,0,782,1935,1935,1935,1935,1995,1996,1995,1996,2048,633,1995,1978,1488,1488,1488,0,0,0,0,0,0,0,0,1369,1514,1520,306,91,1520,602,493,113,134,0,568,493,17,2,91,1033,1033,1374,1375,1471,94,94,1929,1978,1935,1978,1978,493,1995,1996,2048,1966,1966,313,1223,788,790,791,788,790,791,788,790,791,0,160,1576,1391,313,1223,305,779,785,1966,305,846,1409,1410,0,0,0,1966,1472,1577,1579,1580,1581,1578,0,28,545,860,336,1480,1581,1480,1480,1581,1480,1581,1409,1397,1391,1545,1410,1580,1580,2,2,1391,1488,550,2011,1966,383,398,1514,1520,0,0,1374,1375,1409,1410,1480,1577,1579,1580,1581,1578,383,825,845,846,847,398,1088,642,91,1488,493,160,94,160,782,0,493,1472,779,1374,1375,1409,1410,1480,1577,1579,1580,1581,1578,825,845,846,847,1088,1358,860,1033,1374,1375,1409,1410,1480,1577,1579,1580,1581,1578,825,845,846,847,1088,1358,1488,383,846,847,398,1966,305,307,757,746,752,749,0,0,0,174,1520,1544,1883,1884,1885,1886,1488,1488,1995,1996,17,1372,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,1530,755,756,757,636,328,744,745,746,750,751,752,748,749,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2010,2008,2009,2009,2009,2009,2009,2009,2010,2008,2009,2009,2010,2008,2009,2010,2008,2009,2008,2009,2010,2008,2009,2009,2010,2008,2009,2010,2008,2009,2008,2009,2008,2009,2009,2008,2009,2008,2009,2008,2009,2008,2009,2010,2009,2009,2009,2009,2009,2010,2008,2009,2009,2010,2008,2009,2010,2008,2009,2008,2009,2010,2008,2009,2009,2010,2008,2009,2010,2008,2009,2008,2009,2009,2008,2009,2008,2009,2008,2009,2008,2009,2008,2009,2009,2009,2009,2009,2009,2008,2009,2009,2008,2009,2008,2009,2008,2009,2008,2009,2009,2008,2009,2008,2009,2008,2009,2008,2009,2009,2008,2009,2008,2009,2008,2009,1530,755,756,757,636,328,744,745,746,750,751,752,748,749,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2010,2008,2009,2009,2009,2009,2009,2009,2010,2008,2009,2009,2010,2008,2009,2010,2008,2009,2008,2009,2010,2008,2009,2009,2010,2008,2009,2010,2008,2009,2008,2009,2008,2009,2009,2008,2009,2008,2009,2008,2009,2010,2008,2009,2009,2009,2009,2009,2009,2010,2008,2009,2009,2010,2008,2009,2010,2008,2009,2008,2009,2010,2008,2009,2009,2010,2008,2009,2010,2008,2009,2008,2009,2008,2009,2009,2008,2009,2008,2009,2008,2009,2008,2009,2009,2009,2009,2009,2009,2008,2009,2009,2008,2009,2008,2009,2008,2009,2008,2009,2009,2008,2009,2008,2009,2008,2009,2008,2009,2009,2008,2009,2008,2009,2008,2009,756,757,328,745,746,751,752,748,749,1577,1579,1580,1581,1578,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2008,2009,2009,2009,2009,2009,2009,2008,2009,2009,2008,2009,2008,2009,2008,2009,2008,2009,2009,2008,2009,2008,2009,2008,2009,2008,2009,2009,2008,2009,2008,2009,2008,2009,2008,2009,2009,2009,2009,2009,2009,2008,2009,2009,2008,2009,2008,2009,2008,2009,2008,2009,2009,2008,2009,2008,2009,2008,2009,2008,2009,2009,2008,2009,2008,2009,2008,2009,2008,2009,2009,2009,2009,2009,2009,2008,2009,2009,2008,2009,2008,2009,2008,2009,2008,2009,2009,2008,2009,2008,2009,2008,2009,2008,2009,2009,2008,2009,2008,2009,2008,2009,1937,1938,1939,1940,1941,1941,1942,2049,2050,2051,2052,2049,2050,2052,2049,2050,2051,2052,2051,2052,2049,2050,2051,2053,2054,2053,2054,2055,2035,2036,2037,2038,2038,2037,2056,2056,2057,2056,2057,2058,2059,2042,929,0,0,0,0,0,0,929,0,0,0,0,0,0,929,924,925,926,927,928,929,930,931,932,933,934,935,924,925,926,927,928,929,930,931,932,933,934,935,924,925,926,927,928,929,930,931,932,933,934,935,924,925,926,927,928,929,930,931,932,933,934,935,924,925,926,927,928,929,930,931,932,933,934,935,924,925,926,927,928,929,930,931,932,933,934,935,924,925,926,927,928,929,930,931,932,933,934,935,924,925,926,927,928,929,930,931,932,933,934,935,924,925,926,927,928,929,930,931,932,933,934,935,928,924,925,926,927,928,929,930,931,932,933,934,935,924,925,926,927,928,929,930,931,932,933,934,935,924,925,926,927,928,929,930,931,932,933,934,935,924,925,926,927,928,929,930,931,932,933,934,935,926,926,924,925,926,927,928,929,930,931,932,933,934,935,924,925,926,927,928,929,930,931,932,932,933,934,935,925,924,925,926,927,928,929,930,931,932,933,934,935,927,924,925,926,927,928,929,930,931,932,933,934,935,930,924,925,926,927,928,929,930,931,932,933,934,935,924,925,926,927,928,929,930,931,932,933,934,935,924,925,926,927,928,929,930,931,932,933,934,935,924,925,926,927,928,929,930,931,932,933,934,935,924,925,926,927,928,929,930,931,932,933,934,935,924,925,926,927,928,929,930,931,932,933,934,935,928,928,925,925,925,925,925,925,924,925,926,932,933,924,925,926,927,928,929,930,931,932,933,934,935,928,930,931,932,933,934,935,930,934,928,935,930,932,924,926,927,935,927,931,934,934,924,925,926,927,928,929,930,931,932,933,934,935,924,925,926,927,928,929,930,931,932,933,934,935,924,925,926,927,928,929,930,931,932,933,934,935,924,925,926,927,928,929,930,931,932,933,934,935,924,925,926,927,928,929,930,931,932,933,934,935,924,925,926,927,928,929,930,931,932,933,934,935,928,933,924,925,926,927,928,929,930,931,932,933,934,935,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,468,627,938,467,939,469,468,627,938,467,939,469,468,627,938,467,939,469,627,468,627,469,468,627,469,468,627,938,467,939,469,468,627,938,467,939,469,468,627,469,468,627,469,938,467,939,469,938,467,939,469,467,939,0,1984,468,627,938,467,939,469,469,1984,468,468,627,938,467,939,469,468,627,938,467,939,469,468,627,938,467,939,469,627,468,627,469,468,468,627,938,938,467,939,469,469,468,627,938,467,939,469,938,468,627,938,467,939,469,468,627,938,467,939,469,468,627,938,467,939,469,467,939,468,627,938,467,939,469,468,627,938,467,939,469,627,468,627,469,468,1984,627,627,468,938,467,939,469,468,627,938,467,939,469,468,627,469,468,627,938,467,939,469,468,627,938,467,939,469,468,627,938,467,939,469,468,627,938,467,939,469,468,627,938,467,939,469,0,0,107,105,106,99,0,0,0,0,0,0,0,0,0,0,0,0,107,105,106,99,0,0,0,0,0,0,0,0,0,0,921,921,0,107,105,106,99,0,0,0,107,105,106,99,0,0,0,0,921,0,0,0,0,0,0,0,0,0,0,0,0,0,107,105,106,979,99,961,108,963,0,0,2060,0,107,105,106,979,99,961,108,963,0,0,0,107,105,106,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,961,108,963,0,0,0,107,105,106,99,0,0,0,0,0,527,94,940,941,942,98,943,367,97,0,0,0,0,94,973,974,975,107,105,106,103,976,368,527,100,102,979,946,940,940,947,948,949,950,941,941,951,942,942,968,968,969,969,921,921,952,952,953,98,98,954,943,943,955,367,367,99,956,957,958,959,960,945,961,97,97,962,108,108,963,964,965,966,94,973,974,975,107,105,106,103,976,368,527,100,102,979,946,940,940,947,948,949,950,941,941,951,942,942,968,969,921,952,953,98,98,954,943,943,955,367,367,99,956,957,958,959,960,945,961,97,97,962,108,963,964,965,966,973,974,975,107,105,106,103,976,368,527,100,102,979,946,940,947,948,949,950,941,951,942,968,969,921,952,953,98,954,943,955,367,99,956,957,958,959,960,945,961,97,962,108,963,964,965,966,952,108,94,940,941,942,98,943,367,945,97,94,940,941,942,98,943,367,945,97,973,974,975,107,105,106,103,976,368,527,100,102,979,946,940,947,948,949,950,941,951,942,968,969,921,952,953,98,954,943,955,367,99,956,957,958,959,960,945,961,97,962,108,963,964,965,966,973,974,975,107,105,106,103,976,368,527,100,102,979,946,940,947,948,949,950,941,951,942,968,969,921,952,953,98,954,943,955,367,99,956,957,958,959,960,945,961,97,962,108,963,964,965,966,946,100,946,947,948,949,950,951,952,953,954,955,99,956,957,958,959,960,945,961,962,108,963,964,965,966,978,970,971,972,967,944,977,940,941,942,98,943,367,97,100,946,947,948,949,950,951,952,953,954,955,99,956,957,958,959,960,945,961,962,108,963,964,965,966,22,100,946,947,948,949,950,951,952,953,954,955,99,956,957,958,959,960,945,961,962,108,963,964,965,966,94,940,941,942,98,943,367,97,952,952,962,160,940,941,942,98,943,367,957,97,100,100,94,941,942,98,943,367,97,527,941,942,98,943,367,958,961,97,973,974,975,107,105,106,103,976,368,527,100,102,979,946,940,947,948,949,950,941,951,942,968,969,921,952,953,98,954,943,955,367,99,956,957,958,959,960,945,961,97,962,108,963,964,965,966,973,974,975,107,105,106,103,976,368,527,100,102,979,946,940,947,948,949,950,941,951,942,968,969,921,952,953,98,954,943,955,367,99,956,957,958,959,960,945,961,97,962,108,963,964,965,966,960,973,974,975,107,105,106,94,103,976,368,527,100,22,102,979,946,940,947,948,949,950,941,951,942,968,969,921,952,953,98,954,943,955,367,99,956,957,958,959,960,945,961,97,962,108,963,964,965,966,94,22,22,94,22,944,977,978,971,940,941,942,943,973,974,975,107,105,106,103,976,368,527,100,102,979,946,940,947,948,949,950,941,951,942,968,969,921,952,953,98,954,943,955,367,99,956,957,958,959,960,945,961,97,962,108,963,964,965,966,968,969,921,952,108,952,108,922,922,527,0,0,0,968,969,921,952,108,968,968,968,968,969,969,969,969,921,921,921,921,952,952,952,952,108,108,108,108,970,971,972,967,953,98,943,367,97,964,970,967,953,98,954,955,97,964,965,970,967,98,97,970,971,972,967,953,98,954,943,955,367,97,964,965,970,971,972,967,98,943,367,97,953,964,94,100,946,940,947,948,950,941,951,942,968,968,969,969,921,921,952,952,953,98,954,943,955,367,99,956,957,958,961,97,962,108,963,964,965,966,973,974,975,107,105,106,103,976,368,527,100,102,979,946,940,947,948,949,950,941,951,942,968,969,921,952,953,98,954,943,955,367,367,99,956,957,958,959,960,945,961,961,961,961,97,97,962,108,963,964,965,966,945,945,97,545,949,973,974,975,107,105,106,103,976,368,527,100,102,979,946,940,947,948,949,950,941,951,942,968,969,921,952,953,98,954,943,955,367,99,956,957,958,959,960,945,961,97,962,108,963,964,965,966,2061,949,959,960,945,940,527,941,942,98,943,367,958,961,97,960,944,977,978,527,940,941,942,978,942,978,942,2045,2062,2046,970,971,972,98,943,367,2045,2062,2046,970,971,972,98,943,367,944,977,978,527,940,941,942,94,940,941,942,98,943,367,97,959,527,527,527,1035,527,527,527,527,952,108,957,0,0,0,0,0,968,969,921,948,967,953,98,97,962,964,973,974,975,107,105,106,103,976,368,527,100,102,979,946,940,947,948,949,950,941,951,942,968,969,921,952,953,98,954,943,955,367,99,956,957,958,959,960,945,961,97,962,108,963,964,965,966,977,100,941,942,98,943,367,978,942,98,943,367,958,973,974,975,107,105,106,103,976,368,527,100,102,979,946,940,947,948,949,950,941,951,942,968,969,921,952,953,98,954,943,955,367,99,956,957,958,959,960,945,961,97,962,108,963,964,965,966,94,973,974,975,107,105,106,103,976,368,527,100,102,979,946,940,940,947,948,949,950,941,941,951,942,942,968,969,921,952,953,98,98,954,943,943,955,367,367,99,956,957,958,959,960,945,961,97,97,962,108,963,964,965,966,973,974,975,107,105,106,103,976,368,527,100,102,979,946,940,947,948,949,950,941,951,942,968,969,921,952,953,98,954,943,955,367,99,956,957,958,959,960,945,961,97,962,108,963,964,965,966,973,974,975,107,105,106,103,976,368,527,100,102,979,946,940,947,948,949,950,941,951,942,968,969,921,952,953,98,954,943,955,367,99,956,957,958,959,960,945,961,97,962,108,963,964,965,966,973,974,975,103,976,368,102,941,942,94,940,941,942,98,943,367,97,973,974,975,107,105,106,103,976,368,527,100,102,979,946,940,947,948,949,950,941,951,942,968,969,921,952,953,98,954,943,955,367,99,956,957,958,959,960,945,961,97,962,108,963,964,965,966,94,22,946,947,948,950,951,953,954,955,99,956,962,94,940,941,942,98,943,367,944,977,978,967,946,950,946,950,946,950,944,977,978,527,940,941,942,953,954,955,962,964,965,970,971,972,967,98,943,367,97,527,951,951,951,944,977,978,940,941,942,0,0,0,0,0,0,0,160,940,941,942,98,943,367,957,97,979,947,963,964,965,966,970,967,98,97,973,974,975,103,976,368,527,102,946,940,947,948,950,951,953,954,955,956,97,962,964,965,966,97,973,974,975,103,976,368,102,527,941,942,98,943,367,958,961,97,100,957,952,952,952,2047,957,2047,977,941,0,977,941,941,941,958,2063,940,941,942,98,943,367,97,922,952,922,952,94,940,941,97,2063,940,941,942,98,943,367,97,94,940,941,942,98,943,367,97,94,940,941,942,98,943,367,97,94,940,941,942,98,943,367,97,2047,2047,94,940,941,942,98,943,367,97,2063,940,941,942,98,943,367,97,0,2063,940,941,942,98,943,367,97,2063,940,941,942,98,943,367,97,527,527,977,978,941,942,94,0,94,94,940,941,942,98,943,367,97,940,941,942,98,943,367,97,97,97,957,160,94,940,941,942,98,943,367,97,973,974,975,103,976,368,102,968,969,0,0,0,94,545,100,946,947,948,949,950,951,952,953,954,955,99,956,957,958,959,960,945,961,962,108,963,964,965,966,973,974,975,107,105,106,103,976,368,527,100,102,979,946,940,947,948,949,950,941,951,942,968,969,921,952,953,98,954,943,955,367,99,956,957,958,959,960,945,961,97,962,108,963,964,965,966,968,969,921,952,973,974,975,107,105,106,103,976,368,527,100,102,979,946,940,947,948,949,950,941,951,942,968,969,921,952,953,98,954,943,955,367,99,956,957,958,959,960,945,961,97,962,108,963,964,965,966,973,974,975,107,105,106,103,976,368,527,100,102,979,946,940,947,948,949,950,941,951,942,968,969,921,952,953,98,954,943,955,367,99,956,957,958,959,960,945,961,97,962,108,963,964,965,966,0,0,0,0,0,973,974,975,107,105,106,103,976,368,527,100,100,102,979,946,946,940,947,947,948,948,949,950,950,941,951,951,942,968,969,921,952,953,953,98,954,954,943,955,955,367,99,99,956,956,957,958,959,960,945,945,961,97,962,962,108,963,964,965,966,160,940,941,942,98,943,367,97,2064,94,100,2065,94,160,94,946,940,947,948,950,941,951,942,953,98,954,943,955,367,99,956,97,962,946,947,948,950,951,953,954,955,99,956,962,2065,973,974,975,107,105,106,103,976,368,527,100,102,979,946,940,947,948,949,950,941,951,942,968,969,921,952,953,98,954,943,955,367,99,956,957,958,959,960,945,961,97,962,108,963,964,965,966,0,979,951,951,951,962,962,967,97,962,967,97,962,967,962,967,97,973,974,975,107,105,106,103,976,368,527,100,102,979,946,940,947,948,949,950,941,951,942,968,969,921,952,953,98,954,943,955,367,99,956,957,958,959,960,945,961,97,962,108,963,964,965,966,958,2066,2067,2066,2067,2067,0,0,0,0,0,192,192,192,192,192,192,192,192,192,0,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,192,192,983,190,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,983,190,991,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,192,192,192,192,192,192,192,192,192,192,192,983,983,983,983,190,190,190,190,0,991,991,991,991,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,0,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,192,192,192,192,192,192,192,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,94,94,94,94,94,970,972,94,160,94,922,922,970,972,970,970,970,972,970,972,545,960,2045,2046,2045,2046,94,94,94,94,970,972,160,970,2047,2047,922,922,94,94,94,94,2047,2047,94,0,94,94,160,545,160,94,160,0,923,0,0,0,0,923,0,0,0,0,0,0,0,0,0,0,0,0,1013,1000,1001,1002,923,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,998,999,1000,1001,1002,923,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,998,999,1000,1001,1002,923,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,998,999,1000,1001,1002,923,923,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,998,999,1000,1001,1002,923,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,998,999,998,999,998,999,998,999,1000,1001,1002,923,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,998,999,1000,1001,1002,923,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,998,999,2068,1000,1001,1002,1000,1001,1002,923,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,998,999,1000,1001,1002,923,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,998,999,1009,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,998,999,1000,1001,1002,923,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,998,999,1000,1001,1002,923,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,998,999,998,999,1000,1001,1002,923,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,998,999,1000,1001,1002,923,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,998,999,1000,1001,1002,923,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,998,999,1000,1001,1002,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,998,999,1000,1001,1002,923,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,998,999,1000,1001,1002,923,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,998,999,998,998,998,998,1012,1011,1000,1001,1002,1004,1005,998,999,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1007,998,999,1000,1001,1002,923,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,998,999,1000,1001,1002,923,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,998,999,1000,1001,1002,923,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,998,999,1010,1008,1000,1001,1002,923,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,998,999,1000,1001,1002,923,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,998,999,1004,1005,1006,1000,1001,1002,923,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,998,999,0,1014,1014,1014,1014,1014,1014,1014,1014,1014,1014,1014,1014,1014,1014,1014,1014,1014,1014,1014,1014,1014,1014,1014,1014,1014,1014,1014,1014,1014,0,0,0,0,0,1015,0,0,2069,1017,1016,2069,1017,1016,2069,1017,1016,2069,1017,1016,2069,1017,1016,2069,1017,1016,2069,1017,1016,2069,1017,1016,2069,1017,1016,2069,1017,1016,2069,1017,1016,1016,1017,2069,1017,1016,2069,1017,1016,2069,1017,1016,2069,1017,1016,2069,1017,1016,2069,1017,1016,1017,1016,0,2069,1017,1016,2069,1017,1016,2069,1017,1016,2069,1017,1016,2069,1017,1016,2069,1017,1016,1022,1022,0,1022,0,0,0,0,1022,1022,1022,1022,1022,1022,1022,1022,1022,1022,1022,0,1022,0,1022,0,0,388,1021,1022,1022,1018,1018,1019,1019,1023,1020,1020,388,1021,1022,1018,1019,1023,1020,388,1021,1022,1018,1019,1023,1020,1022,1018,1018,1019,1019,1020,1018,1019,1020,1018,0,388,1021,1022,1018,1019,1023,1020,388,1021,1022,1018,1019,1023,1020,1021,0,1022,1018,1019,1020,1022,1018,1019,1020,1022,1018,1019,1020,0,1021,1023,0,388,388,1021,1022,1018,1019,1023,1023,1020,388,388,1021,1022,1018,1019,1023,1023,1020,388,1021,1022,1018,1019,1023,1020,388,1021,1022,1018,1019,1023,1020,1022,1018,1019,1022,1018,1019,1020,1022,1018,1018,1019,1019,1020,1022,1018,1019,1020,1022,1022,1022,1022,1018,1018,1018,1018,1019,1019,1019,1019,1020,1020,1020,1020,0,0,0,1021,1022,1018,1019,1020,388,1021,1022,1018,1019,1023,1020,388,1021,1022,1018,1019,1023,1020,1021,1023,388,0,0,1022,1018,1019,1020,388,1021,1022,1018,1019,1023,1020,388,388,1021,1022,1018,1019,1023,1020,388,1021,1022,1018,1019,1023,1020,388,1021,1022,1018,1019,1023,1020,388,1021,1022,1018,1019,1023,1020,1022,388,388,1021,1022,1018,1019,1023,1020,1022,0,0,1021,1023,0,0,0,1021,0,1021,0,0,0,0,0,0,0,1022,1018,1019,1020,388,1021,1022,1018,1019,1023,1020,388,1021,1022,1018,1019,1023,1020,388,1021,1022,1018,1019,1023,1020,388,1021,1022,1018,1019,1023,1020,388,1021,1022,1018,1019,1023,1020,0,388,1021,1022,1018,1019,1023,1020,2070,2070,0,0,2070,2070,2070,2071,2071,2071,0,2071,2071,2071,2071,2071,2071,2071,2071,2071,2071,2070,2071,2071,2071,2071,2071,2071,2071,2071,2071,2071,2071,2071,2071,0,1032,1032,0,0,0,0,0,0,0,0,0,0,1032,1032,1032,1027,1028,0,0,0,0,0,1030,0,1030,0,0,0,0,0,1044,0,0,0,1027,1028,0,1027,1028,1032,1044,1025,860,1026,1027,1028,1029,1030,1031,1032,1033,1033,2072,1052,1036,1025,1025,1042,1043,860,860,1044,1026,1026,1027,1027,1028,1028,1028,1049,1048,1045,2073,1029,1029,1029,1046,1041,1047,1047,1030,1030,1031,1031,1032,1032,1033,1033,1037,2072,1052,1036,1025,1025,1042,1043,860,860,1044,1026,1026,1027,1027,1028,1028,1049,1048,1045,2073,1029,1029,1046,1041,1047,1030,1030,1031,1031,1032,1032,1033,1033,1037,2072,1052,1036,1025,1042,1043,860,1044,1026,1027,1028,1049,1048,1045,2073,1029,1046,1041,1047,1030,1031,1032,1033,1037,1028,1029,1047,1025,860,1026,1027,1028,1029,1030,1031,1032,1033,1025,860,1026,1027,1028,1029,1030,1031,1032,1033,1031,2072,1052,1036,1025,1042,1043,860,1044,1026,1027,1028,1049,1048,1045,2073,1029,1046,1041,1047,1030,1031,1032,1033,1037,2072,1052,1036,1025,1042,1043,860,1044,1026,1027,1028,1049,1048,1045,2073,1029,1046,1041,1047,1030,1031,1032,1033,1037,1036,1037,0,1025,1042,1043,860,1044,1027,1028,1045,1029,1046,1041,1047,1030,1031,1032,1033,1025,860,1026,1027,1028,1029,1030,1031,1032,1033,1025,1042,1043,860,1044,1027,1028,1045,1029,1046,1041,1047,1030,1031,1032,1033,1025,1042,1043,860,1044,1027,1028,1045,1029,1046,1041,1047,1030,1031,1032,1033,1025,860,1026,1027,1028,1029,1030,1031,1032,1033,1028,1029,1028,1029,860,1026,1049,1045,2073,1029,1046,1030,1031,1033,860,1025,860,1026,1027,1028,1029,1030,1031,1032,1033,1036,1025,1042,1043,860,1044,1026,1027,1048,1045,1029,1041,1030,1031,1033,1037,1025,2072,1052,1036,1025,1042,1043,860,1044,1026,1026,1027,1028,1049,1048,1045,2073,1029,1046,1041,1041,1047,1030,1031,1032,1033,1037,2072,1052,1036,1025,1042,1043,860,1044,1026,1026,1027,1028,1049,1048,1045,2073,1029,1046,1041,1041,1047,1030,1031,1032,1033,1037,1032,2072,1052,1036,1025,1042,1043,860,1044,1026,1027,1028,1049,1048,1045,2073,1029,1046,1041,1047,1030,1031,1032,1033,1037,2072,1052,1036,1025,1042,1043,860,1044,1026,1027,1028,1049,1048,1045,2073,1029,1046,1041,1047,1030,1031,1032,1033,1037,1047,1028,1029,1047,1028,1029,1047,2072,1028,1029,1047,1028,1028,1028,1028,1029,1029,1029,1029,1047,1047,1047,1047,1032,0,1041,1034,1030,1031,1033,1031,1033,1025,860,1026,1027,1028,1029,1030,1031,1032,1033,1025,860,1027,1028,1030,1031,1032,1033,1025,860,1027,1028,1030,1031,1032,1033,1025,860,1026,1027,1028,1029,1030,1031,1032,1033,1025,860,1026,1027,1028,1029,1030,1031,1032,1033,1025,1042,1043,860,1044,1027,1028,1049,1029,1046,1047,1030,1031,1032,1033,1046,1031,2072,1052,1036,1025,1042,1043,860,1044,1026,1027,1028,1049,1048,1045,2073,1029,1046,1041,1047,1030,1030,1030,1031,1032,1033,1037,860,1026,1049,1045,2073,1029,1046,1030,1031,1033,1025,860,1026,1027,1028,1029,1030,1031,1032,1033,2072,1052,1036,1025,1042,1043,860,1044,1026,1027,1028,1049,1048,1045,2073,1029,1046,1041,1047,1030,1031,1032,1033,1037,1036,1025,1042,1043,860,1044,1026,1027,1048,1045,1029,1041,1030,1031,1033,1037,860,1026,1049,1045,2073,1029,1046,1030,1031,1033,1025,860,1026,1029,1031,1033,1025,860,1026,1029,1031,1033,1034,1030,1031,1033,1028,1025,860,1026,1027,1028,1029,1030,1031,1032,1033,1028,1028,1025,860,1026,1027,1028,1029,1030,1031,1032,1033,1028,1029,1047,860,1027,1028,1030,1032,2072,1052,1036,1025,1042,1043,860,1044,1026,1027,1028,1049,1048,1045,2073,1029,1046,1041,1047,1030,1031,1032,1033,1037,2072,1052,1036,1025,1042,1043,860,1044,1026,1027,1028,1049,1048,1045,2073,1029,1046,1041,1047,1030,1031,1032,1033,1037,2072,1052,1036,1025,1025,1042,1043,860,860,1044,1026,1026,1027,1027,1028,1028,1049,1048,1045,2073,1029,1029,1046,1041,1047,1030,1030,1031,1031,1032,1032,1033,1033,1037,2072,1052,1036,1025,1042,1043,860,1044,1026,1027,1028,1049,1048,1045,2073,1029,1046,1041,1047,1030,1031,1032,1033,1037,2072,1052,1036,1025,1042,1043,860,1044,1026,1027,1028,1049,1048,1045,2073,1029,1046,1041,1047,1030,1031,1032,1033,1037,1047,1025,860,1026,1027,1028,1029,1030,1031,1032,1033,2072,1052,1036,1025,1042,1043,860,1044,1026,1027,1028,1049,1048,1045,2073,1029,1046,1041,1047,1030,1031,1032,1033,1037,1047,860,1025,860,1026,1027,1028,1029,1030,1031,1032,1033,1045,860,860,860,1025,860,1026,1027,1028,1029,1030,1031,1032,1033,860,1049,1025,860,1027,1028,1030,1031,1032,1033,860,1031,1033,1052,1026,1027,1036,1025,1042,1043,860,1044,1026,1027,1048,1045,1029,1041,1030,1031,1033,1037,1045,2072,860,1049,860,1049,1028,1029,1025,1025,1042,860,1049,860,860,1049,860,1025,860,1026,1027,1028,1029,1030,1031,1032,1033,1027,1028,1030,1032,1025,860,1026,1027,1028,1029,1030,1031,1032,1033,1025,860,1026,1027,1028,1029,1030,1031,1032,1033,1025,860,1026,1027,1028,1029,1030,1031,1032,1033,1025,860,1026,1027,1028,1029,1030,1031,1032,1033,1025,860,1026,1027,1028,1029,1030,1031,1032,1033,1025,860,1026,1027,1028,1029,1030,1031,1032,1033,1025,860,1026,1027,1028,1029,1030,1031,1032,1033,1025,860,1026,1027,1028,1029,1030,1031,1032,1033,1049,1052,1033,1042,1033,1032,1025,860,1026,1026,1027,1028,1029,1030,1031,1032,1033,1025,860,1026,1027,1028,1029,1030,1031,1032,1033,1046,0,1049,2072,860,1049,1046,860,1025,1042,1043,860,1044,1027,1028,1045,1029,1046,1041,1047,1030,1031,1032,1033,2072,1052,1036,1025,1042,1043,860,1044,1026,1027,1028,1049,1048,1045,2073,1029,1046,1041,1047,1030,1031,1032,1033,1037,2072,1052,1036,1025,1042,1043,860,1044,1026,1027,1028,1049,1048,1045,2073,1029,1046,1041,1047,1030,1031,1032,1033,1037,2072,1052,1036,1025,1042,1043,860,1044,1026,1027,1028,1049,1048,1045,2073,1029,1046,1041,1047,1030,1031,1032,1033,1037,2072,1052,1036,1025,1042,1043,860,1044,1026,1027,1028,1049,1048,1045,2073,1029,1046,1041,1047,1030,1031,1032,1033,1037,1025,860,1026,1027,1028,1029,1030,1031,1032,1033,1025,860,1026,1027,1028,1029,1030,1031,1032,1033,1025,860,1026,1027,1028,1029,1030,1031,1032,1033,2072,1052,1036,1025,1042,1043,860,1044,1026,1027,1028,1049,1048,1045,2073,1029,1046,1041,1047,1030,1031,1032,1033,1037,1034,1052,1030,1031,1033,1027,1028,1030,1032,1027,1028,1030,1032,1027,1028,1030,1032,860,1049,1033,860,860,2072,1052,1036,1025,1042,1043,860,1044,1026,1027,1028,1049,1048,1045,2073,1029,1046,1041,1047,1030,1031,1032,1033,1037,1046,860,860,2074,2074,2075,2076,2076,2077,2077,2075,637,637,637,637,637,637,637,637,637,637,1053,0,637,637,637,637,637,637,0,0,637,637,637,0,637,1053,637,637,637,637,637,637,637,637,637,637,637,637,637,637,637,0,637,637,637,637,637,637,637,637,637,637,637,637,637,2078,2079,637,637,1053,1053,2078,2079,637,637,1053,2078,2079,637,1053,637,637,637,637,637,637,637,637,637,637,637,637,637,637,2078,2079,637,1053,2078,2079,637,1053,637,637,637,637,637,637,637,637,2078,2079,637,1053,2078,2079,637,1053,637,2078,2079,637,1053,2078,2079,637,1053,1053,637,1053,1053,1053,1053,1053,637,637,637,637,637,637,637,1053,1053,2078,2079,637,637,637,637,1053,637,2078,2079,637,1053,637,637,637,637,637,637,637,2078,637,1053,637,2078,2079,637,1053,2078,2079,637,1053,2078,2079,637,637,1053,2078,2079,637,1053,2078,2079,637,1053,637,2078,2079,637,1053,637,637,637,2079,637,2080,637,637,637,637,637,637,637,637,637,637,637,637,2078,2079,2080,637,637,637,637,637,637,637,637,637,637,637,637,637,637,637,637,637,637,637,637,637,637,637,637,637,637,637,637,637,637,637,2078,2079,637,1053,1053,2078,2079,637,1053,2078,2079,637,1053,2078,2079,637,1053,637,637,637,2078,2079,637,1053,637,637,637,2078,2079,637,1053,637,637,637,637,637,637,637,637,2049,2050,2051,2052,2049,2050,2052,2049,2050,2051,2052,2051,2052,2049,2050,2051,0,0,0,0,0,1057,1057,1057,0,1056,1058,1060,1059,1056,1058,1060,1059,1056,1058,1060,1059,1056,1058,1060,1059,1056,1058,1060,1059,1056,1058,1060,1056,1058,1059,1056,1058,1060,1059,1059,1056,1058,1060,1059,1056,1058,1060,1059,1056,1058,1060,1059,1057,1058,1056,1058,1060,1059,1060,1056,1058,1060,1059,1056,1058,1059,1060,1060,1056,1058,1060,1059,1056,1058,1060,1059,1056,1058,1060,1059,1056,1058,1060,1059,1056,1058,1060,1059,1056,1058,1060,1059,1056,1058,1059,1056,1058,1060,1059,1056,1058,1060,1059,1056,1058,1060,1059,1056,1058,1060,1059,1059,1056,1058,1060,1059,1056,1058,1060,1059,0,0,0,1062,1062,1063,895,1063,895,1063,895,1063,895,1063,895,1063,1063,895,1063,895,895,1063,895,895,1063,895,1063,895,1062,1063,1063,895,1063,895,1063,895,1063,895,1063,895,1063,895,1063,895,1063,895,1063,895,1063,1063,895,1063,895,1063,895,1063,895,1063,895,1063,895,1063,895,0,0,0,1064,1065,1065,1065,1065,1065,1065,1065,1065,1065,1065,1065,0,1064,1065,1065,1065,1065,1065,1065,1065,1065,1065,1065,1065,1065,1065,1065,1065,1065,0,0,0,0,1066,1067,1066,1066,892,1067,1066,1066,892,1067,1066,892,1066,1066,1067,1066,892,1067,1066,892,892,1067,1066,1066,1066,1066,1066,1066,1066,1066,892,1067,1066,892,1067,1066,892,1067,1066,892,1067,1066,892,1066,1066,1066,1066,1066,1066,1067,1066,892,1066,1067,1066,892,1066,892,1066,1066,1066,1066,1067,1066,892,1067,1066,892,1067,1066,1066,892,1067,1066,892,1067,1066,892,1066,1067,1066,892,1066,1066,1066,1066,892,1066,1066,1066,1066,1066,1066,1066,1066,1066,1066,1066,1066,1066,1066,1067,1066,892,1067,1066,892,1067,1066,892,1067,1066,892,1066,1066,1066,1067,1066,892,1067,1066,892,1066,0,1069,1069,1069,1069,1069,1069,1069,1069,1069,1069,1069,1069,1069,1069,1069,1069,1069,1069,1069,1069,1069,1069,1069,1069,1069,1069,1069,1069,0,0,874,874,874,874,874,874,874,874,1071,1071,1071,1071,0,0,0,0,1075,0,0,655,869,869,0,0,0,0,0,655,655,655,0,1075,869,0,1071,1071,1071,1071,1071,1071,1071,1071,1071,1071,1071,1071,869,869,1070,1070,1071,1071,1071,1071,1071,1071,1071,1071,1071,1071,1071,1071,655,0,0,0,0,874,1070,905,1073,874,874,645,1072,1072,901,901,1077,1071,1070,1070,1074,1075,655,905,1073,874,874,645,1072,901,1077,1071,1070,1070,1074,1075,655,905,1073,874,645,1072,901,1077,1071,1070,1074,1075,655,1072,901,1071,874,1070,874,1070,874,645,874,901,874,874,874,905,1073,874,645,1072,901,1077,1071,1070,1074,1075,655,905,1073,874,645,1072,901,1077,1071,1070,1074,1075,655,1074,1073,874,645,1072,901,1071,1070,1074,1075,874,1070,874,645,1072,901,1071,1070,1074,1075,874,645,1072,901,1071,1070,1074,1075,874,1070,1072,1072,874,874,901,874,874,874,1070,905,1073,874,645,1072,901,1077,1071,1070,1074,1075,655,905,1073,874,645,1072,901,1077,1071,1070,1074,1075,655,905,1073,874,645,1072,901,1077,1071,1070,1074,1075,655,905,1073,874,645,1072,901,1077,1071,1070,1074,1075,655,874,1072,901,1072,901,1071,1071,1072,901,1072,1072,1072,1072,901,901,901,901,874,874,1070,874,1070,874,1070,874,1070,874,1070,874,645,1072,901,1077,1077,1071,1070,1074,1075,655,655,645,905,1073,874,874,874,874,874,874,874,874,874,874,874,645,1072,1072,901,1077,1071,1071,1071,1071,1071,1071,1071,1071,1071,1071,1071,1071,1071,1071,1071,1071,1071,1071,1071,1071,1071,1071,1071,1070,1074,1075,655,874,1070,905,1073,874,645,1072,901,1077,1071,1070,1074,1075,655,874,1071,874,874,874,901,874,874,1070,2081,874,1070,874,874,1072,901,905,645,1077,655,1070,874,874,905,1073,874,645,1072,901,1077,1071,1070,1074,1075,655,874,874,905,1073,874,645,1072,901,1077,1071,1070,1074,1075,655,905,1073,874,874,645,1072,901,1077,1071,1070,1070,1074,1075,655,905,1073,874,645,1072,901,1077,1071,1070,1074,1075,655,905,1073,874,645,1072,901,1077,1071,1070,1074,1075,655,874,1070,905,1073,874,645,1072,901,1077,1071,1070,1074,1075,655,1071,1070,1070,874,1070,901,1074,1071,1070,874,1070,0,874,1074,645,874,1070,905,874,645,1072,874,874,1074,874,1070,1070,874,1070,874,1070,874,1070,874,1070,874,1070,874,1070,874,1070,874,1070,874,874,874,1070,874,874,874,905,874,1070,0,874,645,1072,901,1071,1070,1074,1075,905,1073,874,645,1072,901,1077,1071,1070,1074,1075,655,1077,655,905,1073,874,874,645,1072,901,1077,1071,1070,1074,1075,655,905,1073,874,645,1072,901,1077,1071,1070,1074,1075,655,905,1073,874,645,1072,901,1077,1071,1070,1074,1075,655,874,1070,874,1070,874,1070,905,1073,874,645,1072,901,1077,1071,1070,1074,1075,655,1070,1070,1070,1074,1074,874,905,1073,874,645,1072,901,1077,1071,1070,1074,1075,655,874,874,874,874,874,874,874,874,2082,2082,2082,1083,0,0,0,0,0,0,0,653,653,92,1081,1082,653,1084,92,92,1081,1081,1083,1082,653,1084,92,92,1081,1081,1083,1082,653,1084,92,1081,1083,92,1081,92,1081,1082,653,1084,92,1081,1083,1082,653,1084,92,1081,1083,1082,653,92,1081,1083,92,1081,653,92,1081,1083,653,92,1081,1083,92,1081,92,1081,92,1081,92,1081,92,1081,1083,1082,653,1084,92,1081,1083,1082,653,1084,92,1081,1083,1082,653,1084,92,1081,1083,1082,653,1084,92,1081,1083,1083,92,1081,92,1081,92,1081,92,1081,92,1081,92,653,653,1084,92,1081,1082,653,1084,92,1081,1083,1083,92,1081,92,1081,1082,653,1084,92,1081,1083,92,1081,1083,92,1081,92,1081,92,1081,92,1081,92,1081,653,0,1082,653,1084,92,1081,1083,1082,653,1084,92,1081,1083,1082,653,1084,92,92,1081,1081,1083,1082,653,1084,92,1081,1083,1082,653,1084,92,1081,1083,92,1081,1082,653,1084,92,1081,1083,1083,92,1081,92,1081,92,1081,1084,92,1081,1083,1083,92,1081,1083,1083,92,1081,92,1081,92,1081,92,1081,92,1081,92,1081,92,1081,92,1081,92,1081,92,1081,92,1081,1083,653,92,1081,1083,1082,653,1084,92,1081,1083,653,1082,653,1084,92,1081,1083,1082,653,1084,92,1081,1083,1082,653,1084,92,1081,1083,92,1081,92,1081,92,1081,1082,653,1084,92,1081,1083,1082,653,1084,92,1081,1083,92,1081,92,1081,2083,2084,2083,0,0,1085,1085,1085,864,1085,1085,864,1085,864,1085,1085,864,1085,864,1085,864,1085,1085,1085,1085,1085,1085,1085,864,1085,1085,864,864,1085,864,1085,864,1085,864,1085,1085,1085,1085,1085,1085,864,1085,864,864,1085,1085,1085,864,1085,1085,1085,1085,1085,1085,1085,864,864,1085,864,1085,1085,864,1085,864,1085,864,1085,1085,864,1085,1085,1085,1085,1085,864,1085,1085,1085,864,1085,864,1085,1085,1085,1085,1085,864,1085,864,1085,864,1085,1085,864,1085,1085,864,1085,864,1085,864,1085,864,1085,864,1085,1085,864,1085,864,864,1085,864,0,0,0,0,1086,1086,2085,2086,1087,1086,2085,2086,1087,1086,2085,2086,1087,1086,1086,1086,2085,2086,1087,1086,2085,2086,1087,1087,1087,1086,1086,1086,1087,1086,2085,2086,1087,1086,2085,2086,1087,1086,2085,2086,1087,1086,2085,2086,1087,1086,1086,1086,1086,1086,1086,1086,1086,1086,2085,2086,1087,1086,2085,2086,1087,1087,1086,1086,2085,2086,1087,1086,2085,2086,1087,1086,2085,2086,1087,1086,2085,2086,1087,1086,2085,2086,1087,1086,2085,2086,1087,1087,1086,1086,2085,2086,1087,1086,2085,2086,1087,1086,2085,2086,1087,1086,2085,2086,1087,1086,2085,2086,1087,1086,2085,2086,1087,0,0,0,1088,1348,637,1088,0,0,1348,0,637,0,0,0,397,1030,0,1030,0,0,637,637,397,397,397,0,0,0,0,0,1348,1223,1033,1088,1088,1088,1031,1088,1088,860,2,1088,1316,1088,1088,1088,1088,1031,1033,1223,1088,1031,1088,1088,1088,1088,1088,1088,860,1223,1223,1088,1358,1088,1088,1088,1088,1088,1088,860,860,1031,1033,1088,860,860,1223,2,1033,1033,1223,1223,860,2,2,1088,1088,1088,1088,1088,1088,1088,1358,860,1033,1088,1358,1088,2049,2050,2051,2052,2049,2050,2052,2049,2050,2051,2052,2051,2052,2049,2050,2051,0,0,0,0,0,0,1076,1089,1090,1091,1076,1076,1092,1093,1089,1089,1090,1090,1091,1091,1076,1076,1092,1093,1089,1089,1090,1090,1091,1091,1076,1092,1093,1089,1090,1091,1076,1089,1090,1091,1076,1089,1090,1091,1076,1092,1093,1089,1090,1091,1076,1092,1093,1089,1090,1091,1076,1092,1076,1092,1093,1089,1076,1089,1090,1091,1076,1092,1093,1089,1076,1092,1093,1089,1076,1089,1090,1091,1076,1089,1090,1091,1076,1089,1090,1091,1093,1076,1092,1093,1089,1090,1091,1076,1092,1093,1089,1090,1091,1076,1092,1093,1089,1090,1091,1076,1092,1093,1089,1090,1091,1076,1092,1093,1089,1090,1091,1076,1076,1076,1089,1090,1091,1076,1089,1090,1091,1076,1089,1090,1091,1076,1089,1090,1091,1076,1089,1090,1091,1076,1092,1093,1089,1090,1091,1076,1076,1092,1093,1089,1090,1091,1076,1089,1090,1091,1076,1076,1089,1090,1091,1076,1092,1093,1089,1090,1091,1089,1089,1076,1092,1093,1089,1090,1091,1090,1091,1076,1089,1090,1091,1076,1089,1090,1091,1076,1089,1090,1091,1076,1089,1090,1091,1076,1089,1090,1091,1076,1089,1076,1092,1093,1089,1090,1091,1092,1089,1089,1076,1092,1093,1089,1090,1091,1076,1076,1092,1093,1089,1089,1090,1090,1091,1091,1076,1092,1093,1089,1090,1091,1076,1092,1093,1089,1090,1091,1076,1089,1090,1091,1076,1092,1093,1089,1090,1091,1090,1076,1089,1090,1091,1090,1076,1076,1076,1089,1090,1091,1076,1089,1090,1091,1093,1093,1093,1076,1092,1093,1089,1090,1091,1092,1076,1089,1090,1091,1076,1089,1090,1091,1076,1089,1090,1091,1076,1089,1090,1091,1076,1089,1090,1091,1076,1089,1090,1091,1076,1089,1090,1091,1076,1089,1090,1091,1076,1089,1090,1091,1076,1076,1089,1090,1091,1076,1089,1090,1091,1076,1092,1093,1089,1076,1092,1093,1089,1090,1091,1076,1092,1093,1089,1090,1091,1076,1092,1093,1089,1090,1091,1076,1092,1093,1089,1090,1091,1076,1089,1090,1091,1076,1089,1090,1091,1076,1089,1090,1091,1076,1092,1093,1089,1090,1091,1076,1092,1093,1089,1090,1091,1094,0,1094,0,0,1094,0,0,0,0,1080,1080,1096,1097,3,1098,1080,1096,1097,3,1098,1080,1096,1097,3,1098,1080,1096,1097,3,1098,1080,1096,1097,3,1098,1096,1096,1097,3,1098,1080,1096,1097,3,1098,1080,1096,1097,3,1098,1080,1096,1097,3,1098,1080,1096,1097,3,1098,1094,1080,1096,1097,3,1098,1080,1096,1097,3,1098,1096,1097,3,1098,3,3,1080,1096,1097,3,1098,3,1080,1096,1097,3,1098,1080,1096,1097,3,1098,1080,1096,1097,3,1098,1080,1096,1097,3,1098,1080,1096,1097,3,1098,3,3,1096,1097,3,1098,1094,0,1095,3,1080,1096,1097,3,1098,1080,1096,1097,3,1098,1080,1096,1097,3,1098,1080,1096,1097,3,1098,1080,1096,1097,3,1098,1080,1096,1097,3,1098,1105,1106,1113,0,1114,1114,0,0,0,1105,1106,1113,0,1099,1102,1103,0,377,1114,1114,1114,1111,1112,1110,1114,1111,1112,1110,1110,1102,1103,0,1104,0,1114,0,0,0,0,377,0,0,0,0,0,0,0,377,1105,1106,1104,0,0,0,0,0,1110,1105,1106,1114,1114,0,0,1119,1114,1099,1099,1099,2087,2087,2087,2087,1099,1099,1115,375,1121,1116,1122,1120,1110,1110,1111,1111,1112,1112,1104,1104,1113,1113,1099,1101,1101,377,377,1117,1102,1102,1108,1105,1106,1106,1103,1103,1107,1109,1114,1114,1115,375,1121,1116,1122,1120,1110,1111,1112,1104,1113,1099,1101,377,1117,1102,1108,1105,1106,1103,1107,1109,1114,1115,375,1121,1116,1122,1120,1110,1111,1112,1104,1113,1099,1101,377,1117,1102,1108,1105,1106,1103,1107,1109,1114,1101,1115,375,1121,1116,1122,1120,1110,1111,1112,1104,1113,1099,1101,377,1117,1102,1108,1105,1106,1103,1107,1109,1114,1115,375,1121,1116,1122,1120,1110,1111,1112,1104,1113,1099,1101,377,1117,1102,1108,1105,1106,1103,1107,1109,1114,1104,1101,1102,1105,1106,1103,1107,1104,1101,1102,1105,1106,1103,1107,1104,1101,1102,1105,1106,1103,1107,1099,1108,1109,1115,375,1121,1116,1122,1120,1110,1111,1112,1104,1113,1099,1101,377,1117,1102,1108,1105,1106,1103,1107,1109,1114,1115,375,1121,1116,1122,1120,1110,1111,1112,1104,1113,1099,1101,377,1117,1102,1108,1105,1106,1103,1107,1109,1114,1115,375,1121,1100,1116,1122,1120,1110,1111,1112,1104,1113,1099,1101,377,1117,1102,1108,1105,1106,1103,1107,1109,1114,1100,1100,1100,1115,375,1121,1116,1122,1120,1110,1111,1112,1104,1113,1099,1101,377,1117,1102,1108,1105,1106,1103,1107,1109,1114,1110,1111,1112,1104,1113,1101,377,1102,1106,1103,1114,1101,1116,1110,1111,1112,1104,1113,1101,377,1102,1106,1103,1114,1110,1110,1110,1110,1111,1111,1111,1111,1112,1112,1112,1112,1104,1104,1104,1104,1113,1113,1113,1113,1101,1101,1101,1101,377,377,377,377,1102,1102,1102,1102,1106,1106,1106,1106,1103,1103,1103,1103,1114,1114,1114,1114,375,1116,1110,1110,1111,1111,1112,1112,1104,1099,1101,377,377,1117,1102,1105,1106,1106,1103,1107,1109,1114,1114,1115,375,1121,1116,1122,1120,1110,1111,1112,1104,1113,1099,1101,377,377,377,377,1117,1102,1102,1102,1102,1102,1108,1105,1105,1105,1105,1105,1106,1103,1103,1103,1103,1103,1103,1107,1109,1109,1114,1115,375,1121,1116,1122,1120,1110,1111,1112,1104,1113,1099,1101,377,1117,1102,1108,1105,1106,1103,1107,1109,1114,1120,1099,1108,1109,375,375,375,1104,1099,375,1117,375,1099,1099,1099,1099,1099,1104,1117,1109,1109,1109,1099,1099,375,1099,1117,1117,1101,1117,1116,1110,1111,1112,377,1114,1115,375,1121,1116,1122,1120,1110,1111,1112,1104,1113,1099,1101,377,1117,1102,1108,1105,1106,1103,1107,1109,1114,1121,1100,1117,375,1099,1116,375,1115,1115,375,1121,1116,1122,1120,1110,1111,1112,1104,1113,1099,1101,377,1117,1102,1108,1105,1106,1103,1107,1109,1114,1115,375,1121,1116,1122,1120,1110,1111,1112,1104,1113,1099,1101,377,1117,1102,1108,1105,1106,1103,1107,1109,1114,1115,375,1121,1116,1122,1120,1110,1111,1112,1104,1113,1099,1101,377,1117,1102,1108,1105,1106,1103,1107,1109,1114,1115,375,1121,1116,1122,1120,1110,1111,1112,1104,1113,1099,1101,377,1117,1102,1108,1105,1106,1103,1107,1109,1114,1115,375,1121,1116,1122,1120,1110,1111,1112,1104,1113,1099,1101,377,1117,1102,1108,1105,1106,1103,1107,1109,1114,1100,1109,1109,1099,1099,1099,1099,1099,1099,1109,1115,1116,1107,375,1116,1122,1120,1101,1107,1116,1116,1116,1099,1108,1109,1121,1100,1117,375,1116,1099,1099,1099,1099,1100,1119,1121,1122,1120,1108,375,1099,375,375,1105,1107,377,1099,1099,1104,1101,1102,1105,1106,1103,1107,1115,375,1121,1116,1122,1120,1110,1111,1112,1104,1113,1099,1101,377,1117,1102,1108,1105,1106,1103,1107,1109,1114,1110,1111,1112,377,1106,1114,1099,1099,1115,375,1121,1116,1122,1120,1110,1111,1112,1104,1113,1099,1101,377,1117,1102,1108,1105,1106,1103,1107,1109,1114,1115,375,1121,1116,1122,1120,1110,1111,1112,1104,1113,1099,1101,377,1117,1102,1108,1105,1106,1103,1107,1109,1114,1115,375,1121,1116,1122,1120,1110,1111,1112,1104,1113,1099,1101,377,1117,1102,1108,1105,1106,1103,1107,1109,1114,1116,1115,375,1121,1116,1122,1120,1110,1111,1112,1104,1113,1099,1101,377,1117,1102,1108,1105,1106,1103,1107,1109,1114,1100,1119,1120,1099,1099,1116,1116,375,1115,1115,375,1121,1116,1122,1120,1110,1111,1112,1104,1113,1099,1101,377,1117,1102,1108,1105,1106,1103,1107,1109,1114,2088,2088,2089,2088,2088,2089,2090,2090,2090,2091,2091,2091,2092,2092,2093,2094,2093,2095,2094,2094,2092,2092,2095,2096,2096,2097,2096,2096,2097,2096,2097,0,0,0,0,0,0,900,1126,1126,0,0,0,0,0,0,898,900,0,0,1126,1123,886,2098,1123,1123,900,1127,899,1125,2099,384,384,893,886,1123,900,1127,899,1125,2099,384,893,886,1123,900,1127,899,1125,2099,384,893,886,384,898,898,1123,900,1127,899,1125,2099,384,893,886,1123,900,1127,899,1125,2099,384,893,886,1024,384,384,384,886,893,886,1123,900,1127,899,1125,2099,384,893,886,1123,900,1127,899,1125,2099,384,893,886,1125,1125,1123,900,1127,899,1125,2099,384,893,886,1124,1127,899,898,1123,899,899,899,1123,900,1127,899,1125,2099,384,893,886,384,384,898,898,898,384,384,384,384,384,384,1123,900,1127,899,1125,2099,384,893,886,886,1123,900,1127,899,1125,2099,384,893,886,1125,893,886,886,1123,1123,384,1123,1123,1123,900,1127,899,1125,2099,384,893,886,899,1123,900,1127,899,1125,2099,384,893,886,1123,900,1127,899,1125,2099,384,893,886,1123,900,1127,899,1125,2099,384,893,886,1123,900,1127,899,1125,2099,384,893,886,1123,900,1127,899,1125,2099,384,893,886,886,886,899,899,899,899,1127,899,893,886,899,1124,1123,1127,899,893,1126,2099,886,886,899,899,899,899,899,899,899,899,899,899,898,886,898,0,384,1123,900,1127,899,1125,2099,384,893,886,1123,900,1127,899,1125,2099,384,893,886,1123,900,1127,899,1125,2099,384,893,886,1123,900,1127,899,1125,2099,384,893,886,1123,900,1127,899,1125,2099,384,893,886,1123,900,1127,899,1125,2099,384,893,886,893,1138,1138,1160,1158,0,1143,1189,0,0,0,0,1224,1051,1138,1165,1051,1051,1051,1051,1051,1051,1051,1051,1051,1051,1051,1051,1051,1051,1051,1051,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,904,0,811,1202,1247,0,811,0,0,0,0,0,0,0,0,0,1138,1132,1135,401,1135,401,0,0,0,0,1163,1195,1195,1164,0,0,0,0,0,1201,1233,0,0,0,1249,0,1248,0,1156,1251,1154,1154,1224,1163,1154,1192,1154,1192,1154,1154,1192,2100,1187,1187,859,1199,1051,1051,1051,1051,1051,0,1143,0,1156,1156,0,0,0,0,1051,1051,1051,1051,1189,0,0,0,0,0,0,0,0,0,0,0,1250,1051,1051,1051,1051,1051,1051,0,1132,0,1167,0,1201,1199,1079,1079,1079,1079,1079,1079,1079,1079,1079,1079,1233,0,1165,0,1138,1142,1252,0,0,0,1189,1189,859,1188,1135,1135,382,1221,0,0,0,0,0,0,1187,1187,0,1190,904,0,0,0,1187,1253,1187,1234,1235,1237,1189,1189,1167,869,869,1196,1164,0,1135,1135,0,1158,1158,1195,908,0,1132,1155,1196,1189,1201,1189,1159,1250,1156,1156,1156,1156,1156,1156,0,0,0,1160,1253,859,0,0,0,0,0,0,1167,869,0,0,0,0,1251,0,1135,1250,1051,1051,1051,1051,1051,1051,1051,1051,1051,1051,1051,1051,1138,401,1159,1160,0,0,0,0,0,1183,1200,1200,0,0,0,0,1249,0,1248,0,1195,1187,910,1158,1051,1051,1051,1051,1051,1051,1051,1051,1051,1051,1051,1051,1051,1051,1051,1051,1051,1051,1051,1051,1051,1051,1051,1051,1051,1051,1051,1051,2101,1135,401,0,811,1202,1247,811,0,0,0,0,0,0,0,1251,0,0,0,0,1251,0,0,0,0,0,0,0,0,1199,1079,1079,1079,1079,1079,1079,1079,1079,1079,1079,1079,1079,0,0,0,0,0,0,0,0,1155,1142,1252,1156,1156,1156,1051,0,1143,0,0,872,889,0,1202,0,1158,0,401,0,1202,0,0,0,0,0,0,0,0,811,1247,811,0,0,0,869,869,904,1135,1199,1131,1079,1079,1131,1079,1079,1079,1079,1079,1079,872,889,0,1079,1079,1079,1079,0,1132,1135,1132,1252,1190,1233,0,0,0,0,0,0,0,0,1155,1142,1252,1183,1200,1193,1156,1187,1051,1134,1136,1137,1061,1223,1174,1174,1174,1132,1138,1135,401,1160,1171,1174,1140,1172,1151,1177,1078,1152,1152,1132,1132,1153,1153,1154,1154,1242,1155,1156,1156,1157,1243,1158,1158,1144,1146,1159,1159,1160,1160,910,1141,909,1161,1161,811,1239,869,869,1162,1163,1163,1240,1164,1164,1165,1165,1166,1166,1167,1167,1168,1169,1140,1170,1170,1171,1171,1172,1172,1173,1174,1175,1176,1148,2102,1177,1177,1178,1179,1180,1145,1181,1182,859,1134,1136,1241,1183,1183,1137,1051,1051,1061,1267,1138,1138,1184,1184,1185,1185,1186,1186,1131,1131,1187,1187,1188,1188,1189,1189,1190,1190,1191,1191,1079,1079,1135,1135,401,401,1192,1192,1193,1193,1194,1194,1143,1143,1195,1195,1196,1196,1197,1197,1198,872,872,1199,1199,1200,1200,1201,1201,1202,1202,437,437,1203,1204,1151,1151,1205,1205,1206,875,1247,1207,1207,1208,879,1209,1209,1210,883,1130,889,1211,1212,1212,1213,1133,1214,1214,1215,1216,360,412,412,1078,1078,1217,1217,1218,1219,1220,1248,1249,382,382,1221,1221,1250,904,904,419,1251,420,1236,894,908,1222,1222,1252,1223,1142,1238,1253,1224,1224,1225,1225,1226,1227,1228,1228,1229,1230,878,1231,1231,1232,1118,1233,1233,1152,1132,1153,1154,1242,1155,1156,1157,1243,1158,1144,1146,1159,1160,910,1141,909,1161,811,1239,869,1162,1163,1240,1164,1165,1166,1167,1168,1169,1140,1170,1171,1172,1173,1174,1175,1176,1148,2102,1177,1178,1179,1180,1145,1181,1182,859,1134,1136,1241,1183,1137,1051,1061,1267,1138,1184,1185,1186,1131,1187,1188,1189,1190,1191,1079,1135,401,1192,1193,1194,1143,1195,1196,1197,1198,872,1199,1200,1201,1202,437,1203,1204,1151,1205,1206,875,1247,1207,1208,879,1209,1210,883,1130,889,1211,1212,1213,1133,1214,1215,1216,360,412,1078,1217,1218,1219,1220,1248,1249,382,1221,1250,904,419,1251,420,1236,894,908,1222,1252,1223,1142,1238,1253,1224,1225,1226,1227,1228,1229,1230,878,1231,1232,1118,1233,2100,2103,1152,1132,1153,1154,1242,1155,1156,1157,1243,1158,1144,1146,1159,1160,910,1141,909,1161,811,1239,869,1162,1163,1240,1164,1165,1166,1167,1168,1169,1140,1170,1171,1172,1173,1174,1175,1176,1148,2102,1177,1178,1179,1180,1145,1181,1182,859,1134,1136,1241,1183,1137,1051,1061,1267,1138,1184,1185,1186,1131,1187,1188,1189,1190,1191,1079,1135,401,1192,1193,1194,1143,1195,1196,1197,1198,872,1199,1200,1201,1202,437,1203,1204,1151,1205,1206,875,1247,1207,1208,879,1209,1210,883,1130,889,1211,1212,1213,1133,1214,1215,1216,360,412,1078,1217,1218,1219,1220,1248,1249,382,1221,1250,904,419,1251,420,1236,894,908,1222,1252,1223,1142,1238,1253,1224,1225,1226,1227,1228,1229,1230,878,1231,1232,1118,1233,1132,1153,1154,1156,1158,1159,1160,1161,869,1163,1164,1165,1166,1167,1170,1171,1177,1051,1138,1184,1185,1186,1131,1187,1188,1189,1190,1191,1079,1135,401,1192,1193,1194,1143,1195,1196,1197,872,1199,1200,1201,1202,437,1205,1207,1209,1212,1214,1078,382,1221,904,1222,1224,1225,1228,1231,1233,1142,1172,1204,1151,1051,1054,1238,1223,1238,1177,1078,1184,1152,1172,1151,1172,1151,889,1144,1146,1144,1051,1186,1141,2100,2100,1173,1134,1136,1137,1061,889,1175,437,889,1141,909,1132,1138,1135,401,1132,1138,1135,401,1132,1138,1135,401,1132,1138,1135,401,1132,1132,1138,1138,1135,1135,401,401,1132,1138,1135,401,1132,1138,1135,401,1161,1051,1051,1174,1152,1132,1153,1154,1242,1155,1156,1157,1243,1158,1144,1146,1159,1160,910,1141,909,1161,811,1239,869,1162,1163,1240,1164,1165,1166,1167,1168,1169,1140,1170,1171,1172,1173,1174,1175,1176,1148,2102,1177,1178,1179,1180,1145,1181,1182,859,1134,1136,1241,1183,1137,1051,1061,1267,1138,1184,1185,1186,1131,1187,1188,1189,1190,1191,1079,1135,401,1192,1193,1194,1143,1195,1196,1197,1198,872,1199,1200,1201,1202,437,1203,1204,1151,1205,1206,875,1247,1207,1208,879,1209,1210,883,1130,889,1211,1212,1213,1133,1214,1215,1216,360,412,1078,1217,1218,1219,1220,1248,1249,382,1221,1250,904,419,1251,420,1236,894,908,1222,1252,1223,1142,1238,1253,1224,1225,1226,1227,1228,1229,1230,878,1231,1232,1118,1233,1152,1132,1153,1154,1242,1155,1156,1157,1243,1158,1144,1146,1159,1160,910,1141,909,1161,811,1239,869,1162,1163,1240,1164,1165,1166,1167,1168,1169,1140,1170,1171,1172,1173,1174,1175,1176,1148,2102,1177,1178,1179,1180,1145,1181,1182,859,1134,1136,1241,1183,1137,1051,1061,1267,1138,1184,1185,1186,1131,1187,1188,1189,1190,1191,1079,1135,401,1192,1193,1194,1143,1195,1196,1197,1198,872,1199,1200,1201,1202,437,1203,1204,1151,1205,1206,875,1247,1207,1208,879,1209,1210,883,1130,889,1211,1212,1213,1133,1214,1215,1216,360,412,1078,1217,1218,1219,1220,1248,1249,382,1221,1250,904,419,1251,420,1236,894,908,1222,1252,1223,1142,1238,1253,1224,1225,1226,1227,1228,1229,1230,878,1231,1232,1118,1233,1140,1134,1136,1137,1061,1162,1203,1178,412,1198,1140,1185,1140,1136,1061,889,1144,1144,1152,1132,1153,1154,1155,1156,1157,1158,1159,1160,1161,811,869,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1148,1177,1178,1179,1180,1145,1181,1182,1183,1051,1138,1184,1185,1186,1131,1187,1188,1189,1190,1191,1079,1135,401,1192,1193,1194,1143,1195,1196,1197,1198,872,1199,1200,1201,1202,437,1203,1204,1151,1205,1206,875,1207,1208,879,1209,1210,883,1130,1211,1212,1213,1133,1214,1215,1216,360,412,1078,1217,1218,1219,1220,382,1221,904,1222,1223,1142,1224,1225,1226,1227,1228,1229,1230,878,1231,1232,1118,1233,1152,1132,1153,1154,1155,1156,1157,1158,1159,1160,1161,811,869,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1148,1177,1178,1179,1180,1145,1181,1182,1183,1051,1138,1184,1185,1186,1131,1187,1188,1189,1190,1191,1079,1135,401,1192,1193,1194,1143,1195,1196,1197,1198,872,1199,1200,1201,1202,437,1203,1204,1151,1205,1206,875,1207,1208,879,1209,1210,883,1130,1211,1212,1213,1133,1214,1215,1216,360,412,1078,1217,1218,1219,1220,382,1221,904,1222,1223,1142,1224,1225,1226,1227,1228,1229,1230,878,1231,1232,1118,1233,1152,1132,1153,1154,1155,1156,1157,1158,1159,1160,1161,811,869,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1148,1177,1178,1179,1180,1145,1181,1182,1183,1051,1138,1184,1185,1186,1131,1187,1188,1189,1190,1191,1079,1135,401,1192,1193,1194,1143,1195,1196,1197,1198,872,1199,1200,1201,1202,437,1203,1204,1151,1205,1206,875,1207,1208,879,1209,1210,883,1130,1211,1212,1213,1133,1214,1215,1216,360,412,1078,1217,1218,1219,1220,382,1221,904,1222,1223,1142,1224,1225,1226,1227,1228,1229,1230,878,1231,1232,1118,1233,1233,1160,1148,1233,1174,1188,1154,1132,1138,1135,401,1211,1051,1051,1170,1185,1132,1138,1135,401,1132,1138,1135,401,1153,1144,1144,1144,1144,1171,437,1223,1227,1170,1141,909,1154,1158,1159,869,1163,1164,1166,1167,1170,1171,1172,1173,1174,1148,1145,1134,1136,1137,1061,1138,1184,1185,1131,1187,1188,1190,1193,1194,1143,1195,1196,1198,872,1199,1151,1078,420,1236,894,1238,1238,1186,1188,1169,1194,1180,360,1148,1186,1152,1132,1153,1154,1242,1155,1156,1157,1243,1158,1144,1146,1159,1160,910,1141,909,1161,811,1239,1239,869,1162,1163,1240,1240,1164,1165,1166,1167,1168,1169,1140,1170,1171,1172,1173,1174,1175,1176,1148,2102,1177,1178,1179,1180,1145,1181,1182,859,1134,1136,1241,1241,1183,1137,1051,1061,1267,1138,1184,1185,1186,1131,1187,1188,1189,1190,1191,1079,1135,401,1192,1193,1194,1143,1195,1196,1197,1198,872,1199,1200,1201,1202,437,1203,1204,1151,1205,1206,1206,875,875,1247,1207,1208,1208,879,879,1209,1210,1210,883,883,1130,1130,889,1211,1212,1213,1213,1133,1133,1214,1215,1215,1216,1216,360,412,1078,1217,1218,1219,1219,1220,1220,1248,1249,382,1221,1250,904,419,1251,420,1236,894,908,1222,1252,1223,1142,1238,1253,1224,1225,1226,1226,1227,1227,1228,1229,1229,1230,1230,878,878,1231,1232,1232,1118,1118,1233,1152,1132,1153,1154,1242,1155,1156,1157,1243,1158,1144,1146,1159,1160,910,1141,909,1161,811,1239,869,1162,1163,1240,1164,1165,1166,1167,1168,1169,1140,1170,1171,1172,1173,1174,1175,1176,1148,2102,1177,1178,1179,1180,1145,1181,1182,859,1134,1136,1241,1183,1137,1051,1061,1267,1138,1184,1185,1186,1131,1187,1188,1189,1190,1191,1079,1135,401,1192,1193,1194,1143,1195,1196,1197,1198,872,1199,1200,1201,1202,437,1203,1204,1151,1205,1206,875,1247,1207,1208,879,1209,1210,883,1130,889,1211,1212,1213,1133,1214,1215,1216,360,412,1078,1217,1218,1219,1220,1248,1249,382,1221,1250,904,419,1251,420,1236,894,908,1222,1252,1223,1142,1238,1253,1224,1225,1226,1227,1228,1229,1230,878,1231,1232,1118,1233,2102,1152,1132,1051,1138,1131,1135,401,1238,1152,1152,1132,1138,1135,401,1172,1146,1146,1152,1132,1153,1154,1242,1155,1156,1157,1243,1158,1144,1146,1159,1160,910,1141,909,1161,811,1239,869,1162,1163,1240,1164,1165,1166,1167,1168,1169,1140,1170,1171,1172,1173,1174,1175,1176,1148,2102,1177,1178,1179,1180,1145,1181,1182,859,1134,1136,1241,1183,1137,1051,1061,1267,1138,1184,1185,1186,1131,1187,1188,1189,1190,1191,1079,1135,401,1192,1193,1194,1143,1195,1196,1197,1198,872,1199,1200,1201,1202,437,1203,1204,1151,1205,1206,875,1247,1207,1208,879,1209,1210,883,1130,889,1211,1212,1213,1133,1214,1215,1216,360,412,1078,1217,1218,1219,1220,1248,1249,382,1221,1250,904,419,1251,420,1236,894,908,1222,1252,1223,1142,1238,1253,1224,1225,1226,1227,1228,1229,1230,878,1231,1232,1118,1233,1152,1152,1152,1132,1153,1154,1242,1242,1155,1156,1157,1243,1243,1158,1144,1144,1146,1146,1159,1160,910,1141,909,1161,811,1239,869,1162,1163,1240,1164,1165,1166,1167,1168,1169,1140,1170,1171,1172,1173,1174,1175,1176,1148,2102,1177,1178,1179,1180,1145,1181,1182,859,1134,1136,1241,1183,1137,1051,1061,1267,1138,1184,1185,1186,1131,1187,1188,1189,1190,1191,1079,1135,401,1192,1193,1194,1143,1195,1196,1197,1198,872,1199,1200,1201,1202,437,1203,1204,1151,1205,1206,1206,875,1247,1207,1208,1208,879,1209,1210,1210,883,1130,889,1211,1212,1213,1213,1133,1214,1215,1215,1216,360,412,1078,1217,1218,1219,1219,1220,1220,1248,1249,382,1221,1250,904,419,1251,420,1236,894,908,1222,1252,1223,1142,1238,1253,1224,1225,1226,1226,1227,1228,1229,1229,1230,1230,878,1231,1232,1232,1118,1233,1159,1152,1132,1153,1154,1156,1158,1159,1160,1161,869,1163,1164,1165,1166,1167,1170,1171,1172,1177,1183,1051,1138,1184,1185,1186,1131,1187,1188,1189,1190,1191,1079,1135,401,1192,1193,1194,1143,1195,1196,1197,872,1199,1200,1201,1202,437,1151,1205,1207,1209,1212,1214,412,1078,1217,382,1221,904,1222,1224,1225,1228,1231,1233,1132,1153,1154,1156,1158,1159,1160,1161,869,1163,1164,1165,1166,1167,1170,1171,1177,1051,1138,1184,1185,1186,1131,1187,1188,1189,1190,1191,1079,1135,401,1192,1193,1194,1143,1195,1196,1197,872,1199,1200,1201,1202,437,1205,1207,1209,1212,1214,1078,382,1221,904,1222,1224,1225,1228,1231,1233,1211,1211,1132,1138,1135,401,0,1146,1176,1182,1178,1179,1181,412,1217,1218,1152,1132,1153,1154,1156,1158,1159,1160,1161,869,1163,1164,1165,1166,1167,1170,1171,1172,1174,1177,1183,1051,1138,1184,1185,1186,1131,1187,1188,1189,1190,1191,1079,1135,401,1192,1193,1194,1143,1195,1196,1197,872,1199,1200,1201,1202,437,1151,1205,1207,879,1209,1212,1214,360,412,1078,1217,382,1221,904,1222,1224,1225,1228,1231,1233,1152,1152,1152,1152,1132,1132,1132,1132,1153,1153,1153,1153,1154,1154,1154,1154,1156,1156,1156,1156,1158,1158,1158,1158,1159,1159,1159,1159,1160,1160,1160,1160,1161,1161,1161,1161,869,869,869,869,1163,1163,1163,1163,1164,1164,1164,1164,1165,1165,1165,1165,1166,1166,1166,1166,1167,1167,1167,1167,1170,1170,1170,1170,1171,1171,1171,1171,1172,1172,1172,1172,1177,1177,1177,1177,1183,1183,1183,1183,1051,1051,1051,1051,1138,1138,1138,1138,1184,1184,1184,1184,1185,1185,1185,1185,1186,1186,1186,1186,1131,1131,1131,1131,1187,1187,1187,1187,1188,1188,1188,1188,1189,1189,1189,1189,1190,1190,1190,1190,1191,1191,1191,1191,1079,1079,1079,1079,1135,1135,1135,1135,401,401,401,401,1192,1192,1192,1192,1193,1193,1193,1193,1194,1194,1194,1194,1143,1143,1143,1143,1195,1195,1195,1195,1196,1196,1196,1196,1197,1197,1197,1197,872,872,872,872,1199,1199,1199,1199,1200,1200,1200,1200,1201,1201,1201,1201,1202,1202,1202,1202,437,437,437,437,1151,1151,1151,1151,1205,1205,1205,1205,1207,1207,1207,1207,1209,1209,1209,1209,1212,1212,1212,1212,1214,1214,1214,1214,412,412,412,412,1078,1078,1078,1078,1217,1217,1217,1217,382,382,382,382,1221,1221,1221,1221,904,904,904,904,1222,1222,1222,1222,1224,1224,1224,1224,1225,1225,1225,1225,1228,1228,1228,1228,1231,1231,1231,1231,1233,1233,1233,1233,1152,1132,1154,1156,1158,1159,1160,1161,869,1163,1164,1165,1166,1167,1170,1171,1051,1138,1184,1185,1186,1131,1187,1188,1189,1190,1191,1079,1135,401,1192,1193,1194,1143,1195,1196,1197,1198,872,1199,1200,1201,1202,437,1203,1204,1151,1233,1132,1140,1138,1135,401,1240,1240,1238,1238,1188,1223,1144,1152,1132,1132,1132,1132,1132,1153,1154,1242,1156,1243,1158,1144,1146,1159,1160,1161,811,869,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1148,1177,1178,1179,1180,1145,1181,1182,1183,1051,1138,1138,1138,1138,1138,1184,1185,1186,1131,1187,1188,1189,1190,1191,1079,1135,1135,1135,1135,1135,401,401,401,401,401,1192,1193,1194,1143,1195,1196,1197,1198,872,1199,1200,1201,1202,437,1203,1204,1151,1205,1206,875,1247,1207,1208,879,1209,1210,883,1130,1212,1213,1133,1214,1215,1216,360,412,1078,1217,1218,1219,1220,1248,1249,382,1221,1250,904,1251,1251,908,908,1222,1252,1252,1223,1142,1253,1253,1224,1225,1226,1227,1228,1229,1230,878,1231,1232,1118,1233,1161,1172,1186,1191,1180,360,1152,1132,1153,1154,1242,1155,1156,1157,1243,1158,1144,1146,1159,1160,910,1141,909,1161,1161,811,1239,869,1162,1163,1240,1164,1164,1165,1166,1167,1168,1169,1140,1170,1171,1172,1173,1174,1175,1176,1148,2102,1177,1178,1179,1180,1145,1181,1182,859,859,859,859,1134,1134,1134,1136,1241,1241,1183,1137,1137,1137,1051,1061,1267,1138,1184,1185,1186,1131,1131,1187,1188,1189,1190,1191,1079,1079,1135,401,401,1192,1193,1194,1143,1195,1196,1197,1198,872,1199,1200,1201,1202,437,1203,1204,1151,1205,1206,875,875,1247,1207,1208,879,879,1209,1210,883,883,1130,889,1211,1212,1213,1133,1133,1214,1215,1216,1216,360,412,1078,1217,1218,1219,1220,1248,1249,382,1221,1250,904,904,904,419,1251,1251,420,1236,894,908,908,1222,1252,1252,1252,1252,1223,1142,1238,1253,1253,1253,1224,1225,1226,1227,1227,1228,1229,1230,878,878,1231,1232,1118,1118,1233,1132,1138,1135,401,1132,1132,1138,1138,1135,1135,401,401,1132,1138,1135,401,1211,1134,1137,1134,1137,1223,1134,1137,1134,1137,1132,1138,1135,401,1132,1138,1135,401,1152,1132,1153,1154,1242,1155,1156,1157,1243,1158,1144,1146,1159,1160,910,1141,909,1161,811,1239,869,1162,1163,1240,1164,1165,1166,1167,1168,1169,1140,1170,1171,1172,1173,1174,1175,1176,1148,2102,1177,1178,1179,1180,1145,1181,1182,859,1134,1136,1241,1183,1137,1051,1061,1267,1138,1184,1185,1186,1131,1187,1188,1189,1190,1191,1079,1135,401,1192,1193,1194,1143,1195,1196,1197,1198,872,1199,1200,1201,1202,437,1203,1204,1151,1205,1206,875,1247,1207,1208,879,1209,1210,883,1130,889,1211,1212,1213,1133,1214,1215,1216,360,412,1078,1217,1218,1219,1220,1248,1249,382,1221,1250,904,419,1251,420,1236,894,908,1222,1252,1223,1142,1238,1253,1224,1225,1226,1227,1228,1229,1230,878,1231,1232,1118,1233,1134,1137,1223,1078,1223,1223,1154,1158,1159,869,1163,1164,1166,1167,1170,1171,1172,1173,1174,1148,1145,1134,1136,1137,1061,1138,1184,1185,1131,1187,1188,1190,1193,1194,1143,1195,1196,1198,872,1199,1151,1078,420,1236,894,1238,1184,1170,1134,1137,1247,1211,419,419,419,1140,1134,1136,1137,1061,1134,1137,419,419,419,1079,1061,1051,1051,1051,1202,1051,1132,1153,1154,1156,1158,1159,1160,1161,869,1163,1164,1165,1166,1167,1170,1171,1177,1051,1138,1184,1185,1186,1131,1187,1188,1189,1190,1191,1079,1135,401,1192,1193,1194,1143,1195,1196,1197,872,1199,1200,1201,1202,437,1205,1207,1209,1212,1214,1078,382,1221,904,1222,1224,1225,1228,1231,1233,1194,875,879,883,1130,1133,1216,382,1221,1227,878,1118,1223,1223,1223,1223,1251,908,1252,1253,1211,1152,1132,1153,1154,1242,1155,1156,1157,1243,1158,1144,1146,1159,1160,910,1141,909,1161,811,1239,869,1162,1163,1240,1164,1165,1166,1167,1168,1169,1140,1170,1171,1172,1173,1174,1175,1176,1148,2102,1177,1178,1179,1180,1145,1181,1182,859,1134,1136,1241,1183,1137,1051,1061,1267,1138,1184,1185,1186,1131,1187,1188,1189,1190,1191,1079,1135,401,1192,1193,1194,1143,1195,1196,1197,1198,872,1199,1200,1201,1202,437,1203,1204,1151,1205,1206,875,1247,1207,1208,879,1209,1210,883,1130,889,1211,1212,1213,1133,1214,1215,1216,360,412,1078,1217,1218,1219,1220,1248,1249,382,1221,1250,904,419,1251,420,1236,894,908,1222,1252,1223,1142,1238,1253,1224,1225,1226,1227,1228,1229,1230,878,1231,1232,1118,1233,1132,1138,1135,401,1223,1144,1146,1132,1138,1135,401,1132,1138,1135,401,1152,1132,1153,1154,1242,1155,1156,1157,1243,1158,1144,1146,1159,1160,910,1141,909,1161,811,1239,869,1162,1163,1240,1164,1165,1166,1167,1168,1169,1140,1170,1171,1172,1173,1174,1175,1176,1148,2102,1177,1178,1179,1180,1145,1181,1182,859,1134,1136,1241,1183,1137,1051,1061,1267,1138,1184,1185,1186,1131,1187,1188,1189,1190,1191,1079,1135,401,1192,1193,1194,1143,1195,1196,1197,1198,872,1199,1200,1201,1202,437,1203,1204,1151,1205,1206,875,1247,1207,1208,879,1209,1210,883,1130,889,1211,1212,1213,1133,1214,1215,1216,360,412,1078,1217,1218,1219,1220,1248,1249,382,1221,1250,904,419,1251,420,1236,894,908,1222,1252,1223,1142,1238,1253,1224,1225,1226,1227,1228,1229,1230,878,1231,1232,1118,1233,1152,1132,1153,1154,1242,1155,1156,1157,1243,1158,1144,1146,1159,1160,910,1141,909,1161,811,1239,869,1162,1163,1240,1164,1165,1166,1167,1168,1169,1140,1170,1171,1172,1173,1174,1175,1176,1148,2102,1177,1178,1179,1180,1145,1181,1182,859,1134,1136,1241,1183,1137,1051,1061,1267,1138,1184,1185,1186,1131,1187,1188,1189,1190,1191,1079,1135,401,1192,1193,1194,1143,1195,1196,1197,1198,872,1199,1200,1201,1202,437,1203,1204,1151,1205,1206,875,1247,1207,1208,879,1209,1210,883,1130,889,1211,1212,1213,1133,1214,1215,1216,360,412,1078,1217,1218,1219,1220,1248,1249,382,1221,1250,904,419,1251,420,1236,894,908,1222,1252,1223,1142,1238,1253,1224,1225,1226,1227,1228,1229,1230,878,1231,1232,1118,1233,1152,1132,1153,1154,1242,1155,1156,1157,1243,1158,1144,1146,1159,1160,910,1141,909,1161,811,1239,869,1162,1163,1240,1164,1165,1166,1167,1168,1169,1140,1170,1171,1172,1173,1174,1175,1176,1148,2102,1177,1178,1179,1180,1145,1181,1182,859,1134,1136,1241,1183,1137,1051,1061,1267,1138,1184,1185,1186,1131,1187,1188,1189,1190,1191,1079,1135,401,1192,1193,1194,1143,1195,1196,1197,1198,872,1199,1200,1201,1202,437,1203,1204,1151,1205,1206,875,1247,1207,1208,879,1209,1210,883,1130,889,1211,1212,1213,1133,1214,1215,1216,360,412,1078,1217,1218,1219,1220,1248,1249,382,1221,1250,904,419,1251,420,1236,894,908,1222,1252,1223,1142,1238,1253,1224,1225,1226,1227,1228,1229,1230,878,1231,1232,1118,1233,1152,1132,1153,1154,1242,1155,1156,1157,1243,1158,1144,1146,1159,1160,910,1141,909,1161,811,1239,869,1162,1163,1240,1164,1165,1166,1167,1168,1169,1140,1170,1171,1172,1173,1174,1175,1176,1148,2102,1177,1178,1179,1180,1145,1181,1182,859,1134,1136,1241,1183,1137,1051,1061,1267,1138,1184,1185,1186,1131,1187,1188,1189,1190,1191,1079,1135,401,1192,1193,1194,1143,1195,1196,1197,1198,872,1199,1200,1201,1202,437,1203,1204,1151,1205,1206,875,1247,1207,1208,879,1209,1210,883,1130,889,1211,1212,1213,1133,1214,1215,1216,360,412,1078,1217,1218,1219,1220,1248,1249,382,1221,1250,904,419,1251,420,1236,894,908,1222,1252,1223,1142,1238,1253,1224,1225,1226,1227,1228,1229,1230,878,1231,1232,1118,1233,1244,1245,1270,811,1162,1137,1061,878,1118,1132,1138,1135,401,1152,1132,1153,1154,1242,1155,1156,1157,1243,1158,1144,1146,1159,1160,910,1141,909,1161,811,1239,869,1162,1163,1240,1164,1165,1166,1167,1168,1169,1140,1170,1171,1172,1173,1174,1175,1176,1148,2102,1177,1178,1179,1180,1145,1181,1182,859,1134,1136,1241,1183,1137,1051,1061,1267,1138,1184,1185,1186,1131,1187,1188,1189,1190,1191,1079,1135,401,1192,1193,1194,1143,1195,1196,1197,1198,872,1199,1200,1201,1202,437,1203,1204,1151,1205,1206,875,1247,1207,1208,879,1209,1210,883,1130,889,1211,1212,1213,1133,1214,1215,1216,360,412,1078,1217,1218,1219,1220,1248,1249,382,1221,1250,904,419,1251,420,1236,894,908,1222,1252,1223,1142,1238,1253,1224,1225,1226,1227,1228,1229,1230,878,1231,1232,1118,1233,1132,1138,1135,401,1051,1051,1186,1186,1051,1051,1132,1140,1136,1061,1138,1135,401,1184,1185,1151,1184,1186,1188,1051,1186,869,1132,1138,1135,401,1132,1138,1135,401,2100,1153,1157,1172,1173,1174,1176,1148,1180,1145,1181,1182,360,1218,1151,1176,1180,1181,1203,360,1218,1140,1238,1238,1166,1174,1174,1174,1171,1303,1303,1303,1303,1303,1303,1303,1303,1303,1303,1303,1303,1194,1303,1303,1303,1303,1303,1303,1303,1303,1303,1303,1303,1303,1303,1303,1303,1174,1054,1303,1303,1204,1172,1151,1194,1151,1174,1178,1179,1181,1224,1223,1180,360,1180,1152,1184,1188,1189,1140,1205,1206,1207,1208,1209,1210,889,1212,1213,1214,1215,1219,1220,419,1222,1225,1226,1228,1229,1230,1231,1232,1061,1240,1132,1138,1135,401,1154,1158,1159,869,1163,1164,1166,1167,1170,1171,1172,1173,1174,1148,1145,1134,1136,1137,1061,1138,1184,1185,1131,1187,1188,1190,1193,1194,1143,1195,1196,1198,872,1199,1151,1078,420,1236,894,1238,1130,1162,1191,1198,1159,1168,1204,1233,1188,1223,1194,419,1051,1170,1144,1146,1180,360,419,1140,1136,1061,889,1173,360,1218,1144,1146,419,419,1197,1184,1223,1223,1223,1223,1223,1132,1138,1135,401,1051,1051,1140,1144,1168,1175,0,1198,1051,1239,1240,1152,1132,1154,1156,1158,1159,1160,1161,869,1163,1164,1165,1166,1167,1170,1171,1051,1138,1184,1185,1186,1131,1187,1188,1189,1190,1191,1079,1135,401,1192,1193,1194,1143,1195,1196,1197,1198,872,1199,1200,1201,1202,437,1203,1204,1151,1233,1132,1134,1137,1138,1135,401,1146,1223,1140,1134,1136,1137,1061,1146,1146,412,1217,1218,412,1217,1218,1223,1191,1223,1239,1054,1079,1162,883,1185,1251,908,1252,1253,1157,1223,1234,1235,1237,420,1236,894,1159,1197,2102,1186,1169,1177,1078,1166,1170,1132,1138,1135,401,1132,1138,1135,401,1132,1138,1135,401,1179,1217,1204,1193,1152,1132,1153,1154,1155,1156,1157,1158,1159,1160,1161,811,869,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1148,1177,1178,1179,1180,1145,1181,1182,1183,1051,1138,1184,1185,1186,1131,1187,1188,1189,1190,1191,1079,1135,401,1192,1193,1194,1143,1195,1196,1197,1198,872,1199,1200,1201,1202,437,1203,1204,1151,1205,1206,875,1207,1208,879,1209,1210,883,1130,1211,1212,1213,1133,1214,1215,1216,360,412,1078,1217,1218,1219,1220,382,1221,904,1222,1223,1142,1224,1225,1226,1227,1228,1229,1230,878,1231,1232,1118,1233,1152,1132,1153,1154,1242,1155,1156,1157,1243,1158,1144,1146,1159,1160,910,1141,909,1161,811,1239,869,1162,1163,1240,1164,1165,1166,1167,1168,1169,1140,1170,1171,1172,1173,1174,1175,1176,1148,2102,1177,1178,1179,1180,1145,1181,1182,859,1134,1136,1241,1183,1137,1051,1061,1267,1138,1184,1185,1186,1131,1187,1188,1189,1190,1191,1079,1135,401,1192,1193,1194,1143,1195,1196,1197,1198,872,1199,1200,1201,1202,437,1203,1204,1151,1205,1206,875,1247,1207,1208,879,1209,1210,883,1130,889,1211,1212,1213,1133,1214,1215,1216,360,412,1078,1217,1218,1219,1220,1248,1249,382,1221,1250,904,419,1251,420,1236,894,908,1222,1252,1223,1142,1238,1253,1224,1225,1226,1227,1228,1229,1230,878,1231,1232,1118,1233,1251,908,1252,1253,1204,1132,1138,1135,401,1170,1140,1152,1132,1153,1154,1242,1155,1156,1157,1243,1158,1144,1146,1159,1160,910,1141,909,1161,811,1239,869,1162,1163,1240,1164,1165,1166,1167,1168,1169,1140,1170,1171,1172,1173,1174,1175,1176,1148,2102,1177,1178,1179,1180,1145,1181,1182,859,1134,1136,1241,1183,1137,1051,1061,1267,1138,1184,1185,1186,1131,1187,1188,1189,1190,1191,1079,1135,401,1192,1193,1194,1143,1195,1196,1197,1198,872,1199,1200,1201,1202,437,1203,1204,1151,1205,1206,875,1247,1207,1208,879,1209,1210,883,1130,889,1211,1212,1213,1133,1214,1215,1216,360,412,1078,1217,1218,1219,1220,1248,1249,382,1221,1250,904,419,1251,420,1236,894,908,1222,1252,1223,1142,1238,1253,1224,1225,1226,1227,1228,1229,1230,878,1231,1232,1118,1233,1152,1132,1153,1154,1242,1155,1156,1157,1243,1158,1144,1146,1159,1160,910,1141,909,1161,811,1239,869,1162,1163,1240,1164,1165,1166,1167,1168,1169,1140,1170,1171,1172,1173,1174,1175,1176,1148,2102,1177,1178,1179,1180,1145,1181,1182,859,1134,1136,1241,1183,1137,1051,1061,1267,1138,1184,1185,1186,1131,1187,1188,1189,1190,1191,1079,1135,401,1192,1193,1194,1143,1195,1196,1197,1198,872,1199,1200,1201,1202,437,1203,1204,1151,1205,1206,875,1247,1207,1208,879,1209,1210,883,1130,889,1211,1212,1213,1133,1214,1215,1216,360,412,1078,1217,1218,1219,1220,1248,1249,382,1221,1250,904,419,1251,420,1236,894,908,1222,1252,1223,1142,1238,1253,1224,1225,1226,1227,1228,1229,1230,878,1231,1232,1118,1233,1241,1206,1208,1210,1213,1215,1219,1220,1226,1229,1230,1232,437,1152,1132,1153,1154,1242,1155,1156,1157,1243,1158,1144,1146,1159,1160,910,1141,909,1161,811,1239,869,1162,1163,1240,1164,1165,1166,1167,1168,1169,1140,1170,1171,1172,1173,1174,1175,1176,1148,2102,1177,1178,1179,1180,1145,1181,1182,859,1134,1136,1241,1183,1137,1051,1061,1267,1138,1184,1185,1186,1131,1187,1188,1189,1190,1191,1079,1135,401,1192,1193,1194,1143,1195,1196,1197,1198,872,1199,1200,1201,1202,437,1203,1204,1151,1205,1206,875,1247,1207,1208,879,1209,1210,883,1130,889,1211,1212,1213,1133,1214,1215,1216,360,412,1078,1217,1218,1219,1220,1248,1249,382,1221,1250,904,419,1251,420,1236,894,908,1222,1252,1223,1142,1238,1238,1253,1224,1225,1226,1227,1228,1229,1230,878,1231,1232,1118,1233,1223,1238,1223,1170,1132,1138,1135,401,883,2100,1250,1152,1132,1153,1154,1242,1155,1156,1157,1243,1158,1144,1146,1159,1160,910,1141,909,1161,811,1239,869,1162,1163,1240,1164,1165,1166,1167,1168,1169,1140,1170,1171,1172,1173,1174,1175,1176,1148,2102,1177,1178,1179,1180,1145,1181,1182,859,1134,1136,1241,1183,1137,1051,1061,1267,1138,1184,1185,1186,1131,1187,1188,1189,1190,1191,1079,1135,401,1192,1193,1194,1143,1195,1196,1197,1198,872,1199,1200,1201,1202,437,1203,1204,1151,1205,1206,875,1247,1207,1208,879,1209,1210,883,1130,889,1211,1212,1213,1133,1214,1215,1216,360,412,1078,1217,1218,1219,1220,1248,1249,382,1221,1250,904,419,1251,420,1236,894,908,1222,1252,1223,1142,1238,1253,1224,1225,1226,1227,1228,1229,1230,878,1231,1232,1118,1233,1153,1159,879,904,1140,1140,1152,1180,360,1168,1169,437,1223,1194,1152,1132,1153,1154,1242,1155,1156,1157,1243,1158,1144,1146,1159,1160,910,1141,909,1161,811,1239,869,1162,1163,1240,1164,1165,1166,1167,1168,1169,1140,1170,1171,1172,1173,1174,1175,1176,1148,2102,1177,1178,1179,1180,1145,1181,1182,859,1134,1136,1241,1183,1137,1051,1061,1267,1138,1184,1185,1186,1131,1187,1188,1189,1190,1191,1079,1135,401,1192,1193,1194,1143,1195,1196,1197,1198,872,1199,1200,1201,1202,437,1203,1204,1151,1205,1206,875,1247,1207,1208,879,1209,1210,883,1130,889,1211,1212,1213,1133,1214,1215,1216,360,412,1078,1217,1218,1219,1220,1248,1249,382,1221,1250,904,419,1251,420,1236,894,908,1222,1252,1223,1142,1238,1253,1224,1225,1226,1227,1228,1229,1230,878,1231,1232,1118,1233,1194,1223,1239,1267,1140,1134,1136,1137,1061,889,1161,1184,1144,1146,1193,1193,1193,2104,2104,2105,2105,2106,2106,2105,2106,2104,2107,2108,2108,2109,0,0,0,0,2101,0,0,0,0,0,1275,1276,1277,1278,1279,1279,1275,1276,1277,1278,1279,1275,1276,1277,1278,1279,1275,1276,1277,1278,1275,1276,1277,1278,1054,1275,1276,1277,1278,1279,1275,1276,1277,1278,1279,2110,1279,1279,1279,1279,1279,1275,1276,1277,1278,1279,1279,1275,1276,1277,1278,1279,1275,1276,1277,1278,1279,1275,1276,1277,1278,1279,1275,1276,1277,1278,1279,1279,1275,1276,1277,1278,1275,1276,1277,1278,1279,1279,1279,1279,1279,1279,1275,1275,1275,1276,1276,1276,1277,1277,1277,1278,1278,1278,1279,1275,1276,1277,1278,1275,1276,1277,1278,1275,1276,1277,1278,1275,1276,1277,1278,1275,1276,1277,1278,1279,1275,1276,1277,1278,1279,0,0,0,0,1275,1276,1277,1278,1279,0,1275,1276,1277,1278,1279,1275,1276,1277,1278,1279,1275,1276,1277,1278,1279,1275,1276,1277,1278,1279,1275,1276,1277,1278,1275,1276,1277,1278,1279,0,1054,1275,1276,1277,1278,1277,1278,1279,1279,1275,1276,1277,1278,1279,0,1277,1278,1054,1279,1275,1276,1277,1278,1279,1275,1276,1277,1278,1279,1275,1276,1277,1278,1279,1275,1276,1277,1278,1279,1275,1276,1277,1278,1279,0,1275,1276,1277,1278,1279,1275,1276,1277,1278,1279,0,0,0,1281,0,0,0,0,0,0,0,0,0,0,0,773,771,2111,773,2112,771,1283,1283,1281,1284,1285,1285,2111,773,2112,771,1283,1281,1284,1285,2111,773,2112,771,1283,1281,1284,1285,2111,773,2112,771,1283,1281,1284,1285,2111,773,2112,771,1283,1281,1284,1285,772,1283,1281,1284,1285,1283,1281,1284,1285,1283,1281,1284,1285,1280,773,771,2111,773,2112,771,1283,1281,1284,1285,2111,773,2112,771,1283,1281,1284,1285,2111,773,2112,771,1283,1281,1284,1285,2111,773,2112,771,1283,1281,1284,1285,1283,1285,1283,1285,1283,1283,1283,1283,1285,1285,1285,1285,1283,1281,1281,1284,1284,1285,2111,773,2112,771,1283,1281,1284,1284,1285,1285,1283,2111,773,2112,771,1283,1281,1284,1285,1283,1285,1281,1284,2111,773,2112,771,1283,1281,1284,1285,2111,773,2112,771,1283,1281,1284,1285,2111,773,2112,771,1283,1281,1284,1285,2111,773,2112,771,1283,1281,1284,1285,2111,773,2112,771,1283,1281,1284,1285,2111,773,2112,771,1283,1281,1284,1285,1283,770,1283,1285,773,771,1283,1285,1283,770,771,1282,771,1283,1283,2111,2112,1283,1281,1284,1285,2111,773,2112,771,1283,1281,1284,1285,1281,1284,772,2111,773,2112,771,1283,1281,1284,1285,2111,773,2112,771,1283,1281,1284,1285,2111,773,2112,771,1283,1281,1284,1285,2111,773,2112,771,1283,1281,1284,1285,2111,773,2112,771,1283,1281,1284,1285,772,773,1055,2113,2113,0,0,0,0,2114,2115,2116,0,0,0,0,2117,2118,0,0,0,0,2119,2120,2121,0,0,1298,0,1298,1298,1298,1298,0,0,0,0,0,0,0,376,403,376,1298,1287,403,885,1288,1289,1290,376,1298,1287,403,885,1288,1289,1290,376,1298,1287,403,885,1288,1289,1290,376,376,1298,1287,403,885,1288,1289,1290,376,1298,1287,403,885,1288,1289,1290,1287,403,885,1288,1289,1290,1287,403,885,1288,1289,1290,1287,403,885,1288,1289,1290,376,403,403,403,403,403,403,403,403,403,403,403,403,403,403,376,1298,1287,1287,403,885,885,1288,1288,1289,1289,1290,1290,376,1298,1287,403,885,885,1288,1288,1289,1289,1290,1290,376,1298,1287,403,885,1288,1289,1290,376,1298,1287,1287,403,885,1288,1289,1290,403,376,1298,1298,1287,1288,376,1298,1298,1287,403,403,885,1288,1289,1290,376,1298,1287,403,885,1288,1289,1290,403,1298,376,1298,1287,403,885,1288,1289,1290,0,376,1298,1287,403,885,1288,1289,1290,376,1298,1287,403,885,1288,1289,1290,376,1298,1287,403,885,1288,1289,1290,376,1298,1287,403,885,1288,1289,1290,376,1298,1287,403,885,1288,1289,1290,403,403,376,1287,403,376,0,1298,1287,403,885,1288,1289,1290,376,1298,1287,403,885,1288,1289,1290,1298,376,1298,1287,403,885,1288,1289,1290,376,1298,1287,403,885,1288,1289,1290,1287,376,1298,1287,403,885,1288,1289,1290,376,1298,1287,403,885,1288,1289,1290,376,1298,1287,403,885,1288,1289,1290,403,2122,2122,2123,2122,2124,2124,2125,2123,2122,2125,2123,2125,2124,1268,1268,1311,1307,1268,0,1268,1268,1310,1268,1268,1307,1307,0,1309,1310,1309,1307,1308,1268,1308,1268,1307,1268,1268,1268,1311,1308,1268,1268,1268,1268,1307,1268,0,1268,0,1268,1307,1268,1268,1268,1268,1268,1268,1268,1268,1268,1268,1268,1268,1268,1268,1268,1268,1268,1268,1268,1307,1310,0,0,0,0,1307,1268,1268,1268,1308,1308,1307,1307,1268,1268,1303,1303,1311,1309,1310,1301,1308,1307,1268,1303,1311,1309,1310,1301,1308,1307,1268,1303,1311,1309,1310,1301,1308,1307,1268,1303,1301,1307,1268,1307,1268,1307,1268,1307,1268,1307,1307,1268,1268,1307,1268,1307,1268,1308,1307,1268,1303,1311,1309,1310,1301,1308,1307,1268,1303,1311,1309,1310,1301,1303,1303,1308,1307,1268,1303,1309,1310,1301,1308,1307,1268,1303,1309,1310,1301,1308,1307,1268,1303,1309,1310,1301,1307,1268,1301,1307,1268,1307,1268,1308,1268,1303,1311,1309,1301,1308,1307,1268,1303,1311,1309,1310,1301,1308,1307,1268,1303,1311,1309,1310,1301,1307,1268,1303,1301,1307,1268,1301,1308,1307,1268,1303,1311,1309,1310,1301,1303,1303,1308,1307,1268,1303,1311,1309,1310,1301,1301,1308,1307,1268,1303,1308,1307,1268,1303,1307,1268,1308,1307,1268,1303,1308,1308,1308,1308,1307,1307,1307,1307,1268,1268,1268,1268,1303,1303,1303,1303,1308,1307,1268,1303,1307,1268,1301,1308,1307,1307,1307,1307,1307,1268,1268,1268,1268,1268,1303,1309,1308,1307,1307,1268,1303,1311,1311,1309,1310,1301,1307,1268,1307,1307,1268,1268,1307,1268,1307,1268,1307,1268,1308,1307,1268,1303,1311,1309,1310,1301,1308,1268,1303,1311,1309,1301,1308,1307,1268,1303,1308,1307,1268,1303,1311,1309,1310,1301,1307,1268,1307,1268,1307,1268,1308,1307,1268,1303,1311,1309,1310,1301,1308,1307,1268,1303,1311,1309,1310,1301,1308,1307,1268,1303,1311,1309,1310,1301,1308,1307,1268,1303,1311,1309,1310,1301,1307,1268,1308,1307,1268,1303,1311,1309,1310,1301,1307,1268,1307,1268,1307,1268,1307,1268,1301,1311,1303,1303,1303,1303,1303,1303,1303,1303,1303,1303,1303,1303,1303,1303,1303,1303,1303,1303,1303,1303,1303,1303,1303,1303,1303,1303,1303,1303,1303,1307,1268,1308,1268,1303,1311,1309,1301,1301,1301,1307,1268,1308,1307,1268,1303,1307,1268,0,1307,1268,1307,1268,1307,1268,1308,1307,1268,1303,1309,1310,1301,1308,1307,1268,1303,1311,1309,1310,1301,1307,1268,1308,1307,1268,1303,1311,1309,1310,1301,1308,1307,1268,1303,1311,1309,1310,1301,1308,1307,1268,1303,1311,1309,1310,1301,1307,1268,1308,1307,1268,1303,1311,1309,1310,1301,1303,1303,1308,1307,1268,1303,1311,1309,1310,1301,2126,2126,1313,1314,1313,1314,0,1314,0,0,0,0,0,1314,1319,0,1319,1313,1322,0,0,1335,0,0,0,0,0,1314,1336,0,1335,1328,654,1328,1314,0,1314,0,0,1314,0,1334,1333,654,0,0,0,0,0,0,0,0,654,654,654,654,1332,1333,1334,1336,1314,1314,1335,1313,1314,1314,1314,1322,1321,1322,1321,1322,1321,1321,1321,0,654,654,0,0,0,0,1314,1314,654,0,1322,654,0,1314,1313,1340,2,1345,1316,1332,1317,1333,888,1330,1331,1327,1340,1318,1334,1314,2,2,1319,1320,1321,1322,654,1335,1323,1313,1313,1324,1328,1329,1336,1337,1325,402,1345,1316,1332,1317,1333,888,1330,1331,1327,1340,1318,1334,1314,2,2,1319,1320,1321,1322,654,1335,1323,1313,1324,1328,1329,1336,1337,1325,402,1345,1316,1332,1317,1333,888,1330,1331,1327,1340,1318,1334,1314,2,1319,1320,1321,1322,654,1335,1323,1313,1324,1328,1329,1336,1337,1325,402,1314,2,2,2,1317,1318,1324,1317,1318,2,1324,2127,1313,1313,1313,1313,1313,1313,1313,1313,1345,1316,1332,1317,1333,888,1330,1331,1327,1340,1318,1334,1314,2,1319,1320,1321,1322,654,1335,1323,1313,1324,1328,1329,1336,1337,1325,402,1345,1316,1332,1317,1333,888,1330,1331,1327,1340,1318,1334,1314,2,1319,1320,1321,1322,654,1335,1323,1313,1324,1328,1329,1336,1337,1325,402,1316,1317,1318,1314,2,1319,1320,1321,1322,1323,1313,1324,1325,1317,1318,1314,2,1319,1320,1321,1322,1323,1313,1324,1325,1317,1318,1314,2,1319,1320,1321,1322,1323,1313,1324,1325,2,1313,1313,2,2,888,888,888,888,888,888,2,0,0,1316,1317,1327,1318,2,1319,1313,1328,1329,402,1316,1317,1318,1324,1316,1316,1325,1345,1316,1332,1317,1333,888,1330,1330,1331,1331,1327,1327,1340,1318,1334,1314,2,1319,1320,1320,1321,1322,654,1335,1323,1313,1324,1328,1329,1336,1337,1325,402,1345,1316,1332,1317,1333,888,1330,1331,1327,1327,1340,1318,1334,1314,2,1319,1320,1320,1321,1322,654,1335,1323,1313,1324,1328,1329,1336,1337,1325,402,1314,1328,1329,1317,1318,1324,1313,1345,1316,1332,1317,1333,888,1330,1331,1327,1340,1318,1334,1314,2,1319,1320,1321,1322,654,1335,1323,1313,1324,1328,1329,1336,1337,1325,402,1345,1316,1332,1317,1333,888,1330,1331,1327,1340,1318,1334,1314,2,1319,1320,1321,1322,654,1335,1323,1313,1324,1328,1329,1336,1337,1325,402,1313,1313,1313,1313,1313,1313,1313,1314,1328,1329,1313,1317,1317,1318,1318,1324,1324,2,1316,1332,1332,1333,1333,1334,1334,1314,2,1319,1320,1321,1322,654,654,1335,1323,1313,1313,1313,1313,1313,1336,1336,1337,1337,1329,1345,1316,1332,1332,1317,1333,1333,1333,888,1330,1331,1327,1340,1318,1334,1334,1334,1314,2,1319,1320,1321,1322,654,654,1335,1323,1313,1324,1328,1329,1336,1336,1336,1337,1325,402,1313,1313,1313,1313,2,2,1314,1313,1313,1314,1313,2,1345,1316,1332,1317,1333,888,1330,1331,1327,1340,1318,1334,1314,2,1319,1320,1321,1322,654,1335,1323,1313,1324,1328,1329,1336,1337,1325,402,1316,1317,888,1330,1331,1327,1318,2,1319,1313,1324,1328,1329,402,402,1340,2,0,2,2,1340,1332,1333,1334,654,1336,1337,1345,1316,1332,1317,1333,888,1330,1331,1327,1340,1318,1334,1314,2,1319,1320,1321,1322,654,1335,1323,1313,1324,1328,1329,1336,1337,1325,402,1340,2,1313,1313,1313,1345,1316,1332,1317,1333,888,1330,1331,1327,1340,1318,1334,1314,2,1319,1320,1321,1322,654,1335,1323,1313,1324,1328,1329,1336,1337,1325,402,1345,1316,1332,1317,1333,888,1330,1331,1327,1340,1318,1334,1314,2,2,1319,1320,1321,1322,654,1335,1323,1313,1324,1328,1329,1336,1337,1325,402,1345,1316,1332,1317,1333,888,1330,1331,1327,1340,1318,1334,1314,2,1319,1320,1321,1322,654,1335,1323,1313,1324,1328,1329,1336,1337,1325,402,1345,1316,1332,1317,1333,888,1330,1331,1327,1340,1318,1334,1314,2,1319,1320,1321,1322,654,1335,1323,1313,1324,1328,1329,1336,1337,1325,402,1313,2,1345,1316,1332,1317,1333,888,1330,1331,1327,1340,1318,1334,1314,2,1319,1320,1321,1322,654,1335,1323,1313,1324,1328,1329,1336,1337,1325,402,1313,2,1313,1329,1313,1313,0,0,0,0,1319,1319,1317,1317,1318,1318,1324,1324,1323,2,1319,1319,2,1340,2,1313,1316,1317,1327,1318,2,1319,1313,1328,1329,402,2128,2,2,2,2,2,2,2,2,2,2,2,2,1313,2,1323,2,1345,1345,1314,1328,1329,2,1313,2,2,1323,2,1332,1333,1334,654,1336,1313,1313,1313,1313,1323,1325,2,1323,1323,2,1335,1317,1318,1314,2,1319,1320,1321,1322,1323,1313,1324,1325,1345,1316,1332,1317,1333,888,1330,1331,1327,1340,1318,1334,1314,2,1319,1320,1321,1322,654,1335,1323,1313,1324,1328,1329,1336,1337,1325,402,1332,1333,1334,654,1336,1337,1313,1345,1316,1332,1317,1333,888,1330,1331,1327,1340,1318,1334,1314,2,1319,1320,1321,1322,654,1335,1323,1313,1324,1328,1329,1336,1337,1325,402,1345,1316,1332,1317,1333,888,1330,1331,1327,1340,1318,1334,1314,2,1319,1320,1321,1322,654,1335,1323,1313,1324,1328,1329,1336,1337,1325,402,2,1345,1316,1332,1317,1317,1333,888,1330,1331,1327,1340,1318,1318,1334,1314,2,1319,1320,1321,1322,654,1335,1323,1313,1324,1324,1328,1329,1336,1337,1325,402,2,2,1345,1317,1318,1324,2,1313,1345,1316,1332,1317,1333,888,1330,1331,1327,1340,1318,1334,1314,2,1319,1320,1321,1322,654,1335,1323,1313,1324,1328,1329,1336,1337,1325,402,402,0,2,2129,1345,1316,1332,1317,1333,888,1330,1331,1327,1340,1318,1334,1314,2,1319,1320,1321,1322,654,1335,1323,1313,1324,1328,1329,1336,1337,1325,402,2,1356,1356,1356,0,0,0,0,1349,1350,1348,1348,0,0,0,0,0,397,0,0,397,397,397,438,1347,1356,1356,1356,0,1349,0,0,0,0,0,0,0,0,0,0,1356,0,1348,0,0,0,1347,2130,1347,1348,1349,1350,1351,873,397,1352,1353,1354,2130,1355,1362,1347,1347,1347,1348,1348,1348,1349,1349,1349,1350,1350,1350,1358,1351,1351,873,873,1356,1356,1359,1050,1360,397,397,887,1352,1352,1357,891,1432,438,2131,1353,1354,2130,1355,1362,1347,1347,1348,1348,1349,1349,1350,1350,1358,1351,1351,873,873,1356,1359,1050,1360,397,397,887,1352,1352,1357,891,1432,438,2131,1353,1354,2130,1355,1362,1347,1348,1349,1350,1358,1351,873,1356,1359,1050,1360,397,887,1352,1357,891,1432,438,2131,1356,1347,1348,1349,1350,1351,873,397,1352,1347,1348,1349,1350,1351,873,397,1352,1353,1354,2130,1355,1362,1347,1348,1349,1350,1358,1351,873,1356,1359,1050,1360,397,887,1352,1357,891,1432,438,2131,1353,1354,2130,1355,1362,1347,1348,1349,1350,1358,1351,873,1356,1359,1050,1360,397,887,1352,1357,891,1432,438,2131,1353,1354,1355,0,0,1347,1348,1349,1350,873,1356,397,1352,1357,1347,1348,1349,1350,1351,873,397,1352,1347,1348,1349,1350,873,1356,397,1352,1357,1347,1348,1349,1350,873,1356,397,1352,1357,1347,1348,1349,1350,1351,873,397,1352,1347,887,1347,1347,1348,1349,1350,1351,873,887,1352,1432,438,2131,1347,1348,1349,1350,1351,873,397,1352,1352,1357,1347,1348,1349,1350,1358,1351,873,1359,1050,1360,397,1352,891,1353,1354,2130,1355,1362,1347,1348,1349,1349,1350,1350,1358,1351,873,1356,1359,1050,1050,1360,397,887,1352,1357,891,1432,438,2131,1353,1354,2130,1355,1362,1347,1348,1349,1350,1358,1351,873,1356,1359,1050,1050,1360,397,887,1352,1357,891,1432,438,2131,1362,1353,1354,2130,1355,1362,1347,1348,1349,1350,1358,1351,873,1356,1359,1050,1360,397,887,1352,1357,891,1432,438,2131,1353,1354,2130,1355,1362,1347,1348,1349,1350,1358,1351,873,1356,1359,1050,1360,397,887,1352,1357,891,1432,438,2131,1356,1347,1348,1349,1350,1356,1356,873,2130,1347,1348,1348,1348,1349,1350,1356,397,1347,1347,1347,1347,1348,1348,1348,1348,1349,1349,1349,1349,1350,1350,1350,1350,1356,1356,1356,1356,1352,397,1347,1348,1349,1350,1351,873,397,1352,1348,1351,873,397,1352,1348,1351,873,397,1352,1347,1348,1349,1350,1351,873,397,1352,1347,1348,1349,1350,1351,873,397,1352,1354,1347,1348,1349,1350,1358,873,1356,397,1352,1353,1354,2130,1355,1362,1347,1348,1349,1350,1358,1351,873,1356,1359,1050,1360,397,887,1352,1357,891,1432,438,2131,1347,1348,1349,1350,1351,873,887,1352,1432,438,2131,1347,1347,1347,1348,1349,1350,1351,873,397,1352,1353,1354,2130,1355,1362,1347,1348,1349,1350,1358,1351,873,1356,1359,1050,1360,397,887,1352,1357,891,1432,438,2131,1347,1348,1349,1350,1358,1351,873,1359,1050,1360,397,1352,891,1352,1349,1350,438,1347,1348,1349,1350,1351,873,887,1352,1432,438,2131,1347,1349,1350,1351,873,1352,1347,1349,1350,1351,873,1352,1347,1348,1349,1350,1351,873,397,1352,1347,1348,1349,1350,1351,873,397,1352,438,2130,1356,887,1348,397,1358,1353,1354,2130,1355,1362,1347,1348,1349,1350,1358,1351,873,1356,1359,1050,1360,397,887,1352,1357,891,1432,438,2131,1347,1353,1354,2130,1355,1362,1347,1348,1349,1350,1358,1351,873,1356,1359,1050,1360,397,887,1352,1357,891,1432,438,2131,1353,1354,2130,1355,1362,1347,1347,1348,1348,1349,1349,1350,1350,1358,1351,1351,873,873,1356,1359,1050,1360,397,397,887,1352,1352,1357,891,1432,438,2131,1353,1354,2130,1355,1362,1347,1348,1349,1350,1358,1351,873,1356,1359,1050,1360,397,887,1352,1357,891,1432,438,2131,1353,1354,2130,1355,1362,1347,1348,1349,1350,1358,1351,873,1356,1359,1050,1360,397,887,1352,1357,891,1432,438,2131,1356,1347,1348,1349,1350,1351,873,397,1352,1353,1354,2130,1355,1362,1347,1348,1349,1350,1358,1351,873,1356,1359,1050,1360,397,887,1352,1357,891,1432,438,2131,1356,873,438,1347,873,1347,1348,1349,1350,1351,873,397,1352,1347,873,438,438,438,438,438,1347,1348,1349,1350,1351,873,397,1352,1348,1351,873,397,1352,1347,1347,1348,1349,1350,1358,1351,873,1359,1050,1360,397,1352,891,1432,438,438,1347,397,2130,2130,438,1352,1352,0,0,2130,2130,1050,887,887,1352,1357,1347,1348,1349,1350,1351,873,397,1352,1348,397,1347,1348,1349,1350,1351,873,397,1352,1347,1348,1349,1350,1351,873,397,1352,1347,1348,1349,1350,1351,873,397,1352,1347,1348,1349,1350,1351,873,397,1352,1347,1348,1349,1350,1351,873,397,1352,1347,1348,1349,1350,1351,873,397,1352,1347,1348,1349,1350,1351,873,397,1352,1347,1348,1349,1350,1351,873,397,1352,438,438,397,2130,2130,1347,1348,1349,1350,1350,1351,873,397,1352,1347,1348,1349,1350,1351,873,397,1352,1352,1357,2130,1362,2130,2130,2130,2131,1347,1348,1349,1350,873,1356,397,1352,1357,1353,1354,2130,1355,1362,1347,1348,1349,1350,1358,1351,873,1356,1359,1050,1360,397,887,1352,1357,891,1432,438,2131,887,1353,1354,2130,1355,1362,1347,1348,1349,1350,1358,1351,873,1356,1359,1050,1360,397,887,1352,1357,891,1432,438,2131,1353,1354,2130,1355,1362,1347,1348,1349,1350,1358,1351,873,1356,1359,1050,1360,397,887,1352,1357,891,1432,438,2131,1353,1354,2130,1355,1362,1347,1348,1349,1350,1358,1351,873,1356,1359,1050,1360,397,887,1352,1357,891,1432,438,2131,1347,1348,1349,1350,1351,873,397,1352,1347,1348,1349,1350,1351,873,397,1352,1347,1348,1349,1350,1351,873,397,1352,891,1353,1354,2130,1355,1362,1347,1348,1349,1350,1358,1351,873,1356,1359,1050,1360,397,887,1352,1357,891,1432,438,2131,0,1348,397,1348,397,1348,397,2131,887,1358,887,0,1358,1353,1354,2130,1355,1362,1347,1348,1349,1350,1358,1351,873,1356,1359,1050,1360,397,887,1352,1357,891,1432,438,2131,0,1050,1347,1347,1352,1357,1356,1356,1356,1348,1348,0,0,0,0,1356,1356,1356,0,0,0,0,1356,0,1348,0,0,0,873,1358,0,1358,1358,0,0,0,0,0,2130,2130,2130,2130,2130,0,2130,2130,1050,0,2130,2130,2130,2130,2130,2130,1050,0,0,0,0,0,0,1364,2132,1365,1366,1363,1364,2132,1365,1366,1363,1364,2132,1365,1366,1363,2132,1363,1364,2132,1365,1366,1363,1364,2132,1365,1366,1363,2132,1364,1365,1364,2132,1365,1366,1363,1364,2132,1365,1366,1363,1364,2132,1365,1366,1363,1364,2132,1365,1366,1363,1364,1366,1366,1364,2132,1365,1366,1363,1364,2132,1365,1366,1363,1365,1363,1366,1364,2132,1365,1366,1363,1364,2132,1365,1366,1363,1364,2132,1365,1366,1363,1364,2132,1365,1366,1363,1364,2132,1365,1366,1363,1364,2132,1365,1366,1363,1365,2132,1365,1363,1365,2132,1364,2132,1365,1366,1363,1366,1364,2132,1365,1366,1363,1364,2132,1365,1366,1363,1364,2132,1365,1366,1363,1364,2132,1365,1366,1363,1364,2132,1365,1366,1363,1368,1368,0,0,0,0,0,0,1379,1373,1373,1373,1379,0,0,0,0,0,0,0,0,0,0,1373,1373,1373,1373,1368,1367,1368,1367,1368,1367,1368,1367,2133,1367,1377,1374,1375,1369,1372,1368,1368,1378,1379,2134,1380,1371,1371,1376,1373,1370,2133,1367,1377,1374,1375,1369,1372,1368,1378,1379,2134,1380,1371,1376,1373,1370,2133,1367,1377,1374,1375,1369,1372,1368,1378,1379,2134,1380,1371,1376,1373,1370,1371,1378,1369,1372,1378,2133,1367,1377,1374,1375,1369,1372,1368,1378,1379,2134,1380,1371,1376,1373,1370,2133,1367,1377,1374,1375,1369,1372,1368,1378,1379,2134,1380,1371,1376,1373,1370,1367,1370,1368,1371,1368,1371,1368,1371,1372,1377,2133,1369,1372,1374,1375,1369,1368,1376,1370,1378,1367,1368,1367,1368,1367,1368,1367,2133,1367,1377,1377,1374,1375,1369,1372,1368,1378,1379,2134,1380,1371,1376,1373,1370,2133,1367,1377,1377,1374,1375,1369,1372,1368,1378,1379,2134,1380,1371,1376,1373,1370,1378,1376,1376,1376,1376,1376,1376,2133,1367,1377,1374,1375,1369,1372,1368,1378,1379,2134,1380,1371,1376,1373,1370,2133,1367,1377,1374,1375,1369,1372,1368,1378,1379,2134,1380,1371,1376,1373,1370,1368,1371,1371,1369,2133,1380,1368,1371,1368,1368,1368,1368,1371,1371,1371,1371,1378,1378,1367,1367,1367,1372,1368,1378,1379,1379,1380,1371,1373,1373,2133,1367,1377,1374,1375,1369,1372,1368,1378,1379,1379,1379,2134,1380,1371,1376,1373,1370,1377,1372,2133,1367,1377,1374,1375,1369,1372,1368,1378,1379,2134,1380,1371,1376,1373,1370,1369,1367,1374,1375,1369,1369,1368,1378,1376,1370,1377,1374,1375,1371,1379,1373,1374,1375,2133,1367,1377,1374,1375,1369,1372,1368,1378,1379,2134,1380,1371,1376,1373,1370,1369,1372,1376,2133,1367,1377,1374,1375,1369,1372,1368,1378,1379,2134,1380,1371,1376,1373,1370,2133,1367,1377,1374,1375,1369,1372,1368,1378,1379,2134,1380,1371,1376,1373,1370,2133,1367,1377,1374,1375,1369,1372,1368,1378,1379,2134,1380,1371,1376,1373,1370,2133,1367,1377,1374,1375,1369,1372,1368,1378,1379,2134,1380,1371,1376,1373,1370,1368,2133,1367,1377,1374,1375,1369,1372,1368,1378,1379,2134,1380,1371,1376,1373,1370,1368,1368,1368,1368,1368,1368,1376,1368,1378,1378,1369,1372,1372,1374,1375,1369,1368,1376,1370,2134,0,1369,1372,1369,1372,1369,1372,1369,1372,1369,1372,1367,1369,1374,1375,0,0,0,0,1369,1369,1372,1379,1376,1376,1376,1376,1376,1376,1376,1368,1371,2133,1367,1377,1374,1375,1369,1372,1368,1378,1379,2134,1380,1371,1376,1373,1370,1379,1373,1374,1375,2133,1367,1377,1374,1375,1369,1372,1368,1378,1379,2134,1380,1371,1376,1373,1370,2133,1367,1377,1374,1375,1369,1372,1368,1378,1379,2134,1380,1371,1376,1373,1370,2133,1367,1377,1374,1375,1369,1372,1368,1378,1378,1379,2134,1380,1371,1376,1373,1370,1369,1372,1378,1369,1372,2133,1367,1377,1374,1375,1369,1372,1368,1378,1379,2134,1380,1371,1376,1373,1370,1376,1374,1375,1374,1375,1369,1372,2133,1367,1377,1374,1375,1369,1372,1368,1378,1379,2134,1380,1371,1376,1373,1370,1367,1367,1372,1369,1369,1372,2135,2136,2137,2138,2139,2140,2141,1368,1368,0,0,0,0,0,0,0,1368,1369,1374,1375,1374,1375,1369,1374,1375,1374,1375,1374,1375,1374,1375,1372,0,0,0,0,0,0,0,0,0,0,0,0,0,1386,1387,1388,1389,1382,1383,1384,1385,1386,1387,1388,1389,1382,1383,1384,1385,1386,1387,1388,1389,1382,1383,1384,1385,1386,1387,1388,1389,1382,1383,1384,1385,1386,1387,1388,1389,1382,1383,1384,1385,1386,1387,1388,1389,1382,1383,1384,1385,1386,1387,1388,1389,1382,1383,1384,1385,1382,1383,1384,1385,1386,1387,1388,1389,1382,1383,1384,1385,1386,1387,1388,1389,1382,1383,1384,1385,1387,1388,1384,1389,1386,1387,1388,1389,1386,1387,1388,1389,1382,1383,1384,1385,1386,1387,1388,1389,1382,1383,1384,1385,1386,1387,1388,1389,1382,1383,1384,1385,1386,1387,1388,1389,1382,1383,1384,1385,1386,1387,1388,1389,1382,1383,1384,1385,1386,1387,1388,1389,1382,1383,1384,1385,1386,1387,1388,1389,1382,1383,1384,1385,1386,1387,1388,1389,1382,1383,1384,1385,1386,1386,1387,1388,1389,1385,1386,1386,1387,1388,1389,1386,1387,1388,1389,1382,1383,1384,1385,1386,1387,1388,1389,1382,1383,1384,1385,1386,1387,1388,1389,1382,1383,1384,1385,1386,1387,1388,1389,1382,1383,1384,1385,1382,1383,1384,1386,1387,1388,1389,1382,1383,1384,1385,1386,1387,1388,1389,1382,1383,1384,1385,0,1400,1400,1400,1396,0,1400,1400,1400,0,0,0,0,0,1400,1395,1396,0,0,0,0,1417,0,0,0,1395,1396,0,0,0,0,0,0,0,0,1395,1396,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1393,1394,1395,1396,1427,1395,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1393,1395,1396,1395,1396,1395,1396,1395,1396,1395,1396,1395,1396,1395,1396,1395,1396,1395,1396,1395,1396,0,0,0,0,0,1400,1400,1400,1393,1394,1427,1390,1391,1392,1393,1394,1395,1396,2142,1399,1401,1397,1398,1399,1400,1391,1401,1390,1404,1408,1408,2143,1430,1418,2144,2145,2146,2147,2142,2148,2149,2150,1409,1410,1405,1397,1397,1393,1402,1419,1411,1412,1412,1420,1421,1413,1398,1398,1398,1406,1428,1414,1394,1422,2151,1415,1395,1395,2152,2153,1429,1396,1396,1423,1424,1425,1416,1416,1426,1399,1399,1400,1400,1391,1391,1401,1401,1427,1392,1407,1417,1417,1390,1404,1408,2143,1430,1418,2144,2145,2146,2147,2142,2148,2149,2150,1409,1410,1405,1397,1397,1393,1402,1419,1411,1412,1420,1421,1413,1398,1398,1406,1428,1414,1394,1422,2151,1415,1395,2152,2153,1429,1396,1423,1424,1425,1416,1426,1399,1399,1400,1400,1391,1391,1401,1401,1427,1392,1407,1417,1390,1404,1408,2143,1430,1418,2144,2145,2146,2147,2142,2148,2149,2150,1409,1410,1405,1397,1397,1393,1402,1419,1411,1412,1420,1421,1413,1398,1406,1428,1414,1394,1422,2151,1415,1395,2152,2153,1429,1396,1423,1424,1425,1416,1426,1399,1400,1391,1401,1427,1392,1407,1417,1408,1395,1396,1417,1397,1398,1399,1400,1391,1401,1397,1398,1399,1400,1391,1401,1400,1397,1391,1392,2144,1430,1408,1397,1430,1393,1394,1395,1396,1393,1394,1395,1396,1393,1394,1395,1396,1393,1394,1395,1396,1393,1393,1394,1394,1395,1395,1396,1396,1393,1394,1395,1396,1393,1394,1395,1396,1390,1404,1408,2143,1430,1418,2144,2145,2146,2147,2142,2148,2149,2150,1409,1410,1405,1397,1393,1402,1419,1411,1412,1420,1421,1413,1398,1406,1428,1414,1394,1422,2151,1415,1395,2152,2153,1429,1396,1423,1424,1425,1416,1426,1399,1400,1391,1401,1427,1392,1407,1417,1390,1404,1408,2143,1430,1418,2144,2145,2146,2147,2142,2148,2149,2150,1409,1410,1405,1397,1393,1402,1419,1411,1412,1420,1421,1413,1398,1406,1428,1414,1394,1422,2151,1415,1395,2152,2153,1429,1396,1423,1424,1425,1416,1426,1399,1400,1391,1401,1427,1392,1407,1417,1404,1405,1406,1407,0,1408,1409,1410,1397,1402,1411,1412,1413,1398,1414,1415,1395,1396,1416,1399,1400,1391,1401,1417,1397,1398,1399,1400,1391,1401,1408,1409,1410,1397,1402,1411,1412,1413,1398,1414,1415,1395,1396,1416,1399,1400,1391,1401,1417,1408,1409,1410,1397,1402,1411,1412,1413,1398,1414,1415,1395,1396,1416,1399,1400,1391,1401,1417,1397,1398,1399,1400,1391,1401,0,2142,1397,1402,1399,1401,1393,1394,1395,1396,1412,1398,1428,2151,2153,1416,1399,1400,1401,1393,1394,1395,1396,1397,1398,1399,1400,1391,1401,1402,1414,2142,1399,1401,1397,1391,1404,1418,1409,1410,1405,1397,1402,1419,1412,1420,1421,1413,1398,1406,1422,1423,1424,1425,1426,1399,1400,1401,1392,1407,1390,1404,1408,2143,1430,1418,2144,2145,2146,2147,2142,2148,2149,2150,1409,1410,1405,1397,1393,1402,1419,1419,1411,1412,1412,1420,1421,1421,1413,1398,1406,1428,1414,1394,1422,1422,2151,1415,1395,2152,2153,1429,1396,1423,1424,1425,1416,1426,1399,1400,1391,1401,1427,1392,1407,1417,1390,1404,1408,2143,1430,1418,2144,2145,2146,2147,2142,2148,2149,2150,1409,1410,1405,1397,1393,1402,1419,1419,1411,1412,1412,1420,1421,1421,1413,1398,1406,1428,1414,1394,1422,1422,2151,1415,1395,2152,2153,1429,1396,1423,1424,1425,1416,1426,1399,1400,1391,1401,1427,1392,1407,1417,1393,1394,1395,1396,1390,1404,1408,2143,1430,1418,2144,2145,2146,2147,2142,2148,2149,2150,1409,1410,1405,1397,1393,1402,1419,1411,1412,1420,1421,1413,1398,1406,1428,1414,1394,1422,2151,1415,1395,2152,2153,1429,1396,1423,1424,1425,1416,1426,1399,1400,1391,1401,1427,1392,1407,1417,1390,1404,1408,2143,1430,1418,2144,2145,2146,2147,2142,2148,2149,2150,1409,1410,1405,1397,1393,1402,1419,1411,1412,1420,1421,1413,1398,1406,1428,1414,1394,1422,2151,1415,1395,2152,2153,1429,1396,1423,1424,1425,1416,1426,1399,1400,1391,1401,1427,1392,1407,1417,1415,1429,1417,1408,1412,1398,1395,1396,1416,1417,1408,1395,1396,1417,1393,1394,1395,1396,1408,1412,1398,1395,1396,1416,1417,1408,1408,1408,1408,1412,1412,1412,1412,1398,1398,1398,1398,1395,1395,1395,1395,1396,1396,1396,1396,1416,1416,1416,1416,1417,1417,1417,1417,1393,1394,1395,1396,0,0,0,0,1397,1398,1399,1400,1391,1401,1397,1399,1400,1391,1401,1397,1399,1400,1391,1401,1397,1398,1399,1400,1391,1401,1397,1398,1399,1400,1391,1401,1404,1406,1392,1407,1402,1428,1414,2142,1399,1401,2142,1399,1401,1397,1393,1393,1393,1393,1398,1394,1394,1394,1394,1395,1395,1395,1395,1395,1396,1396,1396,1396,1396,1399,1400,1391,1401,1427,1427,1392,1417,1392,1403,1397,1411,1390,1404,1408,2143,1430,1418,2144,2145,2146,2147,2142,2148,2149,2150,1409,1410,1405,1397,1397,1397,1393,1402,1419,1411,1412,1420,1421,1413,1398,1398,1406,1428,1414,1414,1394,1422,2151,1415,1395,2152,2153,1429,1396,1423,1424,1425,1416,1426,1399,1400,1391,1401,1427,1392,1407,1417,1393,1394,1395,1396,1393,1393,1394,1394,1395,1395,1396,1396,1393,1394,1395,1396,1396,1412,1398,1428,2151,2153,1416,1399,1400,1401,1391,1395,1396,1393,1394,1395,1396,1395,1396,1393,1394,1395,1396,1395,1397,1398,1399,1400,1391,1401,1390,1404,1408,2143,1430,1418,2144,2145,2146,2147,2142,2148,2149,2150,1409,1410,1405,1397,1393,1402,1419,1411,1412,1420,1421,1413,1398,1406,1428,1414,1394,1422,2151,1415,1395,2152,2153,1429,1396,1423,1424,1425,1416,1426,1399,1400,1391,1401,1427,1392,1407,1417,1404,1418,1409,1410,1405,1397,1402,1419,1411,1412,1420,1421,1413,1398,1406,1422,1415,1429,1423,1424,1425,1426,1399,1400,1401,1392,1407,1415,1430,1412,1398,1428,2151,2153,1416,1399,1400,1401,1397,1398,1399,1391,1401,1397,1398,1399,1391,1401,1415,1397,1398,1399,1400,1391,1401,1391,1397,1398,1399,1400,1391,1401,1409,1410,1413,1408,1395,1396,1417,2142,1424,1427,1401,1400,1409,1410,1413,1390,1404,1408,2143,1430,1418,2144,2145,2146,2147,2142,2148,2149,2150,1409,1410,1405,1397,1393,1402,1419,1411,1412,1420,1421,1413,1398,1406,1428,1414,1394,1422,2151,1415,1395,2152,2153,1429,1396,1423,1424,1425,1416,1426,1399,1400,1391,1401,1427,1392,1407,1417,1392,1397,1393,1394,1395,1396,1391,1393,1394,1395,1396,1393,1394,1395,1396,1390,1404,1408,2143,1430,1418,2144,2145,2146,2147,2142,2148,2149,2150,1409,1410,1405,1397,1393,1402,1419,1411,1412,1420,1421,1413,1398,1406,1428,1414,1394,1422,2151,1415,1395,2152,2153,1429,1396,1423,1424,1425,1416,1426,1399,1400,1391,1401,1427,1392,1407,1417,1390,1404,1408,2143,1430,1418,2144,2145,2146,2147,2142,2148,2149,2150,1409,1410,1405,1397,1397,1393,1402,1419,1411,1412,1420,1421,1413,1398,1398,1406,1428,1414,1394,1422,2151,1415,1395,2152,2153,1429,1396,1423,1424,1425,1416,1426,1399,1399,1400,1400,1391,1391,1401,1401,1427,1392,1407,1417,1390,1404,1408,2143,1430,1418,2144,2145,2146,2147,2142,2148,2149,2150,1409,1410,1405,1397,1393,1402,1419,1411,1412,1420,1421,1413,1398,1406,1428,1414,1394,1422,2151,1415,1395,2152,2153,1429,1396,1423,1424,1425,1416,1426,1399,1400,1391,1401,1427,1392,1407,1417,1390,1404,1408,2143,1430,1418,2144,2145,2146,2147,2142,2148,2149,2150,1409,1410,1405,1397,1393,1402,1419,1411,1412,1420,1421,1413,1398,1406,1428,1414,1394,1422,2151,1415,1395,2152,2153,1429,1396,1423,1424,1425,1416,1426,1399,1400,1391,1401,1427,1392,1407,1417,1417,1393,1394,1395,1396,1397,1398,1399,1400,1391,1401,1390,1404,1408,2143,1430,1418,2144,2145,2146,2147,2142,2148,2149,2150,1409,1410,1405,1397,1393,1402,1419,1411,1412,1420,1421,1413,1398,1406,1428,1414,1394,1422,2151,1415,1395,2152,2153,1429,1396,1423,1424,1425,1416,1426,1399,1400,1391,1401,1427,1392,1407,1417,1417,1414,1414,1393,1394,1395,1396,1393,1394,1395,1396,1391,1393,1394,1395,1396,1397,1398,1399,1400,1391,1401,1393,1394,1395,1396,1430,1397,1391,1413,1411,2144,1392,1413,1411,2144,1408,1415,1397,1398,1399,1400,1391,1401,1395,1396,1397,1399,1400,1391,1401,1390,1401,1391,1393,1394,1395,1396,1404,1418,1409,1410,1405,1397,1402,1419,1412,1420,1421,1413,1398,1406,1422,1423,1424,1425,1426,1399,1400,1401,1392,1407,2142,1392,1415,0,0,0,0,0,1395,0,0,1402,1414,2142,1399,1397,1398,1399,1400,1391,1401,1400,1397,1398,1399,1400,1391,1401,1397,1398,1399,1400,1391,1401,1397,1398,1399,1400,1391,1401,1397,1398,1399,1400,1391,1401,1397,1398,1399,1400,1391,1401,1397,1398,1399,1400,1391,1401,1397,1398,1399,1400,1391,1401,1397,1398,1399,1400,1391,1401,1393,1394,1395,1396,2143,2145,2146,2147,2148,2149,2150,1397,1393,1398,1394,1395,1396,1399,1400,1391,1401,1397,1398,1399,1400,1391,1401,1402,1414,1391,1403,1411,1415,1429,1409,1410,1423,1393,1394,1395,1396,1393,1394,1395,1396,1393,1394,1395,1396,1409,1397,1391,1410,1391,1408,1409,1410,1397,1402,1411,1412,1413,1398,1414,1415,1395,1396,1416,1399,1400,1391,1401,1417,1390,1404,1408,2143,1430,1418,2144,2145,2146,2147,2142,2148,2149,2150,1409,1410,1405,1397,1393,1402,1419,1411,1412,1420,1421,1413,1398,1406,1428,1414,1394,1422,2151,1415,1395,2152,2153,1429,1396,1423,1424,1425,1416,1426,1399,1400,1391,1401,1427,1392,1407,1417,1427,1393,1394,1395,1396,2142,1409,1410,1413,1428,1414,2144,1390,1404,1408,2143,1430,1418,2144,2145,2146,2147,2142,2148,2149,2150,1409,1410,1405,1397,1393,1402,1419,1411,1412,1420,1421,1413,1398,1406,1428,1414,1394,1422,2151,1415,1395,2152,2153,1429,1396,1423,1424,1425,1416,1426,1399,1400,1391,1401,1427,1392,1407,1417,1390,1404,1408,2143,1430,1418,2144,2145,2146,2147,2142,2148,2149,2150,1409,1410,1405,1397,1393,1402,1419,1411,1412,1420,1421,1413,1398,1406,1428,1414,1394,1422,2151,1415,1395,2152,2153,1429,1396,1423,1424,1425,1416,1426,1399,1400,1391,1401,1427,1392,1407,1417,1390,1404,1408,2143,1430,1418,2144,2145,2146,2147,2142,2148,2149,2150,1409,1410,1405,1397,1393,1402,1419,1411,1412,1420,1421,1413,1398,1406,1428,1414,1394,1422,2151,1415,1395,2152,2153,1429,1396,1423,1424,1425,1416,1426,1399,1400,1391,1401,1427,1392,1407,1417,1397,1398,1399,1400,1391,1401,1397,1398,1399,1400,1391,1401,1397,1398,1399,1400,1391,1401,1393,1394,1395,1396,1397,1390,1404,1408,2143,1430,1418,2144,2145,2146,2147,2142,2148,2149,2150,1409,1410,1405,1397,1393,1402,1419,1411,1412,1420,1421,1413,1398,1406,1428,1414,1394,1422,2151,1415,1395,2152,2153,1429,1396,1423,1424,1425,1416,1426,1399,1400,1391,1401,1427,1392,1407,1417,2152,2153,1400,1400,1400,1403,1411,1415,1409,1410,1413,1409,1410,1413,1397,1391,1390,1404,1408,2143,1430,1418,2144,2145,2146,2147,2142,2148,2149,2150,1409,1410,1405,1397,1393,1402,1419,1411,1412,1420,1421,1413,1398,1406,1428,1414,1394,1422,2151,1415,1395,2152,2153,1429,1396,1423,1424,1425,1416,1426,1399,1400,1391,1401,1427,1392,1407,1417,1402,1414,1433,0,1433,1433,1433,1433,1433,1433,1433,1433,1433,1433,1433,1433,1433,0,1433,1433,1433,1433,1433,1433,1433,1433,1433,1433,1433,1433,1433,1433,1433,1433,1433,1433,1433,1433,1433,1433,1433,1433,1433,1433,0,0,0,0,0,0,0,0,1399,1401,1397,1399,1401,1399,1401,1399,1401,1399,1401,1409,1410,1401,1409,1410,1399,1391,1409,1410,1409,1397,1391,1410,1391,1409,1410,1409,1410,1409,1410,0,0,0,0,0,0,0,0,0,0,0,0,1437,1437,1436,1435,1434,1446,1443,1444,1445,1442,1451,1436,1435,1434,1446,1443,1444,1445,1442,1451,1436,1435,1434,1446,1443,1444,1445,1442,1451,0,0,1436,1435,1434,1446,1443,1444,1445,1442,1451,1436,1435,1434,1446,1443,1444,1445,1442,1451,1435,1437,1436,1437,1437,1437,1437,1437,1437,1435,1434,1442,1436,1435,1434,1446,1443,1443,1444,1444,1445,1445,1442,1451,1436,1435,1434,1446,1443,1444,1445,1442,1451,1436,1436,1435,1434,1446,1443,1444,1445,1442,1451,1436,1435,1434,1434,1446,1446,1443,1444,1445,1442,1451,1437,1437,1437,1437,1436,1434,1446,1443,1444,1445,1442,1451,1437,1437,1436,1435,1434,1446,1443,1444,1445,1442,1451,1436,1435,1434,1446,1443,1444,1445,1442,1451,1435,1434,1442,1437,1443,1444,1445,1443,1444,1445,1434,1436,1435,1434,1446,1443,1444,1445,1442,1451,1437,1436,1435,1434,1446,1443,1444,1445,1442,1451,1436,1435,1434,1446,1443,1444,1445,1442,1451,1436,1435,1434,1446,1443,1444,1445,1442,1436,1435,1434,1446,1443,1444,1445,1442,1451,1436,1436,1435,1434,1446,1443,1444,1445,1442,1451,1436,1442,1437,1437,1437,1437,1437,1437,1437,1437,1436,1435,1434,1442,1437,1437,1435,1434,1442,1435,1435,1435,2154,2155,2154,2155,1437,1436,1437,0,1437,1434,1434,1437,1434,1446,1442,1434,1446,1446,1435,1437,1435,1434,1451,0,1442,1436,1435,1434,1446,1443,1444,1445,1442,1451,1436,1435,1434,1446,1443,1444,1445,1442,1451,1443,1444,1445,1436,1435,1434,1446,1443,1444,1445,1442,1451,1436,1451,1436,1435,1434,1446,1443,1444,1445,1442,1451,1436,1435,1434,1446,1443,1444,1445,1442,1451,1436,1435,1434,1446,1443,1444,1445,1442,1451,1434,0,0,0,0,0,0,1437,1437,0,1437,1437,1437,1437,1437,1437,1437,1437,1437,1437,1437,1437,1437,1437,1437,1437,1437,1437,1437,1437,1437,1437,1437,1437,1437,2154,2155,2154,2155,1437,1437,1437,1437,1437,1475,1493,0,1473,1468,0,0,0,0,0,1489,0,0,0,0,1489,1473,1468,1475,0,1473,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1493,1476,1475,0,1458,1462,1465,1471,1486,1467,1469,1470,1471,1472,1473,1474,1475,1476,1462,1465,1458,1493,1468,1468,1459,1464,1464,1483,1467,1467,1484,1489,1469,1469,1485,1470,1470,1478,1479,1471,1471,1472,1472,1473,1473,1473,1474,1474,1475,1475,1475,1476,1476,1480,1477,1486,1487,1462,1465,1458,1493,1468,1459,1464,1483,1467,1467,1484,1489,1469,1469,1485,1470,1470,1478,1479,1471,1471,1472,1472,1473,1473,1474,1474,1475,1475,1476,1476,1480,1477,1486,1487,1462,1465,1458,1493,1468,1459,1464,1483,1467,1484,1489,1469,1485,1470,1478,1479,1471,1472,1473,1474,1475,1476,1480,1477,1486,1487,1464,1473,1475,1467,1469,1470,1471,1472,1473,1474,1475,1476,1467,1469,1470,1471,1472,1473,1474,1475,1476,1484,1459,1484,1469,1462,1465,1458,1493,1468,1459,1464,1483,1467,1484,1489,1469,1485,1470,1478,1479,1471,1472,1473,1474,1475,1476,1480,1477,1486,1487,1462,1465,1458,1493,1468,1459,1464,1483,1467,1484,1489,1469,1485,1470,1478,1479,1471,1472,1473,1474,1475,1476,1480,1477,1486,1487,1477,1469,1459,1464,1467,1469,1470,1478,1479,1471,1472,1473,1474,1475,1476,1480,1467,1469,1470,1471,1472,1473,1474,1475,1476,1459,1464,1467,1469,1470,1478,1479,1471,1472,1473,1474,1475,1476,1480,1459,1464,1467,1469,1470,1478,1479,1471,1472,1473,1474,1475,1476,1480,1467,1469,1470,1471,1472,1473,1474,1475,1476,1474,1470,1471,1476,1458,1479,1459,1467,1469,1470,1471,1472,1473,1474,1475,1476,1465,1458,1483,1484,1485,1470,1479,1471,1472,1473,1474,1476,1480,1477,1486,1487,1484,1462,1465,1458,1493,1468,1459,1464,1483,1467,1484,1489,1469,1485,1470,1478,1479,1471,1472,1473,1474,1475,1476,1480,1477,1486,1487,1462,1465,1458,1493,1468,1459,1464,1483,1467,1484,1489,1469,1485,1470,1478,1479,1471,1472,1473,1474,1475,1476,1480,1477,1486,1487,1473,1475,1484,1462,1465,1458,1493,1468,1459,1464,1483,1467,1484,1489,1469,1485,1470,1478,1479,1471,1472,1473,1474,1475,1476,1480,1477,1486,1487,1462,1465,1458,1493,1468,1459,1464,1483,1467,1484,1489,1469,1485,1470,1478,1479,1471,1472,1473,1474,1475,1476,1480,1477,1486,1487,1468,1464,1473,1475,1464,1473,1475,1462,1468,1464,1473,1475,1468,1468,1468,1468,1464,1464,1464,1464,1473,1473,1473,1473,1475,1475,1475,1475,1473,1475,1484,1484,0,1467,1469,1470,1471,1472,1473,1474,1475,1476,1467,1469,1470,1471,1472,1473,1474,1475,1476,1467,1469,1470,1471,1472,1473,1474,1475,1476,1467,1469,1470,1471,1472,1473,1474,1475,1476,1467,1469,1470,1471,1472,1473,1474,1475,1476,1468,1468,1459,1464,1467,1489,1489,1469,1470,1478,1479,1471,1472,1473,1474,1475,1476,1480,1459,1474,1478,1474,1479,1462,1465,1458,1493,1468,1459,1464,1464,1483,1467,1484,1489,1489,1489,1469,1485,1470,1478,1479,1471,1472,1472,1472,1473,1474,1475,1476,1480,1477,1486,1487,1470,1471,1476,1467,1469,1470,1471,1472,1473,1474,1475,1476,1462,1465,1458,1493,1468,1459,1464,1483,1467,1484,1489,1469,1485,1470,1478,1479,1471,1472,1473,1474,1475,1476,1480,1477,1486,1487,1471,1471,1472,1479,1465,1458,1483,1484,1485,1470,1479,1471,1472,1473,1474,1476,1480,1477,1486,1487,1483,1470,1471,1476,1467,1469,1470,1471,1472,1474,1476,1467,1469,1470,1471,1472,1474,1476,1465,1462,1485,1459,1467,1469,1470,1471,1472,1473,1474,1475,1476,1467,1469,1470,1471,1472,1473,1474,1475,1476,1480,1467,1462,1470,1462,1465,1464,1473,1475,1468,1489,1473,1475,1480,1462,1465,1458,1493,1468,1459,1464,1483,1467,1484,1489,1469,1485,1470,1478,1479,1471,1472,1473,1474,1475,1476,1480,1477,1486,1487,1459,1462,1465,1458,1493,1468,1459,1464,1483,1467,1484,1489,1469,1485,1470,1478,1479,1471,1472,1473,1474,1475,1476,1480,1477,1486,1487,1462,1465,1458,1493,1468,1459,1464,1483,1467,1467,1484,1489,1469,1469,1485,1470,1470,1478,1479,1471,1471,1472,1472,1473,1473,1474,1474,1475,1475,1476,1476,1480,1477,1486,1487,1462,1465,1458,1493,1468,1459,1464,1483,1467,1484,1489,1469,1485,1470,1478,1479,1471,1472,1473,1474,1475,1476,1480,1477,1486,1487,1462,1465,1458,1493,1468,1459,1464,1483,1467,1484,1489,1469,1485,1470,1478,1479,1471,1472,1473,1474,1475,1476,1480,1477,1486,1487,1467,1469,1470,1471,1472,1473,1474,1475,1476,1462,1465,1458,1493,1468,1459,1464,1483,1467,1484,1489,1469,1485,1470,1478,1479,1471,1472,1473,1474,1475,1476,1480,1477,1486,1487,1465,1465,1467,1469,1470,1471,1472,1473,1474,1475,1476,1465,1479,1471,1484,1484,1470,1479,1486,1479,1459,1467,1469,1470,1471,1472,1473,1474,1475,1476,1467,1469,1470,1471,1472,1473,1474,1475,1476,1462,1472,1465,1458,1483,1484,1485,1470,1479,1471,1472,1473,1474,1476,1480,1477,1486,1487,1469,0,1458,1485,1459,1467,1469,1470,1471,1472,1473,1474,1475,1476,1473,1475,1459,1467,1469,1470,1471,1472,1473,1474,1475,1476,1467,1469,1470,1471,1472,1473,1474,1475,1476,1467,1469,1470,1471,1472,1473,1474,1475,1476,1467,1469,1470,1471,1472,1473,1474,1475,1476,1467,1469,1470,1471,1472,1473,1474,1475,1476,1459,1467,1469,1470,1471,1472,1473,1474,1475,1476,1459,1467,1469,1470,1471,1472,1473,1474,1475,1476,1459,1467,1469,1470,1471,1472,1473,1474,1475,1476,0,1478,0,1469,1479,1471,1473,1475,1467,1469,1470,1471,1472,1473,1474,1475,1476,1459,1467,1469,1470,1471,1472,1473,1474,1475,1476,1469,1476,1489,1472,1478,1480,1480,1479,1480,1480,1462,1467,1459,1464,1467,1469,1470,1478,1479,1471,1472,1473,1474,1475,1476,1480,1462,1465,1458,1493,1468,1459,1464,1483,1467,1484,1489,1469,1485,1470,1478,1479,1471,1472,1473,1474,1475,1476,1480,1477,1486,1487,1478,1468,1489,1480,1462,1465,1458,1493,1468,1459,1464,1483,1467,1484,1489,1469,1485,1470,1478,1479,1471,1472,1473,1474,1475,1476,1480,1477,1486,1487,1459,1462,1465,1458,1493,1468,1459,1464,1483,1467,1484,1489,1469,1485,1470,1478,1479,1471,1472,1473,1474,1475,1476,1480,1477,1486,1487,1462,1465,1458,1493,1468,1459,1464,1483,1467,1484,1484,1489,1469,1485,1470,1478,1479,1471,1472,1473,1474,1475,1476,1480,1477,1486,1487,1459,1467,1469,1470,1471,1472,1473,1474,1475,1476,1467,1469,1470,1471,1472,1473,1474,1475,1476,1484,1459,1467,1469,1470,1471,1472,1473,1474,1475,1476,1462,1465,1458,1493,1468,1459,1464,1483,1467,1484,1489,1469,1485,1470,1478,1479,1471,1472,1473,1474,1475,1476,1480,1477,1486,1487,0,1472,1473,1475,1473,1475,1473,1475,1480,1480,1459,1462,1465,1458,1493,1468,1459,1464,1483,1467,1484,1489,1469,1485,1470,1478,1479,1471,1472,1473,1474,1475,1476,1480,1477,1486,1487,1471,1471,1473,1468,0,1473,1468,1473,0,0,0,0,0,0,1471,1474,1459,1474,1474,1480,1480,1471,1471,1472,1480,1480,1480,1480,1480,1472,1480,1480,1503,1502,0,1502,1503,1503,1498,0,1498,0,0,0,0,0,0,0,0,0,0,0,85,85,1495,452,1496,85,1497,1498,1499,1495,1495,452,452,1496,1496,1496,85,85,1497,1497,1497,1498,1498,1498,1499,1499,1500,1501,1501,1503,2156,2157,1502,1502,1495,1495,452,452,1496,1496,85,85,1497,1497,1498,1498,1499,1499,1500,1501,1503,2156,2157,1502,1495,452,1496,85,1497,1498,1499,1500,1501,1503,2156,2157,1502,1498,1501,85,1495,452,1496,85,1497,1498,1499,1495,452,1496,85,1497,1498,1499,1495,452,1496,85,1497,1498,1499,1500,1501,1503,2156,2157,1502,1495,452,1496,85,1497,1498,1499,1500,1501,1503,2156,2157,1502,1500,1495,452,1496,85,1497,1498,1499,1501,1502,1495,452,1496,85,1497,1498,1499,1495,452,1496,85,1497,1498,1499,1501,1502,1495,452,1496,85,1497,1498,1499,1501,1502,1495,452,1496,85,1497,1498,1499,0,85,85,1495,452,1496,85,1497,1498,1499,0,1495,452,1496,85,1497,1498,1499,1500,1503,85,85,85,1495,452,1496,85,1497,1498,1499,1500,1501,1503,2156,2157,1502,1495,452,1496,85,1497,1498,1499,1500,1501,1503,2156,2157,1502,1496,1497,1498,1495,452,1496,85,1497,1498,1499,1500,1501,1503,2156,2157,1502,1495,452,1496,85,1497,1498,1499,1500,1501,1503,2156,2157,1502,1497,1501,1496,1497,1498,1501,1502,1498,1501,85,85,1496,85,1497,85,85,85,85,1496,1497,1496,85,1496,1497,1498,1501,1502,1496,1496,1496,1496,1497,1497,1497,1497,1498,1498,1498,1498,1501,1501,1501,1501,1502,1502,1502,1502,1496,1497,1498,1495,452,1496,85,1497,1498,1499,1495,452,1496,85,1497,1498,1499,1495,452,1496,85,1497,1498,1499,1495,452,1496,85,1497,1498,1499,1495,452,1496,85,1497,1498,1499,1497,85,1495,452,1496,85,1497,1498,1499,1501,1502,1502,1495,452,1496,85,1497,1498,1499,1500,1501,1503,2156,2157,1502,1502,85,85,85,1495,452,1496,85,1497,1498,1499,1495,452,1496,85,1497,1498,1499,1500,1501,1503,2156,2157,1502,85,1497,1495,452,1496,85,1497,1498,1499,1500,1503,1495,452,1496,85,1497,1499,1495,452,1496,85,1497,1499,1495,452,1496,85,1497,1498,1499,1495,452,1496,85,1497,1498,1499,1498,1501,1502,1498,1495,452,1496,85,1497,1498,1499,1500,1501,1503,2156,2157,1502,1495,452,1496,85,1497,1498,1499,1500,1501,1503,2156,2157,1502,1495,1495,452,452,1496,1496,85,85,1497,1497,1498,1498,1499,1499,1500,1501,1503,2156,2157,1502,1495,452,1496,85,1497,1498,1499,1500,1501,1503,2156,2157,1502,1495,452,1496,85,1497,1498,1499,1500,1501,1503,2156,2157,1502,1501,1502,1495,452,1496,85,1497,1498,1499,1495,452,1496,85,1497,1498,1499,1500,1501,1503,2156,2157,1502,1501,1502,1502,85,1495,452,1496,85,1497,1498,1499,1497,85,85,1497,1495,452,1496,85,1497,1498,1499,1495,452,1496,85,1497,1498,1499,1496,85,1497,85,1495,452,1496,85,1497,1498,1499,1500,1503,85,85,85,1496,85,1497,1496,1497,1497,1497,0,1495,452,1496,85,1497,1498,1499,1498,1495,452,1496,85,1497,1498,1499,1495,452,1496,85,1497,1498,1499,1495,452,1496,85,1497,1498,1499,1495,452,1496,85,1497,1498,1499,1495,452,1496,85,1497,1498,1499,1495,452,1496,85,1497,1498,1499,1495,452,1496,85,1497,1498,1499,1495,452,1496,85,1497,1498,1499,85,85,1497,1497,1496,1497,0,1496,1497,1498,1495,452,1496,85,1497,1498,1499,1497,1496,1497,85,1497,85,85,85,85,85,85,1495,452,1496,85,1497,1498,1499,85,1496,1497,1497,85,1495,452,1496,85,1497,1498,1499,1501,1502,1495,452,1496,85,1497,1498,1499,1500,1501,1503,2156,2157,1502,1502,1495,452,1496,85,1497,1498,1499,1500,1501,1503,2156,2157,1502,1495,452,1496,85,1497,1498,1499,1500,1501,1503,2156,2157,1502,1495,452,1496,85,1497,1498,1499,1500,1501,1503,2156,2157,1502,1495,452,1496,85,1497,1498,1499,1495,452,1496,85,1497,1498,1499,1495,452,1496,85,1497,1498,1499,1496,85,1497,1495,452,1496,85,1497,1498,1499,1500,1501,1503,2156,2157,1502,85,85,85,1498,1498,1498,0,1495,452,1496,85,1497,1498,1499,1500,1501,1503,2156,2157,1502,85,85,0,0,0,1498,0,1498,0,0,0,0,1507,0,0,0,1508,0,1507,1508,1508,1506,1507,1508,1506,1507,1508,1506,1508,1507,1508,1506,1507,1508,1506,1506,1507,1508,1507,1508,1507,1508,0,0,1507,1506,1507,1508,1506,1507,1508,1506,1507,1508,1506,1507,1508,1506,1508,1508,1508,1508,1508,1508,1508,1508,1507,1508,1507,1507,1508,1506,1507,1508,1506,1507,1507,1506,1507,1508,0,1507,1508,1506,1507,1508,1506,1507,1508,1506,1507,1508,1506,1507,1508,1506,1508,1507,1508,1506,1508,1507,1507,1506,0,1507,1508,1507,1508,1506,642,1507,1508,1506,1507,1508,1506,1507,1508,1506,1507,1508,1506,1507,1508,1506,0,0,0,1509,1510,1509,1510,1509,1510,1509,1510,1509,1510,1509,1510,1509,1510,1509,1510,1509,1510,1509,1510,1509,1510,1509,1510,1509,1510,1509,1510,1509,1510,1509,1510,1509,1510,1509,1510,1509,1510,1509,2048,2048,1509,1510,1509,1510,1509,1510,1509,1510,1509,1510,1509,1510,0,865,91,0,865,865,91,865,865,91,91,865,865,91,91,865,91,865,91,865,91,865,91,865,91,865,91,865,91,865,91,865,91,865,91,865,91,865,91,91,865,91,865,865,91,865,91,865,91,865,91,865,91,865,91,865,91,865,91,865,91,865,91,865,91,91,91,865,91,865,91,865,91,865,91,865,865,865,865,91,91,865,91,91,865,91,91,865,91,91,91,865,91,91,865,91,865,91,865,91,865,91,865,91,865,91,865,91,865,865,91,91,865,91,865,91,865,91,865,91,865,91,865,91,91,91,91,91,91,91,91,865,91,865,865,865,91,91,91,865,91,91,865,91,865,865,91,865,91,865,91,865,91,865,91,865,91,865,91,865,91,865,91,865,865,91,91,91,91,91,91,91,91,91,91,91,91,91,91,865,91,865,91,865,91,865,91,865,91,865,865,865,91,91,91,865,91,865,865,91,865,91,865,91,865,91,865,91,865,91,865,91,865,91,865,91,91,91,91,0,1512,1512,1512,0,1511,1511,1512,1511,1512,1511,1512,1511,1512,1511,1512,1511,1511,1512,1511,1512,1511,1512,1511,1512,1512,1511,1512,1511,1512,1511,1511,1512,1511,1511,1512,1511,1512,1511,1512,1511,1512,1511,1512,1511,1511,1512,1511,1512,1511,1512,1511,1512,1511,1512,1511,1512,0,0,1532,0,0,0,1513,1523,1524,1535,1536,1538,1538,0,0,1521,1522,1523,1524,1518,0,0,1521,1522,1523,1524,1525,1526,1531,1529,1534,1534,1529,0,1538,1513,1514,1519,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1537,1540,1541,1543,1521,1522,1525,1526,0,1556,0,0,0,0,1521,1522,1523,1524,1525,1526,1555,1555,0,0,1536,1536,0,1528,0,1521,1523,1525,1526,1521,1523,1525,1526,0,1558,0,1536,1547,1528,0,0,0,0,0,1516,1527,0,1565,1557,1557,0,0,0,1558,0,0,1527,1547,1556,1535,1536,0,0,1556,1535,1536,0,1533,0,0,0,0,0,1553,1553,1516,1528,0,1558,0,0,1518,1513,1535,1536,0,1516,1513,1535,1536,1532,0,0,0,1527,1529,1534,1534,1529,0,0,1525,1526,1525,1526,1525,1526,1558,1521,1522,1523,1524,1525,1526,1521,1522,1523,1524,1525,0,1565,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1513,1513,0,0,1513,1531,1513,1533,1533,1513,1514,0,1520,1520,1520,1514,1515,1516,1517,1518,1513,1514,1519,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1535,1536,1537,1538,1539,1540,1541,1542,1543,1544,1545,1546,1547,1548,1575,1569,1550,2158,2159,2160,2161,1552,1515,1515,1516,1516,1516,1517,1517,1518,1518,1518,2162,2163,2164,1573,1513,1513,1553,1553,1514,1514,1559,1565,1566,1554,1554,1555,1555,1561,2165,1556,1562,1570,1563,1564,1519,1519,1520,1520,1521,1521,1521,1522,1522,1522,1523,1523,1523,1524,1524,1524,1525,1525,1525,1526,1526,1526,1527,1527,1527,1528,1528,1528,1529,1529,1529,1530,1530,1530,1531,1531,1531,1532,1532,1532,1533,1533,1533,1534,1534,1534,1535,1535,1536,1536,1537,1537,1538,1538,1539,1539,1540,1540,1540,1557,1557,1541,1541,1542,1542,1543,1543,1544,1544,1545,1545,1546,1546,1547,1547,1551,1558,1558,1548,1548,1575,1569,1550,2158,2159,2160,2161,1552,1515,1515,1516,1516,1517,1517,1518,1518,2162,2163,2164,1573,1513,1513,1553,1514,1514,1559,1565,1566,1554,1555,1561,2165,1556,1562,1570,1563,1564,1519,1519,1520,1520,1521,1521,1522,1522,1523,1523,1524,1524,1525,1525,1526,1526,1527,1527,1528,1528,1529,1529,1530,1530,1531,1531,1532,1532,1533,1533,1534,1534,1535,1535,1536,1536,1537,1537,1538,1538,1539,1539,1540,1540,1557,1541,1541,1542,1542,1543,1543,1544,1544,1545,1545,1546,1546,1547,1547,1551,1558,1548,1548,1575,1569,1550,2158,2159,2160,2161,1552,1515,1516,1517,1518,2162,2163,2164,1573,1513,1553,1514,1559,1565,1566,1554,1555,1561,2165,1556,1562,1570,1563,1564,1519,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1535,1536,1537,1538,1539,1540,1557,1541,1542,1543,1544,1545,1546,1547,1551,1558,1548,1554,1555,1558,1515,1516,1517,1518,1513,1514,1519,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1535,1536,1537,1538,1539,1540,1541,1542,1543,1544,1545,1546,1547,1548,1515,1516,1517,1518,1513,1514,1519,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1535,1536,1537,1538,1539,1540,1541,1542,1543,1544,1545,1546,1547,1548,1520,2161,1537,1539,1540,1514,1550,1550,1550,1520,1575,1569,1550,2158,2159,2160,2161,1552,1515,1516,1517,1518,2162,2163,2164,1573,1513,1553,1514,1559,1565,1566,1554,1555,1561,2165,1556,1562,1570,1563,1564,1519,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1535,1536,1537,1538,1539,1540,1557,1541,1542,1543,1544,1545,1546,1547,1551,1558,1548,1575,1569,1550,2158,2159,2160,2161,1552,1515,1516,1517,1518,2162,2163,2164,1573,1513,1553,1514,1559,1565,1566,1554,1555,1561,2165,1556,1562,1570,1563,1564,1519,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1535,1536,1537,1538,1539,1540,1557,1541,1542,1543,1544,1545,1546,1547,1551,1558,1548,1514,1514,1520,1551,0,1550,0,1530,2161,1546,1530,1530,1552,1516,1517,1518,1513,1553,1514,1554,1555,1556,1519,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1535,1536,1537,1538,1539,1540,1557,1541,1542,1543,1544,1545,1546,1547,1558,1515,1516,1517,1518,1513,1514,1519,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1537,1538,1539,1540,1541,1542,1543,1544,1545,1546,1547,1548,1552,1516,1517,1518,1513,1553,1514,1554,1555,1556,1519,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1535,1536,1537,1538,1539,1540,1557,1541,1542,1543,1544,1545,1546,1547,1558,1552,1516,1517,1518,1513,1553,1514,1554,1555,1556,1519,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1535,1536,1537,1538,1539,1540,1557,1541,1542,1543,1544,1545,1546,1547,1558,1515,1516,1517,1518,1513,1514,1519,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1535,1536,1537,1538,1539,1540,1541,1542,1543,1544,1545,1546,1547,1548,2161,1544,1520,1515,1516,1517,1518,2165,1570,1519,1520,1541,1542,1543,1544,1545,1546,1547,1556,1559,1515,1516,1517,1518,1513,1514,1519,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1535,1536,1537,1538,1539,1540,1541,1542,1543,1544,1545,1546,1547,1548,0,1552,1515,1516,1517,1518,1513,1514,1559,1561,1562,1563,1564,1519,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1537,1540,1541,1542,1543,1544,1545,1546,1547,1551,1548,1575,1569,1550,2158,2159,2160,2161,1552,1515,1516,1517,1517,1518,2162,2163,2164,1573,1513,1553,1514,1559,1565,1566,1554,1555,1561,2165,1556,1562,1570,1563,1564,1519,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1535,1536,1537,1538,1539,1540,1557,1541,1542,1543,1544,1545,1546,1547,1551,1558,1548,1548,1575,1569,1550,2158,2159,2160,2161,1552,1515,1516,1517,1517,1518,2162,2163,2164,1573,1513,1553,1514,1559,1565,1566,1554,1555,1561,2165,1556,1562,1570,1563,1564,1519,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1535,1536,1537,1538,1539,1540,1557,1541,1542,1543,1544,1545,1546,1547,1551,1558,1548,1548,1516,1517,1518,1513,1514,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1535,1536,1537,1538,1539,1540,1541,1543,1544,1520,1520,1513,1513,1575,1569,1550,2158,2159,2160,2161,1552,1515,1516,1517,1518,2162,2163,2164,1573,1513,1553,1514,1559,1565,1566,1554,1555,1561,2165,1556,1562,1570,1563,1564,1519,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1535,1536,1537,1538,1539,1540,1557,1541,1542,1543,1544,1545,1546,1547,1551,1558,1548,1550,1550,0,1575,1569,1550,2158,2159,2160,2161,1552,1515,1516,1517,1518,2162,2163,2164,1573,1513,1553,1514,1559,1565,1566,1554,1555,1561,2165,1556,1562,1570,1563,1564,1519,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1535,1536,1537,1538,1539,1540,1557,1541,1542,1543,1544,1545,1546,1547,1551,1558,1548,1555,1558,1516,1518,1553,1554,1555,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1540,1557,1558,1554,1555,1558,1550,1550,1550,1540,1540,1550,1550,1516,1517,1518,1513,1553,1514,1554,1555,1556,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1535,1536,1537,1538,1539,1540,1557,1558,1516,1516,1516,1516,1518,1518,1518,1518,1553,1553,1553,1553,1554,1554,1554,1554,1555,1555,1555,1555,1521,1521,1521,1521,1522,1522,1522,1522,1523,1523,1523,1523,1524,1524,1524,1524,1525,1525,1525,1525,1526,1526,1526,1526,1527,1527,1527,1527,1528,1528,1528,1528,1529,1529,1529,1529,1530,1530,1530,1530,1531,1531,1531,1531,1532,1532,1532,1532,1533,1533,1533,1533,1534,1534,1534,1534,1540,1540,1540,1540,1557,1557,1557,1557,1558,1558,1558,1558,1516,1517,1518,1513,1514,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1535,1536,1537,1538,1539,1540,1541,1543,1544,0,0,0,0,0,0,2162,1573,1515,1516,1517,1518,1513,1514,1519,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1537,1538,1539,1540,1541,1542,1543,1544,1545,1546,1547,1548,1515,1516,1517,1518,1513,1514,1519,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1537,1538,1539,1540,1542,1544,1545,1546,1547,1515,1516,1517,1518,1513,1514,1519,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1537,1538,1539,1540,1542,1544,1545,1546,1547,1515,1516,1517,1518,1513,1514,1519,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1537,1538,1539,1540,1541,1542,1543,1544,1545,1546,1547,1548,1515,1516,1517,1518,1513,1514,1519,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1537,1538,1539,1540,1541,1542,1543,1544,1545,1546,1547,1548,2162,1573,1551,1537,1539,1537,1539,1515,1537,1539,1520,1520,1520,1520,1520,2161,1542,1545,2161,1542,1545,1515,1516,1517,1518,1513,1553,1553,1514,1559,1565,1555,1556,1564,1519,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1535,1536,1537,1538,1539,1540,1557,1557,1541,1542,1543,1544,1545,1546,1547,1558,1548,1537,1539,1575,1569,1550,2158,2159,2160,2161,1552,1515,1516,1517,1518,2162,2163,2164,1573,1513,1553,1514,1559,1565,1566,1554,1555,1561,2165,1556,1556,1556,1562,1570,1563,1564,1519,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1535,1536,1537,1538,1538,1538,1538,1539,1539,1540,1557,1541,1541,1542,1543,1543,1544,1545,1545,1546,1547,1551,1558,1548,1515,1516,1517,1518,2165,1570,1519,1520,1541,1542,1543,1544,1545,1546,1547,1556,1515,1516,1517,1518,1513,1514,1519,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1535,1536,1537,1538,1539,1540,1541,1542,1543,1544,1545,1546,1547,1548,1575,1569,1550,2158,2159,2160,2161,1552,1515,1516,1517,1518,2162,2163,2164,1573,1513,1553,1514,1559,1565,1566,1554,1555,1561,2165,1556,1562,1570,1563,1564,1519,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1535,1536,1537,1538,1539,1540,1557,1541,1542,1543,1544,1545,1546,1547,1551,1558,1548,1552,1515,1516,1517,1518,1513,1514,1559,1566,1561,1562,1563,1564,1519,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1537,1540,1541,1542,1543,1544,1545,1546,1547,1551,1548,1515,1516,1517,1518,2165,1570,1519,1520,1541,1542,1543,1544,1545,1546,1547,1540,1515,1517,1514,1519,1520,1530,1537,1539,1540,1541,1542,1543,1544,1545,1546,1548,1515,1517,1514,1519,1520,1530,1537,1539,1540,1541,1542,1543,1544,1545,1546,1548,1559,1515,1516,1517,1518,1513,1514,1519,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1535,1536,1537,1538,1539,1540,1541,1542,1543,1544,1545,1546,1547,1548,1540,1540,1515,1516,1517,1518,1513,1514,1519,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1535,1536,1537,1538,1539,1540,1541,1542,1543,1544,1545,1546,1547,1548,1520,1520,1520,1520,1520,1520,1520,1554,1555,1558,1554,1520,1514,2161,1570,1566,1553,1557,1542,1516,1518,1513,1521,1522,1523,1524,1525,1526,1527,1528,1529,1531,1532,1533,1534,1538,1547,1575,1569,1550,2158,2159,2160,2161,1552,1515,1516,1517,1518,2162,2163,2164,1573,1513,1553,1514,1559,1565,1566,1554,1555,1561,2165,1556,1562,1570,1563,1564,1519,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1535,1536,1537,1538,1539,1540,1557,1541,1542,1543,1544,1545,1546,1547,1551,1558,1548,2162,1573,2162,1573,1575,1569,1550,2158,2159,2160,2161,1552,1515,1516,1517,1518,2162,2163,2164,1573,1513,1553,1514,1559,1565,1566,1554,1555,1561,2165,1556,1562,1570,1563,1564,1519,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1535,1536,1537,1538,1539,1540,1557,1541,1542,1543,1544,1545,1546,1547,1551,1558,1548,1575,1569,1550,2158,2159,2160,2161,1552,1515,1515,1516,1516,1517,1517,1518,1518,2162,2163,2164,1573,1513,1513,1553,1514,1514,1559,1565,1566,1554,1555,1561,2165,1556,1562,1570,1563,1564,1519,1519,1520,1520,1521,1521,1522,1522,1523,1523,1524,1524,1525,1525,1526,1526,1527,1527,1528,1528,1529,1529,1530,1530,1531,1531,1532,1532,1533,1533,1534,1534,1535,1535,1536,1536,1537,1537,1538,1538,1539,1539,1540,1540,1557,1541,1541,1542,1542,1543,1543,1544,1544,1545,1545,1546,1546,1547,1547,1551,1558,1548,1548,1575,1569,1550,2158,2159,2160,2161,1552,1515,1516,1517,1518,2162,2163,2164,1573,1513,1553,1514,1559,1565,1566,1554,1555,1561,2165,1556,1562,1570,1563,1564,1519,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1535,1536,1537,1538,1539,1540,1557,1541,1542,1543,1544,1545,1546,1547,1551,1558,1548,1575,1569,1550,2158,2159,2160,2161,1552,1515,1516,1517,1518,2162,2163,2164,1573,1513,1553,1514,1559,1565,1566,1554,1555,1561,2165,1556,1562,1570,1563,1564,1519,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1535,1536,1537,1538,1539,1540,1557,1541,1542,1543,1544,1545,1546,1547,1551,1558,1548,1555,1558,1556,1515,1516,1517,1518,1513,1514,1519,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1535,1536,1537,1538,1539,1540,1541,1542,1543,1544,1545,1546,1547,1548,1575,1569,1550,2158,2159,2160,2161,1552,1515,1516,1517,1518,2162,2163,2164,1573,1513,1553,1514,1559,1565,1566,1554,1555,1561,2165,1556,1562,1570,1563,1564,1519,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1535,1536,1537,1538,1539,1540,1557,1541,1542,1543,1544,1545,1546,1547,1551,1558,1548,1555,1558,1556,1556,1530,1531,1515,1516,1517,1518,1513,1514,1519,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1537,1538,1539,1540,1541,1542,1543,1544,1545,1546,1547,1548,1520,1520,1520,1514,1514,1520,1519,1556,1520,2162,1573,1537,1539,1520,1575,1520,1556,1571,1552,0,1537,1539,1520,1575,1520,1537,1539,1515,1516,1517,1518,1513,1514,1519,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1535,1536,1537,1538,1539,1540,1541,1542,1543,1544,1545,1546,1547,1548,1517,1513,1513,1515,1516,1517,1518,1513,1514,1519,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1537,1538,1539,1540,1542,1544,1545,1546,1547,1569,1514,1544,1545,0,0,1517,1552,1515,1516,1517,1518,1513,1514,1559,1561,1562,1563,1564,1519,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1537,1540,1541,1542,1543,1544,1545,1546,1547,1551,1548,1544,1556,1556,1519,1520,1520,1514,1537,1539,1519,1519,1575,1550,1520,0,1514,1537,1539,0,1570,2161,1515,1516,1517,1518,1513,1514,1519,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1535,1536,1537,1538,1539,1540,1541,1542,1543,1544,1545,1546,1547,1548,1516,1518,1513,1521,1522,1523,1524,1525,1526,1527,1528,1529,1531,1532,1533,1534,1538,1547,1515,1516,1517,1518,1513,1514,1519,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1535,1536,1537,1538,1539,1540,1541,1542,1543,1544,1545,1546,1547,1548,1515,1516,1517,1518,1513,1514,1519,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1535,1536,1537,1538,1539,1540,1541,1542,1543,1544,1545,1546,1547,1548,1515,1516,1517,1518,1513,1514,1519,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1535,1536,1537,1538,1539,1540,1541,1542,1543,1544,1545,1546,1547,1548,1515,1516,1517,1518,1513,1514,1519,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1535,1536,1537,1538,1539,1540,1541,1542,1543,1544,1545,1546,1547,1548,1515,1516,1517,1518,1513,1514,1519,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1535,1536,1537,1538,1539,1540,1541,1542,1543,1544,1545,1546,1547,1548,1515,1516,1517,1518,1513,1514,1519,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1535,1536,1537,1538,1539,1540,1541,1542,1543,1544,1545,1546,1547,1548,1515,1516,1517,1518,1513,1514,1519,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1535,1536,1537,1538,1539,1540,1541,1542,1543,1544,1545,1546,1547,1548,1515,1516,1517,1518,1513,1514,1519,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1535,1536,1537,1538,1539,1540,1541,1542,1543,1544,1545,1546,1547,1548,1559,2158,2159,2160,1539,1513,0,1514,1514,1520,1520,1569,1575,1516,1517,1518,1513,1514,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1535,1536,1537,1538,1539,1540,1541,1543,1544,1515,1515,1516,1517,1518,1513,1514,1519,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1535,1536,1537,1538,1539,1540,1541,1542,1543,1544,1545,1546,1547,1548,2162,1573,1540,1540,1540,2162,1573,1559,1515,1516,1517,1518,1513,1514,1519,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1535,1536,1537,1538,1539,1540,1541,1542,1543,1544,1545,1546,1547,1548,2162,1573,1519,1552,1550,1550,1550,1540,1566,2161,1540,1540,1540,1545,1552,1516,1517,1518,1513,1553,1514,1554,1555,1556,1519,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1535,1536,1537,1538,1539,1540,1557,1541,1542,1543,1544,1545,1546,1547,1558,1575,1569,1550,2158,2159,2160,2161,1552,1515,1516,1517,1518,2162,2163,2164,1573,1513,1553,1514,1559,1565,1566,1554,1555,1561,2165,1556,1562,1570,1563,1564,1519,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1535,1536,1537,1538,1539,1540,1557,1541,1542,1543,1544,1545,1546,1547,1551,1558,1548,1553,1557,1514,1514,1520,2161,1575,1569,1550,2158,2159,2160,2161,1552,1515,1516,1517,1518,2162,2163,2164,1573,1513,1553,1514,1559,1565,1566,1554,1555,1561,2165,1556,1562,1570,1563,1564,1519,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1535,1536,1537,1538,1539,1540,1557,1541,1542,1543,1544,1545,1546,1547,1551,1558,1548,1575,1569,1550,2158,2159,2160,2161,1552,1515,1516,1517,1518,2162,2163,2164,1573,1513,1553,1514,1559,1565,1566,1554,1555,1561,2165,1556,1562,1570,1563,1564,1519,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1535,1536,1537,1538,1539,1540,1557,1541,1542,1543,1544,1545,1546,1547,1551,1558,1548,1559,1559,1575,1569,1550,2158,2159,2160,2161,1552,1515,1516,1517,1518,2162,2163,2164,1573,1513,1553,1514,1559,1565,1566,1554,1555,1561,2165,1556,1562,1570,1563,1564,1519,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1535,1536,1537,1538,1539,1540,1557,1541,1542,1543,1544,1545,1546,1547,1551,1558,1548,1515,1516,1517,1518,1513,1514,1519,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1535,1536,1537,1538,1539,1540,1541,1542,1543,1544,1545,1546,1547,1548,1515,1516,1517,1518,1513,1514,1519,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1535,1536,1537,1538,1539,1540,1541,1542,1543,1544,1545,1546,1547,1548,1515,1516,1517,1518,1513,1514,1519,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1535,1536,1537,1538,1539,1540,1541,1542,1543,1544,1545,1546,1547,1548,0,0,1561,1564,1519,1556,1556,1556,1575,1569,1550,2158,2159,2160,2161,1552,1515,1516,1517,1518,2162,2163,2164,1573,1513,1553,1514,1559,1565,1566,1554,1555,1561,2165,1556,1562,1570,1563,1564,1519,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1535,1536,1537,1538,1539,1540,1557,1541,1542,1543,1544,1545,1546,1547,1551,1558,1548,0,1569,2162,1573,1559,2162,1573,1559,1559,1563,1516,1518,1513,1521,1522,1523,1524,1525,1526,1527,1528,1529,1531,1532,1533,1534,1538,1547,1516,1518,1513,1521,1522,1523,1524,1525,1526,1527,1528,1529,1531,1532,1533,1534,1538,1547,1516,1518,1513,1521,1522,1523,1524,1525,1526,1527,1528,1529,1531,1532,1533,1534,1538,1547,1514,1566,1530,1575,1569,1550,2158,2159,2160,2161,1552,1515,1516,1517,1518,2162,2163,2164,1573,1513,1553,1514,1559,1565,1566,1554,1555,1561,2165,1556,1562,1570,1563,1564,1519,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1535,1536,1537,1538,1539,1540,1557,1541,1542,1543,1544,1545,1546,1547,1551,1558,1548,0,1520,1544,1545,1545,1530,1530,0,1576,1576,1576,1576,1576,1576,1576,1576,1576,1576,1576,1576,1576,1576,1576,1576,1576,1576,1576,1576,1576,1576,1576,1576,1576,1576,1576,1576,1576,1576,1576,1576,1576,1576,1576,1576,1576,1576,1576,1576,1576,1576,1576,1576,1576,1576,1576,1576,1576,1576,1576,1576,1576,1576,1576,1576,1576,1576,1576,1576,1576,1576,1576,1576,1576,1576,1576,1576,1576,1576,1576,1576,0,0,0,0,0,0,1556,0,1556,0,1556,1571,1552,0,0,0,0,0,0,1577,1579,1580,1581,1578,1577,1579,1580,1581,1578,1577,1579,1580,1581,1578,1577,1579,1580,1581,1578,1577,1578,1577,1579,1580,1581,1578,1577,1579,1580,1581,1578,1578,1579,1580,1581,1577,1578,1577,1578,1577,1578,1577,1579,1580,1581,1578,1577,1579,1580,1581,1578,1577,1579,1580,1581,1578,1577,1579,1580,1581,1578,1577,1579,1580,1581,1578,1577,1579,1580,1581,1578,1577,1579,1580,1581,1578,1577,1579,1580,1581,1581,1578,1577,1579,1580,1581,1578,1581,1581,1577,1579,1580,1581,1578,1577,1579,1580,1581,1578,1579,1578,1579,1580,1577,1579,1580,1581,1578,1577,1579,1580,1581,1578,1578,1577,1579,1580,1581,1578,1577,1579,1580,1581,1578,1577,1579,1580,1581,1578,1577,1579,1580,1581,1578,1577,1579,1580,1581,1578,1577,1579,1580,1581,1578,1577,1579,1580,1581,1578,1577,1579,1580,1581,1578,1581,1581,1581,1580,1580,1577,1578,1577,1579,1580,1581,1578,1577,1579,1580,1581,1578,1577,1579,1580,1581,1578,1577,1579,1580,1581,1578,1577,1579,1580,1581,1578,1577,1579,1580,1581,1578,1577,1579,1580,1581,1578,1577,1579,1580,1581,1578,1577,1579,1580,1581,1578,1581,1581,1581,1581,1577,1579,1580,1581,1578,0,0,0,0,0,0,0,1582,1583,1584,1585,1582,1582,1583,1583,1586,1584,1584,1585,1585,1587,1582,1582,1583,1583,1586,1584,1584,1585,1585,1587,1582,1583,1586,1584,1585,1587,1582,1583,1584,1585,1582,1583,1584,1585,1582,1583,1586,1584,1585,1587,1582,1583,1586,1584,1585,1587,1582,1583,1586,1584,1585,1587,1582,1583,1584,1585,1582,1583,1586,1584,1585,1587,1582,1583,1586,1584,1585,1587,1582,1583,1584,1585,1582,1583,1584,1585,1582,1583,1584,1585,1582,1583,1584,1585,1582,1583,1586,1584,1585,1587,1582,1583,1586,1584,1585,1587,1582,1583,1586,1584,1585,1587,1582,1583,1586,1584,1585,1587,1582,1583,1584,1585,1582,1583,1584,1585,1582,1583,1584,1585,1582,1583,1584,1585,1582,1583,1584,1585,1582,1583,1584,1585,1582,1583,1586,1584,1585,1587,1582,1583,1584,1585,1582,1583,1584,1585,1582,1583,1586,1584,1585,1587,1582,1583,1584,1585,1582,1583,1584,1585,1582,1583,1584,1585,1582,1583,1584,1585,1582,1583,1584,1585,1582,1583,1584,1585,1587,1582,1583,1586,1584,1585,1587,1582,1583,1586,1584,1585,1587,1582,1582,1583,1583,1586,1584,1584,1585,1585,1587,1582,1583,1586,1584,1585,1587,1582,1583,1586,1584,1585,1587,1582,1583,1584,1585,1582,1583,1586,1584,1585,1587,1582,1583,1584,1585,1586,1587,0,1582,1583,1584,1585,1582,1583,1584,1585,1582,1583,1584,1585,1582,1583,1584,1585,1582,1583,1584,1585,1582,1583,1584,1585,1582,1583,1584,1585,1582,1583,1584,1585,1582,1583,1584,1585,1582,1583,1584,1585,1582,1583,1584,1585,1582,1583,1584,1585,1582,1583,1584,1585,1582,1583,1584,1585,1583,1586,0,1582,1583,1586,1584,1585,1587,1582,1583,1586,1584,1585,1587,1582,1583,1586,1584,1585,1587,1582,1583,1586,1584,1585,1587,1582,1583,1586,1584,1585,1587,1582,1583,1584,1585,1582,1583,1584,1585,1582,1583,1584,1585,1582,1583,1586,1584,1585,1587,0,0,1582,1583,1586,1584,1585,1587,0,157,0,0,0,0,0,0,0,0,0,0,0,0,0,0,104,104,104,201,201,201,201,104,0,157,0,0,0,0,0,104,0,0,157,0,104,104,104,0,0,201,104,157,157,903,903,1602,1595,1595,902,1592,1597,1593,1598,201,201,201,250,1594,104,104,104,157,903,1602,1595,902,1592,1597,1593,1598,201,201,250,1594,104,104,157,903,1602,1595,902,1592,1597,1593,1598,201,250,1594,104,201,201,157,903,1595,201,104,201,201,104,104,104,201,201,104,201,104,104,104,104,201,201,201,201,157,903,1602,1595,902,1592,1597,1593,1598,201,250,1594,104,104,157,903,1602,1595,902,1592,1597,1593,1598,201,250,1594,104,201,902,1592,1593,1594,104,104,104,104,157,903,1595,902,201,250,1594,104,157,903,1595,902,201,250,1594,104,157,157,903,1595,902,201,250,1594,104,201,104,157,1595,201,104,157,1595,201,104,201,104,0,201,104,0,157,157,902,1592,1597,1593,1598,201,250,1594,104,0,0,157,157,903,903,1602,1595,902,1592,1597,1593,1598,201,250,1594,104,157,903,1602,1595,902,1592,1597,1593,1598,201,250,1594,104,201,104,104,0,104,104,104,104,104,104,157,903,1602,1595,902,1592,1597,1593,1598,201,250,1594,104,157,903,1602,1602,1595,902,1592,1597,1593,1598,201,250,1594,104,157,903,1595,201,104,157,903,1595,201,104,104,201,201,201,157,903,1595,201,104,157,157,157,157,903,903,903,903,1595,1595,1595,1595,201,201,201,201,104,104,104,104,201,104,0,1597,1598,250,157,157,903,1595,902,1597,1598,201,201,201,201,250,1594,104,157,157,157,157,157,157,903,1602,1595,902,1592,1597,1593,1598,201,201,201,201,201,250,1594,104,104,104,104,104,201,201,201,201,201,104,104,104,201,104,157,903,1602,1595,902,1592,1597,1593,1598,201,250,1594,104,104,104,104,201,201,201,201,201,201,157,902,1592,1597,1593,1598,201,250,1594,104,0,1594,2166,201,104,0,201,201,104,201,201,201,157,903,903,1595,201,104,1594,201,0,157,903,1602,1595,902,1592,1597,1593,1598,201,250,1594,104,157,903,1602,1595,902,1592,1597,1593,1598,201,250,1594,104,157,903,1602,1595,902,1592,1597,1593,1598,201,201,250,1594,104,104,157,903,1602,1595,902,1592,1597,1593,1598,201,250,1594,104,157,903,1602,1595,902,1592,1597,1593,1598,201,250,1594,104,201,157,201,104,157,903,1602,1595,902,1592,1597,1593,1598,201,250,1594,104,201,104,0,201,104,104,104,104,104,1595,903,1602,1594,104,201,201,0,157,902,1592,1597,1593,1598,201,250,1594,104,201,157,1595,201,104,0,201,104,201,104,201,104,201,104,201,104,201,104,201,104,201,104,201,104,201,104,104,104,104,201,104,201,104,201,104,104,201,104,104,104,104,104,104,104,0,0,201,201,157,903,1595,902,201,250,1594,104,157,903,1602,1595,902,1592,1597,1593,1598,201,250,1594,104,157,201,201,157,903,1602,1595,902,1592,1597,1593,1598,201,201,201,250,1594,104,104,104,157,903,1602,1595,902,1592,1597,1593,1598,201,250,1594,104,201,201,157,903,1602,1595,902,1592,1597,1593,1598,201,250,1594,104,201,104,201,104,104,201,104,104,157,903,1602,1595,902,1592,1597,1593,1598,201,250,1594,104,201,157,903,1602,1595,902,1592,1597,1593,1598,201,250,1594,104,0,1594,1594,1597,1598,250,250,250,250,1597,1598,250,250,250,0,1616,1616,0,0,0,0,0,253,671,1615,253,671,253,253,253,671,671,671,1615,1616,1616,253,253,671,671,1615,1616,253,671,1615,1616,253,671,253,671,671,671,671,253,671,1615,1616,253,671,1615,1616,253,671,1615,253,671,1615,253,671,1615,1616,253,253,671,253,671,1615,1616,253,671,1615,1616,253,671,671,253,253,671,253,671,1615,253,671,1615,1616,253,671,1615,1616,253,671,671,253,671,1615,1616,253,253,671,1615,253,671,1615,1616,253,671,1616,253,671,1615,253,253,671,1616,1617,253,253,253,253,671,671,671,671,1616,1616,1616,1616,253,671,253,253,253,671,671,253,671,1615,1615,1615,1615,253,671,1615,1616,253,253,671,671,671,1615,1616,253,671,253,671,253,671,1615,1616,253,671,1615,253,253,671,253,253,253,253,253,253,253,1615,253,1615,253,253,671,671,253,671,253,671,253,671,0,0,0,253,671,253,253,671,1615,1616,253,671,253,1615,253,671,671,253,671,1615,1616,253,253,671,671,1615,1616,253,671,1615,1616,253,671,1615,1616,253,253,253,671,671,1615,1615,1615,253,253,671,253,671,1615,1616,253,671,253,671,1615,671,671,253,253,671,1615,253,1615,253,253,253,671,1615,253,671,253,671,1615,253,671,1615,253,671,1615,0,253,253,253,671,253,671,253,671,253,671,253,671,253,671,253,253,671,253,671,253,671,253,671,253,253,671,253,671,253,671,1615,253,671,1615,253,671,253,671,253,671,253,671,1615,253,671,1615,671,671,671,253,671,1615,1616,253,671,1615,1616,253,671,1615,1616,253,253,671,1615,1616,253,671,1615,253,671,1615,1616,253,671,253,671,253,671,253,671,253,671,671,253,671,1615,1616,253,253,253,671,1615,1616,253,671,1615,253,671,253,671,253,671,1615,253,671,253,671,2167,0,0,0,0,0,0,0,0,0,0,0,0,1651,1622,1625,0,0,0,0,0,0,0,0,1651,1622,1625,0,0,0,0,1651,1622,1625,1651,1622,1625,1003,1634,1633,1640,1641,1642,1649,1619,1626,1650,1644,1651,1652,1653,1643,1622,1654,1655,1625,1657,1658,1647,1003,1634,1633,1640,1641,1642,1649,1619,1626,1650,1644,1651,1652,1653,1643,1622,1654,1655,1625,1657,1658,1647,1003,1634,1633,1640,1641,1642,1649,1619,1626,1650,1644,1651,1652,1653,1643,1622,1654,1655,1625,1657,1658,1647,1003,1634,1633,1640,1641,1642,1649,1619,1626,1650,1644,1651,1652,1653,1643,1622,1654,1655,1625,1657,1658,1647,1003,1634,1633,1640,1641,1642,1649,1619,1626,1650,1644,1651,1652,1653,1643,1622,1654,1655,1625,1657,1658,1647,1003,1642,1649,1003,1642,1649,1003,1642,1649,1003,1634,1633,1640,1641,1642,1649,1619,1626,1650,1644,1651,1652,1653,1643,1622,1654,1655,1625,1657,1658,1647,1003,1634,1633,1640,1641,1642,1649,1619,1626,1650,1644,1651,1652,1653,1643,1622,1654,1655,1625,1657,1658,1647,1003,1634,1633,1640,1641,1642,1649,1619,1626,1650,1644,1651,1652,1653,1643,1622,1654,1655,1625,1657,1658,1647,1003,1634,1633,1640,1641,1642,1649,1619,1626,1650,1644,1651,1652,1653,1643,1622,1654,1655,1625,1657,1658,1647,1647,1003,1634,1633,1640,1641,1642,1649,1619,1650,1644,1651,1652,1653,1643,1622,1654,1655,1625,1657,1658,1647,1647,1003,1634,1633,1640,1641,1642,1649,1619,1626,1650,1644,1651,1652,1653,1643,1622,1654,1655,1625,1657,1658,1647,1644,1643,1644,1643,1644,1643,1003,1634,1633,1640,1641,1642,1649,1619,1626,1650,1644,1651,1652,1653,1643,1622,1654,1655,1625,1657,1658,1647,1652,1654,1657,1652,1652,1652,1654,1657,1003,1634,1633,1640,1641,1642,1649,1619,1626,1650,1644,1651,1652,1653,1643,1622,1654,1655,1625,1657,1658,1647,1651,1652,1653,1622,1654,1655,1625,1657,1658,1653,1652,1653,1003,1634,1633,1640,1641,1642,1649,1619,1626,1650,1644,1651,1652,1653,1643,1622,1654,1655,1625,1657,1658,1647,1003,1634,1633,1640,1641,1642,1649,1619,1626,1650,1644,1651,1652,1653,1643,1622,1654,1655,1625,1657,1658,1647,1003,1634,1633,1640,1641,1642,1649,1619,1626,1650,1644,1651,1652,1653,1643,1622,1654,1655,1625,1657,1658,1647,1003,1634,1633,1640,1641,1642,1649,1619,1626,1650,1644,1651,1652,1653,1643,1622,1654,1655,1625,1657,1658,1647,1003,1634,1633,1640,1641,1642,1649,1619,1626,1650,1652,1655,1658,1652,1652,1654,1657,1003,1634,1633,1640,1641,1642,1649,1619,1626,1650,1644,1651,1652,1653,1643,1622,1654,1655,1625,1657,1658,1647,1652,1622,1654,1655,1625,1657,1658,1652,1003,1634,1633,1640,1641,1642,1649,1619,1650,1003,1634,1633,1640,1641,1642,1649,1619,1626,1650,1622,1625,1651,1622,1625,1651,1622,1625,1622,1625,1652,1654,1657,1652,1654,1657,1654,1657,1652,1654,1657,1654,1657,1003,1634,1633,1640,1641,1642,1649,1619,1626,1650,1003,1642,1649,1003,1634,1633,1640,1641,1642,1649,1619,1626,1650,1644,1651,1652,1653,1643,1622,1654,1655,1625,1657,1658,1647,1647,1003,1634,1633,1640,1641,1642,1649,1619,1626,1650,1644,1651,1652,1653,1643,1622,1654,1655,1625,1657,1658,1647,1003,1634,1633,1640,1641,1642,1649,1619,1626,1650,1644,1651,1652,1653,1643,1622,1654,1655,1625,1657,1658,1647,1003,1634,1633,1640,1641,1642,1649,1619,1626,1650,1644,1651,1652,1653,1643,1622,1654,1655,1625,1657,1658,1647,1003,1634,1633,1640,1641,1642,1649,1619,1626,1650,1644,1651,1652,1653,1643,1622,1654,1655,1625,1657,1658,1647,1647,1003,1634,1633,1640,1641,1642,1649,1619,1626,1650,1644,1651,1652,1653,1643,1622,1654,1655,1625,1657,1658,1647,0,0,0,0,0,0,0,0,1623,0,0,0,1623,0,1635,1636,1620,1627,1632,1618,1646,1648,1623,1659,1660,1635,1636,1620,1627,1632,1618,1646,1648,1623,1659,1660,1635,1636,1620,1627,1632,1618,1646,1648,1623,1659,1660,1635,1636,1620,1627,1632,1618,1646,1648,1623,1659,1660,1635,1636,1620,1627,1632,1618,1646,1648,1623,1659,1660,1635,1632,1618,1646,1648,1635,1632,1618,1646,1648,1635,1632,1618,1646,1648,1635,1636,1620,1627,1632,1618,1646,1648,1623,1659,1660,1635,1636,1620,1627,1632,1618,1646,1648,1623,1659,1660,1635,1636,1620,1627,1632,1618,1646,1648,1623,1659,1660,1635,1636,1620,1627,1632,1618,1646,1648,1623,1659,1660,1635,1636,1620,1632,1618,1646,1648,1623,1659,1660,1635,1636,1620,1627,1632,1618,1646,1648,1623,1659,1660,1635,1636,1620,1627,1632,1618,1646,1648,1623,1659,1660,1623,1659,1660,1635,1636,1620,1627,1632,1618,1646,1648,1623,1659,1660,1623,1660,1635,1636,1620,1627,1632,1618,1646,1648,1623,1659,1660,1635,1636,1620,1627,1632,1618,1646,1648,1623,1659,1660,1635,1636,1620,1627,1632,1618,1646,1648,1623,1659,1660,1635,1636,1620,1627,1632,1618,1646,1648,1623,1659,1660,1635,1636,1620,1627,1632,1618,1646,1648,1635,1636,1620,1627,1632,1618,1646,1648,1623,1659,1660,1660,1635,1636,1620,1635,1636,1620,1627,1632,1618,1646,1648,1623,1659,1659,1635,1636,1620,1627,1632,1618,1646,1648,1635,1632,1618,1646,1648,1635,1636,1620,1627,1632,1618,1646,1648,1623,1659,1660,1635,1636,1620,1627,1632,1618,1646,1648,1623,1659,1660,1635,1636,1620,1627,1632,1618,1646,1648,1623,1659,1660,1635,1636,1620,1627,1632,1618,1646,1648,1623,1659,1660,1635,1636,1620,1627,1632,1618,1646,1648,1623,1659,1660,1635,1636,1620,1627,1632,1618,1646,1648,1623,1659,1660,0,0,0,0,0,0,0,0,1624,0,1624,0,1624,1624,1629,1661,1630,1637,1638,1639,1621,1628,1624,1629,1661,1630,1637,1638,1639,1621,1628,1624,1629,1661,1630,1637,1638,1639,1621,1628,1624,1629,1661,1630,1637,1638,1639,1621,1628,1624,1629,1661,1630,1637,1638,1639,1621,1628,1624,1629,1661,1630,1637,1638,1639,1621,1628,1624,1629,1661,1630,1637,1638,1639,1621,1628,1624,1629,1661,1630,1637,1638,1639,1621,1628,1624,1629,1661,1630,1637,1638,1639,1621,1628,1624,1629,1661,1630,1621,1624,1629,1661,1630,1637,1638,1639,1621,1628,1624,1629,1661,1630,1637,1638,1639,1621,1628,1629,1629,1624,1629,1661,1630,1637,1638,1639,1621,1628,1624,1661,1624,1629,1661,1630,1637,1638,1639,1621,1628,1624,1629,1661,1630,1637,1638,1639,1621,1628,1624,1629,1661,1630,1637,1638,1639,1621,1628,1624,1629,1661,1630,1637,1638,1639,1621,1628,1637,1638,1639,1621,1628,1629,1624,1629,1661,1630,1637,1638,1639,1621,1628,1629,1661,1630,1637,1638,1639,1621,1637,1638,1639,1621,1628,1624,1624,1629,1637,1638,1639,1621,1628,1624,1629,1661,1630,1637,1638,1639,1621,1628,1624,1629,1661,1630,1637,1638,1639,1621,1628,1624,1629,1661,1630,1637,1638,1639,1621,1628,1624,1629,1661,1630,1637,1638,1639,1621,1628,1624,1629,1661,1630,1637,1638,1639,1621,1628,1624,1629,1661,1630,1637,1638,1639,1621,1628,0,0,0,0,0,0,0,1645,1645,1666,1662,1645,1663,1665,1664,1667,1666,1662,1645,1663,1665,1664,1667,1666,1662,1645,1663,1665,1664,1667,1662,1662,1662,1666,1662,1645,1663,1665,1664,1667,1666,1662,1645,1663,1665,1664,1667,1645,1645,1645,1645,1645,1645,1662,1645,1663,1645,1645,1662,1645,1663,1645,1663,1662,1645,1645,1645,1666,1662,1645,1663,1665,1664,1667,1666,1662,1645,1663,1665,1664,1667,1666,1662,1645,1663,1665,1664,1667,1645,1645,1666,1662,1645,1645,1663,1665,1665,1664,1664,1667,1645,1645,1645,1645,1666,1662,1645,1663,1665,1664,1667,1666,1662,1645,1663,1665,1664,1667,1645,1645,1645,1645,1645,1666,1662,1645,1663,1665,1664,1667,1645,1645,1645,1645,1666,1662,1645,1663,1665,1664,1667,1666,1662,1645,1663,1665,1664,1667,1666,1645,1663,1665,1664,1666,1662,1645,1663,1665,1664,1667,1645,1663,1665,1664,1667,1645,1666,1662,1645,1663,1665,1664,1667,1645,1645,1645,1665,1664,1645,1645,1645,1645,1663,1665,1664,1667,1645,1663,1663,1645,1645,1645,1645,1645,1663,1665,1664,1662,1645,1663,1666,1662,1645,1663,1665,1664,1667,1666,1662,1645,1663,1665,1664,1667,1645,1666,1662,1645,1663,1665,1664,1667,1645,1645,1645,1666,1662,1645,1663,1665,1664,1667,1666,1662,1645,1663,1665,1664,1667,1666,1662,1645,1663,1665,1664,1667,1645,1645,0,0,15,2168,15,2168,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1679,1679,1680,1680,1668,1668,1669,1669,1670,1670,1671,1671,1672,1672,1673,1673,1674,1674,1675,1675,385,385,1676,1676,1677,1677,1678,1678,1679,1680,1668,1669,1670,1671,1672,1673,1674,1675,385,1676,1677,1678,1679,1680,1668,1669,1670,1671,1672,1673,1674,1675,385,1676,1677,1678,1668,1669,1670,1671,1672,1673,1674,1675,385,1676,1677,1678,1668,1669,1670,1671,1672,1673,1674,1674,1675,1675,385,385,1676,1676,1677,1677,1678,1678,1668,1669,1670,1671,1672,1673,1674,1674,1675,1675,385,385,1676,1676,1677,1677,1678,1678,1679,1680,1668,1669,1670,1671,1672,1673,1674,1675,385,1676,1677,1678,1679,1680,1668,1669,1670,1671,1672,1673,1674,1675,385,1676,1677,1678,1679,1680,1668,1669,1670,1671,1672,1673,1674,1675,385,1676,1677,1678,1679,1680,1668,1669,1670,1671,1672,1673,1674,1675,385,1676,1677,1678,1679,1680,1668,1669,1670,1671,1672,1673,1674,1675,385,1676,1677,1678,1668,1669,1670,1671,1672,1673,1674,1675,385,1676,1677,1678,1668,1669,1670,1671,1672,1673,1674,1675,385,1676,1677,1678,1668,1669,1670,1671,1672,1673,1674,1675,385,1676,1677,1678,1679,1680,1668,1669,1670,1671,1672,1673,1674,1675,385,1676,1677,1678,1679,1680,1668,1669,1670,1671,1672,1673,1674,1675,385,1676,1677,1678,1679,1680,1668,1669,1670,1671,1672,1673,1674,1675,385,1676,1677,1678,1679,1680,1668,1669,1670,1671,1672,1673,1674,1675,385,1676,1677,1678,1679,1680,1668,1669,1670,1671,1672,1673,1674,1675,385,1676,1677,1678,1668,1669,1670,1671,1672,1673,1674,1675,385,1676,1677,1678,1679,1680,1668,1669,1670,1671,1672,1673,1674,1675,385,1676,1677,1678,1679,1679,1679,1679,1680,1680,1680,1680,1668,1668,1668,1668,1669,1669,1669,1669,1670,1670,1670,1670,1671,1671,1671,1671,1672,1672,1672,1672,1673,1673,1673,1673,1674,1674,1674,1674,1675,1675,1675,1675,385,385,385,385,1676,1676,1676,1676,1677,1677,1677,1677,1678,1678,1678,1678,1679,1679,1680,1680,1668,1668,1668,1668,1668,1668,1669,1669,1669,1669,1669,1669,1670,1670,1670,1670,1670,1670,1671,1671,1671,1671,1671,1671,1672,1672,1672,1672,1672,1672,1673,1673,1673,1673,1673,1673,1674,1674,1674,1674,1674,1674,1675,1675,1675,1675,1675,1675,385,385,385,385,385,385,1676,1676,1676,1676,1676,1676,1677,1677,1677,1677,1677,1677,1678,1678,1678,1678,1678,1678,1679,1679,1679,1680,1680,1668,1669,1669,1669,1669,1669,1670,1670,1670,1670,1670,1670,1670,1670,1670,1671,1671,1671,1671,1671,1671,1671,1671,1671,1671,1671,1671,1671,1672,1672,1672,1672,1672,1672,1672,1672,1672,1672,1672,1672,1672,1672,1672,1672,1672,1673,1673,1673,1673,1673,1673,1673,1674,1675,1675,1675,385,385,385,385,385,1676,1676,1676,1676,1676,1676,1676,1677,1677,1677,1677,1677,1677,1677,1677,1677,1678,1678,1678,1678,1678,1679,1680,1668,1669,1670,1671,1672,1673,1674,1675,385,1676,1677,1678,1668,1669,1670,1671,1672,1673,1674,1675,385,1676,1677,1678,1668,1669,1670,1671,1672,1673,1674,1675,385,1676,1677,1678,1668,1669,1670,1671,1672,1673,1674,1675,385,1676,1677,1678,1668,1669,1670,1671,1672,1673,1674,1675,385,1676,1677,1678,1679,1680,1679,1680,1668,1669,1670,1671,1672,1673,1674,1675,385,1676,1677,1678,1679,1680,1668,1669,1670,1671,1672,1673,1674,1675,385,1676,1677,1678,1679,1680,1668,1669,1670,1671,1672,1673,1674,1675,385,1676,1677,1678,1679,1680,1668,1669,1670,1671,1672,1673,1674,1675,385,1676,1677,1678,1679,1680,1668,1669,1670,1671,1672,1673,1674,1675,385,1676,1677,1678,1679,1680,1668,1669,1670,1671,1672,1673,1674,1675,385,1676,1677,1678,1668,1669,1670,1671,1672,1673,1674,1675,385,1676,1677,1678,1668,1669,1670,1671,1672,1673,1674,1675,385,1676,1677,1678,1668,1669,1670,1671,1672,1673,1674,1675,385,1676,1677,1678,1668,1669,1670,1671,1672,1673,1674,1675,385,1676,1677,1678,1679,1680,1668,1669,1670,1671,1672,1673,1674,1675,385,1676,1677,1678,1679,1680,1668,1669,1670,1671,1672,1673,1674,1675,385,1676,1677,1678,1679,1680,1668,1669,1670,1671,1672,1673,1674,1675,385,1676,1677,1678,1679,1680,1668,1668,1669,1669,1670,1670,1671,1671,1672,1672,1673,1673,1674,1674,1675,1675,385,385,1676,1676,1677,1677,1678,1678,1679,1680,1668,1669,1670,1671,1672,1673,1674,1675,385,1676,1677,1678,1679,1680,1668,1669,1670,1671,1672,1673,1674,1675,385,1676,1677,1678,1679,1680,1668,1669,1670,1671,1672,1673,1674,1675,385,1676,1677,1678,1679,1680,1668,1669,1670,1671,1672,1673,1674,1675,385,1676,1677,1678,0,0,0,0,0,1689,1689,0,1759,1689,1689,0,1686,1686,1686,1686,0,1686,0,1686,1689,1689,565,1690,1686,1689,565,1690,1686,1689,565,1690,1689,1686,1689,565,1690,1686,1689,565,1690,1686,1686,1686,1686,1689,565,1690,1686,1686,1689,565,1690,1686,1689,565,1690,1689,1689,1686,0,0,1686,1686,1689,565,1690,1686,1689,565,1690,0,1686,1689,565,1690,1686,1689,565,1690,1689,1689,1686,1686,1686,1686,1686,1686,1686,1686,1686,1686,1686,1686,1686,1686,1686,1686,1686,1686,1689,1689,1689,1689,1689,1686,1686,1686,1686,1686,1686,1686,1689,565,1690,1686,1686,1689,1689,565,1690,1686,1686,1686,1686,1686,1689,565,1690,1686,0,0,1689,1686,1686,1689,1686,1686,1686,1686,1689,565,1690,1686,1689,565,1690,1686,1689,565,1690,1686,1689,565,1690,1686,1689,565,1690,1686,1686,1686,1689,565,1690,1759,1686,1684,1686,565,1690,1686,0,1686,1686,1686,1686,1686,1686,1686,1686,1686,1686,1686,1686,1686,1686,1686,1686,1686,1686,1686,1686,1686,0,1689,1689,0,1686,1686,1686,1686,1686,1686,1686,1686,1686,1686,1686,1686,1686,1686,1686,0,1686,1686,1686,1689,565,1690,1686,1689,565,1690,1686,1689,565,1690,1686,1689,565,1690,1686,1689,565,1690,0,1686,1689,565,1690,1686,1686,0,1686,1686,1689,565,1690,1686,1686,0,0,0,0,0,0,0,0,0,0,0,0,0,1707,1707,1707,1707,1707,1707,1707,1708,1708,1709,1710,1711,1711,1712,1713,1707,1714,1715,1708,1709,1710,1711,1712,1713,1707,1714,1715,1708,1709,1710,1711,1712,1713,1707,1714,1715,1708,1708,1709,1710,1711,1712,1713,1707,1714,1715,1708,1709,1710,1711,1712,1713,1707,1714,1715,1707,1708,1709,1710,1711,1712,1713,1707,1714,1715,1708,1709,1710,1711,1712,1713,1707,1714,1715,1708,1709,1710,1711,1712,1713,1707,1714,1715,1708,1711,1708,1711,1707,1707,1708,1709,1710,1711,1712,1713,1707,1714,1715,1708,1709,1710,1711,1712,1713,1707,1714,1715,1708,1709,1710,1711,1712,1713,1707,1714,1715,1708,1709,1710,1711,1712,1713,1707,1714,1715,1708,1711,1708,1707,1707,1707,1707,1707,1707,1707,1707,1707,1708,1711,1708,1708,1708,1708,1711,1711,1711,1711,1707,1708,1709,1710,1711,1712,1713,1707,1714,1715,1708,1709,1710,1711,1712,1713,1707,1714,1715,1707,1708,1709,1710,1711,1712,1713,1707,1714,1715,1707,1708,1711,1685,1708,1709,1710,1711,1712,1713,1707,1714,1715,1708,1709,1710,1711,1712,1713,1707,1714,1715,1708,1709,1710,1711,1712,1713,1707,1714,1715,1708,1709,1710,1711,1712,1713,1707,1714,1715,1708,1709,1710,1711,1712,1713,1707,1714,1715,1709,1710,1712,1713,1714,1715,1708,1709,1710,1711,1712,1713,1707,1714,1715,1707,1707,1710,1713,1685,1707,1685,1707,1709,1710,1712,1713,1714,1715,1710,1713,1707,1707,1707,1707,1707,1707,1707,1707,1708,1711,1707,1710,1713,1710,1713,1709,1710,1713,1714,1715,1711,1711,1707,1708,1709,1710,1711,1712,1713,1707,1714,1715,1708,1709,1710,1711,1712,1713,1707,1714,1715,1708,1709,1710,1711,1712,1713,1707,1714,1715,1708,1709,1710,1711,1712,1713,1707,1714,1715,1708,1709,1710,1711,1712,1713,1707,1714,1715,1708,1709,1710,1711,1712,1713,1707,1714,1715,1707,1707,1708,1709,1710,1711,1712,1713,1707,1714,1715,1711,1707,0,0,0,0,0,0,0,0,0,0,1731,1724,1733,1727,1728,1723,1731,1724,1733,1727,1728,1723,1731,1724,1733,1727,1728,1723,0,0,0,0,1731,1724,1733,1727,1728,1723,1731,1724,1733,1727,1728,1723,1724,1727,1728,1723,1724,1727,1728,1723,1724,1727,1728,1723,0,0,1731,1731,1724,1733,1731,1724,1733,1727,1728,1723,1731,1724,1733,1727,1728,1723,0,0,0,1731,1724,1733,1727,1728,1723,1731,1724,1733,1727,1728,1723,1731,1728,1723,0,0,0,0,1724,1733,1727,1728,1723,1731,1724,1733,1727,1728,1723,1731,1724,1733,1727,1728,1723,1724,1733,0,0,0,2169,1731,1724,1733,1727,1728,1723,1731,1724,1733,1727,1728,1723,1731,1724,1733,1727,1728,1723,1731,1724,1733,1727,1728,1723,1731,1724,1733,1727,1728,1723,1727,1731,1724,1733,1727,1728,1723,0,0,0,1731,0,0,0,0,1731,0,0,0,0,1731,0,1731,1739,0,1739,0,1724,1733,1727,1733,1728,1731,1724,1733,1739,1733,0,0,0,0,1724,1727,1728,1723,1731,1724,1733,1727,1728,1723,0,0,1731,1724,1733,1727,1728,1723,1731,1724,1733,1727,1728,1723,1731,1724,1733,1727,1728,1723,1731,1724,1733,1727,1728,1723,1731,1724,1733,1727,1728,1723,2169,0,0,1722,1722,1722,0,1722,1722,1722,1722,1722,1722,1722,1722,1722,1722,0,1722,1722,1722,1722,1722,1722,1722,1722,1722,1722,1722,1722,1722,1722,1722,1722,1722,0,0,0,0,1747,1748,1749,1747,1748,1749,1747,1748,1749,1747,1748,1749,1747,1748,1749,1747,1748,1749,1747,1748,1749,1747,1748,1749,1747,1748,1749,1747,1748,1749,1747,1747,1748,1749,1747,1748,1749,1747,1748,1749,1747,1748,1749,1747,1748,1749,1747,1747,1747,1748,1749,1747,1748,1749,1747,1748,1749,1747,1748,1749,1747,1748,1749,1748,1749,1747,1748,1749,1748,1749,1747,0,1749,1747,1747,1748,1749,1747,1748,1749,1747,1748,1749,1747,1748,1749,1747,1748,1749,1747,1748,1749,1747,1748,1749,0,0,0,0,0,0,0,0,0,0,0,1746,1737,1746,1737,1746,1737,1746,1737,1746,1737,1746,1737,1746,1737,1746,1737,1746,1737,1746,1737,1746,1737,0,1746,1737,1746,1737,1746,1737,1746,1737,1746,1737,1746,1737,1746,1737,0,1746,1737,1746,1737,1746,1737,1746,1737,1746,1737,1746,1737,1746,1737,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1751,1751,1751,1751,1752,1753,1754,1755,1756,1757,1758,1751,1752,1753,1754,1755,1756,1757,1758,1751,1752,1753,1754,1755,1756,1757,1758,1751,1752,1753,1754,1755,1756,1757,1758,1751,1752,1753,1754,1755,1756,1757,1758,1751,1751,1752,1753,1754,1755,1756,1757,1758,1751,1752,1753,1754,1755,1756,1757,1758,1751,1752,1753,1754,1755,1756,1757,1758,1751,1751,1751,1752,1753,1754,1755,1756,1757,1758,1751,1752,1753,1754,1755,1756,1757,1758,1751,1752,1753,1754,1755,1756,1757,1758,1751,1752,1753,1754,1755,1756,1757,1758,1751,1751,1751,1751,1751,1751,1751,1752,1753,1754,1755,1756,1757,1758,1751,1752,1753,1754,1755,1756,1757,1758,1751,1751,1752,1753,1754,1755,1756,1757,1758,1751,1751,1754,1685,1751,1751,1751,1752,1753,1754,1755,1756,1757,1758,1751,1752,1753,1754,1755,1756,1757,1758,1751,1752,1753,1754,1755,1756,1757,1758,1751,1752,1753,1754,1755,1756,1757,1758,1751,1752,1753,1754,1755,1756,1757,1758,1753,1755,1756,1757,1758,1751,1752,1753,1754,1755,1756,1757,1758,1751,1751,1685,1751,1751,1685,1751,1753,1755,1756,1757,1758,1758,1751,1751,1751,1751,1751,1751,1751,1751,1753,1756,1757,1758,1754,1754,1751,1751,1752,1753,1754,1755,1756,1757,1758,1751,1752,1753,1754,1755,1756,1757,1758,1751,1752,1753,1754,1755,1756,1757,1758,1751,1752,1753,1754,1755,1756,1757,1758,1751,1752,1753,1754,1755,1756,1757,1758,1751,1752,1753,1754,1755,1756,1757,1758,1751,1751,1752,1753,1754,1755,1756,1757,1758,1754,1754,1751,0,0,0,0,1760,0,0,0,0,1760,2170,2170,1760,1760,1761,1760,1761,1760,1761,1760,1761,1760,1761,1760,1761,1760,1761,1760,1761,1760,1761,1760,1761,1760,1761,1760,1761,1760,1744,1769,1760,1760,1760,1760,1760,2171,1760,1761,1760,1761,2172,1760,1761,1760,1761,1760,1761,1760,1761,1760,1761,1760,1761,1761,1760,1761,1761,1744,1769,1761,1760,1761,1760,1761,1760,1761,1760,1761,1760,1761,1760,1761,2170,1760,1761,2173,2174,2174,2175,2174,0,0,1762,1762,1762,1762,1762,1763,1762,1762,1763,1762,1763,1762,1763,1762,1763,1762,1763,1762,1763,1762,1763,1762,1763,1762,1762,1762,1762,1762,1762,1762,1763,1763,1762,1763,1762,1763,1762,1763,1762,1763,1762,1763,1762,1762,1763,1762,1763,1762,1763,1763,1762,1763,1763,1762,1763,1762,1763,1762,1763,1762,1763,1762,1763,1763,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1764,1765,1764,1706,1705,1697,1701,1695,1696,1704,1694,1702,1691,1766,1767,1692,1765,1764,1706,1705,1697,1701,1695,1696,1704,1694,1702,1691,1766,1767,1692,1765,1764,1706,1705,1697,1701,1695,1696,1704,1694,1702,1691,1766,1767,1692,1765,1764,1706,1705,1697,1701,1695,1696,1704,1694,1702,1691,1766,1767,1692,1765,1764,1706,1705,1697,1701,1695,1696,1704,1694,1702,1691,1766,1767,1692,1765,1706,1705,1697,1701,1695,1696,1702,1691,1766,1767,1692,1765,1706,1705,1697,1701,1695,1696,1702,1691,1766,1767,1692,1765,1706,1705,1697,1701,1695,1696,1702,1691,1766,1767,1692,1765,1764,1764,1706,1705,1697,1701,1695,1696,1704,1694,1702,1691,1766,1767,1692,1765,1764,1706,1705,1697,1701,1695,1696,1704,1694,1702,1691,1766,1767,1692,1701,1765,1764,1706,1705,1697,1701,1695,1696,1704,1694,1702,1691,1766,1767,1692,1765,1764,1706,1705,1697,1701,1695,1696,1704,1694,1702,1691,1766,1767,1692,1764,1764,0,1764,1764,1764,1764,1764,1766,1706,1705,1697,1701,1695,1696,1704,1694,1702,1691,1766,1767,1692,1765,1764,1706,1705,1697,1701,1695,1696,1704,1694,1702,1691,1766,1767,1692,1764,1764,1765,1764,1706,1705,1697,1701,1695,1696,1704,1694,1702,1691,1766,1767,1692,1766,1685,1764,1764,1764,1765,1764,1706,1705,1697,1701,1695,1696,1704,1694,1702,1691,1766,1767,1692,1765,1764,1706,1705,1697,1701,1695,1696,1704,1694,1702,1691,1766,1767,1692,1765,1764,1706,1705,1697,1701,1695,1696,1704,1694,1702,1691,1766,1767,1692,1765,1764,1706,1705,1697,1701,1695,1696,1704,1694,1702,1691,1766,1767,1692,1765,1764,1706,1705,1697,1701,1695,1696,1704,1694,1702,1691,1766,1767,1692,1697,1701,1695,1696,1704,1694,1702,1691,1767,1692,1765,1764,1706,1705,1697,1701,1695,1696,1704,1694,1702,1691,1766,1767,1692,1764,1685,1764,1764,1685,1764,1765,1697,1701,1695,1696,1704,1694,1702,1691,1767,1692,1702,1691,1767,1692,1765,1706,1705,1765,1764,1764,1764,0,1764,1764,1764,1764,1697,1696,1704,1694,1702,1691,1767,1692,1705,1766,1705,1766,1764,1764,1765,1706,1705,1697,1701,1695,1696,1702,1691,1766,1767,1692,1765,1764,1706,1705,1697,1701,1695,1696,1704,1694,1702,1691,1766,1767,1692,1765,1764,1706,1705,1697,1701,1695,1696,1704,1694,1702,1691,1766,1767,1692,1765,1764,1706,1705,1697,1701,1695,1696,1704,1694,1702,1691,1766,1767,1692,1765,1764,1706,1705,1697,1701,1695,1696,1704,1694,1702,1691,1766,1767,1692,1765,1764,1706,1705,1697,1701,1695,1696,1704,1694,1702,1691,1766,1767,1692,1764,1765,1764,1706,1705,1697,1701,1695,1696,1704,1694,1702,1691,1766,1767,1692,1766,1766,1706,1705,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1782,1772,1772,1774,1775,1776,1777,1778,1779,1780,1781,1782,1772,1774,1775,1776,1777,1778,1779,1780,1781,1782,1772,1774,1775,1776,1777,1778,1779,1780,1781,1772,1782,1772,1774,1775,1776,1777,1778,1779,1780,1781,1782,1772,1774,1775,1776,1777,1778,1779,1780,1781,1772,1774,1775,1776,1777,1778,1779,1780,1781,1772,1774,1775,1776,1777,1778,1779,1780,1781,1772,1774,1775,1776,1777,1778,1779,1780,1781,1772,1772,1782,1779,1782,1772,1772,1774,1775,1776,1777,1778,1779,1780,1781,1782,1772,1774,1775,1776,1777,1778,1779,1780,1781,1782,1772,1774,1775,1776,1777,1778,1779,1780,1781,1782,1772,1774,1775,1776,1777,1778,1779,1780,1781,1772,1772,1772,1772,1772,1772,1772,1772,1774,1775,1776,1777,1778,1779,1780,1781,1782,1772,1774,1775,1776,1777,1778,1779,1780,1781,1782,1772,1774,1775,1776,1777,1778,1779,1780,1781,1772,1782,1772,1774,1775,1776,1777,1778,1779,1780,1781,1782,1772,1774,1775,1776,1777,1778,1779,1780,1781,1782,1772,1774,1775,1776,1777,1778,1779,1780,1781,1782,1772,1774,1775,1776,1777,1778,1779,1780,1781,1782,1772,1774,1775,1776,1777,1778,1779,1780,1781,1782,1774,1775,1776,1777,1778,1779,1780,1781,1782,1772,1774,1775,1776,1777,1778,1779,1780,1781,1782,1779,1774,1782,1774,1775,1776,1777,1778,1779,1780,1781,1782,1774,1779,1782,1779,1772,1774,1774,1782,1774,1775,1776,1777,1778,1779,1780,1781,1772,1774,1775,1776,1777,1778,1779,1780,1781,1782,1772,1774,1775,1776,1777,1778,1779,1780,1781,1782,1772,1774,1775,1776,1777,1778,1779,1780,1781,1782,1772,1774,1775,1776,1777,1778,1779,1780,1781,1782,1772,1774,1775,1776,1777,1778,1779,1780,1781,1782,1772,1774,1775,1776,1777,1778,1779,1780,1781,1782,1772,1774,1775,1776,1777,1778,1779,1780,1781,0,0,0,0,0,0,0,0,0,0,0,0,0,1784,1784,1784,1784,1784,1791,1784,1785,1786,1787,1788,1789,1791,1784,1785,1786,1787,1788,1789,1791,1784,1785,1786,1787,1788,1789,1791,1784,1785,1786,1787,1788,1789,1791,1784,1785,1786,1787,1788,1789,1784,1784,1785,1786,1787,1788,1789,1784,1785,1786,1787,1788,1789,1784,1785,1786,1787,1788,1789,1791,1784,1791,1784,1785,1786,1787,1788,1789,1791,1784,1785,1786,1787,1788,1789,1791,1784,1785,1786,1787,1788,1789,1791,1784,1785,1786,1787,1788,1789,1784,1784,1784,1784,1784,1784,1784,1784,1784,1784,1785,1786,1787,1788,1789,1791,1784,1785,1786,1787,1788,1789,1784,1784,1791,1784,1785,1786,1787,1788,1789,1791,1784,1784,1685,1784,1784,1784,1784,1791,1784,1785,1786,1787,1788,1789,1791,1784,1785,1786,1787,1788,1789,1791,1784,1785,1786,1787,1788,1789,1791,1784,1785,1786,1787,1788,1789,1791,1784,1785,1786,1787,1788,1789,1785,1786,1787,1788,1789,1791,1784,1785,1786,1787,1788,1789,1784,1784,1790,1685,1784,1784,1784,1784,1685,1784,1784,1785,1786,1787,1788,1789,1784,1784,1784,1784,0,1784,1784,1784,1791,1784,1784,1784,1784,1785,1786,1788,1784,1784,1785,1786,1787,1788,1789,1791,1784,1785,1786,1787,1788,1789,1791,1784,1785,1786,1787,1788,1789,1791,1784,1785,1786,1787,1788,1789,1791,1784,1785,1786,1787,1788,1789,1791,1784,1785,1786,1787,1788,1789,1784,1784,1784,1791,1784,1785,1786,1787,1788,1789,1784,1790,0,0,0,0,0,0,0,0,1829,0,0,0,0,1689,1829,0,1689,0,0,0,0,0,0,1829,566,566,566,566,566,566,566,1792,1793,1794,566,1792,1793,1794,566,1792,1793,1794,566,1792,1793,1794,566,1792,1793,1794,566,566,566,1792,1793,1794,566,1792,1793,1794,566,1792,1793,1794,566,566,566,1792,1793,1794,566,1792,1793,1794,566,1792,1793,1794,566,1792,1793,1794,1792,1793,1794,566,1792,1793,1794,566,566,566,566,566,566,566,566,566,566,566,1792,1793,566,1793,1792,1793,566,1792,1793,1794,566,566,566,566,566,566,566,1792,1792,1793,1794,566,1792,1793,1794,566,1829,566,566,1792,1793,1794,566,1792,1793,1794,566,1792,1793,1794,566,1792,1793,1794,566,1792,1793,1794,566,566,1792,1793,1794,566,566,566,1792,1793,566,566,566,566,1792,1793,1794,566,1792,1793,1794,566,566,566,566,566,566,1792,1793,1794,566,566,566,1792,1793,566,1829,1792,1793,1794,1829,566,566,1792,1793,1794,566,1792,1793,1794,566,1792,1793,1794,566,1792,1793,1794,566,1792,1793,1794,566,1792,1793,1794,566,566,566,1792,1793,1794,566,1792,1793,1794,1829,566,566,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1698,1698,1698,1698,1698,1698,1796,1687,1687,1688,1688,1797,1798,1799,1800,1801,1802,1803,1804,1805,1698,1796,1687,1688,1797,1798,1799,1800,1801,1802,1803,1804,1805,1698,1796,1687,1688,1797,1798,1799,1800,1801,1802,1803,1804,1805,1687,1688,1698,1796,1687,1688,1797,1798,1799,1800,1801,1802,1803,1804,1805,1698,1796,1687,1688,1797,1798,1799,1800,1801,1802,1803,1804,1805,1698,1698,1698,1698,1796,1687,1688,1797,1798,1799,1800,1801,1802,1803,1804,1805,1698,1698,1796,1687,1688,1797,1798,1799,1800,1801,1802,1803,1804,1805,1698,1796,1687,1688,1797,1798,1799,1800,1801,1802,1803,1804,1805,1687,1688,1687,1688,1698,1698,1698,1687,1688,1698,1796,1687,1688,1797,1798,1799,1800,1801,1802,1803,1804,1805,1698,1796,1687,1688,1797,1798,1799,1800,1801,1802,1803,1804,1805,1803,1698,1796,1687,1688,1797,1798,1799,1800,1801,1802,1803,1804,1805,1698,1796,1687,1688,1797,1798,1799,1800,1801,1802,1803,1804,1805,1687,1688,1687,1688,1698,1698,1698,1698,0,1698,1698,1698,1698,1698,1698,1698,1698,1698,1698,1698,1698,1698,1687,1688,1687,1688,1798,1687,1687,1687,1687,1688,1688,1688,1688,1698,1698,1698,1698,1698,1698,1687,1688,1797,1798,1799,1800,1801,1802,1803,1804,1805,1698,1698,1796,1687,1687,1688,1688,1797,1798,1799,1800,1801,1802,1803,1804,1805,1698,1698,1698,1698,1698,1796,1687,1688,1797,1798,1799,1800,1801,1802,1803,1804,1805,1698,1687,1688,1687,1688,1687,1798,1685,1698,1698,1687,1687,1688,1698,1698,1698,1698,1796,1687,1688,1797,1798,1799,1800,1801,1802,1803,1804,1805,1698,1796,1687,1688,1797,1798,1799,1800,1801,1802,1803,1804,1805,1698,1796,1687,1688,1797,1798,1799,1800,1801,1802,1803,1804,1805,1698,1796,1687,1688,1797,1798,1799,1800,1801,1802,1803,1804,1805,1698,1796,1687,1688,1797,1798,1799,1800,1801,1802,1803,1804,1805,1797,1799,1800,1801,1802,1803,1804,1805,1698,1796,1687,1688,1797,1798,1799,1800,1801,1802,1803,1804,1805,1698,1698,1698,1685,1687,1698,1698,1698,1698,1698,1685,1698,1687,1687,1688,1796,1797,1799,1800,1801,1802,1803,1804,1805,1797,1801,1804,1805,1796,1796,1698,1698,1698,1698,0,1698,1698,1698,1698,1698,1698,1698,1698,1698,1687,1688,1687,1688,1698,1698,1698,1698,1698,1698,1797,1800,1802,1804,1805,1798,1798,1698,1698,1698,1796,1687,1688,1797,1798,1799,1800,1801,1802,1803,1804,1805,1698,1796,1687,1688,1797,1798,1799,1800,1801,1802,1803,1804,1805,1698,1796,1687,1688,1797,1798,1799,1800,1801,1802,1803,1804,1805,1698,1796,1687,1688,1797,1798,1799,1800,1801,1802,1803,1804,1805,1698,1796,1687,1688,1797,1798,1799,1800,1801,1802,1803,1804,1805,1698,1796,1687,1688,1797,1798,1799,1800,1801,1802,1803,1804,1805,1698,1698,1698,1698,1796,1687,1688,1797,1798,1799,1800,1801,1802,1803,1804,1805,1687,1798,1798,1698,1698,0,1806,1806,1806,1806,1806,1806,1806,1806,1806,1806,1806,1806,1806,1806,1806,1806,1806,1806,1806,1806,1806,1806,1806,1806,1806,1806,1806,1806,1806,1806,1806,1806,1806,1806,1743,1811,0,1809,1809,0,0,1811,0,0,0,0,1811,0,0,0,0,0,1829,1750,0,0,1730,1730,1738,1725,1718,1745,0,0,1811,0,0,0,0,0,0,0,0,0,0,0,1825,1719,1740,1717,0,0,0,0,0,0,0,1829,2176,1750,1720,0,0,1726,1726,1725,1809,0,0,0,0,0,0,1811,0,0,0,0,1829,2176,1743,1807,1810,1810,1811,1809,1812,1813,1814,1815,1816,1817,1818,1819,1820,1821,1822,1807,1823,1808,1824,1810,1811,1809,1812,1813,1814,1815,1816,1817,1818,1819,1820,1821,1822,1807,1823,1808,1824,1810,1811,1809,1812,1813,1814,1815,1816,1817,1818,1819,1820,1821,1822,1807,1823,1808,1824,1810,1808,1810,1811,1809,1812,1813,1814,1815,1816,1817,1818,1819,1820,1821,1822,1807,1823,1808,1824,1810,1811,1809,1812,1813,1814,1815,1816,1817,1818,1819,1820,1821,1822,1807,1823,1808,1824,1809,1809,1810,1811,1809,1812,1813,1814,1815,1816,1817,1818,1819,1820,1821,1822,1807,1823,1808,1824,1810,1811,1809,1812,1813,1814,1815,1816,1817,1818,1819,1820,1821,1822,1807,1823,1808,1824,1810,1811,1809,1812,1813,1814,1815,1816,1817,1818,1819,1820,1821,1822,1807,1823,1808,1824,1810,1810,1813,1826,1809,1810,1809,1812,0,1810,1811,1809,1812,1813,1814,1815,1816,1817,1818,1819,1820,1821,1822,1807,1823,1808,1824,1810,1811,1809,1812,1813,1814,1815,1816,1817,1818,1819,1820,1821,1822,1807,1823,1808,1824,1792,1793,1794,1810,1811,1809,1812,1813,1814,1815,1816,1817,1818,1819,1820,1821,1822,1807,1823,1808,1824,1810,1811,1809,1812,1813,1814,1815,1816,1817,1818,1819,1820,1821,1822,1807,1823,1808,1824,1810,1810,1768,1814,1819,1807,1742,1807,1730,1814,1819,1807,1814,1807,1807,1718,1814,1819,1807,1745,1814,1819,1807,1810,1810,1810,1810,1810,1793,1810,1811,1809,1813,1814,1815,1816,1817,1818,1819,1820,1821,1822,1807,1823,1808,1824,1810,1811,1809,1812,1813,1814,1815,1816,1817,1818,1819,1820,1821,1822,1807,1823,1808,1824,1814,1819,1721,1768,1814,1814,1819,1819,1807,1807,1810,1811,1809,1812,1813,1814,1815,1816,1817,1818,1819,1820,1821,1822,1807,1823,1808,1824,1810,1809,1812,1810,1829,2176,1808,1828,1827,1810,1811,1809,1812,1813,1814,1815,1816,1817,1818,1819,1820,1821,1822,1807,1823,1808,1824,1813,1813,1810,1811,1809,1812,1813,1814,1815,1816,1817,1818,1819,1820,1821,1822,1807,1823,1808,1824,1810,1811,1809,1812,1813,1814,1815,1816,1817,1818,1819,1820,1821,1822,1807,1823,1808,1824,1810,1811,1809,1812,1813,1814,1815,1816,1817,1818,1819,1820,1821,1822,1807,1823,1808,1824,1810,1811,1809,1812,1813,1814,1815,1816,1817,1818,1819,1820,1821,1822,1807,1823,1808,1824,1813,1815,1816,1817,1818,1820,1821,1822,1823,1824,1810,1811,1809,1812,1813,1814,1815,1816,1817,1818,1819,1820,1821,1822,1807,1823,1808,1824,1808,1743,1807,1738,1732,1825,1740,1814,1819,1807,1717,1814,1819,1807,1812,1812,1813,1815,1816,1817,1818,1820,1821,1822,1823,1824,1721,1814,1819,1807,1716,1819,1807,1720,1814,1819,1807,1726,1814,1819,1807,1814,1807,1807,1810,1809,1812,1810,1812,1719,1814,1819,1807,1826,1809,1826,1809,1815,1816,1817,1818,1820,1821,1822,1823,1824,1829,1808,1792,1793,1794,1829,1808,1721,1768,1814,1814,1819,1819,1807,1807,1810,1811,1809,1812,1813,1814,1815,1816,1817,1818,1819,1820,1821,1822,1807,1823,1808,1824,1810,1811,1809,1812,1813,1814,1815,1816,1817,1818,1819,1820,1821,1822,1807,1823,1808,1824,1810,1811,1809,1812,1813,1814,1815,1816,1817,1818,1819,1820,1821,1822,1807,1823,1808,1824,1810,1811,1809,1812,1813,1814,1815,1816,1817,1818,1819,1820,1821,1822,1807,1823,1808,1824,1810,1811,1809,1812,1813,1814,1815,1816,1817,1818,1819,1820,1821,1822,1807,1823,1808,1824,1810,1811,1809,1812,1813,1814,1815,1816,1817,1818,1819,1820,1821,1822,1807,1823,1808,1824,1732,1719,1814,1819,1807,1810,1811,1809,1812,1813,1814,1815,1816,1817,1818,1819,1820,1821,1822,1807,1823,1808,1824,1825,1812,1829,2176,1808,0,0,1830,1830,1830,1830,1830,1830,1830,1830,1830,1830,1830,1830,1830,1830,1830,1830,1830,1830,1830,1830,1830,1830,1830,1830,1830,1830,1830,1830,0,0,1831,576,1831,576,1831,576,1831,1831,576,1831,576,1831,576,1831,576,576,1831,576,576,1831,576,1831,576,576,1831,1831,1831,576,576,576,1831,576,1831,576,1831,576,1831,576,1831,576,1831,576,1831,576,1831,576,1831,576,1831,576,1831,576,1831,576,1831,576,1831,1831,576,1831,576,1831,576,1831,576,1831,576,1831,576,576,1831,576,1831,576,1831,576,1831,576,1831,576,1831,576,0,0,1833,0,1833,0,1833,0,0,0,0,0,0,1833,0,1833,1838,1832,1832,1839,1833,1833,1836,1836,1838,1832,1839,1833,1836,1838,1832,1839,1833,1836,1833,1836,1832,1833,1833,1838,1832,1839,1833,1836,1838,1832,1839,1833,1836,0,1832,1838,1838,1839,1833,1836,1838,1839,1833,1836,1841,1839,1838,1839,1833,1836,1833,1833,1838,1841,1839,0,0,1839,1838,1832,1839,1833,1836,1838,1832,1839,1833,1836,0,1838,1832,1839,1833,1836,1841,1841,1841,1841,1841,1839,1839,1838,1838,1832,1839,1833,1836,1841,1839,1832,1833,1836,1833,1836,1841,1839,0,1841,1838,1839,1838,1838,1832,1833,1833,1836,1832,1832,1832,1832,1833,1833,1833,1833,1836,1836,1836,1836,0,0,0,1841,1839,0,1841,0,1841,1839,0,1838,1832,1832,1850,1850,1838,1832,1839,1833,1833,1836,1838,1838,1832,1839,1839,1839,1833,1836,1836,1838,1832,1839,1833,1836,1833,1836,1839,1833,1833,1833,1833,1838,1838,1833,1836,1838,2177,1838,0,0,1838,1832,1839,1833,1836,0,2177,0,1838,1832,1839,1833,1836,1838,1832,1839,1833,1836,1838,1832,1839,1833,1836,1838,1832,1839,1833,1836,1836,1838,1832,1839,1833,1836,1836,1841,1841,1841,1841,1839,1838,1832,1838,1832,1833,1833,1832,0,1832,1833,1833,1841,0,1867,1838,0,1832,1832,1838,1832,1839,1838,1838,1841,1839,1838,1839,1839,1841,1838,1833,1833,1850,1841,1838,1839,1838,1841,1839,1841,1839,1867,0,0,0,0,1832,1838,1839,1833,1836,1838,1832,1839,1833,1836,1833,0,0,1841,1839,1838,1832,1839,1833,1836,1838,1832,1839,1833,1836,1838,1832,1839,1833,1836,1838,1832,1839,1833,1836,1838,1832,1839,1833,1836,0,0,1838,0,0,0,1835,1835,1866,1835,1866,1835,1866,1835,1835,1866,1835,1866,1835,1835,1835,1835,1866,1835,1866,1835,1866,1835,1866,1835,1835,1835,1835,1835,1835,1835,1835,1866,1835,1866,1835,1866,1835,1835,1866,1866,1835,1866,1835,1866,1835,1866,1835,1866,1835,1866,1867,1866,1866,0,0,1866,1867,1866,1835,1835,1866,1835,1866,1835,1866,1835,1866,1835,1866,1835,1866,0,0,0,0,1842,1842,1842,1842,1842,1842,1842,1842,1842,1842,1842,1842,1842,1842,1842,0,1842,1842,1842,1842,1842,1842,0,0,1842,1842,1842,1842,1842,1842,1842,1842,0,0,1846,1846,1846,1846,1846,1846,1846,1846,1846,1846,1846,1846,1846,1846,1846,1846,1846,1846,1846,1846,1846,1846,1846,1846,1846,1846,1846,1846,1846,1846,1846,1846,1846,1846,1846,1846,0,0,0,0,0,0,0,0,0,0,1849,1849,1837,1848,1848,1873,1873,1870,1871,1872,1849,1837,1848,1873,1870,1871,1872,1849,1837,1848,1873,1870,1871,1872,1848,1847,1848,1848,1848,1849,1837,1848,1873,1870,1871,1872,1849,1837,1848,1873,1870,1871,1872,1837,1848,1848,1871,1872,1848,1871,1872,1848,1871,1872,1849,0,1849,1837,1848,1873,1870,1871,1872,1849,1837,1848,1873,1870,1871,1872,0,1849,1837,1848,1873,1870,1871,1872,1849,1837,1848,1873,1870,1871,1872,1849,1848,1873,1848,1849,1848,1873,1849,1849,1849,1849,1848,1848,1848,1848,1873,1873,1873,1873,1849,1849,1849,1837,1837,1848,1848,1873,1870,1871,1871,1872,1849,1837,1848,1873,1870,1871,1872,1849,1837,1848,1873,1870,1871,1872,1848,1849,1837,1848,1873,1870,1871,1872,1849,1837,1848,1873,1870,1871,1872,1849,1837,1848,1873,1870,1871,1872,1849,1848,1873,1870,1871,1872,1849,1837,1848,1873,1870,1871,1872,1849,1870,1849,1837,1848,1873,1870,1871,1872,1849,1837,1849,1849,1837,1848,1849,1870,1850,1837,1873,1871,1872,1863,1863,1863,1863,1863,1863,1863,1863,1863,1848,1871,1872,1849,1837,1848,1873,1870,1871,1872,1849,1837,1848,1871,1849,1837,1848,1873,1870,1871,1872,1849,1837,1848,1873,1870,1871,1872,1849,1837,1848,1873,1870,1871,1872,1849,1837,1848,1873,1870,1871,1872,1849,1837,1848,1873,1870,1871,1872,0,0,0,0,1874,1860,1874,1860,1874,1860,1874,1860,1874,1860,1874,1860,1874,1860,1874,1860,1874,1860,1874,1860,1874,1874,1860,1874,1860,1860,1874,1860,1874,1860,1874,1860,2177,1874,1860,1874,1860,1874,1860,1874,1860,1874,1860,2177,1874,1860,1874,1860,1874,1860,1874,1860,1874,1860,1874,1860,1874,1860,1874,1860,1860,1860,1874,1860,1874,1860,1874,1860,1874,1860,1874,1860,1874,1860,1874,1860,1874,1860,2178,2178,0,0,0,1845,1845,1861,1861,1845,0,0,0,0,1845,0,0,1861,1845,1845,1861,1861,1845,1845,1875,1859,1861,1845,1875,1859,1861,1845,1875,1859,1845,1845,1861,1845,1875,1859,1861,1845,1875,1859,1845,1861,1845,1875,1861,1845,1875,1861,1845,1875,1845,1845,1845,1861,1845,1875,1859,1861,1845,1875,1859,1861,1845,1875,1859,1861,1845,1875,1859,1861,1845,1845,1845,1845,1861,1845,1845,1861,1861,1861,1861,1845,1845,1845,1845,1861,1845,1845,1875,1875,1859,1859,1861,1845,1845,1845,1875,1859,1845,1861,1845,1875,1859,1845,1845,1845,1845,1845,1845,1861,1875,1859,1861,1845,1875,1859,1861,1845,1875,1859,1861,1845,1875,1859,1861,1845,1875,1859,1861,1845,1875,1859,1845,1861,1845,1875,1859,1861,1861,1861,1845,1845,1845,1845,1845,1845,1845,1845,1861,1845,1875,1861,1845,1875,1859,1845,1875,1859,1861,1845,1875,1859,1861,1845,1875,1859,1861,1845,1875,1859,1861,1845,1875,1859,1861,1845,1875,1859,0,0,0,0,0,0,0,1843,1844,1862,1864,1843,1844,1862,1864,1843,1844,1862,1864,2179,1843,1844,1862,1864,1843,1844,1862,1864,1862,1862,1864,1843,1844,1844,1862,1864,1843,1844,1862,1864,1843,1844,1862,1864,1843,1843,1844,1844,1862,1864,1844,1862,1843,1844,1862,1864,1843,1844,1862,1864,1843,1844,1862,1864,1844,1843,1844,1862,1864,1843,1844,1862,1864,1843,1844,1862,1864,1843,1843,1844,1862,1864,1843,1844,1862,1864,1862,1862,1864,1862,1864,1862,1862,1864,1862,1862,1862,1862,1864,1864,1843,1844,1862,1864,1843,1844,1862,1864,1843,1844,1862,1864,1843,1844,1862,1864,1843,1844,1862,1864,1862,1843,1844,1862,1864,0,0,0,0,0,1865,1869,1868,1865,1877,1869,1868,1865,1877,1869,1868,1865,1877,1869,1868,1865,1877,1869,1868,1865,1877,1865,1877,1865,1877,1841,1865,1877,1841,1877,1869,1868,1865,1877,1869,1868,1865,1877,1869,1868,1865,1877,1841,1869,1868,1868,1865,1877,1841,1841,1877,1841,1877,1841,1877,1841,1841,1877,1869,1869,1868,1865,1877,1869,1868,1865,1877,1869,1868,1865,1877,1877,1869,1869,1868,1865,1877,1869,1868,1865,1877,1869,1868,1865,1877,1869,1868,1865,1877,1869,1868,1865,1877,1869,1868,1865,1877,1865,1865,1865,1841,1865,1877,1841,1877,1877,1841,1841,1877,1841,1877,1841,1877,0,0,1865,1865,1877,1869,1868,1865,1877,1869,1841,1869,1868,1865,1877,1869,1868,1865,1877,1869,1868,1865,1877,1869,1868,1865,1877,1869,1868,1865,1877,0,1878,1878,1905,1905,0,1878,1898,1903,1902,1902,1898,1904,1878,1898,1878,1887,0,1899,1878,1878,1878,1901,0,0,0,0,0,0,1906,1878,1887,1910,1890,1878,1887,0,1894,1878,0,1902,1902,0,1904,1878,1878,1878,1878,1890,1890,0,1902,1901,1903,0,1906,1899,1902,0,1878,1878,1878,1878,1878,1899,1905,0,1878,1878,1878,1878,1910,1910,1903,1903,1903,1887,0,1894,1901,0,1878,0,0,0,1893,1878,1878,1878,1904,1893,1893,1878,1878,0,1878,1878,1878,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1904,1878,1878,1878,1038,1879,1039,1880,1881,1882,1883,1884,1885,1886,1887,1888,1494,1889,1890,1891,1892,1893,1040,1894,1895,1488,1896,1897,1898,1560,1899,1900,1901,1902,1903,1904,1905,1906,1907,1911,1908,1878,1878,1878,1038,1038,1879,1879,1879,1039,1039,1039,1880,1880,1880,1881,1881,1881,1882,1882,1882,1883,1883,1884,1884,1884,1885,1885,1885,1886,1886,1886,1887,1887,1887,1888,1888,1888,1494,1494,1889,1889,1890,1890,1890,1891,1891,1891,1892,1892,1892,1893,1893,1893,1909,1040,1040,1040,1894,1894,1895,1895,1895,1488,1488,1896,1896,1897,1897,1898,1898,1560,1560,1899,1899,1899,1900,1900,1901,1901,1901,1902,1902,1902,1903,1903,1903,1904,1904,1904,1905,1905,1905,1906,1906,1906,1907,1907,1910,1911,1908,1878,1878,1038,1038,1879,1879,1039,1039,1880,1880,1881,1881,1882,1882,1883,1883,1884,1884,1885,1885,1886,1886,1887,1887,1888,1888,1494,1494,1889,1889,1890,1890,1891,1891,1892,1892,1893,1893,1909,1040,1040,1894,1894,1895,1895,1488,1488,1896,1896,1897,1897,1898,1898,1560,1560,1899,1899,1900,1900,1901,1901,1902,1902,1903,1903,1904,1904,1905,1905,1906,1906,1907,1907,1910,1911,1908,1878,1038,1879,1039,1880,1881,1882,1883,1884,1885,1886,1887,1888,1494,1889,1890,1891,1892,1893,1909,1040,1894,1895,1488,1896,1897,1898,1560,1899,1900,1901,1902,1903,1904,1905,1906,1907,1910,1878,1895,1902,1903,1878,1038,1879,1039,1880,1881,1882,1883,1884,1885,1886,1887,1888,1494,1889,1890,1891,1892,1893,1040,1894,1895,1488,1896,1897,1898,1560,1899,1900,1901,1902,1903,1904,1905,1906,1907,1878,1038,1879,1039,1880,1881,1882,1883,1884,1885,1886,1887,1888,1494,1889,1890,1891,1892,1893,1040,1894,1895,1488,1896,1897,1898,1560,1899,1900,1901,1902,1903,1904,1905,1906,1907,1560,1911,1908,1878,1038,1879,1039,1880,1881,1882,1883,1884,1885,1886,1887,1888,1494,1889,1890,1891,1892,1893,1909,1040,1894,1895,1488,1896,1897,1898,1560,1899,1900,1901,1902,1903,1904,1905,1906,1907,1910,1911,1908,1878,1038,1879,1039,1880,1881,1882,1883,1884,1885,1886,1887,1888,1494,1889,1890,1891,1892,1893,1909,1040,1894,1895,1488,1896,1897,1898,1560,1899,1900,1901,1902,1903,1904,1905,1906,1907,1910,1908,1488,1898,1886,1896,1878,1038,1879,1039,1880,1881,1882,1883,1884,1885,1886,1887,1888,1494,1889,1890,1891,1892,1893,1909,1040,1894,1895,1488,1896,1897,1898,1560,1899,1900,1901,1902,1903,1904,1905,1906,1907,1910,1878,1038,1879,1039,1880,1881,1882,1883,1884,1885,1886,1887,1888,1494,1889,1890,1891,1892,1893,1040,1894,1895,1488,1896,1897,1898,1560,1899,1900,1901,1902,1903,1904,1905,1906,1907,1878,1038,1879,1039,1880,1881,1882,1883,1884,1885,1886,1887,1888,1494,1889,1890,1891,1892,1893,1909,1040,1894,1895,1488,1896,1897,1898,1560,1899,1900,1901,1902,1903,1904,1905,1906,1907,1910,1878,1038,1879,1039,1880,1881,1882,1883,1884,1885,1886,1887,1888,1494,1889,1890,1891,1892,1893,1909,1040,1894,1895,1488,1896,1897,1898,1560,1899,1900,1901,1902,1903,1904,1905,1906,1907,1910,1878,1038,1879,1039,1880,1881,1882,1883,1884,1885,1886,1887,1888,1494,1889,1890,1891,1892,1893,1040,1894,1895,1488,1896,1897,1898,1560,1899,1900,1901,1902,1903,1904,1905,1906,1907,1907,0,0,1908,1040,1895,1040,1895,1909,1040,1488,1488,1878,1038,1879,1039,1880,1881,1882,1883,1884,1885,1886,1887,1888,1494,1889,1890,1891,1892,1893,1040,1894,1895,1488,1896,1897,1898,1560,1899,1900,1901,1902,1903,1904,1905,1906,1907,1488,1488,1878,1038,1879,1039,1880,1881,1882,1883,1884,1885,1886,1887,1888,1494,1889,1890,1891,1892,1893,1896,1897,1898,1560,1899,1900,1901,1902,1903,1904,1905,1906,1907,1488,1908,1878,1040,1894,1488,1896,1897,1898,1560,1899,1900,1902,1903,1904,1905,1907,1911,1908,1878,1038,1879,1039,1880,1881,1882,1883,1884,1885,1886,1887,1888,1494,1889,1890,1891,1892,1893,1909,1040,1894,1895,1488,1896,1897,1898,1560,1899,1900,1901,1902,1903,1904,1905,1906,1907,1910,1911,1908,1878,1038,1879,1039,1880,1881,1882,1883,1884,1885,1886,1887,1888,1494,1889,1890,1891,1892,1893,1909,1040,1894,1895,1488,1896,1897,1898,1560,1899,1900,1901,1902,1903,1904,1905,1906,1907,1910,1878,1038,1879,1039,1880,1881,1882,1883,1884,1885,1886,1887,1888,1494,1889,1890,1891,1892,1893,1894,1895,1488,1896,1897,1898,1560,1899,1900,1901,1902,1903,1904,1905,1906,1907,1909,1911,1908,1878,1038,1879,1039,1880,1881,1882,1883,1884,1885,1886,1887,1888,1494,1889,1890,1891,1892,1893,1909,1040,1894,1895,1488,1896,1897,1898,1560,1899,1900,1901,1902,1903,1904,1905,1906,1907,1910,1911,1908,1878,1038,1879,1039,1880,1881,1882,1883,1884,1885,1886,1887,1888,1494,1889,1890,1891,1892,1893,1909,1040,1894,1895,1488,1896,1897,1898,1560,1899,1900,1901,1902,1903,1904,1905,1906,1907,1910,1878,1879,1039,1880,1881,1882,1884,1885,1886,1887,1888,1890,1891,1892,1893,1040,1895,1899,1901,1902,1903,1904,1905,1906,1878,1895,1902,1903,1488,1895,1891,1878,1038,1879,1039,1880,1881,1882,1883,1884,1885,1886,1887,1888,1494,1889,1890,1891,1892,1893,1040,1895,1896,1898,1560,1899,1900,1901,1902,1903,1904,1905,1906,1907,1878,1878,1878,1878,1879,1879,1879,1879,1039,1039,1039,1039,1880,1880,1880,1880,1881,1881,1881,1881,1882,1882,1882,1882,1884,1884,1884,1884,1885,1885,1885,1885,1886,1886,1886,1886,1887,1887,1887,1887,1888,1888,1888,1888,1890,1890,1890,1890,1891,1891,1891,1891,1892,1892,1892,1892,1893,1893,1893,1893,1040,1040,1040,1040,1895,1895,1895,1895,1899,1899,1899,1899,1901,1901,1901,1901,1902,1902,1902,1902,1903,1903,1903,1903,1904,1904,1904,1904,1905,1905,1905,1905,1906,1906,1906,1906,1878,1038,1879,1039,1880,1881,1882,1883,1884,1885,1886,1887,1888,1494,1889,1890,1891,1892,1893,1894,1895,1488,1896,1897,1898,1560,1899,1900,1901,1902,1903,1904,1905,1906,1907,1908,0,0,1878,1038,1879,1039,1880,1881,1882,1883,1884,1885,1886,1887,1888,1494,1889,1890,1891,1892,1893,1040,1894,1895,1488,1896,1897,1898,1560,1899,1900,1901,1902,1903,1904,1905,1906,1907,1878,1038,1879,1039,1880,1881,1882,1883,1884,1885,1886,1887,1888,1494,1889,1890,1891,1892,1893,1040,1894,1488,1896,1897,1898,1560,1899,1900,1901,1902,1903,1904,1905,1906,1907,1878,1038,1879,1039,1880,1881,1882,1883,1884,1885,1886,1887,1888,1494,1889,1890,1891,1892,1893,1040,1894,1488,1896,1897,1898,1560,1899,1900,1901,1902,1903,1904,1905,1906,1907,1878,1038,1879,1039,1880,1881,1882,1883,1884,1885,1886,1887,1888,1494,1889,1890,1891,1892,1893,1040,1894,1895,1488,1896,1897,1898,1560,1899,1900,1901,1902,1903,1904,1905,1906,1907,1878,1038,1879,1039,1880,1881,1882,1883,1884,1885,1886,1887,1888,1494,1889,1890,1891,1892,1893,1040,1894,1895,1488,1896,1897,1898,1560,1899,1900,1901,1902,1903,1904,1905,1906,1907,1488,1878,1038,1879,1039,1880,1881,1882,1883,1884,1885,1886,1887,1888,1494,1889,1890,1891,1892,1893,1909,1040,1894,1895,1488,1896,1897,1898,1560,1899,1900,1901,1902,1903,1904,1905,1906,1907,1888,1488,1911,1908,1878,1038,1879,1039,1880,1881,1882,1883,1884,1885,1886,1887,1888,1494,1889,1890,1891,1892,1893,1909,1040,1894,1895,1488,1896,1897,1898,1560,1560,1560,1560,1560,1899,1900,1901,1902,1903,1904,1905,1906,1907,1910,1909,1040,1488,1878,1038,1879,1039,1880,1881,1882,1883,1884,1885,1886,1887,1888,1494,1889,1890,1891,1892,1893,1040,1894,1895,1488,1896,1897,1898,1560,1899,1900,1901,1902,1903,1904,1905,1906,1907,1911,1908,1878,1038,1879,1039,1880,1881,1882,1883,1884,1885,1886,1887,1888,1494,1889,1890,1891,1892,1893,1909,1040,1894,1895,1488,1896,1897,1898,1560,1899,1900,1901,1902,1903,1904,1905,1906,1907,1910,1908,1878,1040,1894,1488,1896,1897,1898,1560,1899,1900,1902,1903,1904,1905,1907,1909,1040,1488,1038,1879,1039,1880,1881,1882,1883,1884,1885,1886,1888,1494,1889,1891,1892,1040,1895,1488,1896,1897,1560,1900,1907,1038,1879,1039,1880,1881,1882,1883,1884,1885,1886,1888,1494,1889,1891,1892,1040,1895,1488,1896,1897,1560,1900,1907,1909,1878,1038,1879,1039,1880,1881,1882,1883,1884,1885,1886,1887,1888,1494,1889,1890,1891,1892,1893,1040,1894,1895,1488,1896,1897,1898,1560,1899,1900,1901,1902,1903,1904,1905,1906,1907,1878,1038,1879,1039,1880,1881,1882,1883,1884,1885,1886,1887,1888,1494,1889,1890,1891,1892,1893,1040,1894,1895,1488,1896,1897,1898,1560,1899,1900,1901,1902,1903,1904,1905,1906,1907,1897,1878,1895,1902,1903,1488,1560,1038,1897,1897,1488,1488,1878,1887,1890,1893,1894,1898,1899,1901,1902,1903,1904,1905,1906,1911,1908,1878,1038,1879,1039,1880,1881,1882,1883,1884,1885,1886,1887,1888,1494,1889,1890,1891,1892,1893,1909,1040,1894,1895,1488,1896,1897,1898,1560,1899,1900,1901,1902,1903,1904,1905,1906,1907,1910,1488,1911,1908,1878,1038,1879,1039,1880,1881,1882,1883,1884,1885,1886,1887,1888,1494,1889,1890,1891,1892,1893,1909,1040,1894,1895,1488,1896,1897,1898,1560,1899,1900,1901,1902,1903,1904,1905,1906,1907,1910,1911,1908,1878,1878,1038,1038,1879,1879,1039,1039,1880,1880,1881,1881,1882,1882,1883,1883,1884,1884,1885,1885,1886,1886,1887,1887,1888,1888,1494,1494,1889,1889,1890,1890,1891,1891,1892,1892,1893,1893,1909,1040,1040,1894,1894,1895,1895,1488,1488,1896,1896,1897,1897,1898,1898,1560,1560,1899,1899,1900,1900,1901,1901,1902,1902,1903,1903,1904,1904,1905,1905,1906,1906,1907,1907,1910,1911,1908,1878,1038,1879,1039,1880,1881,1882,1883,1884,1885,1886,1887,1888,1494,1889,1890,1891,1892,1893,1909,1040,1894,1895,1488,1896,1897,1898,1560,1899,1900,1901,1902,1903,1904,1905,1906,1907,1910,1911,1908,1878,1038,1879,1039,1880,1881,1882,1883,1884,1885,1886,1887,1888,1494,1889,1890,1891,1892,1893,1909,1040,1894,1895,1488,1896,1897,1898,1560,1899,1900,1901,1902,1903,1904,1905,1906,1907,1910,1878,1038,1879,1039,1880,1881,1882,1883,1884,1885,1886,1887,1888,1494,1889,1890,1891,1892,1893,1040,1894,1895,1488,1896,1897,1898,1560,1899,1900,1901,1902,1903,1904,1905,1906,1907,1911,1908,1878,1038,1879,1039,1880,1881,1882,1883,1884,1885,1886,1887,1888,1494,1889,1890,1891,1892,1893,1909,1040,1894,1895,1488,1896,1897,1898,1560,1899,1900,1901,1902,1903,1904,1905,1906,1907,1910,1878,1038,1879,1039,1880,1881,1882,1883,1884,1885,1886,1887,1888,1494,1889,1890,1891,1892,1893,1040,1894,1895,1488,1896,1897,1898,1560,1899,1900,1901,1902,1903,1904,1905,1906,1907,1894,1896,1896,1907,1896,1896,1907,1488,1878,1038,1879,1039,1880,1881,1882,1883,1884,1885,1886,1887,1888,1494,1889,1890,1891,1892,1893,1040,1894,1895,1488,1896,1897,1898,1560,1899,1900,1901,1902,1903,1904,1905,1906,1907,1878,1038,1879,1039,1880,1881,1882,1883,1884,1885,1886,1887,1888,1494,1889,1890,1891,1892,1893,1040,1894,1488,1896,1897,1898,1560,1899,1900,1901,1902,1903,1904,1905,1906,1907,1898,1560,1894,1908,1878,1040,1894,1488,1896,1897,1898,1560,1899,1900,1902,1903,1904,1905,1907,1040,1895,1488,1488,1560,1488,1560,1883,1891,1488,0,1488,1488,1908,1911,1911,1878,1038,1879,1039,1880,1881,1882,1883,1884,1885,1886,1887,1888,1494,1889,1890,1891,1892,1893,1040,1894,1895,1488,1896,1897,1898,1560,1899,1900,1901,1902,1903,1904,1905,1906,1907,1878,1887,1890,1893,1894,1898,1899,1901,1902,1903,1904,1905,1906,1878,1038,1879,1039,1880,1881,1882,1883,1884,1885,1886,1887,1888,1494,1889,1890,1891,1892,1893,1040,1894,1895,1488,1896,1897,1898,1560,1899,1900,1901,1902,1903,1904,1905,1906,1907,1878,1038,1879,1039,1880,1881,1882,1883,1884,1885,1886,1887,1888,1494,1889,1890,1891,1892,1893,1040,1894,1895,1488,1896,1897,1898,1560,1899,1900,1901,1902,1903,1904,1905,1906,1907,1878,1038,1879,1039,1880,1881,1882,1883,1884,1885,1886,1887,1888,1494,1889,1890,1891,1892,1893,1040,1894,1895,1488,1896,1897,1898,1560,1899,1900,1901,1902,1903,1904,1905,1906,1907,1878,1038,1879,1039,1880,1881,1882,1883,1884,1885,1886,1887,1888,1494,1889,1890,1891,1892,1893,1040,1894,1895,1488,1896,1897,1898,1560,1899,1900,1901,1902,1903,1904,1905,1906,1907,1878,1038,1879,1039,1880,1881,1882,1883,1884,1885,1886,1887,1888,1494,1889,1890,1891,1892,1893,1040,1894,1895,1488,1896,1897,1898,1560,1899,1900,1901,1902,1903,1904,1905,1906,1907,1878,1038,1879,1039,1880,1881,1882,1883,1884,1885,1886,1887,1888,1494,1889,1890,1891,1892,1893,1040,1894,1895,1488,1896,1897,1898,1560,1899,1900,1901,1902,1903,1904,1905,1906,1907,1878,1038,1879,1039,1880,1881,1882,1883,1884,1885,1886,1887,1888,1494,1889,1890,1891,1892,1893,1040,1894,1895,1488,1896,1897,1898,1560,1899,1900,1901,1902,1903,1904,1905,1906,1907,1878,1038,1879,1039,1880,1881,1882,1883,1884,1885,1886,1887,1888,1494,1889,1890,1891,1892,1893,1040,1894,1895,1488,1896,1897,1898,1560,1899,1900,1901,1902,1903,1904,1905,1906,1907,1488,1488,1488,1488,1560,1494,1889,1560,1878,1038,1879,1039,1880,1881,1882,1883,1884,1885,1886,1887,1888,1494,1889,1890,1891,1892,1893,1894,1895,1488,1896,1897,1898,1560,1899,1900,1901,1902,1903,1904,1905,1906,1907,1878,1038,1879,1039,1880,1881,1882,1883,1884,1885,1886,1887,1888,1494,1889,1890,1891,1892,1893,1040,1894,1895,1488,1896,1897,1898,1898,1560,1560,1899,1900,1901,1902,1903,1904,1905,1906,1907,1488,1488,1488,1488,1560,1560,1560,1878,1038,1879,1039,1880,1881,1882,1883,1884,1885,1886,1887,1888,1494,1889,1890,1891,1892,1893,1040,1894,1895,1488,1896,1897,1898,1560,1899,1900,1901,1902,1903,1904,1905,1906,1907,1900,1900,1892,1488,1878,1038,1879,1039,1880,1881,1882,1883,1884,1885,1886,1887,1888,1494,1889,1890,1891,1892,1893,1909,1040,1894,1895,1488,1896,1897,1898,1560,1899,1900,1901,1902,1903,1904,1905,1906,1907,1910,1911,1908,1878,1038,1879,1039,1880,1881,1882,1883,1884,1885,1886,1887,1888,1494,1889,1890,1891,1892,1893,1909,1040,1894,1895,1488,1896,1897,1898,1560,1899,1900,1901,1902,1903,1904,1905,1906,1907,1910,1488,1911,1908,1878,1038,1879,1039,1880,1881,1882,1883,1884,1885,1886,1887,1888,1494,1889,1890,1891,1892,1893,1909,1040,1894,1895,1488,1896,1897,1898,1560,1899,1900,1901,1902,1903,1904,1905,1906,1907,1910,1911,1908,1878,1038,1879,1039,1880,1881,1882,1883,1884,1885,1886,1887,1888,1494,1889,1890,1891,1892,1893,1909,1040,1894,1895,1488,1896,1897,1898,1560,1899,1900,1901,1902,1903,1904,1905,1906,1907,1910,1911,1908,1878,1038,1879,1039,1880,1881,1882,1883,1884,1885,1886,1887,1888,1494,1889,1890,1891,1892,1893,1909,1040,1894,1895,1488,1896,1897,1898,1560,1899,1900,1901,1902,1903,1904,1905,1906,1907,1910,1878,1038,1879,1039,1880,1881,1882,1883,1884,1885,1886,1887,1888,1494,1889,1890,1891,1892,1893,1040,1894,1895,1488,1896,1897,1898,1560,1899,1900,1901,1902,1903,1904,1905,1906,1907,1878,1038,1879,1039,1880,1881,1882,1883,1884,1885,1886,1887,1888,1494,1889,1890,1891,1892,1893,1040,1894,1895,1488,1896,1897,1898,1560,1899,1900,1901,1902,1903,1904,1905,1906,1907,1878,1038,1879,1039,1880,1881,1882,1883,1884,1885,1886,1887,1888,1494,1889,1890,1891,1892,1893,1040,1894,1895,1488,1896,1897,1898,1560,1899,1900,1901,1902,1903,1904,1905,1906,1907,1911,1908,1878,1038,1879,1039,1880,1881,1882,1883,1884,1885,1886,1887,1888,1494,1889,1890,1891,1892,1893,1909,1040,1894,1895,1488,1896,1897,1898,1560,1899,1900,1901,1902,1903,1904,1905,1906,1907,1910,1878,1887,1890,1893,1894,1898,1899,1901,1902,1903,1904,1905,1906,1878,1887,1890,1893,1894,1898,1899,1901,1902,1903,1904,1905,1906,1878,1887,1890,1893,1894,1898,1899,1901,1902,1903,1904,1905,1906,1488,1897,1911,1908,1878,1038,1879,1039,1880,1881,1882,1883,1884,1885,1886,1887,1888,1494,1889,1890,1891,1892,1893,1909,1040,1894,1895,1488,1896,1897,1898,1560,1899,1900,1901,1902,1903,1904,1905,1906,1907,1910,1488,1560,1038,1038,1039,1880,1881,1882,1883,1884,1885,1886,1888,1494,1889,1892,1909,1488,1488,1560,2053,2054,2053,2054,2055,2056,2056,2057,2056,2057,2058,2059,1878,1878,1878,1898,1898,1878,1898,1878,1887,1878,1878,1878,1901,0,0,0,0,1878,1887,1890,1878,1887,1878,0,1878,1878,1878,1878,1890,1890,0,1901,0,1878,1878,1878,1878,1878,1878,1878,1878,1878,1887,1901,1878,0,1878,1878,1878,1878,1878,1878,1878,1878,0,0,0,0,0,1878,1878,1488,1886,1908,1488,1488,1488,1488,1891,1908,1488,1488,1488,1488,1488,1896,1896,1896,1896,1488,1883,1891,1488,1488,1488,1908,1488,1488,1488,1488,1488,1488,1883,1884,1885,1886,1488,1488,2053,2054,2053,2054,2055,2056,2056,2057,2056,2057,2058,2059,1915,1915,1915,0,0,0,0,0,1921,1915,1916,1914,1921,1915,1916,1914,1921,1915,1916,1914,1921,1915,1916,1914,1921,1915,1916,1914,1914,1915,1915,1915,1916,1921,1916,1914,1921,1915,1916,1914,1921,1915,1916,1914,1921,1921,1915,1916,1914,1921,1915,1916,1914,1916,1921,1915,1916,1921,1921,1915,1916,1914,1921,1915,1916,1914,1921,1916,1914,1921,0,0,1916,1916,1921,1915,1916,1914,1921,1915,1916,1914,1921,1915,1916,1914,1921,1915,1914,1921,1915,1916,1914,1921,1915,1916,1914,1921,1916,1914,1916,1921,1914,1915,1921,1915,1916,1914,1921,1915,1916,1914,1921,1915,1916,1914,1921,1915,1916,1914,1921,1921,1915,1916,1914,1921,1921,1915,1916,1914,1916,0,1916,0,2180,2181,0,0,0,0,1926,1918,1919,1927,1926,1918,1919,1927,1926,1918,1919,1927,1926,1918,1919,1927,1926,1918,1919,1927,1926,1927,1927,1927,1918,1919,1927,1926,1918,1918,1919,1919,1927,1927,1926,1918,1918,1919,1919,1927,1927,1927,1926,1918,1919,1927,1926,1918,1919,1927,1926,1918,1919,1927,1926,1918,1919,1927,1918,1919,1927,1926,1918,1919,1927,1926,1918,1919,1927,1926,1918,1919,1927,1926,1918,1919,1927,1926,1918,1919,1927,1926,1918,1919,1927,1918,1919,1927,1927,1926,1918,1919,1927,1926,1918,1919,1927,1926,1918,1919,1927,1926,1918,1919,1927,1926,1918,1919,1927,1926,1918,1919,1927],"f":[0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],0,0,[[]],[[]],[[]],[[]],[4,5],[6,5],0,0,[7],[7],[7],[7],0,[[]],[[]],[7],[7],0,0,[[]],[[]],[[]],[[]],0,0,0,0,[[],7],[[],7],0,[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],0,[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],0,[[],14],[[],14],0,[[]],[[]],0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[16,17]],[18,18],[19,19],[20,20],[21,21],[[]],[[]],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[23,24,25]],[[],18],[[],19],[[],26],[7],[27],[7],[18],[7],[19],[7],[20],[7],[26],[7],[7],[7],[7],[27],[18],[7],[19],[7],[7],[20],[7],[26],[7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[7],[7],[21,[[9,[28,8]]]],[15,29],[30],[[21,21],29],[[],29],[[],29],[[],29],[[],29],[[18,31],[[12,[32]]]],[[19,31],[[12,[32]]]],[[21,31],[[12,[32]]]],[[]],[[]],[[]],[[]],[[]],[33,20],[[]],[[]],[25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[34],[34],[34],[18,29],[19,29],[25],[[21,30]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[],[[35,[[9,[28,8]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[18,29]],[[19,29]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[36,36],[37,[[14,[38]]]],[33,[[14,[38]]]],0,[37,[[14,[39]]]],[33,[[14,[39]]]],[[40,41],40],[40,40],[[36,41],36],[[42,42],42],[[41,41],41],[[33,43]],[[40,41]],[40],[[42,42]],[[41,41]],0,0,[36,44],[37,[[14,[45]]]],[33,[[14,[45]]]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[46,[[47,[44]]]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[37,[[14,[48]]]],[33,[[14,[48]]]],[37,[[14,[49]]]],[33,[[14,[49]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[37,[[14,[36]]]],[33,[[14,[36]]]],[[33,50],37],0,[37,[[52,[51]]]],[33,[[52,[51]]]],[37,[[14,[[52,[53]]]]]],[33,[[14,[[52,[53]]]]]],[37,[[14,[[52,[53]]]]]],[33,[[14,[[52,[53]]]]]],[37,[[14,[54]]]],[33,[[14,[54]]]],[37,[[52,[39]]]],[33,[[52,[39]]]],[37,[[14,[38]]]],[33,[[14,[38]]]],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[37,29],[33,29],[46,46],[40,40],[36,36],[42,42],[41,41],[55,55],[43,43],[56,56],[57,57],[58,58],[54,54],[59,59],[60,60],[45,45],[48,48],[61,61],[62,62],[63,63],[64,64],[65,65],[66,66],[39,39],[67,67],[68,68],[69,69],[50,50],[37,37],[33,33],[70,70],[71,71],[72,72],[73,73],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[55,55],74],[[43,43],74],[37,[[14,[49]]]],[33,[[14,[49]]]],[[],74],[[],74],[[36,40],29],[37,[[52,[39]]]],[33,[[52,[39]]]],[37,[[52,[67]]]],[33,[[52,[67]]]],0,[[],46],[[],40],[[],36],[[],42],[[],41],[[],55],[[],50],[[],33],[37,[[14,[59]]]],[33,[[14,[59]]]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[37,[[52,[39]]]],[33,[[52,[39]]]],[37,[[14,[38]]]],[33,[[14,[38]]]],0,[37,[[52,[39]]]],[33,[[52,[39]]]],[46,44],[[42,44],42],[[41,44],41],[[42,44]],[[41,44]],[73],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[[46,46],29],[[40,40],29],[[36,36],29],[[42,42],29],[[41,41],29],[[55,55],29],[[43,43],29],[[56,56],29],[[57,57],29],[[58,58],29],[[54,54],29],[[59,59],29],[[60,60],29],[[45,45],29],[[48,48],29],[[61,61],29],[[62,62],29],[[63,63],29],[[64,64],29],[[65,65],29],[[66,66],29],[[39,39],29],[[67,67],29],[[68,68],29],[[69,69],29],[[37,37],29],[[33,33],29],[[70,70],29],[[71,71],29],[[72,72],29],[[73,73],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[37,[[14,[39]]]],[33,[[14,[39]]]],[37,[[52,[39]]]],[33,[[52,[39]]]],[[46,31],[[12,[32]]]],[[40,31],[[12,[32]]]],[[36,31],[[12,[32]]]],[[42,31],[[12,[32]]]],[[41,31],[[12,[32]]]],[[55,31],[[12,[32]]]],[[43,31],[[12,[32]]]],[[56,31],[[12,[32]]]],[[57,31],[[12,[32]]]],[[58,31],[[12,[32]]]],[[54,31],[[12,[32]]]],[[59,31],[[12,[32]]]],[[60,31],[[12,[32]]]],[[45,31],[[12,[32]]]],[[48,31],[[12,[32]]]],[[61,31],[[12,[32]]]],[[62,31],[[12,[32]]]],[[63,31],[[12,[32]]]],[[64,31],[[12,[32]]]],[[65,31],[[12,[32]]]],[[66,31],[[12,[32]]]],[[39,31],[[12,[32]]]],[[67,31],[[12,[32]]]],[[68,31],[[12,[32]]]],[[69,31],[[12,[32]]]],[[37,31],[[12,[32]]]],[[33,31],[[12,[32]]]],[[70,31],[[12,[32]]]],[[71,31],[[12,[32]]]],[[72,31],[[12,[32]]]],[[73,31],[[12,[32]]]],0,0,[37,[[14,[38]]]],[33,[[14,[38]]]],[37,[[14,[44]]]],[33,[[14,[44]]]],[37,[[14,[44]]]],[33,[[14,[44]]]],[37,[[14,[49]]]],[33,[[14,[49]]]],[[]],[[],40],[[]],[[],36],[[],36],[[]],[[]],[[],42],[[],41],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[75,39],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[76,71],[[]],[[]],[[[77,[40]],[77,[42]]],36],[[[77,[40]],[77,[40]]],36],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[34],[34],[34],[34],[34],[34],[34],[34],[37,[[14,[62]]]],[33,[[14,[62]]]],[[55,30]],[[43,30]],[[56,30]],[[57,30]],[[54,30]],[[59,30]],[[60,30]],[[45,30]],[[48,30]],[[61,30]],[[62,30]],[[63,30]],[[64,30]],[[65,30]],[[66,30]],[[39,30]],[36,44],0,[37,[[14,[7]]]],[33,[[14,[7]]]],[37,[[14,[38]]]],[33,[[14,[38]]]],0,[37,[[14,[39]]]],[33,[[14,[39]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[37,[[14,[38]]]],[33,[[14,[38]]]],[[36,36],36],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[37,[[14,[58]]]],[33,[[14,[58]]]],[46,46],[37,29],[33,29],[37,29],[33,29],[37,29],[33,29],[36,29],[37,[[14,[29]]]],[33,[[14,[29]]]],[46,29],[37,29],[33,29],[37,29],[33,29],[37,29],[33,29],[37,29],[33,29],[37,29],[33,29],[37,29],[33,29],[37,29],[33,29],[37,29],[33,29],[37,29],[33,29],[46,29],[37,29],[33,29],[37,29],[33,29],[37,29],[33,29],[37,29],[33,29],[37,[[14,[29]]]],[33,[[14,[29]]]],[37,29],[33,29],[37,29],[33,29],[37,29],[33,29],[37,29],[33,29],[37,[[14,[38]]]],[33,[[14,[38]]]],[37,[[52,[39]]]],[33,[[52,[39]]]],[37,[[14,[38]]]],[33,[[14,[38]]]],[37,[[14,[63]]]],[33,[[14,[63]]]],[37,[[14,[61]]]],[33,[[14,[61]]]],[[],78],[36,46],[37,[[14,[44]]]],[33,[[14,[44]]]],[36,44],[36,44],[37,[[14,[39]]]],[33,[[14,[39]]]],[37,[[14,[44]]]],[33,[[14,[44]]]],[36,44],[36,44],[[46,40],40],[[46,46],46],[[42,44],42],[[41,44],41],[[46,46]],[[42,44]],[[41,44]],[37,[[14,[38]]]],[33,[[14,[38]]]],[41,41],[[[47,[44]]],46],[[44,44],40],[[44,44,44,44],36],[[44,44],42],[[44,44],41],[[],50],[55,33],[39,70],[37,[[14,[39]]]],[33,[[14,[39]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[37,[[14,[44]]]],[33,[[14,[44]]]],[37,[[14,[44]]]],[33,[[14,[44]]]],[37,[[14,[44]]]],[33,[[14,[44]]]],[37,[[14,[56]]]],[33,[[14,[56]]]],[36,40],[37,[[14,[66]]]],[33,[[14,[66]]]],[[55,55],[[14,[74]]]],[[43,43],[[14,[74]]]],[37,[[14,[38]]]],[33,[[14,[38]]]],[37,[[14,[39]]]],[33,[[14,[39]]]],[37,[[14,[7]]]],[33,[[14,[7]]]],[37,[[14,[39]]]],[33,[[14,[39]]]],[[33,39]],[[33,39]],[[33,67]],[[33,39]],[[33,39]],[[33,39]],[[33,39]],[[33,39]],[37,[[52,[39]]]],[33,[[52,[39]]]],[[33,43]],[37,55],[33,55],[37,[[14,[38]]]],[33,[[14,[38]]]],0,[44,46],[44,46],[[44,44],46],[37,[[14,[44]]]],[33,[[14,[44]]]],[37,[[14,[44]]]],[33,[[14,[44]]]],[37,[[14,[44]]]],[33,[[14,[44]]]],[37,[[14,[44]]]],[33,[[14,[44]]]],[37,[[14,[44]]]],[33,[[14,[44]]]],[37,[[14,[44]]]],[33,[[14,[44]]]],[[33,[77,[[9,[38,8]]]]]],[[33,39]],[[33,45]],[[33,48]],[[33,49]],[33],[[33,36]],[33],[[33,[77,[[9,[[52,[51]],8]]]]]],[[33,[77,[[9,[[52,[53]],8]]]]]],[[33,[77,[[9,[[52,[53]],8]]]]]],[[33,54]],[[33,[77,[[79,[39,8]]]]]],[[33,[77,[[9,[38,8]]]]]],[33],[[33,49]],[[33,[77,[[79,[39,8]]]]]],[[33,[77,[[79,[67,8]]]]]],[[33,59]],[[33,[77,[[79,[39,8]]]]]],[[33,[77,[[9,[38,8]]]]]],[[33,[77,[[79,[39,8]]]]]],[33],[[33,39]],[[33,29]],[[33,[77,[[79,[39,8]]]]]],[[33,[77,[[9,[38,8]]]]]],[[33,44]],[[33,44]],[[33,49]],[[33,62]],[33],[[33,7]],[33],[[33,[77,[[9,[38,8]]]]]],[[33,39]],[[33,[77,[[9,[38,8]]]]]],[[33,58]],[33],[33],[33],[33],[33],[33],[33],[[33,[77,[[9,[38,8]]]]]],[[33,[77,[[79,[39,8]]]]]],[[33,[77,[[9,[38,8]]]]]],[33],[[33,63]],[[33,61]],[33],[[33,44]],[[33,39]],[[33,44]],[33],[33],[[33,[77,[[9,[38,8]]]]]],[[33,39]],[[33,44]],[[33,44]],[[33,44]],[[33,56]],[[33,66]],[[33,[77,[[9,[38,8]]]]]],[[33,39]],[[33,7]],[[33,39]],[[33,[77,[[79,[39,8]]]]]],[33],[33],[[33,55]],[[33,[77,[[9,[38,8]]]]]],[[33,44]],[[33,44]],[[33,44]],[[33,44]],[[33,44]],[[33,44]],[[33,29]],[[33,7]],[[33,60]],[[33,[77,[[9,[38,8]]]]]],[[33,66]],[[33,7]],[[33,7]],[[33,7]],[[33,7]],[[33,7]],[[33,39]],[[33,7]],[[33,39]],[[33,7]],[[33,39]],[[33,7]],[[33,64]],[[33,57]],[[33,[77,[[9,[69,8]]]]]],[[33,[77,[[9,[38,8]]]]]],[33],[[33,[77,[[9,[46,8]]]]]],[[33,66]],[[33,[77,[[9,[38,8]]]]]],[[33,[77,[[9,[38,8]]]]]],[[33,65]],[33],[[33,[77,[[9,[[52,[51]],8]]]]]],[36,42],[37,[[14,[7]]]],[33,[[14,[7]]]],[37,[[14,[60]]]],[33,[[14,[60]]]],[37,[[14,[38]]]],[33,[[14,[38]]]],[37,[[14,[66]]]],[33,[[14,[66]]]],[40,40],[[40,40],41],[[40,41],40],[[36,41],36],[[42,42],42],[[41,41],41],[40],[[40,41]],[[42,42]],[[41,41]],[[37,43],29],[[33,43],29],[37,[[14,[7]]]],[33,[[14,[7]]]],[37,[[14,[7]]]],[33,[[14,[7]]]],[37,[[14,[7]]]],[33,[[14,[7]]]],[37,[[14,[7]]]],[33,[[14,[7]]]],[37,[[14,[7]]]],[33,[[14,[7]]]],[37,[[14,[39]]]],[33,[[14,[39]]]],[37,[[14,[7]]]],[33,[[14,[7]]]],[37,[[14,[39]]]],[33,[[14,[39]]]],[37,[[14,[7]]]],[33,[[14,[7]]]],[37,[[14,[39]]]],[33,[[14,[39]]]],[37,[[14,[7]]]],[33,[[14,[7]]]],0,[37,[[14,[64]]]],[33,[[14,[64]]]],[37,[[14,[57]]]],[33,[[14,[57]]]],[37,[[14,[69]]]],[33,[[14,[69]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[41,40],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[41,42],[40,41],[42,41],0,0,[37,[[14,[38]]]],[33,[[14,[38]]]],[37,[[14,[46]]]],[33,[[14,[46]]]],[[46,36],36],[[[77,[41]]],46],0,[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[37,[[14,[66]]]],[33,[[14,[66]]]],[[36,36],36],[[36,40],36],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[37,[[14,[38]]]],[33,[[14,[38]]]],[37,[[14,[38]]]],[33,[[14,[38]]]],[37,[[14,[65]]]],[33,[[14,[65]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[36,44],0,[[36,[77,[40]]],36],[[36,[77,[42]]],36],[37,[[52,[51]]]],[33,[[52,[51]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[80,81,82]],[83,[[84,[80]]]],[[[86,[85]],[86,[[87,[80]]]],[89,[88]],[89,[90]],[89,[91]],[89,[92]],89,89]],[[93,94]],[[82,94]],[[81,94]],[[80,94]],[[95,94]],[[83,94]],[[],1],[93,1],[[],1],[82,1],[81,1],[[],1],[[],1],[80,1],[[],1],[[],1],[95,1],[83,1],[[],1],[[],1],[93,1],[[],1],[[],1],[82,1],[81,1],[[],1],[[],1],[80,1],[95,1],[[],1],[[],1],[83,1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],15],[93,94],[82,94],[81,94],[80,94],[95,94],[83,94],[93,94],[82,94],[81,94],[80,94],[95,94],[83,94],[[],38],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[96,17]],[93,93],[82,82],[81,81],[80,80],[95,95],[93,97],[82,98],[81,98],[80,98],[95,97],[83,98],[[]],[[]],[[]],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[93,[[9,[94,8]]]],[82,[[9,[94,8]]]],[81,[[9,[94,8]]]],[80,[[9,[94,8]]]],[95,[[9,[94,8]]]],[83,[[9,[94,8]]]],[[80,90],29],[83,49],[[23,24,25]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[80,[[79,[[79,[82,8]],8]]]],[[],81],[[],80],[[],95],[[],83],[[],96],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[7],[7],[80,53],[15,29],[30],[83,53],[[81,81],29],[[],29],[[],29],[[],29],[[],29],[[93,38],[[14,[94]]]],[[82,38],[[14,[94]]]],[[81,38],[[14,[94]]]],[[80,38],[[14,[94]]]],[[95,38],[[14,[94]]]],[[83,38],[[14,[94]]]],[[93,7],[[14,[94]]]],[[82,7],[[14,[94]]]],[[81,7],[[14,[94]]]],[[80,7],[[14,[94]]]],[[95,7],[[14,[94]]]],[[83,7],[[14,[94]]]],[[93,7],[[14,[94]]]],[[82,7],[[14,[94]]]],[[81,7],[[14,[94]]]],[[80,7],[[14,[94]]]],[[95,7],[[14,[94]]]],[[83,7],[[14,[94]]]],[93,7],[82,7],[81,7],[80,7],[95,7],[83,7],[[93,38],[[14,[94]]]],[[82,38],[[14,[94]]]],[[81,38],[[14,[94]]]],[[80,38],[[14,[94]]]],[[95,38],[[14,[94]]]],[[83,38],[[14,[94]]]],[[93,31],[[12,[32]]]],[[82,31],[[12,[32]]]],[[81,31],[[12,[32]]]],[[80,31],[[12,[32]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[25],[94,[[14,[93]]]],[94,[[14,[82]]]],[94,[[14,[81]]]],[94,[[14,[80]]]],[94,[[14,[95]]]],[94,[[14,[83]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[34],[34],[34],[34],[34],[25],[[80,7],[[14,[[79,[82,8]]]]]],[[80,81],[[14,[[79,[82,8]]]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[93,[[14,[99]]]],[82,[[14,[99]]]],[81,[[14,[99]]]],[80,[[14,[99]]]],[95,[[14,[99]]]],[83,[[14,[99]]]],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[81,30]],[[93,38],[[14,[7]]]],[[95,38],[[14,[7]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[[9,[8]],101,34]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[93,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[82,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[81,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[80,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[95,8]]],[[9,[1,8]]]],[[[9,[83,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[9,[93,8]]],[[9,[94,8]]]],[[[9,[82,8]]],[[9,[94,8]]]],[[[9,[81,8]]],[[9,[94,8]]]],[[[9,[80,8]]],[[9,[94,8]]]],[[[9,[95,8]]],[[9,[94,8]]]],[[[9,[83,8]]],[[9,[94,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[83,29],[83,29],[83,29],[[83,[84,[80]]],29],[93,102],[82,103],[81,103],[80,103],[95,102],[83,103],0,0,[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[93,7],[[14,[38]]]],[[82,7],[[14,[38]]]],[[81,7],[[14,[38]]]],[[80,7],[[14,[38]]]],[[95,7],[[14,[38]]]],[[83,7],[[14,[38]]]],[[]],[[]],[[]],[[]],[[]],0,[83],[[83,[84,[80]]],83],[[83,[84,[80]],104],83],0,[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[93,[[14,[75]]]],[95,[[14,[75]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[93,105],[82,105],[81,105],[80,105],[95,105],[83,105],[[[9,[93,8]]],106],[[[9,[82,8]]],106],[[[9,[81,8]]],106],[[[9,[80,8]]],106],[[[9,[95,8]]],106],[[[9,[83,8]]],106],[[93,94],[[14,[29]]]],[[82,94],[[14,[29]]]],[[81,94],[[14,[29]]]],[[80,94],[[14,[29]]]],[[95,94],[[14,[29]]]],[[83,94],[[14,[29]]]],[93,107],[82,107],[81,107],[80,107],[95,107],[83,107],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[83,83],[83,95],[83],[83],[83,53],[[83,53],83],[[93,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[82,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[81,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[80,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[95,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[83,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[83,95],83],[[83,53],83],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[83,53],[[83,[84,[80]]],83],[[83,[84,[80]],104],83],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[93,7],[95,7],[93,38],[95,38],[93,108],[95,108],[[80,25]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[5,109],5],[[5,109],5],[17,17],[[5,109],5],[17,17],[[17,110],17],[17,17],[[17,38,38,38],17],[[17,38,[52,[38]]],17],[[17,38,38],17],[[17,38],17],[[17,111],17],[17,17],[[17,112,113],17],[17,17],[17,17],0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],15],[114,15],[[],15],[115,15],[[],15],[[],15],[116,15],[117,15],[[],15],[118,15],[[],15],[119,15],[[],15],[120,15],[[],15],[[],15],[121,15],[122,15],[[],15],[[],15],[123,15],[124,15],[[],15],[125,15],[[],15],[126,15],[[],15],[[],127],[127,127],[114,112],[115,112],[116,112],[117,112],[118,112],[119,112],[120,112],[121,112],[122,112],[123,112],[124,112],[125,112],[126,112],[[],38],[127,38],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[17],[[],5],[[128,17]],[5,5],[[129,17]],0,[17],[17],[127,127],[130,130],[131,131],[114,114],[115,115],[116,116],[117,117],[118,118],[119,119],[120,120],[121,121],[122,122],[123,123],[124,124],[125,125],[126,126],[132,132],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[17,133],17],[[17,112,134],17],[[17,112,134],17],[[],17],[[],131],[[],135],[[],132],[[],129],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[5,5],[[]],[[]],[[]],[[[9,[109,8]]],[[12,[[9,[109,8]],[9,[109,8]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[109,[[14,[109]]]],[[[11,[109,8]]],[[12,[[11,[109,8]],[11,[109,8]]]]]],[109,[[14,[109]]]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[114,[[9,[112,8]]]],[115,[[9,[112,8]]]],[116,[[9,[112,8]]]],[117,[[9,[112,8]]]],[118,[[9,[112,8]]]],[119,[[9,[112,8]]]],[120,[[9,[112,8]]]],[121,[[9,[112,8]]]],[122,[[9,[112,8]]]],[123,[[9,[112,8]]]],[124,[[9,[112,8]]]],[125,[[9,[112,8]]]],[126,[[9,[112,8]]]],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[30],[[114,30]],[30],[[115,30]],[30],[30],[[116,30]],[30],[[117,30]],[30],[[118,30]],[[119,30]],[30],[30],[[120,30]],[[121,30]],[30],[30],[[122,30]],[[123,30]],[30],[[124,30]],[30],[30],[[125,30]],[30],[[126,30]],[[17,112,76],17],[[],17],[5,5],[[127,127],29],[[130,130],29],[[114,114],29],[[115,115],29],[[116,116],29],[[117,117],29],[[118,118],29],[[119,119],29],[[120,120],29],[[121,121],29],[[122,122],29],[[123,123],29],[[124,124],29],[[125,125],29],[[126,126],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[136,34]],[17],[17],[[5,17]],[[17,31],[[12,[32]]]],[[136,31],[[12,[32]]]],[[127,31],[[12,[32]]]],[[130,31],[[12,[32]]]],[[131,31],[[12,[32]]]],[[114,31],[[12,[32]]]],[[115,31],[[12,[32]]]],[[116,31],[[12,[32]]]],[[117,31],[[12,[32]]]],[[118,31],[[12,[32]]]],[[119,31],[[12,[32]]]],[[120,31],[[12,[32]]]],[[121,31],[[12,[32]]]],[[122,31],[[12,[32]]]],[[123,31],[[12,[32]]]],[[124,31],[[12,[32]]]],[[125,31],[[12,[32]]]],[[126,31],[[12,[32]]]],[[135,31],[[12,[32]]]],[[132,31],[[12,[32]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[34],[34],[34],[34],[34],[17,[[79,[109,8]]]],[[17,112],[[14,[111]]]],[[17,112],[[14,[111]]]],[[17,137],[[12,[17,137]]]],[[17,137],[[12,[17,127]]]],[[127,30]],[[114,30]],[[115,30]],[[116,30]],[[117,30]],[[118,30]],[[119,30]],[[120,30]],[[121,30]],[[122,30]],[[123,30]],[[124,30]],[[125,30]],[[126,30]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[17,17],[17,17],[17,17],[17,17],[[17,112],17],[[135,112,112]],[17,17],[[17,138],17],[[17,137,136]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[109,29],[17,29],[[],29],0,[[17,[140,[139]]],17],0,[[],38],[[],141],[[],17],[[17,[0,[142,143]]],136],[[]],[[]],[[]],[[]],[[]],[17,130],0,[[17,[52,[38]]],17],[17,29],[[17,144],17],[[17,145],17],[17,17],[[17,[77,[146]],147],17],[[17,148],17],[17,17],[17,17],[[17,137],[[14,[136]]]],[17],[136],[104,129],[[34,[149,[29]]]],0,[[],129],0,[109,5],[[5,109],5],[[17,38],17],[[17,[0,[76,143]]],17],[[],5],[[17,137],17],[[17,137],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[127,13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],1],[[],1],[[[3,[2]]]],[[]],[[]],[7],[7],[150,[[12,[151]]]],[[]],[7],0,0,[[]],[[]],[[],7],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],0,[[]],[[],12],[[],12],[[],13],[[],14],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[17],[[],5],[17],[17],[[],29],0,[[],38],[[],141],[17,29],0,[109,5],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[87,[152]],152],[[84,[152]]]],[[153,34,94],154],[[155,152],[[84,[152]]]],[[156,141,152],[[84,[152]]]],[[156,[77,[[157,[38]]]],[158,[152]]],[[84,[152]]]],[[159,94]],[[[84,[[0,[152,160]]]],94]],[[[161,[[0,[152,160]]]],94]],[[162,94]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[159,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[84,[[0,[152,160]]]]],1],[[],1],[[],1],[[],1],[[],1],[[[161,[[0,[152,160]]]]],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[162,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[159,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[84,[[0,[152,160]]]]],1],[[],1],[[[161,[[0,[152,160]]]]],1],[[],1],[[],1],[[],1],[[],1],[[],1],[162,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[163,15],[[],15],[164,15],[[],15],[163,112],[164,112],[159,94],[[[84,[[0,[152,160]]]]],94],[[[161,[[0,[152,160]]]]],94],[162,94],[159,94],[[[84,[[0,[152,160]]]]],94],[[[161,[[0,[152,160]]]]],94],[162,94],[[[165,[[87,[152]]]],[167,[[166,[152]]]]]],[156,162],[[],13],[168,13],[169,13],[[],38],[[],38],[168,38],[[],38],[153,13],[156,156],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[0,[170,143]]],[[172,[[9,[171,8]]]]]],[[[0,[170,143]]],[[172,[[9,[173,8]]]]]],[[174,17]],[170,[[175,[170]]]],[[170,171],[[176,[170,171]]]],[159,159],[[[166,[152]]],[[166,[152]]]],[177,177],[[[84,[152]]],[[84,[152]]]],[154,154],[[[161,[152]]],[[161,[152]]]],[101,101],[162,162],[153,153],[169,169],[155,155],[178,178],[179,179],[180,180],[181,181],[182,182],[163,163],[164,164],[159,98],[[[84,[[0,[152,160]]]]],97],[[[161,[[0,[152,160]]]]],97],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[162,162],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[159,[[9,[94,8]]]],[[[84,[[0,[152,160]]]]],[[9,[94,8]]]],[[[161,[[0,[152,160]]]]],[[9,[94,8]]]],[162,[[9,[94,8]]]],[[[84,[152]]],[[84,[152]]]],[154,154],[183,[[184,[183]]]],[[159,159],74],[[[84,[152]],[84,[152]]],74],[[[161,[152]],[161,[152]]],74],[[179,179],74],[[180,180],74],[[181,181],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[[87,[152]],[77,[[161,[152]]]]],29],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[162,31],[[12,[32]]]],[[],174],[[],[[87,[152]]]],[[],[[84,[152]]]],[[],[[161,[152]]]],[[],162],[[],[[9,[185,8]]]],0,[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[150,[[12,[159]]]],[150,[[12,[162]]]],[[[52,[51]]],[[12,[[9,[185,8]],186]]]],[[]],[[]],[[]],[[[9,[187,8]]],[[12,[[9,[187,8]],[9,[187,8]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[169,1],[[14,[154]]]],[187,[[14,[187]]]],[[[11,[187,8]]],[[12,[[11,[187,8]],[11,[187,8]]]]]],[187,[[14,[187]]]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[188],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[182,[[9,[28,8]]]],[163,[[9,[112,8]]]],[164,[[9,[112,8]]]],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[30],[30],[30],[30],[30],[30],[30],[30],[[163,30]],[[164,30]],[30],0,0,[[159,159],29],[[[166,[152]],[166,[152]]],29],[[[84,[152]],[84,[152]]],29],[[154,154],29],[[[161,[152]],[161,[152]]],29],[[101,101],29],[[162,162],29],[[189,189],29],[[178,178],29],[[179,179],29],[[180,180],29],[[181,181],29],[[182,182],29],[[163,163],29],[[164,164],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],0,[[],[[52,[38]]]],[[],[[52,[38]]]],[[],[[14,[[161,[152]]]]]],[[],14],[[159,38],[[14,[94]]]],[[[84,[[0,[152,160]]]],38],[[14,[94]]]],[[[161,[[0,[152,160]]]],38],[[14,[94]]]],[[159,7],[[14,[94]]]],[[[84,[[0,[152,160]]]],7],[[14,[94]]]],[[[161,[[0,[152,160]]]],7],[[14,[94]]]],[[159,7],[[14,[94]]]],[[[84,[[0,[152,160]]]],7],[[14,[94]]]],[[[161,[[0,[152,160]]]],7],[[14,[94]]]],[159,7],[[[84,[[0,[152,160]]]]],7],[[[161,[[0,[152,160]]]]],7],[[159,38],[[14,[94]]]],[[[84,[[0,[152,160]]]],38],[[14,[94]]]],[[[161,[[0,[152,160]]]],38],[[14,[94]]]],0,[[156,152,[14,[[9,[185,8]]]]],[[158,[152]]]],[183,[[193,[183]]]],[[159,31],[[12,[32]]]],[[194,31],[[12,[32]]]],[[194,31],[[12,[32]]]],[[[166,[152]],31],[[12,[32]]]],[[188,31],[[12,[32]]]],[[[84,[152]],31],[[12,[32]]]],[[154,31],[[12,[32]]]],[[[161,[152]],31],[[12,[32]]]],[[[161,[152]],31],[[12,[32]]]],[[101,31],[[12,[32]]]],[[101,31],[[12,[32]]]],[[195,31],[[12,[32]]]],[[195,31],[[12,[32]]]],[[186,31],[[12,[32]]]],[[186,31],[[12,[32]]]],[[196,31],[[12,[32]]]],[[196,31],[[12,[32]]]],[[162,31],[[12,[32]]]],[[162,31],[[12,[32]]]],[[189,31],[[12,[32]]]],[[189,31],[[12,[32]]]],[[155,31],[[12,[32]]]],[[178,31],[[12,[32]]]],[[179,31],[[12,[32]]]],[[180,31],[[12,[32]]]],[[181,31],[[12,[32]]]],[[197,31],[[12,[32]]]],[[197,31],[[12,[32]]]],[[198,31],[[12,[32]]]],[[198,31],[[12,[32]]]],[[199,31],[[12,[32]]]],[[199,31],[[12,[32]]]],[[182,31],[[12,[32]]]],[[163,31],[[12,[32]]]],[[164,31],[[12,[32]]]],[[]],[152,[[158,[152]]]],[[]],[200],[[[158,[152]]],168],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[84,[152]]],[[161,[152]]]],[159,[[161,[152]]]],[154,[[161,[152]]]],[[[84,[152]]],[[161,[152]]]],[101,[[161,[152]]]],[154,[[161,[152]]]],[201,[[161,[152]]]],[101,[[161,[152]]]],[[]],[[[84,[152]]],101],[[[84,[152]]],101],[[[161,[152]]],101],[[]],[202,186],[[]],[203,196],[186,196],[[]],[204,196],[205,196],[206,196],[207,162],[[]],[141,162],[38,162],[208,162],[162,162],[141,162],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[206,197],[204,197],[199,197],[[]],[205,197],[198,197],[[]],[[]],[[]],[[]],[[]],[25],[25],[25],[25],[209],[209],[210],[211],[208,162],[94,[[14,[159]]]],[94,[[14,[[84,[[0,[152,160]]]]]]]],[94,[[14,[[161,[[0,[152,160]]]]]]]],[94,[[14,[162]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[209],[[],153],[[],169],[34],[34],[34],[34],[34],[168,[[14,[152]]]],[[[87,[152]],[77,[[161,[152]]]]],[[14,[152]]]],[[153,34,154],[[14,[94]]]],[[155,38],212],[[155,38],212],[25],[25],[25],[25],[38,[[14,[94]]]],[38,[[14,[94]]]],[162,[[14,[141]]]],[[155,[77,[162]]],[[14,[[84,[152]]]]]],[[[87,[152]]],177],[[155,[77,[162]]],[[14,[154]]]],[[155,[161,[152]]],[[14,[[84,[152]]]]]],[[155,101],[[14,[154]]]],[[156,[77,[[157,[38]]]]],[[84,[152]]]],[[168,[77,[[157,[38]]]]],[[14,[168]]]],[[155,[77,[101]]],[[14,[179]]]],[[155,[77,[101]]],14],[[[87,[152]],[77,[[161,[152]]]]],[[14,[152]]]],[[153,34,154],[[14,[94]]]],[[[87,[152]],[77,[[161,[152]]]],76],152],[[155,[77,[101]]],[[14,[162]]]],[[155,[77,[162]]],212],[[155,[77,[101]]],[[14,[181]]]],[159,[[14,[99]]]],[[[84,[[0,[152,160]]]]],[[14,[99]]]],[[[161,[[0,[152,160]]]]],[[14,[99]]]],[162,[[14,[99]]]],[[155,[77,[146]]],[[12,[213,206]]]],[[],100],[[],100],[[],100],[[],100],[[153,214,154],[[14,[94]]]],[34],[153,13],0,[[156,[77,[[157,[38]]]]],29],[[159,30]],[[[84,[152]],30]],[[154,30]],[[[161,[152]],30]],[[101,30]],[[162,30]],[[182,30]],[[163,30]],[[164,30]],[[[84,[152]]],[[161,[152]]]],[154,101],[[[87,[152]]],215],[[153,34],215],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[84,[[0,[152,160]]]],38],[[14,[7]]]],[[[161,[[0,[152,160]]]],38],[[14,[7]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[[9,[8]],101,34]],[[[87,[152]],[77,[[161,[152]]]],152]],[[[9,[8]],101,34]],[[153,34,154,94]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[159,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[[84,[[0,[152,160]]]],8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[[161,[[0,[152,160]]]],8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[162,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[],[[35,[[9,[28,8]]]]]],[[]],[162,162],[[[9,[159,8]]],[[9,[94,8]]]],[[[9,[[84,[[0,[152,160]]]],8]]],[[9,[94,8]]]],[[[9,[[161,[[0,[152,160]]]],8]]],[[9,[94,8]]]],[[[9,[162,8]]],[[9,[94,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[161,[152]]]],0,[187,29],[[[166,[152]],[77,[[161,[152]]]]],29],[[[87,[152]]],29],[[153,34],29],[[[166,[152]],[77,[[161,[152]]]]],29],[[[166,[152]],[77,[[161,[152]]]]],29],[[[166,[152]],[77,[[161,[152]]]]],29],[[[84,[152]]],29],[[[84,[152]]],29],[[[87,[152]]],215],[159,103],[[[84,[[0,[152,160]]]]],102],[[[161,[[0,[152,160]]]]],102],[168,215],[[[87,[152]]],[[216,[152]]]],[162,[[14,[38]]]],[162,[[14,[[157,[38]]]]]],[[156,141,76],[[84,[152]]]],[[[87,[152]]],7],[[153,34],7],[[171,156],[[172,[[9,[212,8]]]]]],[[171,[9,[185,8]],156],[[172,[[9,[212,8]]]]]],[[156,[77,[162]]],[[84,[152]]]],[[155,[77,[162]]],[[84,[152]]]],[[156,[77,[162]]],212],[[155,[77,[162]]],[[84,[217]]]],0,0,[[155,[77,[101]]],179],[[156,[77,[162]],[0,[142,143,218]]],[[84,[152]]]],[[155,[77,[162]],[0,[142,143,218]]],[[84,[152]]]],0,[154,[[14,[[9,[142,8]]]]]],[155,178],0,[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[159,7],[[14,[38]]]],[[[84,[[0,[152,160]]]],7],[[14,[38]]]],[[[161,[[0,[152,160]]]],7],[[14,[38]]]],[[219,178,29],155],[[152,[14,[[9,[185,8]]]]],[[158,[152]]]],[[[216,[152]]],14],[[]],[[]],[[]],[[]],[[]],[162,[[14,[162]]]],[38,162],[[159,159],[[14,[74]]]],[[[84,[152]],[84,[152]]],[[14,[74]]]],[[[161,[152]],[161,[152]]],[[14,[74]]]],[[179,179],[[14,[74]]]],[[180,180],[[14,[74]]]],[[181,181],[[14,[74]]]],[156,208],[[[84,[152]]],[[14,[162]]]],[154,[[14,[162]]]],[162,208],0,[[[52,[38]]]],[[155,[52,[38]]]],0,0,[[183,[52,[51]]],[[220,[183]]]],[[156,[77,[162]]],212],[[183,[52,[51]]],[[221,[183]]]],[[183,[79,[51,8]]],[[222,[183]]]],[[183,141],[[223,[183]]]],[[183,[52,[224]]],[[225,[183]]]],[[155,[77,[101]]],181],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[[84,[[0,[152,160]]]]],[[14,[75]]]],[[[161,[[0,[152,160]]]]],[[14,[75]]]],[162,[[14,[75]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[159,105],[[[84,[[0,[152,160]]]]],105],[[[161,[[0,[152,160]]]]],105],[162,105],[[[9,[159,8]]],106],[[[9,[[84,[[0,[152,160]]]],8]]],106],[[[9,[[161,[[0,[152,160]]]],8]]],106],[[[9,[162,8]]],106],[[159,94],[[14,[29]]]],[[[84,[[0,[152,160]]]],94],[[14,[29]]]],[[[161,[[0,[152,160]]]],94],[[14,[29]]]],[[162,94],[[14,[29]]]],[159,107],[[[84,[[0,[152,160]]]]],107],[[[161,[[0,[152,160]]]]],107],[162,107],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[155,[87,[152]]]],[144],[145],[[]],[[[77,[146]],147]],[[155,144]],[[155,[77,[162]]]],[[[87,[152]],[77,[[161,[152]]]]],[[14,[152]]]],[[153,34,154],[[14,[[9,[94,8]]]]]],[162],[[[87,[152]],[77,[[161,[152]]]]],[[14,[152]]]],[177,154],0,[[159,226],12],[[162,226],12],[[159,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[[84,[[0,[152,160]]]],[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[[161,[[0,[152,160]]]],[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[162,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[186,[[14,[227]]]],[196,[[14,[227]]]],[162,146],[197,[[14,[227]]]],[[170,75],[[228,[170]]]],[168,[[14,[152]]]],[162,[[14,[[157,[38]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],141],[[],141],[[],141],[[],141],[[],141],[[],141],[[],141],[[],141],[[],141],[[],141],[[],141],[[[165,[[87,[152]]]],[86,[155]]]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[38,[[12,[162,189]]]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[154,13],[[],13],[101,13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],99],[[],99],[[],99],[[],99],[[],38],[162,38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[154,[[84,[152]]]],[101,[[161,[152]]]],[[169,154],[[9,[94,8]]]],[154,[[84,[152]]]],[101,[[161,[152]]]],[154,[[84,[152]]]],[101,[[161,[152]]]],[[[84,[152]]],154],[[[161,[152]]],101],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[[84,[[0,[152,160]]]]],7],[[[161,[[0,[152,160]]]]],7],[[[84,[[0,[152,160]]]]],38],[[[161,[[0,[152,160]]]]],38],[[[84,[[0,[152,160]]]]],108],[[[161,[[0,[152,160]]]]],108],[25],[[217,25]],[[[84,[152]],25]],[[154,25]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[229,[[84,[152]]]],[[162,[77,[[157,[38]]]]],162],[[162,[77,[146]]],162],[162,162],[[183,[52,[51]]],[[230,[183]]]],[[183,[52,[51]]],[[231,[183]]]],[[183,[52,[232]]],[[233,[183]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],15],[146,[[14,[38]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[0,[170,143]]],[[172,[[9,[171,8]]]]]],[[[0,[170,143]]],[[172,[[9,[173,8]]]]]],[[],147],[[147,146,29,29],[[14,[213]]]],[[234,29,29],219],[170,[[175,[170]]]],[[170,171],[[176,[170,171]]]],[146,146],[235,235],[[]],[[]],[146,146],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[183,[[184,[183]]]],[[],146],[[],147],[[],234],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[15,29],[15,29],[30],0,[[146,146],29],[[235,235],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[213,[[14,[[236,[235]]]]]],0,[183,[[193,[183]]]],[[146,31],[[12,[32]]]],[[146,31],[[12,[32]]]],[[206,31],[[12,[32]]]],[[206,31],[[12,[32]]]],[[237,31],[[12,[32]]]],[[237,31],[[12,[32]]]],[[204,31],[[12,[32]]]],[[204,31],[[12,[32]]]],[[238,31],[[12,[32]]]],[[238,31],[[12,[32]]]],[[205,31],[[12,[32]]]],[[205,31],[[12,[32]]]],[[239,31],[[12,[32]]]],[[239,31],[[12,[32]]]],[[235,31],[[12,[32]]]],[[]],[[]],[[]],[141,146],[[]],[38,146],[146,146],[[[14,[38]]],146],[[]],[[]],[[]],[[]],[[]],[[]],[203,205],[[]],[[]],[203,239],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[34],[34],[34],[[213,[10,[240,8]]]],[[219,[10,[240,8]]]],0,[[219,[77,[146]]],[[12,[213,206]]]],[141,[[0,[25,143,218]]]],[[141,104],[[0,[25,143,218]]]],[141,[[0,[25,143,218]]]],[[234,[77,[146]]],[[14,[147]]]],[[146,30]],[213,146],[219,215],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[234,38,[14,[38]]]],[[234,[77,[146]],147]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[146,146],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[208,[[172,[[9,[212,8]]]]]],[219,215],[219,215],[219,215],[219,215],0,[[[79,[51,8]]],241],[[[14,[[77,[[157,[38]]]]]]],146],[[]],[[]],[[]],[[38,[14,[38]]],147],[[[172,[241]],242,[52,[51]]],[[243,[[12,[7,203]]]]]],[213,[[14,[[236,[235]]]]]],[213,[[12,[244,204]]]],0,0,[213,[[12,[245,238]]]],0,0,[208,[[172,[[9,[212,8]]]]]],[[183,[52,[51]]],[[220,[183]]]],[208,[[172,[[9,[212,8]]]]]],[[183,[52,[51]]],[[221,[183]]]],[208,[[172,[[9,[212,8]]]]]],[208,[[172,[[9,[212,8]]]]]],[[183,[79,[51,8]]],[[222,[183]]]],[[183,141],[[223,[183]]]],[[183,[52,[224]]],[[225,[183]]]],[213,244],0,[208,[[172,[[9,[212,8]]]]]],[208,[[172,[[9,[212,8]]]]]],[208,[[172,[[9,[212,8]]]]]],[208,[[172,[[9,[212,8]]]]]],[208,[[172,[[9,[212,8]]]]]],[[208,208],[[172,[[9,[212,8]]]]]],[[208,208],[[172,[[9,[212,8]]]]]],[213,29],[205,[[14,[227]]]],[239,[[14,[227]]]],[[170,75],[[228,[170]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],141],[[],141],[[],141],[[],141],[[],141],[[],141],[[],141],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[147,[0,[25,143,218]]],147],[[147,[0,[25,143,218]]],147],[[147,[0,[25,143,218]]],147],[[147,[0,[25,143,218]]],147],[[147,[0,[25,143,218]]],147],[[147,[0,[25,143,218]]],147],[208,[[172,[[9,[212,8]]]]]],[[183,[52,[51]]],[[230,[183]]]],[[183,[52,[51]]],[[231,[183]]]],[[208,[52,[51]]],[[172,[[9,[212,8]]]]]],[208,[[172,[[9,[212,8]]]]]],[[208,[52,[51]]],[[172,[[9,[212,8]]]]]],[[183,[52,[232]]],[[233,[183]]]],[213,[[12,[245,237]]]],0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[[],246],[7],[7],[7],[7],[[]],[[]],[7],[7],[[]],[[]],[[]],[[]],[34],[[],7],[[],7],[[246,207,208,[77,[247]]]],[[246,208,208,[77,[247]]]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],[[248,[10,[[254,[249,[253,[207,207,[251,[250]],252]]]],8]],[255,[235]],104],256],[[]],[[246,234]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],14],[[],14],[[]],[[]],0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[7],[[]],[[]],[[]],[7],[7],[7],[[]],[[]],[[]],[[]],[[]],[[]],[[],207],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],[[]],[[257,208],[[172,[[9,[212,8]]]]]],[[207,[255,[235]],104],[[12,[258,259]]]],[[[140,[208]]],257],[[[140,[208]]],260],[[257,208],[[172,[[9,[212,8]]]]]],[[257,208],[[172,[[9,[212,8]]]]]],[[257,208],[[172,[[9,[212,8]]]]]],[[260,208],[[172,[[9,[212,8]]]]]],[[260,208],[[172,[[9,[212,8]]]]]],[[260,208],[[172,[[9,[212,8]]]]]],[[260,208],[[172,[[9,[212,8]]]]]],[[260,208],[[172,[[9,[212,8]]]]]],[[260,208,208],[[172,[[9,[212,8]]]]]],[[260,208,208],[[172,[[9,[212,8]]]]]],[257,207],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[260,208],[[172,[[9,[212,8]]]]]],[[260,208],[[172,[[9,[212,8]]]]]],0,0,[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[[[262,[[0,[244,261]]]]],[[262,[[0,[244,261]]]]]],[[]],[[],[[9,[22,8]]]],[7],[7],[7],[7],[[]],[[]],[7],[7],[[]],[[]],[[]],[[]],[[],7],[[],7],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],[[[262,[244]],208],[[172,[[9,[212,8]]]]]],[244],[[263,[140,[208]]]],[[[262,[244]],208],[[172,[[9,[212,8]]]]]],[[[262,[244]],208],[[172,[[9,[212,8]]]]]],[[[262,[244]],208],[[172,[[9,[212,8]]]]]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],14],[[],14],[[]],[[]],0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[248,248],[264,264],[265,265],[247,247],[[]],[[]],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],248],[[],264],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[[248,31],[[12,[32]]]],[[265,31],[[12,[32]]]],[[247,31],[[12,[32]]]],[[]],[[]],[[]],[[]],[[[52,[51]]],247],[[[47,[51]]],247],[[[79,[51,8]]],247],[[]],[[]],[[]],[[]],[[]],[[]],[34],[34],[[248,208],[[14,[265]]]],[[248,208],[[14,[248]]]],[[248,208],[[14,[265]]]],[[248,208],248],[[],7],[[],7],[[],7],[[],7],[[],7],[[248,208,[77,[247]]]],[[248,208,38]],[[248,208,[77,[247]]]],[[248,208,38]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],[[]],[[]],[[]],[[264,208],[[172,[[9,[212,8]]]]]],[207,248],[[]],[[]],[248,207],[[[172,[266]],242],[[243,[14]]]],[[264,208],[[172,[[9,[212,8]]]]]],[[264,208],[[172,[[9,[212,8]]]]]],[[264,208],[[172,[[9,[212,8]]]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],0,0,[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[[]],[[]],[7],[7],[[]],[[]],[[]],[[]],[[],7],[[],7],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],[[267,208],[[172,[[9,[212,8]]]]]],[[146,[9,[244,8]],[10,[240,8]]],267],[[[172,[268]],242,[52,[51]]],[[243,[[12,[7,203]]]]]],[[267,208],[[172,[[9,[212,8]]]]]],[[267,208],[[172,[[9,[212,8]]]]]],[[267,208],[[172,[[9,[212,8]]]]]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],14],[[],14],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[269,269],[270,270],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],269],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[150,[[12,[[271,[144,145]]]]]],[[[52,[51]]],[[12,[[271,[144,145]],186]]]],[150,[[12,[[273,[272,272]]]]]],[150,[[12,[269]]]],[150,[[12,[270]]]],[150,[[12,[274]]]],[150,[[12,[275]]]],[150,[[12,[276]]]],[[[9,[185,8]]],[[12,[[9,[185,8]],[9,[185,8]]]]]],[[[9,[277,8]]],[[12,[[9,[277,8]],[9,[277,8]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[185,[[14,[185]]]],[277,[[14,[277]]]],[[[11,[185,8]]],[[12,[[11,[185,8]],[11,[185,8]]]]]],[[[11,[277,8]]],[[12,[[11,[277,8]],[11,[277,8]]]]]],[185,[[14,[185]]]],[277,[[14,[277]]]],[7],[7],[7],[7],[7],[7],[7],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[[269,31],[[12,[32]]]],[[270,31],[[12,[32]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[34],0,0,0,[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[185,29],[277,29],[[],[[14,[277]]]],[[[271,[144,145]]],[[14,[277]]]],[[],[[14,[277]]]],[[[271,[144,145]]],[[14,[277]]]],0,[273,[[271,[144,145]]]],[[]],0,0,[[],[[14,[269]]]],[[[271,[144,145]]],[[14,[269]]]],0,0,[[],[[14,[269]]]],[[[271,[144,145]]],[[14,[269]]]],[[],[[79,[51,8]]]],[[[271,[144,145]]],[[79,[51,8]]]],[[[271,[144,145]],226],12],[[[273,[278,278]],226],12],[[269,226],12],[[270,226],12],[[274,226],12],[[275,226],12],[[276,226],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],0,[[[52,[38]]]],0,[144],[145],[[]],[[[77,[146]],147]],[38],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[279,[[52,[51]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[280,280],[281,281],[282,282],[283,283],[[]],[[]],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[285,[284,284]]]],[[],286],[[],[[9,[185,8]]]],[[],[[9,[185,8]]]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[150,[[12,[[285,[272,272]]]]]],[[[52,[51]]],[[12,[[9,[185,8]],186]]]],[[[52,[51]]],[[12,[[9,[185,8]],186]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[15,29],[15,29],[[282,282],29],[[283,283],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[190,[[12,[191,192]]]],[[287,31],[[12,[32]]]],[[287,31],[[12,[32]]]],[[288,31],[[12,[32]]]],[[288,31],[[12,[32]]]],[[289,31],[[12,[32]]]],[[289,31],[[12,[32]]]],[[290,31],[[12,[32]]]],[[290,31],[[12,[32]]]],[[291,31],[[12,[32]]]],[[291,31],[[12,[32]]]],[[281,31],[[12,[32]]]],[[282,31],[[12,[32]]]],[[286,31],[[12,[32]]]],[[292,31],[[12,[32]]]],[[292,31],[[12,[32]]]],[[]],[[]],[293,[[294,[144,293]]]],[200],[[]],[[]],[203,287],[[]],[[]],[287,289],[[]],[[]],[[]],[237,291],[238,291],[199,291],[[]],[204,291],[[[9,[227,8]]],291],[186,291],[197,291],[198,291],[[]],[[]],[[]],[[]],[[]],[[]],[209],[209],[210],[211],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[209],[34],[34],[[280,38],[[14,[[10,[295,8]]]]]],[[280,38],[[14,[[10,[295,8]]]]]],[[280,[77,[146]]],[[12,[213,206]]]],[280,212],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[280,212],[[279,[271,[144]]],212],0,[219,240],[234,280],[[]],[[]],[[279,271,173],[[172,[[9,[212,8]]]]]],[[279,[9,[185,8]],173],[[172,[[9,[212,8]]]]]],[[279,[9,[185,8]],173],[[172,[[9,[212,8]]]]]],[[[294,[144,293]],279,[271,[[294,[144,293]]]],173],[[172,[[9,[212,8]]]]]],[280],[[280,145]],0,[[[285,[278,278]],226],12],[280,155],[[280,38]],[287,[[14,[227]]]],[289,[[14,[227]]]],[291,[[14,[227]]]],[292,[[14,[227]]]],[280,219],[[[86,[280]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],141],[[],141],[[],141],[[],141],[[],141],[[],141],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[240,212],[240,212],[[240,162],212],0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[[3,[2]]]],[[]],[[]],[[[296,[152]]]],[7],[7],[[]],[7],[[]],[168,[[14,[[296,[152]]]]]],[[]],[[[296,[152]]],152],[[[296,[152]],[77,[[157,[38]]]]],[[14,[168]]]],[[[296,[152]],[77,[[157,[38]]]]],[[14,[[296,[152]]]]]],[[],7],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[[296,[152]]],215],[[173,296],[[172,[[9,[212,8]]]]]],[[173,168,277],[[172,[[9,[212,8]]]]]],[[]],[[],12],[[],12],[[],13],[[],38],[[],14],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[53],[[170,53],[[297,[170]]]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[298,[[52,[51]]]],[[],13],[[],38],[[],38],[[],38],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[170,[[299,[170]]]],[[300,17]],0,[[],301],[302,302],[303,303],[304,304],[305,305],[306,306],[307,307],[308,308],[298,298],[309,309],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[170,[[311,[170,310]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[7]]]],[[]],[298],[309],[[],302],[[],303],[[],305],[[],306],[[],307],[[],308],[[],[[313,[[0,[312,152]]]]]],[[],314],[[],300],[[],[[9,[185,8]]]],[[170,104],[[315,[170]]]],[7],[303],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[303],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[[52,[51]]],[[12,[[9,[185,8]],186]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],0,[[],29],[316,29],[317,29],[[],[[319,[318]]]],[[],[[319,[318]]]],[314,[[52,[38]]]],[[],[[52,[38]]]],[[170,104],[[320,[170]]]],[[302,31],[[12,[32]]]],[[303,31],[[12,[32]]]],[[304,31],[[12,[32]]]],[[305,31],[[12,[32]]]],[[306,31],[[12,[32]]]],[[298,31],[[12,[32]]]],[[309,31],[[12,[32]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[25],[25],[25],[25],[[],321],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[34],[34],[34],[34],[34],[34],[34],[34],[34],[303,53],[25],[25],[25],[25],0,[[[0,[170,322]],49],[[323,[[0,[170,322]]]]]],[[[0,[170,322]],49,53],[[323,[[0,[170,322]]]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[[9,[8]],101,34]],[[[9,[8]],101,34]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],29],[316,29],[317,29],0,[[49,49]],[[314,171,156],[[172,[[9,[212,8]]]]]],[[171,[9,[185,8]],156],[[172,[[9,[212,8]]]]]],[[[0,[170,322]],49],[[323,[[0,[170,322]]]]]],[[[0,[170,322]],49,53],[[323,[[0,[170,322]]]]]],[[170,322],[[324,[170,322]]]],0,[[],[[14,[38]]]],[[],[[14,[38]]]],[[]],[53,303],[53,306],[53,307],[53,308],[[53,104],309],[53,308],[53,302],[53,302],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[170,29],[[325,[170]]]],[[]],[316],[317],[305,305],0,[[170,104,25],[[326,[170,25]]]],[[]],[316],[317],0,[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],38],[[],38],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],38],[[],38],[170,[[327,[170]]]],[[[0,[170,261]],104,53],[[324,[[0,[170,261]],[315,[[297,[[0,[170,261]]]]]]]]]],0,[[],49],[[]],[[317,328,328]],[[317,328]],[[317,91,53]],[53],[[316,53]],[[317,53]],[53],[[316,53]],[[317,53]],0,[[],38],[[],38],[[170,104],[[329,[170]]]],[170,[[330,[170]]]],0,0,0,[[],53],[316,53],[317,53],[[170,53],[[331,[170]]]],0,[[]],[316],[317],[170,[[332,[170]]]],[[170,322,104],[[324,[[333,[170]],[320,[[333,[322]]]]]]]],[[170,104],[[333,[170]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[334],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[14,[104]]]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],38],[[],38],[[],38],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[298,25]],[[309,25]],[[],53],[316,53],[317,53],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[305,29],305],[[305,53],305],[[305,302],305],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],0,[[],29],0,[[],29],0,0,[[]],0,[[]],0,[53],[53],0,0,0,[[],53],0,[[]],[[]],[[],53],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[90,94]],[[],1],[90,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[90,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],15],[90,38],[90,94],[90,94],[90,38],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[335,17]],[[336,17]],[[337,17]],[338,[[52,[51]]]],[[[52,[338]]],[[52,[339]]]],[90,90],[340,340],[341,341],[342,342],[90,98],[[]],[[]],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[90,[[9,[94,8]]]],[[90,90],74],[[],74],[[23,24,25]],0,[[],[[14,[38]]]],[341],[[90,31],[[12,[32]]]],[[],90],[[],341],[[],335],[[],336],[[],342],[[],337],[7],[90],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[150,[[12,[90]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[15,29],[30],0,0,[[90,90],29],[[],29],[[],29],[[],29],[[],29],[190,[[12,[191,192]]]],[[343,344]],[[90,38],[[14,[94]]]],[[90,7],[[14,[94]]]],[[90,7],[[14,[94]]]],[90,7],[[90,38],[[14,[94]]]],[[343,344],29],[[90,31],[[12,[32]]]],[[90,31],[[12,[32]]]],[[345,31],[[12,[32]]]],[[340,31],[[12,[32]]]],[[341,31],[[12,[32]]]],[[]],[141,90],[[]],[38,90],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[25],[94,[[14,[90]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[34],[34],[34],[34],[34],[34],[25],[38,[[14,[94]]]],[38,[[14,[94]]]],[90,[[14,[99]]]],[[],100],[[90,30]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[214,346,346]],[34,347],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[90,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[9,[90,8]]],[[9,[94,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[90,103],[142,29],0,0,0,0,[[],[[14,[38]]]],[[90,76]],0,0,[[90,7],[[14,[38]]]],[[[77,[[348,[38]]]]],90],[[]],[[]],[[]],[[]],[[]],[[]],[[90,90],[[14,[74]]]],0,0,[[],[[14,[38]]]],[[],[[14,[38]]]],[90,105],[[[9,[90,8]]],106],[[90,94],[[14,[29]]]],[90,107],[[],38],[[],[[14,[38]]]],[[],38],[[90,226],12],[[90,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[90,[77,[[348,[38]]]]]],[[349,350]],[350],[[],38],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],141],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],[[14,[38]]]],[[],99],[[],38],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[349,[352,[351]]]],[[[354,[353]]]],[[[165,[342]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7,341],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],0,0,[[]],[[]],[[]],[[]],[[355,17]],0,[356,356],[[]],[[],[[9,[22,8]]]],[[23,24,25]],0,0,0,[[],355],0,[7],[7],[7],[7],[[]],[[]],[7],[7],0,[[],14],[[]],[[]],[25],[[]],[[]],[34],0,0,[25],[[],7],[[],7],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],0,[[]],0,0,[[]],[[]],[[]],0,[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],14],[[],14],0,[[]],[[]],0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],15],0,[[]],[[]],[[]],[[]],[[]],[[]],[[357,17]],[358,358],[[]],[[],[[9,[22,8]]]],[7],[7],[7],[7],[7],[7],[[]],[[]],[[]],[7],[7],[7],[15,29],[30],[[358,358],29],[[],29],[[],29],[[],29],[[],29],[[357,17]],[[]],[[]],[[]],[[]],[[]],[[]],[34,359],[[358,30]],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],[[]],0,0,[359,360],0,0,[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[361,94]],[[362,94]],[[363,94]],[[],1],[[],1],[361,1],[[],1],[362,1],[[],1],[363,1],[[],1],[[],1],[[],1],[361,1],[[],1],[362,1],[363,1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],15],[361,94],[362,94],[363,94],[361,94],[362,94],[363,94],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[364,17]],[361,361],[362,362],[363,363],[361,98],[362,98],[363,97],[[]],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[361,[[9,[94,8]]]],[362,[[9,[94,8]]]],[363,[[9,[94,8]]]],[[23,24,25]],0,[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],361],[[],362],[7],[7],[7],[7],[7],[7],[7],[7],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[15,29],[30],[[363,363],29],[[],29],[[],29],[[],29],[[],29],[[],14],[[361,38],[[14,[94]]]],[[362,38],[[14,[94]]]],[[363,38],[[14,[94]]]],[[361,7],[[14,[94]]]],[[362,7],[[14,[94]]]],[[363,7],[[14,[94]]]],[[361,7],[[14,[94]]]],[[362,7],[[14,[94]]]],[[363,7],[[14,[94]]]],[361,7],[362,7],[363,7],[[361,38],[[14,[94]]]],[[362,38],[[14,[94]]]],[[363,38],[[14,[94]]]],[[364,17]],[[]],[[]],[[]],[[]],[25],[94,[[14,[361]]]],[94,[[14,[362]]]],[94,[[14,[363]]]],[[]],[[]],[[]],[[]],[34],[34],[25],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[361,[[14,[99]]]],[362,[[14,[99]]]],[363,[[14,[99]]]],[[],100],[[],100],[[],100],[[363,30]],0,[[363,38],[[14,[7]]]],[[],7],[[],7],[[],7],[[],7],0,[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[361,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[362,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[363,8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[9,[361,8]]],[[9,[94,8]]]],[[[9,[362,8]]],[[9,[94,8]]]],[[[9,[363,8]]],[[9,[94,8]]]],[[]],[[]],[[]],[[]],[361,103],[362,103],[363,102],0,0,[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[361,7],[[14,[38]]]],[[362,7],[[14,[38]]]],[[363,7],[[14,[38]]]],[[]],[[]],0,[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[363,[[14,[75]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[361,105],[362,105],[363,105],[[[9,[361,8]]],106],[[[9,[362,8]]],106],[[[9,[363,8]]],106],[[361,94],[[14,[29]]]],[[362,94],[[14,[29]]]],[[363,94],[[14,[29]]]],[361,107],[362,107],[363,107],[[],38],[[],38],[[],38],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],38],[[],38],[[],38],[[361,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[362,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[363,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[],38],[[],38],[[],38],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],99],[[],99],[[],99],[[],38],[[],38],[[],38],[[],14],[[],14],[[],14],[[],14],[363,7],[363,38],[363,108],[[]],[[]],[[]],[[]],0,0,0,0,0,[[365,94]],[[366,94]],[365,1],[[],1],[366,1],[[],1],[[],1],[365,1],[366,1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[365,94],[366,94],[365,94],[366,94],[[]],[[]],[[]],[[]],[365,365],[366,366],[365,97],[366,367],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[365,[[9,[94,8]]]],[366,[[9,[94,8]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],365],[[],366],[7],[366],[7],[7],[7],[366],[150,[[12,[365]]]],[[]],[[]],[7],[7],[190,[[12,[191,192]]]],[[],366],[[365,38],[[14,[94]]]],[[366,7],[[14,[94]]]],[[365,7],[[14,[94]]]],[[365,7],[[14,[94]]]],[365,7],[366,7],[[365,38],[[14,[94]]]],[[366,7],[[14,[94]]]],[[365,31],[[12,[32]]]],[[366,31],[[12,[32]]]],[[]],[[]],[94,[[14,[365]]]],[94,[[14,[366]]]],[[]],[[]],[34],[34],[7,[[14,[94]]]],[7,[[14,[94]]]],[365,[[14,[99]]]],[366,[[14,[99]]]],[[],100],[[],100],[[365,38],[[14,[7]]]],[[],7],[[],7],[[]],[[]],[[[9,[365,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[366,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[9,[365,8]]],[[9,[94,8]]]],[[[9,[366,8]]],[[9,[94,8]]]],[[]],[[]],[365,102],[366,368],[[],[[14,[38]]]],[[],[[14,[38]]]],[[365,7],[[14,[38]]]],[[]],[[]],[[],[[14,[38]]]],[[],[[14,[38]]]],[365,[[14,[75]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[365,105],[366,105],[[[9,[365,8]]],106],[[[9,[366,8]]],106],[[365,94],[[14,[29]]]],[[366,94],[[14,[29]]]],[365,107],[366,107],[[],38],[[],38],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],38],[[],38],[[365,226],12],[[365,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[366,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[],38],[[],38],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],99],[[],99],[[],38],[[],38],[[],14],[[],14],[365,7],[365,38],[365,108],[[]],[[]],0,0,0,0,0,0,0,[[369,94]],[[370,94]],[[],1],[[],1],[369,1],[[],1],[[],1],[370,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[369,1],[[],1],[[],1],[370,1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],15],[369,94],[370,94],[369,94],[370,94],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[371,17]],[369,369],[370,370],[372,372],[369,98],[370,367],[[]],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[369,[[9,[94,8]]]],[370,[[9,[94,8]]]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],369],[[],370],0,[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[7],[7],[15,29],[30],0,[[372,372],29],[[],29],[[],29],[[],29],[[],29],[[],14],[[369,38],[[14,[94]]]],[[370,7],[[14,[94]]]],[[369,7],[[14,[94]]]],[[369,7],[[14,[94]]]],[369,7],[370,7],[[369,38],[[14,[94]]]],[[370,7],[[14,[94]]]],[[371,17]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[25],[25],[25],[94,[[14,[369]]]],[94,[[14,[370]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[34,373],[34],[34],[34,374],[25],[25],[25],[38,[[14,[94]]]],[7,[[14,[94]]]],[38,[[14,[94]]]],[7,[[14,[94]]]],[369,[[14,[99]]]],[370,[[14,[99]]]],[[],100],[[],100],[[372,30]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[369,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[370,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[9,[369,8]]],[[9,[94,8]]]],[[[9,[370,8]]],[[9,[94,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[369,103],[370,368],[[],[[14,[38]]]],[[],[[14,[38]]]],[[369,7],[[14,[38]]]],[[]],[[]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[369,105],[370,105],[[[9,[369,8]]],106],[[[9,[370,8]]],106],[[369,94],[[14,[29]]]],[[370,94],[[14,[29]]]],[369,107],[370,107],[[],38],[[],38],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],38],[[],38],[[373,375,376,34],[[12,[377]]]],[[369,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[370,[9,[94,8]]],[[12,[[9,[94,8]]]]]],0,[[],38],[[],38],[374,360],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],99],[[],99],[[],38],[[],38],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[373,34]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[378,94]],[[],1],[[],1],[[],1],[[],1],[378,1],[[],1],[[],1],[[],1],[[],1],[378,1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[378,94],[378,94],[379,[[380,[49]]]],0,[379,[[380,[49]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[381,17]],[379,382],0,0,0,0,[378,378],[378,98],[[]],[[],[[9,[22,8]]]],[378,[[9,[94,8]]]],[[23,24,25]],[[],[[14,[38]]]],0,[[],378],[[],383],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[]],[[]],[[]],[[]],[[]],[379,384],0,[7],[7],[7],[7],[7],[379,[[14,[385]]]],0,[379,[[14,[385]]]],[379,343],0,[[],14],[[386,[388,[[89,[[387,[378]]]]]]]],[[378,38],[[14,[94]]]],[[378,7],[[14,[94]]]],[[378,7],[[14,[94]]]],[378,7],[[378,38],[[14,[94]]]],[[]],[[]],[[]],[[]],[[]],[25],[94,[[14,[378]]]],[[]],[[]],[[]],[[]],[[]],[34,389],[34],[34],0,[25],[38,[[14,[94]]]],[38,[[14,[94]]]],[378,[[14,[99]]]],[[],100],0,0,[[],7],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[378,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[9,[378,8]]],[[9,[94,8]]]],[[]],[[]],[[]],[[]],[[]],[378,103],[[],[[14,[38]]]],[[378,7],[[14,[38]]]],[53,383],[[]],[[]],0,0,[[],[[14,[38]]]],[[],[[14,[38]]]],[378,105],[[[9,[378,8]]],106],[[378,94],[[14,[29]]]],[378,107],[[],38],[[],[[14,[38]]]],[[],38],[[389,375,376,34],[[12,[377]]]],[[378,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[],38],[[[52,[379]]]],[379],0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],[[14,[38]]]],[[],99],[[],38],[[],14],[[],14],[[],14],[[],14],[[],14],[[389,34]],0,[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[390,94]],[[391,94]],[[392,94]],[[],1],[[],1],[[],1],[[],1],[[],1],[390,1],[[],1],[391,1],[392,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[390,1],[[],1],[391,1],[[],1],[392,1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[390,94],[391,94],[392,94],[390,94],[391,94],[392,94],[393,[[380,[49]]]],[394,[[380,[49]]]],[395,[[380,[49]]]],0,0,0,[393,[[380,[49]]]],[394,[[380,[49]]]],[395,[[380,[49]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[396,17]],[393,382],[394,382],[395,382],0,0,0,[[[165,[397]],[89,[343]]]],0,[390,390],[391,391],[392,392],[390,98],[391,367],[392,97],[[]],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[390,[[9,[94,8]]]],[391,[[9,[94,8]]]],[392,[[9,[94,8]]]],0,[[23,24,25]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],390],[[],392],[[],398],[[],399],[[],400],0,0,[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[150,[[12,[392]]]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[393,384],[394,384],[395,384],0,0,0,[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[393,[[14,[385]]]],[394,[[14,[385]]]],[395,[[14,[385]]]],0,0,0,[393,[[14,[385]]]],[394,[[14,[385]]]],[395,[[14,[385]]]],[393,343],[394,343],[395,343],0,0,0,[190,[[12,[191,192]]]],[[386,[388,[[89,[[387,[390]]]]]]]],[[],14],[[386,[388,[[89,[[387,[390]]]]]]]],[[390,38],[[14,[94]]]],[[391,7],[[14,[94]]]],[[392,38],[[14,[94]]]],[[390,7],[[14,[94]]]],[[392,7],[[14,[94]]]],[[390,7],[[14,[94]]]],[[392,7],[[14,[94]]]],[390,7],[391,7],[392,7],[[390,38],[[14,[94]]]],[[391,7],[[14,[94]]]],[[392,38],[[14,[94]]]],[[392,31],[[12,[32]]]],[[]],[[]],[[]],[[]],[[]],[401,391],[[]],[[]],[[]],[[]],[[]],[25],[94,[[14,[390]]]],[94,[[14,[391]]]],[94,[[14,[392]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[34],[34],[34],[34],[34],0,[25],[38,[[14,[94]]]],[7,[[14,[94]]]],[38,[[14,[94]]]],[7,[[14,[94]]]],[390,[[14,[99]]]],[391,[[14,[99]]]],[392,[[14,[99]]]],[[],100],[[],100],[[],100],0,0,[[392,38],[[14,[7]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[390,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[391,8]]],[[9,[1,8]]]],[[[9,[392,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[9,[390,8]]],[[9,[94,8]]]],[[[9,[391,8]]],[[9,[94,8]]]],[[[9,[392,8]]],[[9,[94,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[390,103],[391,368],[392,102],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[390,7],[[14,[38]]]],[[392,7],[[14,[38]]]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[386,[165,[402]],[86,[397]],[86,[403]],89]],[[386,[165,[402]],[86,[397]],[86,[403]],89]],0,[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[392,[[14,[75]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[390,105],[391,105],[392,105],[[[9,[390,8]]],106],[[[9,[391,8]]],106],[[[9,[392,8]]],106],[[390,94],[[14,[29]]]],[[391,94],[[14,[29]]]],[[392,94],[[14,[29]]]],[390,107],[391,107],[392,107],[[],38],[[],38],[[],38],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],38],[[],38],[[],38],[[399,375,376,34],[[12,[377]]]],[[400,375,376,34],[[12,[377]]]],[[392,226],12],[[390,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[391,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[392,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[],38],[[],38],[[],38],[[[52,[393]]]],[[[52,[394]]]],[[[52,[395]]]],[393],[394],[395],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],99],[[],99],[[],99],[[],38],[[],38],[[],38],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[392,7],[392,38],[392,108],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[404,[[380,[49]]]],[405,[[380,[49]]]],0,0,[404,[[380,[49]]]],[405,[[380,[49]]]],[[]],[[]],[[]],[[]],[404,382],[405,382],0,[7],[7],[7],[7],0,0,[[]],[[]],[404,384],[405,384],0,0,[7],[7],[404,[[14,[385]]]],[405,[[14,[385]]]],0,0,[404,[[14,[385]]]],[405,[[14,[385]]]],[404,343],[405,343],0,0,[[]],[[]],[[]],[[]],[[],7],[[],7],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],0,0,0,[[[52,[404]]]],[[[52,[405]]]],[404],[405],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],14],[[],14],[[]],[[]],0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[406,17]],[[23,24,25]],[[],407],[7],[7],[7],[7],[7],[7],[[]],[[]],[[]],[7],[7],[7],[[406,17]],[[]],[[]],[[]],[25],[[]],[[]],[[]],[34],[25],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],[[]],[[]],[[407,375,376,34],[[12,[377]]]],0,[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[]],[[]],[[]],0,[[],1],[[],1],[[[3,[2]]]],[[]],[[]],[[],408],[7],[7],[[]],[7],[[]],[[]],[34],[[],7],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],[[408,375,376,34],[[12,[377]]]],[[]],[[],12],[[],12],[[],13],[[],14],[[]],0,0,0,0,[[409,94]],[[],1],[[],1],[409,1],[[],1],[[],1],[[],1],[409,1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[409,94],[409,94],[[]],[[]],[[]],[[]],[[]],[[]],[[410,17]],[409,409],[409,98],[[]],[[],[[9,[22,8]]]],[409,[[9,[94,8]]]],[[23,24,25]],[[],[[14,[38]]]],[[],411],[[],409],0,[7],[7],[7],[7],[7],[7],[[]],[[]],[[]],[7],[7],[7],[[409,38],[[14,[94]]]],[[409,7],[[14,[94]]]],[[409,7],[[14,[94]]]],[409,7],[[409,38],[[14,[94]]]],[[410,17]],[[]],[[]],[[]],[25],[94,[[14,[409]]]],[[]],[[]],[[]],[34],[34],[25],[38,[[14,[94]]]],[38,[[14,[94]]]],[409,[[14,[99]]]],[[],100],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[409,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[9,[409,8]]],[[9,[94,8]]]],[[]],[[]],[[]],[409,103],0,[[],[[14,[38]]]],0,[[409,7],[[14,[38]]]],[[]],[[]],[[],[[14,[38]]]],[[],[[14,[38]]]],[409,105],[[[9,[409,8]]],106],[[409,94],[[14,[29]]]],[409,107],[[],38],[[],[[14,[38]]]],[[],38],0,[[409,[9,[94,8]]],[[12,[[9,[94,8]]]]]],0,[[],38],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],[[14,[38]]]],[[],99],[[],38],[[],14],[[],14],[[],14],[[]],[[]],[[]],0,[[],412],0,0,0,0,0,0,0,0,0,0,0,0,[[413,94]],[[414,94]],[[],1],[[],1],[[],1],[413,1],[[],1],[[],1],[414,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[413,1],[[],1],[414,1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],15],[[],15],[413,94],[414,94],[413,94],[414,94],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[415,17]],[413,413],[414,414],[416,416],[413,97],[414,98],[[]],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[413,[[9,[94,8]]]],[414,[[9,[94,8]]]],[[23,24,25]],[[23,24,25]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],417],[[],414],[7],[7],[7],[7],[418],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[7],[7],[15,29],[15,29],[30],[30],0,0,0,[[413,413],29],[[416,416],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],14],[[413,38],[[14,[94]]]],[[414,38],[[14,[94]]]],[[413,7],[[14,[94]]]],[[414,7],[[14,[94]]]],[[413,7],[[14,[94]]]],[[414,7],[[14,[94]]]],[413,7],[414,7],[[413,38],[[14,[94]]]],[[414,38],[[14,[94]]]],[[415,17]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[25],[25],[94,[[14,[413]]]],[94,[[14,[414]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[34],[34],[34,418],[25],[25],[38,[[14,[94]]]],[38,[[14,[94]]]],[413,[[14,[99]]]],[414,[[14,[99]]]],[413,38],[[],100],[[],100],[[413,30]],[[416,30]],[[413,38],[[14,[7]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[413,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[414,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[9,[413,8]]],[[9,[94,8]]]],[[[9,[414,8]]],[[9,[94,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[413,102],[414,103],[[],[[14,[38]]]],[[],[[14,[38]]]],[[413,7],[[14,[38]]]],[[414,7],[[14,[38]]]],[[]],[[]],0,[[386,[86,[419]],[165,[[420,[418]]]],[86,[418]],89]],[[],[[14,[38]]]],[[],[[14,[38]]]],[413,[[14,[75]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[413,105],[414,105],[[[9,[413,8]]],106],[[[9,[414,8]]],106],[[413,94],[[14,[29]]]],[[414,94],[[14,[29]]]],[413,107],[414,107],[[],38],[[],38],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],38],[[],38],[[417,375,376,34],[[12,[377]]]],[[413,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[414,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[],38],[[],38],[418,360],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],99],[[],99],[[],38],[[],38],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[413,7],[413,38],[413,108],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[421,17]],[[23,24,25]],[7],[7],[7],[7],[7],[7],[[]],[[]],[[]],[7],[7],[7],[[]],[[]],[[]],[25],[[]],[[]],[[]],[34,422],[25],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],[[]],[[422,375,376,34],[[12,[377]]]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[422,34]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[423,94]],[[424,94]],[[425,94]],[[426,94]],[[],1],[[],1],[[],1],[423,1],[[],1],[424,1],[425,1],[[],1],[426,1],[[],1],[[],1],[[],1],[[],1],[[],1],[423,1],[424,1],[[],1],[[],1],[425,1],[[],1],[426,1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[423,94],[424,94],[425,94],[426,94],[423,94],[424,94],[425,94],[426,94],[427,[[380,[49]]]],[428,[[380,[49]]]],0,0,[427,[[380,[49]]]],[428,[[380,[49]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[427,382],[428,382],[423,98],[424,98],[425,98],[426,98],[423,[[9,[94,8]]]],[424,[[9,[94,8]]]],[425,[[9,[94,8]]]],[426,[[9,[94,8]]]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],423],[[],424],[[],425],[[],426],0,0,0,[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[427,384],[428,384],0,0,[7],[7],[7],[7],[7],[7],[7],[427,[[14,[385]]]],[428,[[14,[385]]]],0,0,[427,[[14,[385]]]],[428,[[14,[385]]]],[427,343],[428,343],0,0,[[423,38],[[14,[94]]]],[[424,38],[[14,[94]]]],[[425,38],[[14,[94]]]],[[426,38],[[14,[94]]]],[[423,7],[[14,[94]]]],[[424,7],[[14,[94]]]],[[425,7],[[14,[94]]]],[[426,7],[[14,[94]]]],[[423,7],[[14,[94]]]],[[424,7],[[14,[94]]]],[[425,7],[[14,[94]]]],[[426,7],[[14,[94]]]],[423,7],[424,7],[425,7],[426,7],[[423,38],[[14,[94]]]],[[424,38],[[14,[94]]]],[[425,38],[[14,[94]]]],[[426,38],[[14,[94]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[25],[25],[25],[25],[25],[94,[[14,[423]]]],[94,[[14,[424]]]],[94,[[14,[425]]]],[94,[[14,[426]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[34],[34],[34],[34],[25],[25],[25],[25],[25],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[423,[[14,[99]]]],[424,[[14,[99]]]],[425,[[14,[99]]]],[426,[[14,[99]]]],[[],100],[[],100],[[],100],[[],100],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[423,8]]],[[9,[1,8]]]],[[[9,[424,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[425,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[426,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[9,[423,8]]],[[9,[94,8]]]],[[[9,[424,8]]],[[9,[94,8]]]],[[[9,[425,8]]],[[9,[94,8]]]],[[[9,[426,8]]],[[9,[94,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[423,103],[424,103],[425,103],[426,103],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],0,[[423,7],[[14,[38]]]],[[424,7],[[14,[38]]]],[[425,7],[[14,[38]]]],[[426,7],[[14,[38]]]],0,0,[[]],[[]],[[]],[[]],0,0,[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[423,105],[424,105],[425,105],[426,105],[[[9,[423,8]]],106],[[[9,[424,8]]],106],[[[9,[425,8]]],106],[[[9,[426,8]]],106],[[423,94],[[14,[29]]]],[[424,94],[[14,[29]]]],[[425,94],[[14,[29]]]],[[426,94],[[14,[29]]]],[423,107],[424,107],[425,107],[426,107],[[],38],[[],38],[[],38],[[],38],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],38],[[],38],[[],38],[[],38],[[423,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[424,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[425,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[426,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[],38],[[],38],[[],38],[[],38],0,[[[52,[427]]]],[[[52,[428]]]],[427],[428],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],99],[[],99],[[],99],[[],99],[[],38],[[],38],[[],38],[[],38],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],1],[[],1],[[[3,[2]]]],[[]],[[]],[[],429],[7],[7],[[]],[7],[[]],[[]],[34],[[],7],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],[[429,375,376,34],[[12,[377]]]],[[]],[[],12],[[],12],[[],13],[[],14],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[430,94]],[[431,94]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[430,1],[[],1],[[],1],[[],1],[[],1],[[],1],[431,1],[[],1],[[],1],[[],1],[[],1],[[],1],[430,1],[[],1],[[],1],[[],1],[431,1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],15],[[],15],[[],15],[430,94],[431,94],[430,94],[431,94],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[432,17]],[433,433],[430,430],[434,434],[431,431],[430,97],[431,97],[[]],[[]],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[430,[[9,[94,8]]]],[431,[[9,[94,8]]]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],435],[[],430],[[],431],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[7],[7],[7],[15,29],[15,29],[15,29],[30],[30],[30],[[430,430],29],[[434,434],29],[[431,431],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],14],[[],14],[[],433],[[430,38],[[14,[94]]]],[[431,38],[[14,[94]]]],[[430,7],[[14,[94]]]],[[431,7],[[14,[94]]]],[[430,7],[[14,[94]]]],[[431,7],[[14,[94]]]],[430,7],[431,7],[[430,38],[[14,[94]]]],[[431,38],[[14,[94]]]],[[432,17]],[[430,31],[[12,[32]]]],[[434,31],[[12,[32]]]],[[431,31],[[12,[32]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[25],[25],[25],[94,[[14,[430]]]],[94,[[14,[431]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[34],[34,436],[34],[34],[25],[25],[25],[[[47,[49]]],[[47,[437]]]],[[[3,[2]],433,430]],[430,[[14,[99]]]],[431,[[14,[99]]]],[[],100],[[],100],[[430,30]],[[434,30]],[[431,30]],[[430,38],[[14,[7]]]],[[431,38],[[14,[7]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[430,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[431,8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[9,[430,8]]],[[9,[94,8]]]],[[[9,[431,8]]],[[9,[94,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[430,29],[430,102],[431,102],[[],2],[[],[[14,[38]]]],[[],[[14,[38]]]],[[430,7],[[14,[38]]]],[[431,7],[[14,[38]]]],[[]],[[]],[[]],[[386,[86,[419]],[165,[[420,[436]]]],[86,[436]],[89,[[387,[438]]]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[430,[[14,[75]]]],[431,[[14,[75]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[430,105],[431,105],[[[9,[430,8]]],106],[[[9,[431,8]]],106],[[430,94],[[14,[29]]]],[[431,94],[[14,[29]]]],[430,107],[431,107],[[],38],[[],38],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],38],[[],38],[[435,375,376,34],[[12,[377]]]],[[430,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[431,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[],38],[[],38],[436,360],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],99],[[],99],[[],38],[[],38],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[430,7],[431,7],[430,38],[431,38],[430,108],[431,108],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[439,17]],[[23,24,25]],[[],440],[7],[7],[7],[7],[7],[7],[[]],[[]],[[]],[7],[7],[7],[[]],[[]],[[]],[25],[[]],[[]],[[]],[34],[25],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],[[]],[[]],[[440,375,376,34],[[12,[377]]]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[441,148]],[[148,442]],[[443,444,76]],[[445,34]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],15],[148,[[14,[44]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[446,17]],[[447,17]],[[448,17]],[[449,17]],[[450,17]],[148],[444,444],[[]],[[],[[9,[22,8]]]],[[444,444],74],[[],74],0,[[],446],[[],444],[[],441],[[],447],[[],448],[[],449],[[],450],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[443,451]],[[443,[86,[[85,[452]]]],[86,[342]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[148,[[14,[104]]]],[15,29],[30],[[444,444],29],[[],29],[[],29],[[],29],[[],29],0,[[[79,[444,8]]],446],[[444,31],[[12,[32]]]],[[442,31],[[12,[32]]]],[[148,31],[[12,[32]]]],[[441,31],[[12,[32]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[229,444],[34],[34],[34],[34],[34],[34],[34],[[441,444],[[14,[148]]]],[148,7],[[441,444],[[14,[442]]]],[[441,444],[[14,[148]]]],[[445,214,346]],[[444,30]],[148,7],0,[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[34,445]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[441,215],[441,215],[148,[[14,[442]]]],[148,215],0,[[444,[77,[[348,[38]]]],7],148],[[349,445]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[444,444],[[14,[74]]]],[148],[148,[[14,[44]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[148,[[14,[44]]]],0,[148,215],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[148,44],148],[[148,[77,[[348,[38]]]]],148],0,0,0,0,[[],1],[[],1],[[[3,[2]]]],[[]],[[]],[7],[7],[[]],[7],[[[140,[139]]],[[12,[453]]]],[[453,31],[[12,[32]]]],[[453,31],[[12,[32]]]],[[]],[[]],[[]],[[],7],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[[140,[139]]]],[[]],[[],141],[[],12],[[],12],[[],13],[[],14],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[454,7],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],15],[[],15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[455,455],[456,456],[457,457],[351,351],[[]],[[]],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[456,456],74],[[],74],[349,215],[[349,353],29],[[],458],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[7],[7],[7],[15,29],[15,29],[15,29],[30],[30],[349,458],[454,349],[349,[[52,[459]]]],[459,343],[[349,455],344],[[455,455],29],[[456,456],29],[[351,351],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[455,31],[[12,[32]]]],[[456,31],[[12,[32]]]],[[457,31],[[12,[32]]]],[[351,31],[[12,[32]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[34],[454,457],[[454,456],[[14,[349]]]],[[458,460],[[14,[456]]]],[[349,353],[[14,[351]]]],[[445,214,346]],[[458,460],[[14,[[14,[456]]]]]],[7,351],[[349,353],[[14,[461]]]],[[458,460],[[14,[[14,[456]]]]]],[[456,30]],[[351,30]],[349,456],[[454,[462,[457]]]],[[454,456]],[455,7],[456,7],[[454,456]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[34,445]],[[],457],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[349,29],[454,215],[349,7],[454,7],[7,455],[7,456],[[]],[[456,456],[[14,[74]]]],[349,215],[351,7],[349,215],[349,463],[459,344],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],15],[[]],[[]],[[]],[[]],[[]],[[]],[460,460],[[]],[[],[[9,[22,8]]]],[464,[[52,[353]]]],[[],465],[7],[7],[7],[7],[7],[7],[[]],[[]],[[]],[7],[7],[7],[15,29],[30],[[460,460],29],[[],29],[[],29],[[],29],[[],29],[[460,31],[[12,[32]]]],[[]],[[]],[[]],[[]],[[]],[[]],[34],[[465,460],[[14,[464]]]],[[465,13],[[14,[460]]]],[[445,214,346]],[7,460],[[460,30]],[464,460],[460,7],[[],7],[[],7],[[],7],[[34,445]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],[[]],[[]],[460,7],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[[3,[2]]]],[466,[[468,[467]]]],[466,[[469,[467]]]],[[]],[[]],[[]],[466],[7],[7],[[]],[7],[[466,31],[[12,[32]]]],[[]],[[]],[[],7],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[466,[[468,[467]]]],[[]],[[],29],[466,29],[[],29],[466,29],[[],346],[466,346],[[466,76],[[470,[170]]]],[466,466],[[],14],[[]],[466],[[],29],[346],[[466,346]],[[]],[[],12],[[],12],[[],13],[[],14],[[]],[466,470],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[471,346],[[445,34]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[461,461],[472,472],[353,353],[473,473],[346,346],[474,474],[471,471],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[353,353],74],[[],74],[23,[[14,[353]]]],[[],461],[[],23],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[[476,[475]]]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[472,14],[7],[7],[7],[7],[7],[7],[7],[15,29],[15,29],[15,29],[30],[[461,461],29],[[353,353],29],[[346,346],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[461,31],[[12,[32]]]],[[472,31],[[12,[32]]]],[[353,31],[[12,[32]]]],[[473,31],[[12,[32]]]],[[23,31],[[12,[32]]]],[[346,31],[[12,[32]]]],[[474,31],[[12,[32]]]],[[471,31],[[12,[32]]]],[[]],[[]],[[]],[[]],[[]],[[[476,[475]]],353],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[34],[34],[346,49],[[[476,[475]]],353],[[23,13],[[14,[353]]]],[[23,353],[[14,[472]]]],[[23,353],472],[[23,353],[[14,[38]]]],[[445,214,346]],[[445,214,346]],[[23,13],[[14,[353]]]],[7,353],[[353,30]],[472,353],[353,7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[23,24],353],[[23,24,473],353],[23,353],[23,353],[[34,445]],[[34,445]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[471,346,346],29],[[471,346,346],29],[23,29],[[346,346,346],29],[472,29],[23,215],[471,346],[472,477],[23,7],[472,38],[473,38],[7,353],[[],473],[49,346],[[349,445]],[[],473],[[[77,[[348,[38]]]],461,477,14],473],[[]],[[]],[[353,353],[[14,[74]]]],[23,[[14,[353]]]],[[346,49]],[[471,346]],[353,7],[472,461],[473,461],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[472,[[14,[13]]]],[[],13],[[],13],[[],13],[473,[[14,[13]]]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[451,343],[[451,343],[[14,[478]]]],[[343,94]],0,0,[[],1],[[],1],[343,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[343,1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],15],[343,94],[343,94],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[451],[343,343],[478,478],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[343,[[9,[94,8]]]],[[343,343],74],[[],74],[[451,343],29],[[],[[14,[38]]]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[150,[[12,[343]]]],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[15,29],[30],[[343,343],29],[[478,478],29],[[],29],[[],29],[[],29],[[],29],[190,[[12,[191,192]]]],[[343,344]],[[451,25]],[[451,7]],[451],[[343,31],[[12,[32]]]],[[451,31],[[12,[32]]]],[[478,31],[[12,[32]]]],[[451,343],[[14,[478]]]],[[]],[[]],[479,343],[[]],[[]],[[]],[75,343],[49,343],[94,[[14,[343]]]],[[]],[[]],[[]],[[]],[[]],[343,49],[[451,343],[[14,[478]]]],[480,[[253,[343,343,[251,[250]],252]]]],[480,[[253,[343,343,[251,[250]],252]]]],[[480,343],343],[[445,214,346]],[343,[[14,[99]]]],[7,343],[[],100],[[343,30]],[343,49],[[],7],[[],7],[[],7],[[],7],[[],7],[[214,346,346]],[34],[[34,445]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[343,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[[9,[343,8]]],[[9,[94,8]]]],[[]],[[]],[[]],[[]],[[]],[451,29],[451,49],[480],[142,29],[[],[[14,[38]]]],[481,14],[[343,343],[[14,[74]]]],[[],[[14,[38]]]],[343,[[14,[75]]]],[[],[[14,[38]]]],[343,105],[[[9,[343,8]]],106],[[343,94],[[14,[29]]]],[343,107],[[],38],[[],[[14,[38]]]],[[],38],[[451,49]],[[451,49],481],[451,343],[[451,49],[[14,[343]]]],[[343,226],12],[[343,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[349,350]],[350],[[],38],[[]],[481],[343,7],0,0,[343,75],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[451,7],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],[[14,[38]]]],[[],99],[[],38],[[],14],[[],14],[[],14],[[],14],[[],14],[[349,[352,[351]]]],[[[354,[353]]]],[[]],[[]],[[]],[[]],[[]],[[[253,[343,343,[251,[250]],252]],34,76]],0,0,0,0,0,0,0,0,0,0,0,[[445,34]],[[445,34]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[483,[482]]]],[[[484,[482]]]],[[[485,[482]],[483,[482]]]],[[[486,[482]]],[[486,[482]]]],[[]],[[],[[9,[22,8]]]],[[[486,[482]],[486,[482]]],74],[[],74],[[[487,[482]]],7],[[[488,[482]]],7],[[],[[483,[482]]]],[[],[[485,[482]]]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[483,[482]]],215],[7],[7],[7],[7],[7],[7],[7],[15,29],[30],[[[486,[482]],[486,[482]]],29],[[],29],[[],29],[[],29],[[],29],[[[86,[[483,[482]]]]],29],[[[165,[[483,[482]]]]]],[[[483,[482]],489]],[[[486,[482]],31],[[12,[32]]]],[[[486,[482]],31],[[12,[32]]]],[[[483,[[0,[490,482]]]],31],[[12,[32]]]],[[[484,[[0,[490,482]]]],31],[[12,[32]]]],[[[485,[[0,[490,482]]]],31],[[12,[32]]]],[[[487,[[0,[490,482]]]],31],[[12,[32]]]],[[[488,[[0,[490,482]]]],31],[[12,[32]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[34],[34],[[[483,[482]],7],14],[[445,214,346]],[[445,214,346]],[[[483,[482]]],[[485,[482]]]],[[[483,[482]]],[[485,[482]]]],[[[486,[482]],30]],0,[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[34,445]],[[34,445]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[483,[482]]],29],[[[484,[482]]],29],[[[485,[482]],[483,[482]]],29],[[[484,[482]]],[[487,[482]]]],[[[485,[482]],[483,[482]]],[[487,[482]]]],[[[483,[482]]],491],[[[484,[482]]],[[488,[482]]]],[[[485,[482]],[483,[482]]],[[488,[482]]]],[[[487,[482]]],14],[[[488,[482]]],14],[[[483,[482]]],7],[[[484,[482]]],7],[[[485,[482]],[483,[482]]],7],[[[487,[482]]],7],[[[488,[482]]],7],[[[485,[482]],[483,[482]]],7],[[[485,[482]],[483,[482]]],[[488,[482]]]],[[349,445]],[[349,445]],[[[487,[482]]],14],[[[488,[482]]],14],[[[487,[482]],7],14],[[[488,[482]],7],14],[[]],[[]],[[[483,[482]]],7],[[[483,[482]]],7],[[[486,[482]],[486,[482]]],[[14,[74]]]],[[[484,[482]]],[[487,[482]]]],[[[485,[482]],[483,[482]]],[[487,[482]]]],[[[484,[482]]],[[488,[482]]]],[[[485,[482]],[483,[482]]],[[488,[482]]]],[[[483,[482]],482]],[[[167,[482]],482]],[[[167,[482]],489]],[[[483,[284,482]]]],[[[167,[284,482]]]],[[[487,[482]]]],[[[488,[482]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],141],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[[483,[482]]]],[[[483,[482]]],215],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[488,[482]]],[[487,[482]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[492,[[35,[[9,[493,8]]]]]],[492,[[35,[[9,[28,8]]]]]],[492,[[35,[[9,[493,8]]]]]],[492,[[35,[[9,[28,8]]]]]],[[],[[35,[[9,[493,8]]]]]],[[],[[35,[[9,[28,8]]]]]],[494,[[496,[495]]]],[[],25],[[],[[0,[25,261]]]],[34],[34],[34],[[],[[352,[351]]]],[492,[[35,[[9,[493,8]]]]]],[492,[[35,[[9,[28,8]]]]]],[[]],[[],[[35,[[9,[493,8]]]]]],[[],[[35,[[9,[28,8]]]]]],[346],[[],[[352,[353]]]],[[[497,[490]]]],[[],[[79,[[9,[28,8]],8]]]],[[[0,[494,261]]],[[35,[[9,[493,8]]]]]],[[],[[9,[28,8]]]],[[[497,[[12,[490]]]]]],0,[34],[[],346],[497],0,[28,[[35,[[9,[493,8]]]]]],[28,[[35,[[9,[28,8]]]]]],[498,[[0,[25,261]]]],[[[497,[490]]]],[34],[[]],[[]],[[],29],[[],29],[[],29],[[],29],[[],29],[[],346],[[[0,[143,218,25]]],[[499,[[0,[143,218,25]]]]]],[[],[[348,[38]]]],[[[501,[500]]],[[499,[502]]]],[[],[[0,[25,261]]]],[494,[[496,[503]]]],[501,[[496,[504]]]],[[],14],[[],[[0,[25,261]]]],[[],[[0,[25,261]]]],[[],[[0,[25,261]]]],[[[0,[138,[505,[[0,[138,[505,[[0,[138,[505,[[0,[138,[505,[[0,[138,505]]]]]]]]]]]]]]]]]]],25],[[],[[0,[25,261]]]],[[],[[0,[25,261]]]],[[[0,[138,[505,[[0,[138,[505,[[0,[138,[505,[[0,[138,[505,[[0,[138,505]]]]]]]]]]]]]]]]]]],25],[[],[[0,[25,261]]]],[[]],[34],[494,[[35,[[9,[493,8]]]]]],[494,[[35,[[9,[28,8]]]]]],[[],[[0,[25,261]]]],[34],[214],[[]],[[],29],[346],[346],[[],[[0,[25,261]]]],[[],[[0,[25,261]]]],[498,[[0,[25,261]]]],[[],[[14,[13]]]],0,[[],13],[[[497,[[12,[490]]]]]],[214],[[[497,[[12,[490]]]]]],0,0,0,0,0,0,0,0,[506,[[507,[51]]]],[[]],[[]],[[],508],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[354,[509]]],[[352,[509]]]],[[[354,[509]]],[[352,[509]]]],[[[510,[509]],[354,[509]]]],[[[352,[509]],509]],[[[354,[509]],509]],[[[352,[509]],509]],[[[354,[509]],509]],[[[354,[509]],509]],[[[354,[509]],509]],[[[354,[509]],[354,[509]]]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[513,[511,512]]],[[513,[[514,[511]],512]]]],[[[513,[511,512]]],513],0,[[515,7],515],0,[[[516,[511,512]],515],[[516,[511,512]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[352,[509]]]],[[[510,[509]]]],[[[352,[[0,[261,509]]]]],[[352,[[0,[261,509]]]]]],[[[354,[[0,[261,509]]]]],[[354,[[0,[261,509]]]]]],[[[510,[[0,[261,509]]]]],[[510,[[0,[261,509]]]]]],[517,517],[515,515],[[]],[[]],[[]],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[[510,[509]]],[[352,[509]]]],[[],[[352,[509]]]],[[],[[354,[509]]]],[[],[[510,[509]]]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[15,29],[15,29],[15,29],[15,29],[[[352,[[0,[[505,[[0,[[505,[[0,[[505,[[0,[505,509]]]],509]]]],509]]]],509]]]],[352,[[0,[[505,[[0,[[505,[[0,[[505,[[0,[505,509]]]],509]]]],509]]]],509]]]]],29],[[[354,[[0,[[505,[[0,[[505,[[0,[[505,[[0,[505,509]]]],509]]]],509]]]],509]]]],[354,[[0,[[505,[[0,[[505,[[0,[[505,[[0,[505,509]]]],509]]]],509]]]],509]]]]],29],[[517,517],29],[[518,518],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[[352,[509]],[352,[509]]]],[[[354,[509]],[354,[509]]]],[[[510,[509]],[510,[509]]]],[[[354,[509]],[354,[509]]]],[[343,344]],[[343,344]],[[343,344]],[[343,344]],[[343,344]],[[343,344]],[[343,344]],[[343,344]],[[343,344]],[[343,344]],[[343,344]],[[343,344]],[[343,344]],[[343,344]],[[343,344]],[[343,344]],[[343,344]],[[343,344]],[[343,344]],[[343,344]],[[343,344]],[[343,344]],[[343,344]],[[343,344]],[[343,344]],[[343,344]],[[343,344]],[[343,344]],[[343,344]],[[343,344]],[[343,344]],[[343,344]],[[343,344]],[[343,344]],[[343,344]],[[343,344]],[[343,344]],[[343,344]],[[343,344]],[[[519,[511,512,215]]],14],[[[520,[511,512]]],[[14,[47]]]],[[343,344],29],[[343,344],29],[[343,344],29],[[343,344],29],[[343,344],29],[[343,344],29],[[343,344],29],[[343,344],29],[[343,344],29],[[343,344],29],[[343,344],29],[[343,344],29],[[343,344],29],[[343,344],29],[[343,344],29],[[343,344],29],[[343,344],29],[[343,344],29],[[343,344],29],[7,515],[[[513,[511,512]],31],[[12,[32]]]],[[[352,[[0,[509,490]]]],31],[[12,[32]]]],[[[354,[[0,[490,509]]]],31],[[12,[32]]]],[[[510,[[0,[490,509]]]],31],[[12,[32]]]],[[517,31],[[12,[32]]]],[[517,31],[[12,[32]]]],[[518,31],[[12,[32]]]],[[518,31],[[12,[32]]]],[[521,31],[[12,[32]]]],[[521,31],[[12,[32]]]],[[[516,[511,512]],[0,[142,143,218,261]]]],[[[513,[511,512]],34,25]],[[[516,[511,512]],[0,[142,143,218,261]]]],[[[513,[511,512]],34,25]],[[[513,[511,512]],214,25]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[354,[509]]],[[510,[509]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[34,[[513,[511,512]]]],[34],[34],[34],[[[513,[511,512]],34,343],[[12,[517]]]],[[[513,[511,512]],214,343,346,346],[[12,[[470,[475]],518]]]],[[[352,[509]],[352,[509]]],[[79,[509,8]]]],[[[354,[509]],[354,[509]]],[[79,[509,8]]]],[[[510,[509]],[510,[509]]],[[79,[509,8]]]],[[[510,[509]],[354,[509]]],[[79,[509,8]]]],[[[513,[511,512]],34,343],[[12,[517]]]],[[[513,[511,512]],34,[47,[343]]],[[12,[47,517]]]],[[[513,[511,512]],34,[47,[343]]],[[12,[47,517]]]],[[[513,[511,512]],34,343],[[12,[517]]]],[445],[[[513,[511,512]],34],[[12,[521]]]],[[[513,[511,512]],34],[[12,[521]]]],[[[513,[511,512]],214],[[12,[521]]]],[[[513,[511,512]],214,346,346],[[12,[521]]]],[[[513,[511,512]],214,343],[[12,[517]]]],[[[352,[509]],7]],[[[352,[509]]],29],[[[352,[509]]],29],[[[352,[509]],509],29],[[[352,[509]]],29],[[[352,[509]],509],29],[[[352,[509]]],29],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[34,445]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[214,346,346]],[[214,346,346]],[[214,346,346]],[[214,346,346]],[[214,346,346]],[[214,346,346]],[[214,346,346]],[[214,346,346]],[[214,346,346]],[[214,346,346]],[[214,346,346]],[[214,346,346]],[[214,346,346]],[[214,346,346]],[[214,346,346]],[[214,346,346]],[[214,346,346]],[[214,346,346]],[[214,346,346]],[[214,353,346,346]],[[214,353,346,346]],[[214,346,346]],[[214,346,346]],[[214,346,346]],[[214,346,346]],[[214,346,346]],[[214,346,346]],[[214,346,346]],[[214,346,346]],[[214,346,346]],[[214,346,346]],[[214,346,346]],[[214,346,346]],[[214,346,346]],[[214,346,346]],[[214,346,346]],[[214,346,346]],[[214,353,346,346]],[[214,353,346,346]],[34],[34,353],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34,353],[34,353],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34,353],[34,353],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[352,[509]],[352,[509]]],29],[[[354,[509]],[354,[509]]],29],[[[510,[509]],[510,[509]]],29],[[[513,[511,512]],34,346,346],29],[[[513,[511,512]],34],522],[[[513,[511,512]],34],520],[[[513,[511,512]],34],[[520,[511,512]]]],[[[513,[511,512]],214],[[520,[511,512]]]],[[[513,[511,512]],34],522],[[[513,[511,512]],34,489],519],[[[513,[511,512]],34,489],519],[[[513,[511,512]],34,489],[[519,[511,512]]]],[[[513,[511,512]],34],[[522,[511,512]]]],[[[513,[511,512]],214],[[522,[511,512]]]],[[[522,[511,[0,[512,523]]]]],7],[142,29],[142,29],[142,29],[142,29],[142,29],[142,29],[142,29],[142,29],[142,29],[142,29],[142,29],[142,29],[142,29],[142,29],[142,29],[142,29],[142,29],[142,29],[142,29],[[353,142],29],[[353,142],29],[142,29],[142,29],[142,29],[142,29],[142,29],[142,29],[142,29],[142,29],[142,29],[142,29],[142,29],[142,29],[142,29],[142,29],[142,29],[142,29],[[353,142],29],[[353,142],29],[[515,7],515],[[515,7],515],[34,[[513,[511,512]]]],[[],[[352,[509]]]],[[],515],[[[513,[511,512]],349]],[[[522,[511,512]]],14],[[[519,[512,512,215]]],14],[[[520,[512,512]]],14],[[]],[[]],[[]],[[[513,[511,512]],34],516],[[[513,[511,512]],34],[[516,[511,512]]]],[[[352,[509]]]],[[[354,[509]]]],[[[352,[509]]],215],[[[352,[509]]],215],[[349,350]],[[349,350]],[[349,350]],[[349,350]],[[349,350]],[[349,350]],[[349,350]],[[349,350]],[[349,350]],[[349,350]],[[349,350]],[[349,350]],[[349,350]],[[349,350]],[[349,350]],[[349,350]],[[349,350]],[[349,350]],[[349,350]],[[353,349,350]],[[353,349,350]],[[349,350]],[[349,350]],[[349,350]],[[349,350]],[[349,350]],[[349,350]],[[349,350]],[[349,350]],[[349,350]],[[349,350]],[[349,350]],[[349,350]],[[349,350]],[[349,350]],[[349,350]],[[349,350]],[[353,349,350]],[[353,349,350]],[350],[350],[350],[350],[350],[350],[350],[350],[350],[350],[350],[350],[350],[350],[350],[350],[350],[350],[350],[[353,350]],[350],[350],[350],[350],[350],[350],[350],[350],[350],[350],[350],[350],[350],[350],[350],[350],[350],[[353,350]],[[353,350]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[513,[511,512]],34]],[[[513,[511,512]],34]],[[[522,[511,512]]]],[[[519,[512,512,215]]]],[[[520,[512,512]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],141],[[],141],[[],141],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[349,[352,[351]]]],[[349,[352,[351]]]],[[349,[352,[351]]]],[[349,[352,[351]]]],[[349,[352,[351]]]],[[349,[352,[351]]]],[[349,[352,[351]]]],[[349,[352,[351]]]],[[349,[352,[351]]]],[[349,[352,[351]]]],[[349,[352,[351]]]],[[349,[352,[351]]]],[[349,[352,[351]]]],[[349,[352,[351]]]],[[349,[352,[351]]]],[[349,[352,[351]]]],[[349,[352,[351]]]],[[349,[352,[351]]]],[[349,[352,[351]]]],[[353,349,[352,[351]]]],[[353,349,[352,[351]]]],[[349,[352,[351]]]],[[349,[352,[351]]]],[[349,[352,[351]]]],[[349,[352,[351]]]],[[349,[352,[351]]]],[[349,[352,[351]]]],[[349,[352,[351]]]],[[349,[352,[351]]]],[[349,[352,[351]]]],[[349,[352,[351]]]],[[349,[352,[351]]]],[[349,[352,[351]]]],[[349,[352,[351]]]],[[349,[352,[351]]]],[[349,[352,[351]]]],[[349,[352,[351]]]],[[353,349,[352,[351]]]],[[353,349,[352,[351]]]],[[[513,[511,512]],34]],[[[513,[511,512]],214]],[[[354,[353]]]],[[[354,[353]]]],[[[354,[353]]]],[[[354,[353]]]],[[[354,[353]]]],[[[354,[353]]]],[[[354,[353]]]],[[[354,[353]]]],[[[354,[353]]]],[[[354,[353]]]],[[[354,[353]]]],[[[354,[353]]]],[[[354,[353]]]],[[[354,[353]]]],[[[354,[353]]]],[[[354,[353]]]],[[[354,[353]]]],[[[354,[353]]]],[[[354,[353]]]],[[353,[354,[353]]]],[[353,[354,[353]]]],[[[354,[353]]]],[[[354,[353]]]],[[[354,[353]]]],[[[354,[353]]]],[[[354,[353]]]],[[[354,[353]]]],[[[354,[353]]]],[[[354,[353]]]],[[[354,[353]]]],[[[354,[353]]]],[[[354,[353]]]],[[[354,[353]]]],[[[354,[353]]]],[[[354,[353]]]],[[[354,[353]]]],[[[354,[353]]]],[[353,[354,[353]]]],[[353,[354,[353]]]],[[[513,[511,512]],524]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[352,[509]]]],[[[354,[509]]]],[[[352,[509]]],215],0,0,0,0,0,0,0,0,0,[[525,526,94,527]],[[528,526,94]],[[529,34,94]],0,0,0,[[525,526,94,527]],[[528,526,94]],[[529,34,94]],0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[525,525],[530,530],[528,528],[531,531],[532,532],[529,529],[533,533],[534,534],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[528,535],29],0,[[528,34,34,343,343]],[[529,34,34]],0,0,[[],534],[7],[7],[7],[7],[7],[7],[7],[534],[7],[7],[7],[7],[7],[7],[7],[7],[7],[534],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[7],[7],[7],[525,530],[528,531],[529,533],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],525],[[],528],[[],532],[[],529],[[525,34],[[9,[94,8]]]],[[528,34],[[9,[94,8]]]],[34],0,0,[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[525,526,94]],[[528,526,94]],[[529,34,94]],0,0,0,[[[9,[94,8]]]],[[[9,[94,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[532,34,[253,[343,343,[251,[250]],252]]]],[[532,34,[253,[343,343,[251,[250]],252]],[52,[343]]]],[530,525],[[],530],[531,528],[[],531],[[529,533],529],[[],533],[[]],[[528,535],[[14,[94]]]],[[529,34],[[14,[94]]]],0,0,[[528,526],[[14,[[470,[94]]]]]],[[529,34],[[14,[[470,[94]]]]]],0,[[528,536],[[14,[[470,[94]]]]]],[[529,214],[[14,[[470,[94]]]]]],0,0,[[525,526]],[[528,526]],[[529,34]],0,0,0,[[[77,[[348,[38]]]]]],[[[77,[[348,[38]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[445,34]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[537,[475]]]],[479,479],[[]],[[],[[9,[22,8]]]],[[],[[538,[475]]]],[[],539],[7],[7],[[[538,[475]]]],[7],[7],[7],[[[538,[475]]]],[7],[7],[7],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[[[537,[475]]],[[14,[[483,[479]]]]]],[[479,31],[[12,[32]]]],[[[538,[[0,[490,475]]]],31],[[12,[32]]]],[[539,31],[[12,[32]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[34],[34],[[539,[77,[353]]],[[14,[[483,[479]]]]]],[[445,214,346]],[[445,214,346]],[[],7],[[],7],[[],7],[[],7],[[34,445]],[[34,445]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],[[]],[[]],[[[537,[475]]],29],[[[537,[475]]],[[543,[[542,[[541,[[540,[[487,[479]]]]]]]]]]]],[[[537,[475]]],[[543,[[542,[[541,[[488,[479]]]]]]]]]],[[[537,[475]]],7],[[],539],[[349,445]],[[]],[[]],[[[537,[475]]],[[543,[[542,[[541,[[540,[[487,[479]]]]]]]]]]]],[[[537,[475]]],[[543,[[542,[[541,[[488,[479]]]]]]]]]],[[[537,[475]]],[[485,[479]]]],[[[537,[475]]],[[485,[479]]]],[[[537,[475]]],14],[[539,[77,[353]],343]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[539],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[111,113],111],[[[35,[[9,[28,8]]]],492],[[35,[[9,[28,8]]]]]],[[[35,[[9,[493,8]]]],492],[[35,[[9,[493,8]]]]]],[492,[[35,[[9,[493,8]]]]]],[492,[[35,[[9,[28,8]]]]]],[[544,34]],[[544,34]],0,[[[35,[[9,[28,8]]]],492],[[35,[[9,[28,8]]]]]],[[[35,[[9,[493,8]]]],492],[[35,[[9,[493,8]]]]]],[492,[[35,[[9,[493,8]]]]]],[492,[[35,[[9,[28,8]]]]]],[[[35,[[9,[493,8]]]]],[[35,[[9,[493,8]]]]]],[[[35,[[9,[28,8]]]]],[[35,[[9,[28,8]]]]]],[[],[[35,[[9,[493,8]]]]]],[[],[[35,[[9,[28,8]]]]]],[494,[[496,[495]]]],[[[546,[[0,[498,545,160]]]],94]],[[[547,[[0,[498,160]]]],94]],[34],[[111,34]],[34],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[546,[[0,[498,545,160]]]]],1],[[[547,[[0,[498,160]]]]],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[546,[[0,[498,545,160]]]]],1],[[],1],[[[547,[[0,[498,160]]]]],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],15],[[],15],[[],15],[[],15],[[[548,[498]]],15],[[],15],[[[549,[498]]],15],[[],15],[[[550,[498]]],15],[[],15],[112,112],[[[548,[498]]],112],[[[549,[498]]],112],[[[550,[498]]],112],[[[546,[[0,[498,545,160]]]]],94],[[[547,[[0,[498,160]]]]],94],[[[546,[[0,[498,545,160]]]]],94],[[[547,[[0,[498,160]]]]],94],[[[35,[[9,[28,8]]]],492],[[35,[[9,[28,8]]]]]],[[[35,[[9,[493,8]]]],492],[[35,[[9,[493,8]]]]]],[492,[[35,[[9,[493,8]]]]]],[492,[[35,[[9,[28,8]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[551,23,[9,[112,8]],[552,[353,8]]],[[12,[553,554]]]],[555,[[52,[556]]]],[[[35,[[9,[493,8]]]]],[[35,[[9,[493,8]]]]]],[[[35,[[9,[28,8]]]]],[[35,[[9,[28,8]]]]]],[[],[[35,[[9,[493,8]]]]]],[[],[[35,[[9,[28,8]]]]]],[557,557],[558,558],[559,559],[556,556],[560,560],[133,133],[561,561],[[[548,[[0,[261,498]]]]],[[548,[[0,[261,498]]]]]],[[[549,[[0,[261,498]]]]],[[549,[[0,[261,498]]]]]],[[[550,[[0,[261,498]]]]],[[550,[[0,[261,498]]]]]],[[[546,[[0,[498,545,160]]]]],367],[[[547,[[0,[498,160]]]]],367],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[[546,[[0,[498,545,160]]]]],[[9,[94,8]]]],[[[547,[[0,[498,160]]]]],[[9,[94,8]]]],[[556,556],74],0,[[],74],[[544,133]],[[111,134],111],[[111,134],111],[551,52],[[551,52,23],215],[[544,112],29],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],562],[[],111],[[],558],[[],563],[[],564],[[],559],[[],553],[[],544],[[],555],[[],551],[[],133],[[],[[546,[[0,[284,498]]]]]],[[],[[547,[[0,[284,498]]]]]],[551,555],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[[546,[498]]]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[[35,[[9,[493,8]]]],[0,[494,261]]],[[35,[[9,[493,8]]]]]],[[[0,[494,261]]],[[35,[[9,[493,8]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[],[[9,[28,8]]]],[[],[[9,[112,8]]]],[557,[[9,[28,8]]]],[561,[[9,[28,8]]]],[[[548,[498]]],[[9,[112,8]]]],[[[549,[498]]],[[9,[112,8]]]],[[[550,[498]]],[[9,[112,8]]]],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[30],[30],[30],[30],[[[548,[498]],30]],[30],[30],[[[549,[498]],30]],[30],[[[550,[498]],30]],[[28,28],29],[[557,557],29],[[559,559],29],[[556,556],29],[[560,560],29],[[112,112],29],[[561,561],29],[[[548,[[0,[[505,[[0,[[505,[[0,[[505,[[0,[505,498]]]],498]]]],498]]]],498]]]],[548,[[0,[[505,[[0,[[505,[[0,[[505,[[0,[505,498]]]],498]]]],498]]]],498]]]]],29],[[[549,[[0,[[505,[[0,[[505,[[0,[[505,[[0,[505,498]]]],498]]]],498]]]],498]]]],[549,[[0,[[505,[[0,[[505,[[0,[[505,[[0,[505,498]]]],498]]]],498]]]],498]]]]],29],[[[550,[[0,[[505,[[0,[[505,[[0,[[505,[[0,[505,498]]]],498]]]],498]]]],498]]]],[550,[[0,[[505,[[0,[[505,[[0,[[505,[[0,[505,498]]]],498]]]],498]]]],498]]]]],29],[[[546,[498]],498],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[[546,[[0,[498,545,160]]]],7],[[14,[94]]]],[[[547,[[0,[498,160]]]],7],[[14,[94]]]],[[[546,[[0,[498,545,160]]]]],7],[[[547,[[0,[498,160]]]]],7],[[[546,[[0,[498,545,160]]]],7],[[14,[94]]]],[[[547,[[0,[498,160]]]],7],[[14,[94]]]],[[557,31],[[12,[32]]]],[[559,31],[[12,[32]]]],[[556,31],[[12,[32]]]],[[554,31],[[12,[32]]]],[[554,31],[[12,[32]]]],[[560,31],[[12,[32]]]],[[133,31],[[12,[32]]]],[[561,31],[[12,[32]]]],[[[548,[[0,[490,498]]]],31],[[12,[32]]]],[[[549,[[0,[490,498]]]],31],[[12,[32]]]],[[[550,[[0,[490,498]]]],31],[[12,[32]]]],[[[546,[[0,[490,498]]]],31],[[12,[32]]]],[[[547,[[0,[490,498]]]],31],[[12,[32]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[94,[[14,[[546,[[0,[498,545,160]]]]]]]],[94,[[14,[[547,[[0,[498,160]]]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[[544,112],[[14,[111]]]],[[[546,[498]]],498],[111,133],[111,559],[7,[[14,[94]]]],[7,[[14,[94]]]],[7,[[14,[94]]]],[7,[[14,[94]]]],[[544,112],[[14,[111]]]],[[[546,[[0,[498,545,160]]]]],[[14,[99]]]],[[[547,[[0,[498,160]]]]],[[14,[99]]]],[[551,556],[[14,[28]]]],[[551,556],[[14,[493]]]],[[],100],[[],100],[111,551],[555,[[566,[556,565]]]],[111,551],[[28,30]],[[557,30]],[[556,30]],[[112,30]],[[561,30]],[[[548,[[0,[567,498]]]],30]],[[[549,[[0,[567,498]]]],30]],[[[550,[[0,[567,498]]]],30]],[551,555],0,0,[[]],[[[35,[[9,[493,8]]]],28],[[35,[[9,[493,8]]]]]],[[[35,[[9,[28,8]]]],28],[[35,[[9,[28,8]]]]]],[28,[[35,[[9,[493,8]]]]]],[28,[[35,[[9,[28,8]]]]]],[[35,[9,[28,8]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[111,34],[[12,[554]]]],[[551,34]],[[],13],[[544,111],[[14,[111]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[[546,[[0,[498,545,160]]]],8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[[547,[[0,[498,160]]]],8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[],[[35,[[9,[28,8]]]]]],[[],[[35,[[9,[28,8]]]]]],[[[9,[[546,[[0,[498,545,160]]]],8]]],[[9,[94,8]]]],[[[9,[[547,[[0,[498,160]]]],8]]],[[9,[94,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],29],[561,29],[556,29],[556,29],[544,215],[[[546,[[0,[498,545,160]]]]],368],[[[547,[[0,[498,160]]]]],368],[544,215],[544,215],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],562],[112,111],[[],558],[[],563],[[],564],[[],553],[[],544],[[],551],[[],133],[498,[[546,[498]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[494,[[496,[503]]]],[[556,556],[[14,[74]]]],[[544,23]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[[546,[[0,[498,545,160]]]]],105],[[[547,[[0,[498,160]]]]],105],[[[9,[[546,[[0,[498,545,160]]]],8]]],106],[[[9,[[547,[[0,[498,160]]]],8]]],106],[[[546,[[0,[498,545,160]]]],94],[[14,[29]]]],[[[547,[[0,[498,160]]]],94],[[14,[29]]]],[[[546,[[0,[498,545,160]]]]],107],[[[547,[[0,[498,160]]]]],107],[[],38],[[],38],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],38],[[],38],[[544,112],[[14,[111]]]],[[544,112],14],0,[[111,34]],[34],[[[35,[[9,[28,8]]]],494],[[35,[[9,[28,8]]]]]],[[[35,[[9,[493,8]]]],494],[[35,[[9,[493,8]]]]]],[494,[[35,[[9,[493,8]]]]]],[494,[[35,[[9,[28,8]]]]]],[[35,[9,[568,8]]]],[[[546,[[0,[498,545,160]]]],[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[[547,[[0,[498,160]]]],[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[[547,[498]],498]],[[111,29],111],[[551,556],28],[[111,133],111],[[111,559],111],[[],38],[[],38],[[551,556],493],[551,215],[[],[[14,[13]]]],[557,[[14,[13]]]],[551,215],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],141],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],99],[[],99],[[],38],[[],38],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],25],[[],[[0,[25,261]]]],[498,[[0,[25,261]]]],[[[501,[500]]],[[499,[502]]]],[[],[[0,[25,261]]]],[[],[[0,[25,261]]]],[[],[[0,[25,261]]]],[[],[[0,[25,261]]]],[[[0,[138,[505,[[0,[138,[505,[[0,[138,[505,[[0,[138,[505,[[0,[138,505]]]]]]]]]]]]]]]]]]],25],[[],[[0,[25,261]]]],[[],[[0,[25,261]]]],[[[0,[138,[505,[[0,[138,[505,[[0,[138,[505,[[0,[138,[505,[[0,[138,505]]]]]]]]]]]]]]]]]]],25],[[],[[0,[25,261]]]],[[],[[0,[25,261]]]],[[],[[0,[25,261]]]],[[],[[0,[25,261]]]],[498,[[0,[25,261]]]],0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[569,[509]]],7],[570],[[[569,[509]]]],[571],[463,463],[344,344],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[350,7],[[572,343],29],[[[569,[509]],509],29],[[],573],[[],570],[[],[[569,[509]]]],[[],574],[[],24],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[575],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[15,29],[15,29],[[],463],[350,[[52,[343]]]],[350,7],[350,7],[[463,463],29],[[344,344],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[572,31],[[12,[32]]]],[[[569,[490,490]],31],[[12,[32]]]],[[463,31],[[12,[32]]]],[[344,31],[[12,[32]]]],[[571,31],[[12,[32]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[34],[34],[34],[34],[34],[[573,463],[[14,[350]]]],[[570,353],[[14,[575]]]],[[572,343],[[14,[[469,[467]]]]]],[[[569,[509]],509],14],[[574,353],[[14,[572]]]],[[571,344],14],[[572,343],[[14,[[576,[346]]]]]],[[571,344],[[14,[[576,[346]]]]]],[[571,344],[[576,[346]]]],[571,[[52,[[576,[346]]]]]],[[572,343],[[14,[[576,[346]]]]]],[[571,344],[[14,[[576,[346]]]]]],[[571,344],[[576,[346]]]],[571,[[52,[[576,[346]]]]]],[[350,353],[[14,[571]]]],[575,[[14,[[469,[467]]]]]],[[571,344],[[14,[[469,[467]]]]]],[[571,344],[[14,[[468,[467]]]]]],[571,[[469,[467]]]],[571,[[52,[576]]]],[[571,344],[[469,[467]]]],[[[569,[509]],509],14],[[[569,[509]],509,76]],[7],[575,[[14,[471]]]],[[572,343],[[14,[471]]]],[[571,344],[[14,[471]]]],[[571,344],471],[[572,343],14],[[350,353],29],[575,351],[[573,463]],[463,7],[344,7],[[573,463]],[[[569,[509]]],215],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[[569,[509]],509]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[350,29],[573,29],[570,29],[572,29],[[[569,[509]]],29],[574,29],[571,29],[575,29],[571,477],[350,215],[573,[[577,[350]]]],[570,215],[[[569,[509]]],215],[574,215],[[[569,[509]]],215],[573,7],[570,7],[572,7],[[[569,[509]]],7],[574,7],[571,7],[[],569],[7,463],[7,344],0,[[]],[[]],[[]],[[]],[[]],[[[569,[509]],509],14],0,[[],7],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[[569,[509]]],215],[[[569,[509]]],215],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7,[[569,[509]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[76],[[578,579],578],[[386,580]],[[578,343],578],[34],[[343,34]],[[445,34]],[[[581,[579]],34]],[[[582,[[0,[489,143,218]]]],34]],[[[584,[[0,[489,143,218]],583]],34]],[[[585,[583]],34]],[[[586,[583]],34]],[[[588,[[0,[138,587]]]],34]],[[[589,[138]],34]],[[[590,[138]],34]],[[591,34]],[[[593,[592]],34]],[[445,34]],[[445,34]],[[445,34]],[[445,34]],[[445,34]],[[445,34]],[[445,34]],[[445,34]],[[445,34]],[[445,34]],[[445,34]],[[594,445,34]],[[594,34]],[[445,34]],[[445,34]],[[[595,[583]],34]],[[596,34]],[[[597,[583]],34]],[[598,34]],[34],[[[496,[[599,[493,493]],493,493]],34]],[[[601,[600]],34]],[[[603,[602]],34]],[[[499,[[604,[493]],493]],34]],[[],[[352,[351]]]],[[[496,[[599,[493,493]],493,493]]],[[352,[351]]]],[[[601,[600]]],[[352,[351]]]],[[[603,[602]]],[[352,[351]]]],[[[499,[[604,[493]],493]]],[[352,[351]]]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[165,[78,[0,[138,170]]]]],470],[[[605,[78,170]]],470],[[],15],[[[165,[138]]],138],[605],[[[86,[138]]],138],[[[165,[138]]],138],[605],[606,38],[501],[501],[501],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[[165,[[0,[138,170]]]]]],[[[605,[170]]]],[346],[[[496,[[599,[493,493]],493,493]],346]],[[[601,[600]],346]],[[[603,[602]],346]],[[[499,[[604,[493]],493]],346]],[578,578],[[[86,[138]]],[[86,[138]]]],[[[496,[261,261]]],[[496,[261,261]]]],[[[603,[[0,[602,261]]]]],[[603,[[0,[602,261]]]]]],[[[499,[261,261]]],[[499,[261,261]]]],[445,445],[607,607],[598,598],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[76,76]],[[608,76]],[578,386],[[[89,[511,512]],343],475],[[],[[352,[353]]]],[[[496,[[599,[493,493]],493,493]]],[[352,[353]]]],[[[601,[600]]],[[352,[353]]]],[[[603,[602]]],[[352,[353]]]],[[[499,[[604,[493]],493]]],[[352,[353]]]],[[[89,[511,512]],343],[[470,[475]]]],[[[89,[511,512]],343],29],[[],594],[[[496,[[599,[493,493]],493,493]]],[[79,[[9,[28,8]],8]]]],[[[601,[600]]],[[79,[[9,[28,8]],8]]]],[[[603,[602]]],[[79,[[9,[28,8]],8]]]],[[],[[79,[[9,[28,8]],8]]]],[[[499,[[604,[493]],493]]],[[79,[[9,[28,8]],8]]]],[[[86,[[0,[138,170]]]]]],[7],[[[165,[[0,[138,170]]]]]],[7],[[[605,[170]]]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[[610,[609]]]],[7],[7],[611],[7],[[[612,[592]]]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[[149,[[0,[587,143]]]]]],[7],[606],[7],[7],[7],[7],[7],[[[165,[[0,[138,170]]]]]],[7],[7],[[[605,[170]]]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[[610,[609]]]],[7],[[[612,[592]]]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[[149,[[0,[587,143]]]]]],[7],[7],[7],[7],[7],[578],[578,578],[578],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[15,29],[30],[[386,343],578],0,0,0,0,[[607,607],29],[[],29],[[],29],[[],29],[[],29],[[[86,[[0,[138,490,170]]]],31],[[12,[32]]]],[[[165,[[0,[138,490,170]]]],31],[[12,[32]]]],[[[605,[[0,[490,170]]]],31],[[12,[32]]]],[[[89,[511,512]],31],[[12,[32]]]],[[493,31],[[12,[32]]]],[[[611,[490]],31],[[12,[32]]]],[[[595,[490]],31],[[12,[32]]]],[[596,31],[[12,[32]]]],[[[597,[490]],31],[[12,[32]]]],[[[149,[[0,[490,587,143]]]],31],[[12,[32]]]],[[613,31],[[12,[32]]]],[[606,31],[[12,[32]]]],[[606,31],[[12,[32]]]],[[607,31],[[12,[32]]]],[[598,31],[[12,[32]]]],[[614,31],[[12,[32]]]],[[[89,[511,512]],25]],[[[89,[511,512]],25]],[[[165,[138]]],[[86,[138]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[605,611],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[34,[[593,[592]]]],[34],[[[593,[615,592]],34]],[[[89,[511,512]],343],[[12,[517]]]],[[[89,[511,512]],343],[[12,[475,518]]]],[[[89,[511,512]],343],[[12,[[470,[475]],518]]]],[[[89,[511,512]],343],[[12,[[470,[475]],518]]]],[[386,343],[[14,[578]]]],[[[89,[512,512]],343],[[12,[517]]]],[[],346],[[[496,[[599,[493,493]],493,493]]],346],[[[601,[600]]],346],[[[603,[602]]],346],[[[499,[[604,[493]],493]]],346],[[[593,[615,592]],34]],[[[593,[592]],34]],[[[89,[511,512]],[47,[343]]],[[12,[47,517]]]],[[[89,[511,512]],[47,[343]]],[[12,[47,517]]]],[[[593,[592]],34]],[[[89,[511,512]],343],[[12,[517]]]],[[386,343],578],[445],[[445,214,346]],[[445,214,346]],[[445,214,346]],[[445,214,346]],[445],[[445,214,346]],[[445,214,346]],[[445,214,346]],[[445,214,346]],[[445,214,346]],[[445,214,346]],[[445,214,346]],[[445,214,346]],[[445,214,346]],[[445,214,346]],[[445,214,346]],[[445,214,346]],[[445,214,346]],[[445,214,346]],[[445,214,346]],[445],[[445,214,346]],[[445,214,346]],[[[89,[511,512]]],[[12,[521]]]],[[[89,[511,512]]],[[12,[521]]]],[[[89,[511,512]],343],[[12,[517]]]],[[[593,[592]],214]],[[607,30]],[578,343],[[34,445]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[34,445]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[34,445]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[386],[[34,445]],[[34,445]],[[34,445]],[[34,445]],[[34,445]],[[34,445]],[[34,445]],[[34,445]],[[34,445]],[[34,445]],[[34,445]],[[34,445]],[[34,445]],[[34,445]],[[34,445]],[[34,445]],[[34,445]],[[34,445]],[[34,445]],[[34,445]],[[34,445]],[34],[[[496,[[599,[493,493]],493,493]],34]],[[[601,[600]],34]],[[[603,[602]],34]],[[[499,[[604,[493]],493]],34]],[616,29],[[578,583],578],[[578,7,[52,[343]]],578],[[386,[0,[489,143,218]]]],[[578,[9,[94,8]]],578],[[578,[9,[94,8]]],578],[[386,138]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[],[[35,[[9,[493,8]]]]]],[[],[[35,[[9,[493,8]]]]]],[[],[[35,[[9,[493,8]]]]]],[[],[[35,[[9,[493,8]]]]]],[[[86,[138]]],138],[[[165,[[0,[138,170]]]]],[[0,[138,170]]]],[[[605,[170]]],170],[[[612,[592]]]],[[[86,[138]]]],[[[165,[138]]]],[[[165,[138]]]],[[[89,[511,512]]]],[[[89,[511,512]]]],[[[149,[[0,[587,143]]]]]],[[[149,[[0,[587,143]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[86,[[0,[138,170]]]]],29],[[[165,[[0,[138,170]]]]],29],[[[605,[170]]],29],[611,29],[[[86,[[0,[138,170]]]]],29],[[[165,[[0,[138,170]]]]],29],[[[605,[170]]],29],[611,29],[[[89,[511,512]]],29],[[],29],[[[496,[[599,[493,493]],493,493]]],29],[[[601,[600]]],29],[[[603,[602]]],29],[[[499,[[604,[493]],493]]],29],[[],29],[[[496,[[599,[493,493]],493,493]]],29],[[[601,[600]]],29],[[[603,[602]]],29],[[[499,[[604,[493]],493]]],29],[445,29],[[[89,[511,512]]],522],[[[89,[511,512]],343],[[617,[511,512]]]],[[[89,[511,512]]],520],[[[89,[511,512]]],[[520,[511,512]]]],[[[89,[511,512]]],[[520,[511,512]]]],[[[89,[511,512]],343],[[618,[511,512]]]],[[[89,[512,512]]],522],[[[89,[511,512]],489],519],[[[89,[511,512]],489],[[519,[511,512]]]],[[[89,[511,512]],489],[[519,[511,512]]]],[[[89,[511,512]]],[[522,[511,512]]]],[[[89,[511,512]]],[[522,[511,512]]]],[[[86,[[0,[138,170]]]]],346],[[[165,[[0,[138,170]]]]],346],[[[605,[170]]],346],[613,346],0,[578],[[[89,[511,512]],[47,[343]]],47],[[[89,[511,512]],[47,[343]]],47],[[[0,[143,218,25]]],[[499,[[0,[143,218,25]]]]]],[[[165,[[0,[138,170]]]],76],[[470,[170]]]],[[[605,[170]],76],[[470,[170]]]],[[[593,[592]],524],29],[[[593,[592]]],445],[[],[[348,[38]]]],[[[496,[[599,[493,493]],493,493]]],[[348,[38]]]],[[[601,[600]]],[[348,[38]]]],[[[603,[602]]],[[348,[38]]]],[[[499,[[604,[493]],493]]],[[348,[38]]]],[445,38],[606,38],[[[348,[38]]],496],[[],[[588,[[0,[138,587]]]]]],[[],[[590,[138]]]],[34,[[593,[592]]]],[[[604,[493]],493,[348,[38]]],[[499,[[604,[493]],493]]]],[[594,34],386],[343,597],[607,598],[[349,445]],[[349,445]],[[349,445]],[[349,445]],[[349,445]],[[349,445]],[[349,445]],[[349,445]],[[349,445]],[[349,445]],[[349,445]],[[349,445]],[[349,445]],[[594,451],386],[[]],[619],[619],[619],[619],[619],[619],[619],[619],[619],[619],[619],[619],[619],[619],[619],[619],[619],[619],[619],[619],[619],[619],[619],[619],[619],[619],[619],[619],[619],[619],[619],[619],[619],[619],[619],[619],[[[89,[511,512]]],516],[[[89,[511,512]]],[[516,[511,512]]]],[501,[[496,[504]]]],[[594,580]],[[578,[52,[343]]],578],[[[165,[[0,[138,170]]]]],[[470,[[0,[138,170]]]]]],[[[605,[170]]],[[470,[170]]]],[578,578],[[578,[52,[343]]],578],[578,578],[578,578],[[578,[77,[[348,[38]]]]],578],[[578,[77,[[348,[38]]]]],578],[386],[[578,[52,[343]]],578],0,[34],[[]],[[[496,[[599,[493,493]],493,493]],34]],[[[601,[600]],34]],[34],[[[499,[[604,[493]],493]],34]],[34],[[386,607]],[501],[501],[214],[[[496,[[599,[493,493]],493,493]],214]],[[[601,[600]],214]],[[[603,[602]],214]],[[[499,[[604,[493]],493]],214]],[[[165,[[0,[138,170]]]]]],[[[605,[170]]]],[[[165,[[0,[138,170]]]],346]],[[[605,[170]],346]],[346],[[[496,[[599,[493,493]],493,493]],346]],[[[601,[600]],346]],[[[603,[602]],346]],[[[499,[[604,[493]],493]],346]],[445],[[578,343],578],[[578,343],578],[[[89,[511,512]]]],[[[89,[511,512]]]],[[386,583],578],[[386,[0,[489,143,218]]]],[386,578],[616,[[9,[493,8]]]],[613,346],[[]],[[]],[[]],[[]],[[]],[[]],[[[89,[511,512]]],89],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],141],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[578,583],578],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[[496,[[599,[493,493]],493,493]]],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[[601,[600]]],13],[[],13],[[],13],[[[603,[602]]],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[[499,[[604,[493]],493]]],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[214],[[[496,[[599,[493,493]],493,493]],214]],[[[601,[600]],214]],[[[603,[602]],214]],[[[499,[[604,[493]],493]],214]],[[[593,[592]],34]],[[[593,[592]],214]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[578,76],578],[[170,343],[[581,[170]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[526,343],526],[[34,111]],[34],[34],[620,349],[526,349],[535,349],[34,454],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[470,[78,170]]],470],[[],15],[470],[620,535],[621],[470],[34,214],[34,214],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[34,465],[[[470,[170]]]],[34,622],[34,346],[34],[34],[34],[34],[34],[535,535],[524,524],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[34,[[14,[353]]]],[34,23],[620,29],[526,29],[535,29],[[620,353],29],[[526,353],29],[[535,353],29],[34,29],[34,29],[[620,13],29],[[526,13],29],[[535,13],29],[[],34],[[[621,[170]]]],[7],[[[470,[170]]]],[7],[7],[7],[7],[7],[7],[623],[7],[624],[7],[7],[7],[7],[[[470,[170]]]],[7],[7],[7],[7],[7],[7],[7],[624],[7],[7],[7],[526],[[34,343],29],[526,526],[526],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[[[625,[215]]]],[7],[622],[7],[623],[7],[624],[7],[7],[7],[15,29],[30],[34,451],[34,451],[[34,343],535],[[34,343],526],[[524,524],29],[[],29],[[],29],[[],29],[[],29],0,[[343,344]],[[343,344]],[[343,344]],[[[621,[[0,[490,170]]]],31],[[12,[32]]]],[[[470,[[0,[490,170]]]],31],[[12,[32]]]],[[34,31],[[12,[32]]]],[[524,31],[[12,[32]]]],[[[470,[170]]],[[621,[170]]]],[[]],[[]],[605,470],[[[165,[138]]],[[470,[138]]]],[[]],[526,620],[526,620],[[]],[[]],[[]],[[]],[[]],[[]],[526,535],[620,535],[526,535],[620,535],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[34],[34],[34,524],[620,[[14,[475]]]],[526,[[14,[475]]]],[[34,343],[[14,[475]]]],[535,[[14,[475]]]],[[620,353],[[14,[[469,[467]]]]]],[[526,353],[[14,[[469,[467]]]]]],[[34,343,353],[[14,[[469,[467]]]]]],[[535,353],[[14,[[469,[467]]]]]],[620,[[14,[471]]]],[526,[[14,[471]]]],[535,[[14,[471]]]],[[620,353],[[14,[471]]]],[[526,353],[[14,[471]]]],[[535,353],[[14,[471]]]],[[34,343],[[14,[535]]]],[[34,343],[[14,[526]]]],[[34,[47,[343]]],[[12,[[47,[535]],343]]]],[[34,[47,[343]]],[[12,[[47,[620]],517]]]],[620,[[14,[[470,[475]]]]]],[526,[[14,[[470,[475]]]]]],[[34,343],[[14,[[470,[475]]]]]],[[620,353],[[14,[466]]]],[[526,353],[[14,[466]]]],[[34,343,353],[[14,[466]]]],[[34,353],[[14,[[469,[467]]]]]],[[34,353],[[14,[466]]]],[622,[[14,[623]]]],[34,14],[622,[[14,[624]]]],[34,[[14,[470]]]],[[34,343],[[14,[526]]]],[[445,214,346]],[[445,214,346]],[620,[[14,[[621,[475]]]]]],[526,[[14,[[621,[475]]]]]],[535,[[14,[[621,[475]]]]]],[622,[[14,[[623,[138]]]]]],[34,[[14,[138]]]],[[34,353],[[14,[[469,[467]]]]]],[622,[[14,[[624,[138]]]]]],[34,[[14,[[470,[138]]]]]],[[34,353],[[14,[466]]]],[[34,76],[[470,[138]]]],[7,524],[[524,30]],[620,343],[526,343],[34,524],[535,343],[34,346],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[34,353],[[34,473],353],[[214,353,346,346],[[626,[475]]]],[[214,346,346]],[[214,346,346]],[34,353],[34,353],[34,353],[34],[[34,445]],[34],[[34,445]],[[526,583],526],[[526,353,[627,[467]]],526],[[526,[52,[353]],215],526],[[526,7,[52,[343]]],526],[[34,353,[627,[467]]]],[34],[[34,489],[[12,[[79,[343,8]]]]]],[[34,138]],[[34,353,[627,[467]]]],[[34,343],[[79,[472,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[621,[170]]],170],[[[470,[170]]],170],[621],[470],[470],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[526,34],[[[621,[170]]],29],[[[470,[170]]],29],[[[621,[170]]],29],[[[470,[170]]],29],[34,29],[34,29],[34,215],[34,215],[34,346],[[[621,[170]]],346],[[[470,[170]]],346],[[[625,[491]]],7],[620,478],[526,478],[535,478],[[34,[47,[343]]],[[47,[535]]]],[[34,[47,[343]]],[[47,[620]]]],[[[621,[170]],76],[[621,[170]]]],[[[470,[170]],76],[[470,[170]]]],[[353,142],29],[142,29],[142,29],[[170,346,346,346,346],[[621,[170]]]],[[170,346,346,346,346],[[470,[170]]]],[[],34],[[],[[14,[524]]]],[[[625,[215]]],[[14,[343]]]],[622,623],[34],[622,624],[34,470],[[]],[[526,[52,[343]]],526],[34,[[513,[511]]]],[34,[[513,[511,512]]]],[34,346],[[[470,[170]]],[[470,[170]]]],[620,620],[[34,501],607],[526,526],[[526,[52,[343]]],526],[[34,353],14],[34,14],[526,526],[34,[[14,[138]]]],[[34,353],14],[[34,607],[[12,[616,614]]]],[34,215],[34,539],[[34,353],215],[622,[[623,[138]]]],[34,138],[622,[[624,[138]]]],[34,[[470,[138]]]],[[34,76]],[[34,[140,[112]]]],[[34,607],[[12,[614]]]],[[34,501]],[[34,[140,[112]],76]],[[622,482]],[[34,482]],[[622,215]],[[34,489]],[622],[34],[[[626,[475]],353,349,350]],[[349,350]],[[349,350]],[[[470,[170]]]],[[[470,[170]],346]],[[526,343],526],[[[626,[475]],353,350]],[350],[350],[[[621,[475]]],[[621,[475]]]],[[]],[[]],[[[625,[215]]]],[524,7],[[34,583],526],[[34,489],625],[34,526],[34,24],[526,[[14,[583]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[34,[140,[112]]],[[12,[628]]]],[[34,[140,[112]],76],[[12,[628]]]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],0,[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[353,349,[352,[351]]]],[[349,[352,[351]]]],[[349,[352,[351]]]],[[353,[354,[353]]]],[[[354,[353]]]],[[[354,[353]]]],[526],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[526,76],526],[526,34],[526,34],[[526,76]],0,[[],1],[[],1],[[[3,[2]]]],[[]],[[]],[7],[7],[[]],[7],[[628,31],[[12,[32]]]],[[628,31],[[12,[32]]]],[[]],[[]],[[]],[[],7],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],[[],141],[[],12],[[],12],[[],13],[[],14],[[]],0,0,[536,349],[214,454],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[214,465],[214,346],[214,214],[536,536],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[214,23],[536,29],[[536,353],29],[[536,13],29],[7],[7],[7],[7],[[]],[[]],[7],[7],[214,451],[[214,31],[[12,[32]]]],[[]],[[]],[[]],[[]],[536,[[14,[475]]]],[[536,353],[[14,[[469,[467]]]]]],[536,[[14,[471]]]],[[536,353],[[14,[471]]]],[[214,343],[[14,[536]]]],[536,[[14,[[470,[475]]]]]],[[536,353],[[14,[466]]]],[214,14],[[214,353],[[14,[[469,[467]]]]]],[214,[[14,[470]]]],[[214,353],[[14,[466]]]],[536,[[14,[[621,[475]]]]]],[214,[[14,[138]]]],[[214,353],[[14,[[469,[467]]]]]],[214,[[14,[[470,[138]]]]]],[[214,353],[[14,[466]]]],[214,524],[536,343],[214,346],[[],7],[[],7],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],[214,346],[536,478],[214,539],[214,24],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],14],[[],14],[[]],[[]],[214,34],[536,214],[214,34],[214,34],0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[],15],[[]],[[]],[[]],[[]],[[629,17]],[630,630],[[]],[[],[[9,[22,8]]]],[[],629],[7],[7],[7],[7],[[]],[[]],[7],[7],[630,[[9,[28,8]]]],[15,29],[30],[[630,630],29],[[],29],[[],29],[[],29],[[],29],[[630,31],[[12,[32]]]],[[]],[[]],[[]],[[]],[34],[[630,30]],[[],7],[[],7],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[],[[35,[[9,[28,8]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],14],[[],14],[[]],[[]],0,0,0,0,0,[[631,94]],[[],1],[[],1],[[],1],[631,1],[[],1],[[],1],[[],1],[[],1],[[],1],[631,1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[631,94],[631,94],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[632,17]],[633,633],[634,634],[631,98],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[631,[[9,[94,8]]]],0,[[23,24,25]],[[],[[14,[38]]]],[[],633],[[],634],[[],631],0,0,[7],[7],[7],[7],[7],[7],[7],[7],[[]],[[]],[[]],[[]],0,[7],[7],[7],[7],0,[[631,38],[[14,[94]]]],[[631,7],[[14,[94]]]],[[631,7],[[14,[94]]]],[631,7],[[631,38],[[14,[94]]]],[[632,17]],[[631,31],[[12,[32]]]],[[]],[[]],[[]],[[]],[25],[94,[[14,[631]]]],[[]],[[]],[[]],[[]],[34],[34],[34],[25],[38,[[14,[94]]]],[38,[[14,[94]]]],[631,[[14,[99]]]],[[],100],0,[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[631,8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[9,[631,8]]],[[9,[94,8]]]],[[]],[[]],[[]],[[]],[631,103],0,0,[[],[[14,[38]]]],[[631,7],[[14,[38]]]],[[]],[[]],[[]],0,[[],[[14,[38]]]],[[],[[14,[38]]]],[631,105],[[[9,[631,8]]],106],[[631,94],[[14,[29]]]],[631,107],[[],38],[[],[[14,[38]]]],[[],38],0,[[631,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[],38],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],[[14,[38]]]],[[],99],[[],38],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],0,0,0,0,0,[[445,34]],[[635,636,53,53,53,637],638],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[635,328,328,53,637],639],[[635,636,53,637],640],[[641,7],641],[[635,642,637]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[]],[[]],[[]],[[]],[[]],[7],[639],[7],[641],[640],[7],[7],[638],[7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[445,214,346]],[[],7],[[],7],[[],7],[[],7],[[],7],[[34,445]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],[[]],[[]],[[]],[[635,328,328,637]],[[635,636,636,637]],[[635,328,328,637,637]],[[635,636,636,637,637]],[[635,489,637]],[[635,489,637]],[[635,489]],[[635,489]],[[349,445]],[[635,328,328,637]],[[635,636,636,637]],[[635,328,328,637,637]],[[635,636,636,637,637]],[[635,328,643,636,637]],[[635,636,53,636,637]],[[639,7],639],[[640,7],640],[[638,7],638],[[635,328,643,53,637],641],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[644,38,645],644],0,[[646,94]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[646,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[646,1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[646,94],[646,94],[[],13],[[],38],[[],38],[[],38],[[],38],[[],38],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[644,17]],0,[647,647],[648,648],[649,649],[646,646],[646,98],[[]],[[]],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[646,[[9,[94,8]]]],[[23,24,25]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],0,[[],644],[[],646],[[],[[9,[185,8]]]],0,[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[[52,[51]]],[[12,[[9,[185,8]],186]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[7],[7],[7],[650,[[52,[38]]]],[[],[[52,[38]]]],0,0,0,[[646,38],[[14,[94]]]],[[646,7],[[14,[94]]]],[[646,7],[[14,[94]]]],[646,7],[[646,38],[[14,[94]]]],[[644,17]],[[651,31],[[12,[32]]]],[[651,31],[[12,[32]]]],[[652,31],[[12,[32]]]],[[647,31],[[12,[32]]]],[[648,31],[[12,[32]]]],[[649,31],[[12,[32]]]],[[646,31],[[12,[32]]]],[[]],[[]],[196,651],[653,651],[654,651],[197,651],[655,651],[656,651],[203,651],[657,651],[[]],[[]],[[]],[[]],[[]],[[]],[25],[94,[[14,[646]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[34],[34],[25],[38,[[14,[94]]]],[38,[[14,[94]]]],[646,[[14,[99]]]],[[],100],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[[9,[8]],101,34]],[[[9,[8]],101,34]],[[[9,[8]],101,34]],[[[9,[8]],101,34]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[646,8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[9,[646,8]]],[[9,[94,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[646,103],[[650,171,156],[[172,[[9,[212,8]]]]]],[[171,[9,[185,8]],156],[[172,[[9,[212,8]]]]]],0,0,0,0,0,0,[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[646,7],[[14,[38]]]],0,0,0,0,0,0,[[]],[[]],0,[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[646,105],[[[9,[646,8]]],106],[[646,94],[[14,[29]]]],[646,107],[[],38],[[],38],[[],38],[[],38],[[],38],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],38],[[],38],[[],38],[[],38],[[],38],0,[[646,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[],38],[[],38],[[],38],[[],38],[[],38],[651,[[14,[227]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],141],0,[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],99],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],0,[[652,25]],[[647,25]],[[648,25]],[[649,25]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[343],[343],[[658,580],658],[[659,34]],[[660,34]],[[661,34]],[[662,34]],[[88,94]],[[663,94]],[[664,34]],[[665,34]],[[666,34]],[[667,34]],[[668,34]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[88,1],[[],1],[663,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[88,1],[[],1],[663,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[88,94],[663,94],[88,94],[663,94],[663,[[52,[343]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[669,[475]],17]],[[670,17]],[[89,[89,[[387,[475]]]],[149,[[671,[343,[251,[250]],252]]]]]],0,0,[[]],[672,672],[88,367],[663,367],[[]],[[],[[9,[22,8]]]],[88,[[9,[94,8]]]],[663,[[9,[94,8]]]],[[23,24,25]],[[23,24,25]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[669,[475]]]],[[],673],[[],670],[7],[7],[7],[7],[7],[7],[7],[7],[7],[88],[7],[663],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[]],[[]],[[34,343]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[15,29],[15,29],0,0,0,[[663,663],29],[[672,672],29],[[673,673],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[88,7],[[14,[94]]]],[[663,7],[[14,[94]]]],[88,7],[663,7],[[88,7],[[14,[94]]]],[[663,7],[[14,[94]]]],[[88,31],[[12,[32]]]],[[663,31],[[12,[32]]]],[[664,31],[[12,[32]]]],[[665,31],[[12,[32]]]],[[666,31],[[12,[32]]]],[[667,31],[[12,[32]]]],[[668,31],[[12,[32]]]],[[674,31],[[12,[32]]]],[[672,31],[[12,[32]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[25],[25],[94,[[14,[88]]]],[94,[[14,[663]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[34],[34,88],[34,663],[34],[34],[663,343],[25],[25],[7,[[14,[94]]]],[7,[[14,[94]]]],[7,[[14,[94]]]],[7,[[14,[94]]]],[88,[[14,[99]]]],[663,[[14,[99]]]],[[],100],[[],100],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[7,[52,[343]]]],[[7,[52,[343]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[88,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[663,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],[88],[[[9,[88,8]]],[[9,[94,8]]]],[[[9,[663,8]]],[[9,[94,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[343,617],[343,618],[88,368],[663,368],[[88,480]],[[663,480]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[[89,[511,512]],343],[[618,[511,512]]]],[[[89,[511,512]],343],[[617,[511,512]]]],[29,673],[[[618,[511,512]]],14],[[[617,[511,512]]],14],[[]],[[]],[[]],[[[86,[[673,[475]]]]],29],0,[658,343],[674,343],[[[52,[343]]]],[[[52,[343]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[88,105],[663,105],[[[9,[88,8]]],106],[[[9,[663,8]]],106],[[88,94],[[14,[29]]]],[[663,94],[[14,[29]]]],[88,107],[663,107],[[],38],[[],38],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],38],[[],38],[[[52,[343]]]],[[[52,[343]]]],[[]],[[]],[[[52,[343]]]],[[88,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[663,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[343],[343],[[],38],[[],38],[[88,25]],[[88,25]],[[88,25]],[[88,25]],[[88,25]],[[658,583],578],[[674,[0,[583,143,218]]],526],[658,578],[674,526],[[88,7,7]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],99],[[],99],[[],38],[[],38],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[76],[76],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[676,[[0,[508,675,567,143,218]]]],489],29],[[[676,[[0,[508,675,567,143,218]]]],489],29],[[[676,[[0,[508,675,567,143,218]]]],489],29],[[[676,[[0,[508,675,567,143,218,160]]]],94]],[[677,94]],[[],1],[[[676,[[0,[508,675,567,143,218,160]]]]],1],[[],1],[[],1],[[],1],[[],1],[[],1],[677,1],[[],1],[[],1],[[],1],[[[676,[[0,[508,675,567,143,218,160]]]]],1],[[],1],[[],1],[[],1],[677,1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],15],[[],15],[[[676,[[0,[508,675,567,143,218,160]]]]],94],[677,94],[[[676,[[0,[508,675,567,143,218,160]]]]],94],[677,94],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[678,17]],[[[676,[[0,[508,675,567,143,218]]]]]],[[[676,[[0,[508,675,567,143,218]]]],[0,[508,675,567,143,218]]],29],[[[676,[[0,[508,675,567,143,218]]]],[0,[508,675,567,143,218]]],29],[[[676,[[0,[261,508,675,567,143,218]]]]],[[676,[[0,[261,508,675,567,143,218]]]]]],[679,679],[677,677],[[[676,[[0,[508,675,567,143,218,160]]]]],98],[677,97],[[]],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[[676,[[0,[508,675,567,143,218,160]]]]],[[9,[94,8]]]],[677,[[9,[94,8]]]],0,[[],[[14,[38]]]],[[],[[14,[38]]]],[[677,31],[[12,[32]]]],[[],[[680,[[0,[508,675,567]]]]]],[[],[[676,[[0,[508,675,567,143,218]]]]]],[[],678],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[150,[[12,[677]]]],[[[680,[[0,[508,675,567]]]]],491],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[679,[[9,[28,8]]]],[15,29],[15,29],[30],[30],[[679,679],29],[[677,677],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[190,[[12,[191,192]]]],[[[676,[[0,[508,675,567,143,218,160]]]],38],[[14,[94]]]],[[677,38],[[14,[94]]]],[[[676,[[0,[508,675,567,143,218,160]]]],7],[[14,[94]]]],[[677,7],[[14,[94]]]],[[[676,[[0,[508,675,567,143,218,160]]]],7],[[14,[94]]]],[[677,7],[[14,[94]]]],[[[676,[[0,[508,675,567,143,218,160]]]]],7],[677,7],[[[676,[[0,[508,675,567,143,218,160]]]],38],[[14,[94]]]],[[677,38],[[14,[94]]]],[[[680,[490]],31],[[12,[32]]]],[[[676,[[0,[490,508,675,567,143,218]]]],31],[[12,[32]]]],[[679,31],[[12,[32]]]],[[677,31],[[12,[32]]]],[[]],[[]],[[]],[[]],[[]],[94,[[14,[[676,[[0,[508,675,567,143,218,160]]]]]]]],[94,[[14,[677]]]],[[]],[[]],[[]],[[]],[[]],[34],[34],[34],0,[[[680,[[0,[508,675,567]]]],[0,[508,675,567]]],[[14,[53]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[[[676,[[0,[508,675,567,143,218]]]]],491],[[[676,[[0,[508,675,567,143,218]]]]],491],[[[676,[[0,[508,675,567,143,218]]]]],491],[[[676,[[0,[508,675,567,143,218,160]]]]],[[14,[99]]]],[677,[[14,[99]]]],[[],100],[[],100],[[[680,[[0,[508,675,567]]]],[0,[508,675,567]]],[[14,[53]]]],[[679,30]],[[677,30]],[[677,38],[[14,[7]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[[676,[[0,[508,675,567,143,218,160]]]],8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[677,8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[],[[35,[[9,[28,8]]]]]],[[[9,[[676,[[0,[508,675,567,143,218,160]]]],8]]],[[9,[94,8]]]],[[[9,[677,8]]],[[9,[94,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[677,29],[[[676,[[0,[508,675,567,143,218,160]]]]],103],[677,102],[[[676,[[0,[508,675,567,143,218]]]],[0,[508,675,567,143,218]]],29],[[[676,[[0,[508,675,567,143,218]]]],[0,[508,675,567,143,218]]],29],0,[[],[[14,[38]]]],[[],[[14,[38]]]],0,[[[676,[[0,[508,675,567,143,218,160]]]],7],[[14,[38]]]],[[677,7],[[14,[38]]]],[[]],[[]],[[]],0,[[[676,[[0,[508,675,567,143,218]]]],[0,[508,675,567,143,218]]]],[[[676,[[0,[508,675,567,143,218]]]],[0,[508,675,567,143,218]]],29],[[],[[14,[38]]]],[[],[[14,[38]]]],[677,[[14,[75]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[[676,[[0,[508,675,567,143,218,160]]]]],105],[677,105],[[[9,[[676,[[0,[508,675,567,143,218,160]]]],8]]],106],[[[9,[677,8]]],106],[[[676,[[0,[508,675,567,143,218,160]]]],94],[[14,[29]]]],[[677,94],[[14,[29]]]],[[[676,[[0,[508,675,567,143,218,160]]]]],107],[677,107],[[],38],[[],38],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],38],[[],38],[[[676,[[0,[508,675,567,143,218]]]],[0,[508,675,567,143,218]]]],[[[676,[[0,[508,675,567,143,218]]]]]],[[[680,[[0,[508,675,567]]]],[0,[508,675,567]]],[[14,[53]]]],[[[676,[[0,[508,675,567,143,218]]]],[0,[508,675,567,143,218]]]],[[[676,[[0,[508,675,567,143,218]]]]]],[[677,226],12],[[[680,[[0,[508,675,567]]]],[0,[508,675,567]],53],[[14,[53]]]],[[[676,[[0,[508,675,567,143,218,160]]]],[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[677,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[],38],[[],38],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],99],[[],99],[[],38],[[],38],[[],14],[[],14],[[],14],[[],14],[[],14],[677,7],[677,38],[677,108],[[]],[[]],[[]],[[]],[[]],[[[0,[508,675,567,143,218]]],[[0,[25,261]]]],[[[0,[508,675,567,143,218]]],[[0,[25,261]]]],[[[0,[508,675,567,143,218]]],[[0,[25,261]]]],[[29,[0,[508,675,567,143,218]]],[[0,[25,261]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[681,94]],[[682,94]],[[683,94]],[[684,94]],[[685,94]],[[686,94]],[[687,94]],[[688,94]],[[689,94]],[[690,94]],[[691,94]],[[692,94]],[[693,94]],[[694,94]],[[695,94]],[[696,94]],[[],1],[[],1],[[],1],[[],1],[681,1],[[],1],[682,1],[[],1],[[],1],[[],1],[683,1],[[],1],[[],1],[[],1],[684,1],[685,1],[[],1],[[],1],[[],1],[686,1],[[],1],[[],1],[[],1],[687,1],[[],1],[688,1],[[],1],[689,1],[690,1],[[],1],[[],1],[691,1],[692,1],[[],1],[693,1],[[],1],[694,1],[[],1],[[],1],[695,1],[696,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[681,1],[[],1],[682,1],[[],1],[683,1],[[],1],[[],1],[684,1],[[],1],[685,1],[686,1],[[],1],[[],1],[687,1],[[],1],[688,1],[689,1],[[],1],[[],1],[690,1],[691,1],[[],1],[[],1],[692,1],[[],1],[693,1],[694,1],[[],1],[695,1],[[],1],[696,1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],15],[[],15],[[],15],[[],15],[[],15],[681,94],[682,94],[683,94],[684,94],[685,94],[686,94],[687,94],[688,94],[689,94],[690,94],[691,94],[692,94],[693,94],[694,94],[695,94],[696,94],[681,94],[682,94],[683,94],[684,94],[685,94],[686,94],[687,94],[688,94],[689,94],[690,94],[691,94],[692,94],[693,94],[694,94],[695,94],[696,94],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[690,53],53],[681,681],[682,682],[683,683],[684,684],[685,685],[686,686],[687,687],[689,689],[690,690],[691,691],[692,692],[693,693],[694,694],[695,695],[696,696],[697,697],[698,698],[681,98],[682,98],[683,97],[684,98],[685,98],[686,97],[687,98],[688,98],[689,98],[690,98],[691,98],[692,97],[693,98],[694,98],[695,98],[696,97],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[681,[[9,[94,8]]]],[682,[[9,[94,8]]]],[683,[[9,[94,8]]]],[684,[[9,[94,8]]]],[685,[[9,[94,8]]]],[686,[[9,[94,8]]]],[687,[[9,[94,8]]]],[688,[[9,[94,8]]]],[689,[[9,[94,8]]]],[690,[[9,[94,8]]]],[691,[[9,[94,8]]]],[692,[[9,[94,8]]]],[693,[[9,[94,8]]]],[694,[[9,[94,8]]]],[695,[[9,[94,8]]]],[696,[[9,[94,8]]]],[693,29],0,[[699,681],29],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[690,53],[690,53],[[681,31],[[12,[32]]]],[[682,31],[[12,[32]]]],[[683,31],[[12,[32]]]],[[684,31],[[12,[32]]]],[[685,31],[[12,[32]]]],[[686,31],[[12,[32]]]],[[687,31],[[12,[32]]]],[[688,31],[[12,[32]]]],[[689,31],[[12,[32]]]],[[690,31],[[12,[32]]]],[[691,31],[[12,[32]]]],[[692,31],[[12,[32]]]],[[693,31],[[12,[32]]]],[[694,31],[[12,[32]]]],[[695,31],[[12,[32]]]],[[696,31],[[12,[32]]]],[[],699],[[],688],[[],689],[[],690],[[],691],0,0,0,[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[150,[[12,[681]]]],[150,[[12,[682]]]],[150,[[12,[683]]]],[150,[[12,[684]]]],[150,[[12,[685]]]],[150,[[12,[686]]]],[150,[[12,[687]]]],[150,[[12,[692]]]],[150,[[12,[693]]]],[150,[[12,[694]]]],[150,[[12,[695]]]],[150,[[12,[696]]]],[693,29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[30],[30],[30],[30],[30],[[700,700],29],[[701,701],29],[[681,681],29],[[682,682],29],[[683,683],29],[[684,684],29],[[685,685],29],[[686,686],29],[[687,687],29],[[690,690],29],[[692,692],29],[[693,693],29],[[694,694],29],[[695,695],29],[[696,696],29],[[697,697],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[[681,38],[[14,[94]]]],[[682,38],[[14,[94]]]],[[683,38],[[14,[94]]]],[[684,38],[[14,[94]]]],[[685,38],[[14,[94]]]],[[686,38],[[14,[94]]]],[[687,38],[[14,[94]]]],[[688,38],[[14,[94]]]],[[689,38],[[14,[94]]]],[[690,38],[[14,[94]]]],[[691,38],[[14,[94]]]],[[692,38],[[14,[94]]]],[[693,38],[[14,[94]]]],[[694,38],[[14,[94]]]],[[695,38],[[14,[94]]]],[[696,38],[[14,[94]]]],[[681,7],[[14,[94]]]],[[682,7],[[14,[94]]]],[[683,7],[[14,[94]]]],[[684,7],[[14,[94]]]],[[685,7],[[14,[94]]]],[[686,7],[[14,[94]]]],[[687,7],[[14,[94]]]],[[688,7],[[14,[94]]]],[[689,7],[[14,[94]]]],[[690,7],[[14,[94]]]],[[691,7],[[14,[94]]]],[[692,7],[[14,[94]]]],[[693,7],[[14,[94]]]],[[694,7],[[14,[94]]]],[[695,7],[[14,[94]]]],[[696,7],[[14,[94]]]],[[681,7],[[14,[94]]]],[[682,7],[[14,[94]]]],[[683,7],[[14,[94]]]],[[684,7],[[14,[94]]]],[[685,7],[[14,[94]]]],[[686,7],[[14,[94]]]],[[687,7],[[14,[94]]]],[[688,7],[[14,[94]]]],[[689,7],[[14,[94]]]],[[690,7],[[14,[94]]]],[[691,7],[[14,[94]]]],[[692,7],[[14,[94]]]],[[693,7],[[14,[94]]]],[[694,7],[[14,[94]]]],[[695,7],[[14,[94]]]],[[696,7],[[14,[94]]]],[681,7],[682,7],[683,7],[684,7],[685,7],[686,7],[687,7],[688,7],[689,7],[690,7],[691,7],[692,7],[693,7],[694,7],[695,7],[696,7],[[681,38],[[14,[94]]]],[[682,38],[[14,[94]]]],[[683,38],[[14,[94]]]],[[684,38],[[14,[94]]]],[[685,38],[[14,[94]]]],[[686,38],[[14,[94]]]],[[687,38],[[14,[94]]]],[[688,38],[[14,[94]]]],[[689,38],[[14,[94]]]],[[690,38],[[14,[94]]]],[[691,38],[[14,[94]]]],[[692,38],[[14,[94]]]],[[693,38],[[14,[94]]]],[[694,38],[[14,[94]]]],[[695,38],[[14,[94]]]],[[696,38],[[14,[94]]]],[[690,53,[14,[53]]],[[14,[53]]]],[[691,53,[14,[53]]],[[14,[53]]]],[[700,31],[[12,[32]]]],[[700,31],[[12,[32]]]],[[701,31],[[12,[32]]]],[[701,31],[[12,[32]]]],[[681,31],[[12,[32]]]],[[682,31],[[12,[32]]]],[[699,31],[[12,[32]]]],[[683,31],[[12,[32]]]],[[684,31],[[12,[32]]]],[[685,31],[[12,[32]]]],[[686,31],[[12,[32]]]],[[687,31],[[12,[32]]]],[[688,31],[[12,[32]]]],[[689,31],[[12,[32]]]],[[690,31],[[12,[32]]]],[[691,31],[[12,[32]]]],[[692,31],[[12,[32]]]],[[693,31],[[12,[32]]]],[[694,31],[[12,[32]]]],[[695,31],[[12,[32]]]],[[696,31],[[12,[32]]]],[[697,31],[[12,[32]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[693,696],[[]],[695,696],[694,696],[[]],[[]],[94,[[14,[681]]]],[94,[[14,[682]]]],[94,[[14,[683]]]],[94,[[14,[684]]]],[94,[[14,[685]]]],[94,[[14,[686]]]],[94,[[14,[687]]]],[94,[[14,[688]]]],[94,[[14,[689]]]],[94,[[14,[690]]]],[94,[[14,[691]]]],[94,[[14,[692]]]],[94,[[14,[693]]]],[94,[[14,[694]]]],[94,[[14,[695]]]],[94,[[14,[696]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[34],[34],[34],[34],[34],[698,681],0,0,0,0,0,[[[165,[[680,[687]]]],[484,[694]]]],[[[484,[695]],[165,[[676,[684]]]],[167,[685]],[86,[688]]]],[[[165,[699]],[484,[693]],[165,[[680,[687]]]],[165,[[680,[684]]]],[165,[[676,[684]]]]]],[[[484,[696]],[167,[693]],[167,[695]],[167,[694]],[165,[[676,[684]]]]]],[[688,687],690],[[688,684],691],[[688,684],689],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[681,[[14,[99]]]],[682,[[14,[99]]]],[683,[[14,[99]]]],[684,[[14,[99]]]],[685,[[14,[99]]]],[686,[[14,[99]]]],[687,[[14,[99]]]],[688,[[14,[99]]]],[689,[[14,[99]]]],[690,[[14,[99]]]],[691,[[14,[99]]]],[692,[[14,[99]]]],[693,[[14,[99]]]],[694,[[14,[99]]]],[695,[[14,[99]]]],[696,[[14,[99]]]],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[681,30]],[[683,30]],[[684,30]],[[686,30]],[[687,30]],0,0,[[]],[[]],[[683,38],[[14,[7]]]],[[686,38],[[14,[7]]]],[[692,38],[[14,[7]]]],[[696,38],[[14,[7]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[681,8]]],[[9,[1,8]]]],[[[9,[682,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[683,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[684,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[685,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[686,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[687,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[688,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[689,8]]],[[9,[1,8]]]],[[[9,[690,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[691,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[692,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[693,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[694,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[695,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[696,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[9,[681,8]]],[[9,[94,8]]]],[[[9,[682,8]]],[[9,[94,8]]]],[[[9,[683,8]]],[[9,[94,8]]]],[[[9,[684,8]]],[[9,[94,8]]]],[[[9,[685,8]]],[[9,[94,8]]]],[[[9,[686,8]]],[[9,[94,8]]]],[[[9,[687,8]]],[[9,[94,8]]]],[[[9,[688,8]]],[[9,[94,8]]]],[[[9,[689,8]]],[[9,[94,8]]]],[[[9,[690,8]]],[[9,[94,8]]]],[[[9,[691,8]]],[[9,[94,8]]]],[[[9,[692,8]]],[[9,[94,8]]]],[[[9,[693,8]]],[[9,[94,8]]]],[[[9,[694,8]]],[[9,[94,8]]]],[[[9,[695,8]]],[[9,[94,8]]]],[[[9,[696,8]]],[[9,[94,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[699,215],[681,103],[682,103],[683,102],[684,103],[685,103],[686,102],[687,103],[688,103],[689,103],[690,103],[691,103],[692,102],[693,103],[694,103],[695,103],[696,102],[690,53],[690,53],0,[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[699,681],[[14,[38]]]],0,[[681,7],[[14,[38]]]],[[682,7],[[14,[38]]]],[[683,7],[[14,[38]]]],[[684,7],[[14,[38]]]],[[685,7],[[14,[38]]]],[[686,7],[[14,[38]]]],[[687,7],[[14,[38]]]],[[688,7],[[14,[38]]]],[[689,7],[[14,[38]]]],[[690,7],[[14,[38]]]],[[691,7],[[14,[38]]]],[[692,7],[[14,[38]]]],[[693,7],[[14,[38]]]],[[694,7],[[14,[38]]]],[[695,7],[[14,[38]]]],[[696,7],[[14,[38]]]],[7,681],[[681,683],684],[[681,686],687],[[53,53],[[12,[689,701]]]],[[53,53,53,53,53],[[12,[690,700]]]],[[681,692],693],[[681,686,53],694],[[681,683,53],695],[[]],[[]],[[]],[[]],[[]],[689,53],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[681,[[14,[75]]]],[683,[[14,[75]]]],[684,[[14,[75]]]],[686,[[14,[75]]]],[687,[[14,[75]]]],[692,[[14,[75]]]],[696,[[14,[75]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[681,105],[682,105],[683,105],[684,105],[685,105],[686,105],[687,105],[688,105],[689,105],[690,105],[691,105],[692,105],[693,105],[694,105],[695,105],[696,105],[[[9,[681,8]]],106],[[[9,[682,8]]],106],[[[9,[683,8]]],106],[[[9,[684,8]]],106],[[[9,[685,8]]],106],[[[9,[686,8]]],106],[[[9,[687,8]]],106],[[[9,[688,8]]],106],[[[9,[689,8]]],106],[[[9,[690,8]]],106],[[[9,[691,8]]],106],[[[9,[692,8]]],106],[[[9,[693,8]]],106],[[[9,[694,8]]],106],[[[9,[695,8]]],106],[[[9,[696,8]]],106],[[681,94],[[14,[29]]]],[[682,94],[[14,[29]]]],[[683,94],[[14,[29]]]],[[684,94],[[14,[29]]]],[[685,94],[[14,[29]]]],[[686,94],[[14,[29]]]],[[687,94],[[14,[29]]]],[[688,94],[[14,[29]]]],[[689,94],[[14,[29]]]],[[690,94],[[14,[29]]]],[[691,94],[[14,[29]]]],[[692,94],[[14,[29]]]],[[693,94],[[14,[29]]]],[[694,94],[[14,[29]]]],[[695,94],[[14,[29]]]],[[696,94],[[14,[29]]]],[681,107],[682,107],[683,107],[684,107],[685,107],[686,107],[687,107],[688,107],[689,107],[690,107],[691,107],[692,107],[693,107],[694,107],[695,107],[696,107],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[689,53],[[681,226],12],[[682,226],12],[[683,226],12],[[684,226],12],[[685,226],12],[[686,226],12],[[687,226],12],[[692,226],12],[[693,226],12],[[694,226],12],[[695,226],12],[[696,226],12],[[681,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[682,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[683,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[684,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[685,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[686,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[687,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[688,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[689,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[690,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[691,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[692,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[693,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[694,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[695,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[696,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[690,53],53],[[690,53],53],[[690,53],53],[[690,53],53],[[689,53],53],[[689,53],53],[[690,53],53],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],0,[53,697],0,[690,53],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],141],[[],141],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[690,53],[[12,[700]]]],[[690,53],[[12,[700]]]],[[690,53],[[12,[700]]]],[[690,53],[[12,[700]]]],[[689,53],[[12,[701]]]],[[689,53],[[12,[701]]]],[[690,53],[[12,[700]]]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],0,0,[683,7],[686,7],[692,7],[696,7],[683,38],[686,38],[692,38],[696,38],[683,108],[686,108],[692,108],[696,108],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[53,697],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[702,94]],[[703,94]],[[704,94]],[702,1],[[],1],[[],1],[[],1],[703,1],[[],1],[[],1],[704,1],[[],1],[702,1],[[],1],[[],1],[703,1],[704,1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],15],[[],15],[702,94],[703,94],[704,94],[702,94],[703,94],[704,94],[[]],[[]],[[]],[[]],[[]],[[]],[702,702],[703,703],[704,704],[702,98],[703,97],[704,367],[[]],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[702,[[9,[94,8]]]],[703,[[9,[94,8]]]],[704,[[9,[94,8]]]],[[703,703],74],[[704,704],74],[[],74],[[],74],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[702,31],[[12,[32]]]],[[703,31],[[12,[32]]]],[[704,31],[[12,[32]]]],[7],[7],[7],[7],[7],[7],[150,[[12,[702]]]],[150,[[12,[703]]]],[150,[[12,[704]]]],[[]],[[]],[[]],[7],[7],[7],[15,29],[15,29],[15,29],[30],[30],[[702,702],29],[[703,703],29],[[704,704],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[[702,38],[[14,[94]]]],[[703,38],[[14,[94]]]],[[704,7],[[14,[94]]]],[[702,7],[[14,[94]]]],[[703,7],[[14,[94]]]],[[702,7],[[14,[94]]]],[[703,7],[[14,[94]]]],[702,7],[703,7],[704,7],[[702,38],[[14,[94]]]],[[703,38],[[14,[94]]]],[[704,7],[[14,[94]]]],[[702,31],[[12,[32]]]],[[703,31],[[12,[32]]]],[[704,31],[[12,[32]]]],[[]],[[]],[[]],[94,[[14,[702]]]],[94,[[14,[703]]]],[94,[[14,[704]]]],[[]],[[]],[[]],[38,[[14,[94]]]],[7,[[14,[94]]]],[38,[[14,[94]]]],[7,[[14,[94]]]],[702,[[14,[99]]]],[703,[[14,[99]]]],[704,[[14,[99]]]],[[],100],[[],100],[[],100],[[703,30]],[[704,30]],[[703,38],[[14,[7]]]],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[[9,[702,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[703,8]]],[[9,[1,8]]]],[[[9,[704,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[9,[702,8]]],[[9,[94,8]]]],[[[9,[703,8]]],[[9,[94,8]]]],[[[9,[704,8]]],[[9,[94,8]]]],[[]],[[]],[[]],[702,103],[703,102],[704,368],0,[[[165,[[676,[704]]]],[165,[[676,[703]]]],[484,[702]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[702,7],[[14,[38]]]],[[703,7],[[14,[38]]]],[[703,703],[[14,[74]]]],[[704,704],[[14,[74]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[703,[[14,[75]]]],[704,[[14,[75]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[702,105],[703,105],[704,105],[[[9,[702,8]]],106],[[[9,[703,8]]],106],[[[9,[704,8]]],106],[[702,94],[[14,[29]]]],[[703,94],[[14,[29]]]],[[704,94],[[14,[29]]]],[702,107],[703,107],[704,107],[[],38],[[],38],[[],38],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],38],[[],38],[[],38],0,[[702,226],12],[[703,226],12],[[704,226],12],[[702,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[703,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[704,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[],38],[[],38],[[],38],0,[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],99],[[],99],[[],99],[[],38],[[],38],[[],38],[[],14],[[],14],[[],14],[703,7],[703,38],[703,108],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[[705,94]],[[706,94]],[[707,94]],[[708,94]],[[709,94]],[705,1],[[],1],[[],1],[[],1],[706,1],[[],1],[707,1],[[],1],[[],1],[[],1],[708,1],[709,1],[[],1],[705,1],[[],1],[[],1],[706,1],[[],1],[707,1],[[],1],[708,1],[[],1],[709,1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],15],[705,94],[706,94],[707,94],[708,94],[709,94],[705,94],[706,94],[707,94],[708,94],[709,94],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[705,705],[706,706],[707,707],[708,708],[709,709],[705,98],[706,97],[707,98],[708,97],[709,98],[[]],[[]],[[]],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[705,[[9,[94,8]]]],[706,[[9,[94,8]]]],[707,[[9,[94,8]]]],[708,[[9,[94,8]]]],[709,[[9,[94,8]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[705,31],[[12,[32]]]],[[706,31],[[12,[32]]]],[[707,31],[[12,[32]]]],[[708,31],[[12,[32]]]],[[709,31],[[12,[32]]]],0,[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[150,[[12,[705]]]],[150,[[12,[706]]]],[150,[[12,[707]]]],[150,[[12,[708]]]],[150,[[12,[709]]]],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[15,29],[15,29],[15,29],[30],[[705,705],29],[[706,706],29],[[707,707],29],[[708,708],29],[[709,709],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[[705,38],[[14,[94]]]],[[706,38],[[14,[94]]]],[[707,38],[[14,[94]]]],[[708,38],[[14,[94]]]],[[709,38],[[14,[94]]]],[[705,7],[[14,[94]]]],[[706,7],[[14,[94]]]],[[707,7],[[14,[94]]]],[[708,7],[[14,[94]]]],[[709,7],[[14,[94]]]],[[705,7],[[14,[94]]]],[[706,7],[[14,[94]]]],[[707,7],[[14,[94]]]],[[708,7],[[14,[94]]]],[[709,7],[[14,[94]]]],[705,7],[706,7],[707,7],[708,7],[709,7],[[705,38],[[14,[94]]]],[[706,38],[[14,[94]]]],[[707,38],[[14,[94]]]],[[708,38],[[14,[94]]]],[[709,38],[[14,[94]]]],[[705,31],[[12,[32]]]],[[706,31],[[12,[32]]]],[[707,31],[[12,[32]]]],[[708,31],[[12,[32]]]],[[709,31],[[12,[32]]]],[[]],[[]],[[]],[[]],[[]],[94,[[14,[705]]]],[94,[[14,[706]]]],[94,[[14,[707]]]],[94,[[14,[708]]]],[94,[[14,[709]]]],[[]],[[]],[[]],[[]],[[]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[705,[[14,[99]]]],[706,[[14,[99]]]],[707,[[14,[99]]]],[708,[[14,[99]]]],[709,[[14,[99]]]],[[],100],[[],100],[[],100],[[],100],[[],100],[[706,30]],[[706,38],[[14,[7]]]],[[708,38],[[14,[7]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[705,8]]],[[9,[1,8]]]],[[[9,[706,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[707,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[708,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[709,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[9,[705,8]]],[[9,[94,8]]]],[[[9,[706,8]]],[[9,[94,8]]]],[[[9,[707,8]]],[[9,[94,8]]]],[[[9,[708,8]]],[[9,[94,8]]]],[[[9,[709,8]]],[[9,[94,8]]]],[[]],[[]],[[]],[[]],[[]],[705,103],[706,102],[707,103],[708,102],[709,103],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[[165,[[676,[706]]]],[484,[705]]]],[[705,7],[[14,[38]]]],[[706,7],[[14,[38]]]],[[707,7],[[14,[38]]]],[[708,7],[[14,[38]]]],[[709,7],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[706,[[14,[75]]]],[708,[[14,[75]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[705,105],[706,105],[707,105],[708,105],[709,105],[[[9,[705,8]]],106],[[[9,[706,8]]],106],[[[9,[707,8]]],106],[[[9,[708,8]]],106],[[[9,[709,8]]],106],[[705,94],[[14,[29]]]],[[706,94],[[14,[29]]]],[[707,94],[[14,[29]]]],[[708,94],[[14,[29]]]],[[709,94],[[14,[29]]]],[705,107],[706,107],[707,107],[708,107],[709,107],[[],38],[[],38],[[],38],[[],38],[[],38],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],38],[[],38],[[],38],[[],38],[[],38],[[705,226],12],[[706,226],12],[[707,226],12],[[708,226],12],[[709,226],12],[[705,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[706,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[707,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[708,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[709,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[],38],[[],38],[[],38],[[],38],[[],38],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],99],[[],99],[[],99],[[],99],[[],99],[[],38],[[],38],[[],38],[[],38],[[],38],0,[[],14],[[],14],[[],14],[[],14],[[],14],[706,7],[708,7],[706,38],[708,38],[706,108],[708,108],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[710,29],[710,29],[710,29],[[711,94]],[[712,94]],[[713,94]],[711,1],[[],1],[[],1],[712,1],[713,1],[[],1],[[],1],[[],1],[[],1],[711,1],[[],1],[[],1],[712,1],[[],1],[713,1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],15],[711,94],[712,94],[713,94],[711,94],[712,94],[713,94],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[711,711],[712,712],[713,713],[714,714],[710,710],[711,98],[712,97],[713,97],[[]],[[]],[[]],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[711,[[9,[94,8]]]],[712,[[9,[94,8]]]],[713,[[9,[94,8]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[711,31],[[12,[32]]]],[[712,31],[[12,[32]]]],[[713,31],[[12,[32]]]],[[],710],[714,636],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[150,[[12,[711]]]],[150,[[12,[712]]]],[150,[[12,[713]]]],[714,636],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[15,29],[30],[[711,711],29],[[712,712],29],[[713,713],29],[[],29],[[],29],[[],29],[[],29],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[[711,38],[[14,[94]]]],[[712,38],[[14,[94]]]],[[713,38],[[14,[94]]]],[[711,7],[[14,[94]]]],[[712,7],[[14,[94]]]],[[713,7],[[14,[94]]]],[[711,7],[[14,[94]]]],[[712,7],[[14,[94]]]],[[713,7],[[14,[94]]]],[711,7],[712,7],[713,7],[[711,38],[[14,[94]]]],[[712,38],[[14,[94]]]],[[713,38],[[14,[94]]]],[710,[[14,[636]]]],[[711,31],[[12,[32]]]],[[712,31],[[12,[32]]]],[[713,31],[[12,[32]]]],[[714,31],[[12,[32]]]],[[710,31],[[12,[32]]]],[714,[[14,[712]]]],0,[[]],[[]],[[]],[[]],[711,714],[[]],[94,[[14,[711]]]],[94,[[14,[712]]]],[94,[[14,[713]]]],[[]],[[]],[[]],[[]],[[]],[34],[38,[[14,[94]]]],[38,[[14,[94]]]],[[710,75],[[14,[714]]]],[[710,75],[[14,[714]]]],[711,[[14,[99]]]],[712,[[14,[99]]]],[713,[[14,[99]]]],[[],100],[[],100],[[],100],[[713,30]],[714,75],0,[[712,38],[[14,[7]]]],[[713,38],[[14,[7]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[]],[[[9,[711,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[712,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[713,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[9,[711,8]]],[[9,[94,8]]]],[[[9,[712,8]]],[[9,[94,8]]]],[[[9,[713,8]]],[[9,[94,8]]]],[[]],[[]],[[]],[[]],[[]],[710,215],[711,103],[712,102],[713,102],[710,215],[710,215],[710,215],[[710,75],29],[[710,75],29],[[710,75],29],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[711,7],[[14,[38]]]],[[712,7],[[14,[38]]]],[[713,7],[[14,[38]]]],[[]],0,[714,636],0,[714,[[14,[712]]]],[714,636],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[712,[[14,[75]]]],[713,[[14,[75]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[711,105],[712,105],[713,105],[[[9,[711,8]]],106],[[[9,[712,8]]],106],[[[9,[713,8]]],106],[[711,94],[[14,[29]]]],[[712,94],[[14,[29]]]],[[713,94],[[14,[29]]]],[711,107],[712,107],[713,107],[[],38],[[],38],[[],38],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],38],[[],38],[[],38],[[711,226],12],[[712,226],12],[[713,226],12],[[711,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[712,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[713,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[],38],[[],38],[[],38],[714,[[14,[712]]]],[714,636],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[165,[710]],[484,[711]]]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],99],[[],99],[[],99],[[],38],[[],38],[[],38],[[],14],[[],14],[[],14],[[],14],[[],14],[712,7],[713,7],[712,38],[713,38],[712,108],[713,108],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[715,94]],[[716,94]],[715,1],[[],1],[716,1],[[],1],[715,1],[[],1],[716,1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[715,94],[716,94],[715,94],[716,94],[[]],[[]],[[]],[[]],[715,715],[716,716],[715,367],[716,367],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[715,[[9,[94,8]]]],[716,[[9,[94,8]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[715,31],[[12,[32]]]],[[716,31],[[12,[32]]]],[7],[7],[7],[7],[150,[[12,[715]]]],[150,[[12,[716]]]],[[]],[[]],[7],[7],[[715,715],29],[[716,716],29],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[[715,7],[[14,[94]]]],[[716,7],[[14,[94]]]],[715,7],[716,7],[[715,7],[[14,[94]]]],[[716,7],[[14,[94]]]],[[715,31],[[12,[32]]]],[[716,31],[[12,[32]]]],[[]],[[]],[94,[[14,[715]]]],[94,[[14,[716]]]],[[]],[[]],[7,[[14,[94]]]],[7,[[14,[94]]]],[7,[[14,[94]]]],[7,[[14,[94]]]],[715,[[14,[99]]]],[716,[[14,[99]]]],[[],100],[[],100],[[],7],[[],7],[[]],[[]],[[[9,[715,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[716,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[9,[715,8]]],[[9,[94,8]]]],[[[9,[716,8]]],[[9,[94,8]]]],[[]],[[]],[715,368],[716,368],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[715,105],[716,105],[[[9,[715,8]]],106],[[[9,[716,8]]],106],[[715,94],[[14,[29]]]],[[716,94],[[14,[29]]]],[715,107],[716,107],[[],38],[[],38],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],38],[[],38],[[715,226],12],[[716,226],12],[[715,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[716,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[],38],[[],38],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],99],[[],99],[[],38],[[],38],[[],14],[[],14],[[]],[[]],0,0,[[],1],[[],1],[[[3,[2]]]],[[]],[[]],[[717,17]],0,0,[[],717],[7],[7],[[]],[7],0,0,0,[[]],[[]],[34],0,0,[[],7],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],0,[[]],0,[[]],0,0,[[],12],[[],12],[[],13],[[],14],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[718,718],[719,719],[720,720],[721,721],[722,722],[723,723],[724,724],[[725,725,53],29],[[726,726,53],29],[[727,727,53],29],[[718,718,53],29],[[728,728,44],29],[[729,729,44],29],[[730,730,44],29],[[731,731,44],29],[[732,732,44],29],[[733,733,44],29],[[719,719,44],29],[[720,720,44],29],[[721,721,44],29],[[727,727]],[[718,718],718],[[718,53],718],[[730,730]],[[731,731]],[[732,732]],[[733,733],733],[[719,44],719],[[719,719],719],[[720,44],720],[[720,720],720],[[721,44],721],[[721,721],721],[[722,734],722],[[722,722],722],[[723,723],723],[[723,734],723],[[724,734],724],[[724,724],724],[[735,735],735],[[735,75],735],[[736,75],736],[[736,736],736],[[737,737],737],[[737,75],737],[[727,727]],[[718,53]],[[718,718]],[[730,730]],[[731,731]],[[732,732]],[[719,44]],[[719,719]],[[720,720]],[[720,44]],[[721,721]],[[721,44]],[[722,734]],[[722,722]],[[723,734]],[[723,723]],[[724,734]],[[724,724]],[[735,735]],[[735,75]],[[736,736]],[[736,75]],[[737,737]],[[737,75]],[[730,730],730],[[727,727],727],[[731,731],731],[[732,732],732],[738,29],[739,29],[[718,718],53],[[733,733],44],[[719,719],44],[[720,720],44],[738,29],[739,29],[718,718],[720,720],[718],[720],[718,718],[720,720],[[740,94]],[[741,94]],[[742,94]],[[743,94]],[[738,94]],[[739,94]],[[725,94]],[[726,94]],[[727,94]],[[718,94]],[[728,94]],[[729,94]],[[730,94]],[[731,94]],[[732,94]],[[733,94]],[[719,94]],[[720,94]],[[721,94]],[[722,94]],[[723,94]],[[724,94]],[[735,94]],[[736,94]],[[737,94]],[[],1],[[],1],[[],1],[[],1],[740,1],[741,1],[[],1],[[],1],[[],1],[742,1],[[],1],[743,1],[[],1],[[],1],[738,1],[[],1],[[],1],[739,1],[[],1],[[],1],[725,1],[726,1],[[],1],[[],1],[727,1],[718,1],[[],1],[[],1],[728,1],[729,1],[[],1],[[],1],[730,1],[731,1],[[],1],[732,1],[[],1],[733,1],[[],1],[719,1],[[],1],[720,1],[[],1],[[],1],[721,1],[[],1],[[],1],[722,1],[[],1],[[],1],[723,1],[724,1],[[],1],[[],1],[[],1],[735,1],[[],1],[[],1],[[],1],[736,1],[[],1],[[],1],[737,1],[[],1],[[],1],[740,1],[[],1],[[],1],[741,1],[[],1],[742,1],[[],1],[743,1],[738,1],[[],1],[739,1],[[],1],[725,1],[[],1],[726,1],[[],1],[727,1],[[],1],[[],1],[718,1],[728,1],[[],1],[[],1],[729,1],[730,1],[[],1],[[],1],[731,1],[732,1],[[],1],[733,1],[[],1],[719,1],[[],1],[[],1],[720,1],[721,1],[[],1],[[],1],[722,1],[[],1],[723,1],[[],1],[724,1],[735,1],[[],1],[736,1],[[],1],[[],1],[737,1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[727,731],[722,719],[735,719],[718,720],[723,720],[736,720],[724,721],[737,721],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[733,643],[719,722],[735,722],[718,723],[720,723],[736,723],[721,724],[737,724],[741,740],[742,740],[719,744],[722,744],[735,744],[718,745],[720,745],[723,745],[736,745],[721,746],[724,746],[737,746],[730,747],[731,748],[732,749],[718,[[47,[53]]]],[730,[[47,[44]]]],[731,[[47,[44]]]],[732,[[47,[44]]]],[719,[[47,[44]]]],[720,[[47,[44]]]],[721,[[47,[44]]]],[722,[[47,[734]]]],[723,[[47,[734]]]],[724,[[47,[734]]]],[735,[[47,[75]]]],[736,[[47,[75]]]],[737,[[47,[75]]]],[740,741],[742,741],[718,[[47,[53]]]],[730,[[47,[44]]]],[731,[[47,[44]]]],[732,[[47,[44]]]],[733,[[47,[44]]]],[719,[[47,[44]]]],[720,[[47,[44]]]],[721,[[47,[44]]]],[722,[[47,[734]]]],[723,[[47,[734]]]],[724,[[47,[734]]]],[735,[[47,[75]]]],[736,[[47,[75]]]],[737,[[47,[75]]]],[740,94],[741,94],[742,94],[743,94],[738,94],[739,94],[725,94],[726,94],[727,94],[718,94],[728,94],[729,94],[730,94],[731,94],[732,94],[733,94],[719,94],[720,94],[721,94],[722,94],[723,94],[724,94],[735,94],[736,94],[737,94],[740,94],[741,94],[742,94],[743,94],[738,94],[739,94],[725,94],[726,94],[727,94],[718,94],[728,94],[729,94],[730,94],[731,94],[732,94],[733,94],[719,94],[720,94],[721,94],[722,94],[723,94],[724,94],[735,94],[736,94],[737,94],[719,735],[722,735],[718,736],[720,736],[723,736],[721,737],[724,737],[740,742],[741,742],[719,750],[722,750],[735,750],[718,751],[720,751],[723,751],[736,751],[721,752],[724,752],[737,752],[719,636],[722,636],[735,636],[720,328],[723,328],[736,328],[720,718],[723,718],[736,718],[721,753],[724,753],[737,753],[[738,738],738],[[739,739],739],[[722,722]],[[722,734]],[[723,734]],[[723,723]],[[724,734]],[[724,724]],[[735,75]],[[735,735]],[[736,75]],[[736,736]],[[737,737]],[[737,75]],[[738,738]],[[739,739]],[738,49],[739,49],[[738,738],738],[[739,739],739],[[722,722]],[[722,734]],[[723,734]],[[723,723]],[[724,724]],[[724,734]],[[735,735]],[[735,75]],[[736,75]],[[736,736]],[[737,75]],[[737,737]],[[738,738]],[[739,739]],[[738,738],738],[[739,739],739],[[722,734]],[[722,722]],[[723,723]],[[723,734]],[[724,734]],[[724,724]],[[735,735]],[[735,75]],[[736,736]],[[736,75]],[[737,75]],[[737,737]],[[738,738]],[[739,739]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[718,718],[719,719],[720,720],[721,721],[740,744],[741,636],[742,750],[[718,718,718],718],[[719,719,719],719],[[720,720,720],720],[[721,721,721],721],[[722,722,722],722],[[723,723,723],723],[[724,724,724],724],[[735,735,735],735],[[736,736,736],736],[[737,737,737],737],[[718,53,53],718],[[719,44,44],719],[[720,44,44],720],[[721,44,44],721],[[718,53],718],[[719,44],719],[[720,44],720],[[721,44],721],[[718,53],718],[[719,44],719],[[720,44],720],[[721,44],721],[754,754],[740,740],[741,741],[742,742],[743,743],[738,738],[739,739],[725,725],[726,726],[727,727],[718,718],[728,728],[729,729],[730,730],[731,731],[732,732],[733,733],[719,719],[720,720],[721,721],[722,722],[723,723],[724,724],[735,735],[736,736],[737,737],[740,98],[741,98],[742,98],[725,98],[726,98],[727,98],[718,98],[728,98],[729,98],[730,98],[731,98],[732,98],[733,98],[719,98],[720,98],[721,98],[722,98],[723,98],[724,98],[735,98],[736,98],[737,98],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[740,[[9,[94,8]]]],[741,[[9,[94,8]]]],[742,[[9,[94,8]]]],[743,[[9,[94,8]]]],[738,[[9,[94,8]]]],[739,[[9,[94,8]]]],[725,[[9,[94,8]]]],[726,[[9,[94,8]]]],[727,[[9,[94,8]]]],[718,[[9,[94,8]]]],[728,[[9,[94,8]]]],[729,[[9,[94,8]]]],[730,[[9,[94,8]]]],[731,[[9,[94,8]]]],[732,[[9,[94,8]]]],[733,[[9,[94,8]]]],[719,[[9,[94,8]]]],[720,[[9,[94,8]]]],[721,[[9,[94,8]]]],[722,[[9,[94,8]]]],[723,[[9,[94,8]]]],[724,[[9,[94,8]]]],[735,[[9,[94,8]]]],[736,[[9,[94,8]]]],[737,[[9,[94,8]]]],[[718,718],738],[[719,719],755],[[720,720],756],[[721,721],757],[[722,722],755],[[723,723],756],[[724,724],757],[[735,735],755],[[736,736],756],[[737,737],757],[[718,718],738],[[719,719],755],[[720,720],756],[[721,721],757],[[722,722],755],[[723,723],756],[[724,724],757],[[735,735],755],[[736,736],756],[[737,737],757],[[718,718],738],[[719,719],755],[[720,720],756],[[721,721],757],[[722,722],755],[[723,723],756],[[724,724],757],[[735,735],755],[[736,736],756],[[737,737],757],[[718,718],738],[[719,719],755],[[720,720],756],[[721,721],757],[[722,722],755],[[723,723],756],[[724,724],757],[[735,735],755],[[736,736],756],[[737,737],757],[[718,718],738],[[719,719],755],[[720,720],756],[[721,721],757],[[722,722],755],[[723,723],756],[[724,724],757],[[735,735],755],[[736,736],756],[[737,737],757],[[718,718],738],[[719,719],755],[[720,720],756],[[721,721],757],[[722,722],755],[[723,723],756],[[724,724],757],[[735,735],755],[[736,736],756],[[737,737],757],[[727,7],718],[[730,7],719],[[731,7],720],[[732,7],721],[[727,7],718],[[730,7],719],[[731,7],720],[[732,7],721],[733,733],[[740,744],29],[[741,636],29],[[742,750],29],[[718,718],718],[[719,719],719],[[720,720],720],[[721,721],721],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[718,718],718],[[720,720],720],[[723,723],723],[[736,736],736],0,[[740,31],[[12,[32]]]],[[741,31],[[12,[32]]]],[[742,31],[[12,[32]]]],[[743,31],[[12,[32]]]],[[738,31],[[12,[32]]]],[[739,31],[[12,[32]]]],[[725,31],[[12,[32]]]],[[726,31],[[12,[32]]]],[[727,31],[[12,[32]]]],[[718,31],[[12,[32]]]],[[728,31],[[12,[32]]]],[[729,31],[[12,[32]]]],[[730,31],[[12,[32]]]],[[731,31],[[12,[32]]]],[[732,31],[[12,[32]]]],[[733,31],[[12,[32]]]],[[719,31],[[12,[32]]]],[[720,31],[[12,[32]]]],[[721,31],[[12,[32]]]],[[722,31],[[12,[32]]]],[[723,31],[[12,[32]]]],[[724,31],[[12,[32]]]],[[735,31],[[12,[32]]]],[[736,31],[[12,[32]]]],[[737,31],[[12,[32]]]],[[],754],[[],740],[[],741],[[],742],[[],743],[[],738],[[],739],[[],725],[[],726],[[],727],[[],718],[[],728],[[],729],[[],730],[[],731],[[],732],[[],733],[[],719],[[],720],[[],721],[[],722],[[],723],[[],724],[[],735],[[],736],[[],737],[7],[7],[7],[7],[7],[7],[7],[7],[7],[725],[7],[726],[7],[718],[7],[7],[728],[729],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[725],[726],[7],[7],[718],[7],[728],[7],[7],[729],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[150,[[12,[754]]]],[150,[[12,[740]]]],[150,[[12,[741]]]],[150,[[12,[742]]]],[150,[[12,[743]]]],[150,[[12,[738]]]],[150,[[12,[739]]]],[150,[[12,[725]]]],[150,[[12,[726]]]],[150,[[12,[727]]]],[150,[[12,[718]]]],[150,[[12,[728]]]],[150,[[12,[729]]]],[150,[[12,[730]]]],[150,[[12,[731]]]],[150,[[12,[732]]]],[150,[[12,[733]]]],[150,[[12,[719]]]],[150,[[12,[720]]]],[150,[[12,[721]]]],[150,[[12,[722]]]],[150,[[12,[723]]]],[150,[[12,[724]]]],[150,[[12,[735]]]],[150,[[12,[736]]]],[150,[[12,[737]]]],[727,53],[730,44],[731,44],[732,44],0,[[718,718],53],[[719,719],44],[[720,720],44],[[721,721],44],[[718,718],53],[[719,719],44],[[720,720],44],[[721,721],44],[[722,722],734],[[723,723],734],[[724,724],734],[[718,53],718],[[718,718],718],[[733,44],733],[[719,44],719],[[719,719],719],[[720,720],720],[[720,44],720],[[721,721],721],[[721,44],721],[[722,734],722],[[722,722],722],[[723,723],723],[[723,734],723],[[724,734],724],[[724,724],724],[[735,735],735],[[735,75],735],[[736,75],736],[[736,736],736],[[737,75],737],[[737,737],737],[[718,718]],[[718,53]],[[719,719]],[[719,44]],[[720,44]],[[720,720]],[[721,44]],[[721,721]],[[722,722]],[[722,734]],[[723,734]],[[723,723]],[[724,724]],[[724,734]],[[735,75]],[[735,735]],[[736,736]],[[736,75]],[[737,75]],[[737,737]],[[718,718],718],[[719,719],719],[[720,720],720],[[721,721],721],[[722,722],722],[[723,723],723],[[724,724],724],[[719,719],730],[[720,720,720],731],[[721,721,721,721],732],[[718,718],53],[[733,733],44],[[719,719],44],[[720,720],44],[[721,721],44],[[722,722],734],[[723,723],734],[[724,724],734],[[735,735],75],[[736,736],75],[[737,737],75],[[718,718],718],[[719,719],719],[[720,720],720],[[721,721],721],[[722,722],722],[[723,723],723],[[724,724],724],[[735,735],735],[[736,736],736],[[737,737],737],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[44,44,44,44],733],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[44,44],719],[[44,44,44],720],[[44,44,44,44],721],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[[754,754],29],[[740,740],29],[[741,741],29],[[742,742],29],[[743,743],29],[[738,738],29],[[739,739],29],[[725,725],29],[[726,726],29],[[727,727],29],[[718,718],29],[[728,728],29],[[729,729],29],[[730,730],29],[[731,731],29],[[732,732],29],[[733,733],29],[[719,719],29],[[720,720],29],[[721,721],29],[[722,722],29],[[723,723],29],[[724,724],29],[[735,735],29],[[736,736],29],[[737,737],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[718,718],[719,719],[720,720],[721,721],[[718,53],753],[[719,44],720],[[720,44],721],[[722,734],723],[[723,734],724],[[735,75],736],[[736,75],737],0,0,[[740,38],[[14,[94]]]],[[741,38],[[14,[94]]]],[[742,38],[[14,[94]]]],[[725,38],[[14,[94]]]],[[726,38],[[14,[94]]]],[[727,38],[[14,[94]]]],[[718,38],[[14,[94]]]],[[728,38],[[14,[94]]]],[[729,38],[[14,[94]]]],[[730,38],[[14,[94]]]],[[731,38],[[14,[94]]]],[[732,38],[[14,[94]]]],[[733,38],[[14,[94]]]],[[719,38],[[14,[94]]]],[[720,38],[[14,[94]]]],[[721,38],[[14,[94]]]],[[722,38],[[14,[94]]]],[[723,38],[[14,[94]]]],[[724,38],[[14,[94]]]],[[735,38],[[14,[94]]]],[[736,38],[[14,[94]]]],[[737,38],[[14,[94]]]],[[740,7],[[14,[94]]]],[[741,7],[[14,[94]]]],[[742,7],[[14,[94]]]],[[725,7],[[14,[94]]]],[[726,7],[[14,[94]]]],[[727,7],[[14,[94]]]],[[718,7],[[14,[94]]]],[[728,7],[[14,[94]]]],[[729,7],[[14,[94]]]],[[730,7],[[14,[94]]]],[[731,7],[[14,[94]]]],[[732,7],[[14,[94]]]],[[733,7],[[14,[94]]]],[[719,7],[[14,[94]]]],[[720,7],[[14,[94]]]],[[721,7],[[14,[94]]]],[[722,7],[[14,[94]]]],[[723,7],[[14,[94]]]],[[724,7],[[14,[94]]]],[[735,7],[[14,[94]]]],[[736,7],[[14,[94]]]],[[737,7],[[14,[94]]]],[[740,7],[[14,[94]]]],[[741,7],[[14,[94]]]],[[742,7],[[14,[94]]]],[[725,7],[[14,[94]]]],[[726,7],[[14,[94]]]],[[727,7],[[14,[94]]]],[[718,7],[[14,[94]]]],[[728,7],[[14,[94]]]],[[729,7],[[14,[94]]]],[[730,7],[[14,[94]]]],[[731,7],[[14,[94]]]],[[732,7],[[14,[94]]]],[[733,7],[[14,[94]]]],[[719,7],[[14,[94]]]],[[720,7],[[14,[94]]]],[[721,7],[[14,[94]]]],[[722,7],[[14,[94]]]],[[723,7],[[14,[94]]]],[[724,7],[[14,[94]]]],[[735,7],[[14,[94]]]],[[736,7],[[14,[94]]]],[[737,7],[[14,[94]]]],[740,7],[741,7],[742,7],[725,7],[726,7],[727,7],[718,7],[728,7],[729,7],[730,7],[731,7],[732,7],[733,7],[719,7],[720,7],[721,7],[722,7],[723,7],[724,7],[735,7],[736,7],[737,7],[[740,38],[[14,[94]]]],[[741,38],[[14,[94]]]],[[742,38],[[14,[94]]]],[[725,38],[[14,[94]]]],[[726,38],[[14,[94]]]],[[727,38],[[14,[94]]]],[[718,38],[[14,[94]]]],[[728,38],[[14,[94]]]],[[729,38],[[14,[94]]]],[[730,38],[[14,[94]]]],[[731,38],[[14,[94]]]],[[732,38],[[14,[94]]]],[[733,38],[[14,[94]]]],[[719,38],[[14,[94]]]],[[720,38],[[14,[94]]]],[[721,38],[[14,[94]]]],[[722,38],[[14,[94]]]],[[723,38],[[14,[94]]]],[[724,38],[[14,[94]]]],[[735,38],[[14,[94]]]],[[736,38],[[14,[94]]]],[[737,38],[[14,[94]]]],[718,718],[719,719],[720,720],[721,721],[[754,31],[[12,[32]]]],[[740,31],[[12,[32]]]],[[741,31],[[12,[32]]]],[[742,31],[[12,[32]]]],[[743,31],[[12,[32]]]],[[738,31],[[12,[32]]]],[[738,31],[[12,[32]]]],[[739,31],[[12,[32]]]],[[739,31],[[12,[32]]]],[[725,31],[[12,[32]]]],[[725,31],[[12,[32]]]],[[726,31],[[12,[32]]]],[[726,31],[[12,[32]]]],[[727,31],[[12,[32]]]],[[727,31],[[12,[32]]]],[[718,31],[[12,[32]]]],[[718,31],[[12,[32]]]],[[728,31],[[12,[32]]]],[[728,31],[[12,[32]]]],[[729,31],[[12,[32]]]],[[729,31],[[12,[32]]]],[[730,31],[[12,[32]]]],[[730,31],[[12,[32]]]],[[731,31],[[12,[32]]]],[[731,31],[[12,[32]]]],[[732,31],[[12,[32]]]],[[732,31],[[12,[32]]]],[[733,31],[[12,[32]]]],[[733,31],[[12,[32]]]],[[719,31],[[12,[32]]]],[[719,31],[[12,[32]]]],[[720,31],[[12,[32]]]],[[720,31],[[12,[32]]]],[[721,31],[[12,[32]]]],[[721,31],[[12,[32]]]],[[722,31],[[12,[32]]]],[[722,31],[[12,[32]]]],[[723,31],[[12,[32]]]],[[723,31],[[12,[32]]]],[[724,31],[[12,[32]]]],[[724,31],[[12,[32]]]],[[735,31],[[12,[32]]]],[[735,31],[[12,[32]]]],[[736,31],[[12,[32]]]],[[736,31],[[12,[32]]]],[[737,31],[[12,[32]]]],[[737,31],[[12,[32]]]],[718,718],[719,719],[720,720],[721,721],[726,758],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[758,726],[[]],[748,727],[725,727],[759,718],[753,718],[[]],[328,718],[[],718],[[],718],[[[47,[53]]],718],[[]],[[]],[[]],[728,731],[[]],[[]],[729,732],[[]],[[[47,[44]]],719],[[],719],[744,719],[636,719],[[]],[750,719],[[],720],[751,720],[[[47,[44]]],720],[745,720],[[]],[[],720],[328,720],[[]],[[],721],[[],721],[[[47,[44]]],721],[[],721],[733,721],[752,721],[[],721],[[],721],[753,721],[746,721],[744,722],[[[47,[734]]],722],[[],722],[[]],[[]],[[[47,[734]]],723],[[],723],[745,723],[[],723],[[],724],[[],724],[[[47,[734]]],724],[[],724],[[],724],[[],724],[[]],[746,724],[750,735],[[],735],[[]],[[[47,[75]]],735],[751,736],[[],736],[[],736],[[[47,[75]]],736],[[]],[[],737],[752,737],[[],737],[[],737],[[],737],[[[47,[75]]],737],[[]],[[],737],[729,733],[53,725],[53,727],[44,728],[44,730],[44,731],[44,719],[[53,636],725],[[44,719],728],[[[47,[53]]],718],[[[47,[44]]],733],[[[47,[44]]],719],[[[47,[44]]],720],[[[47,[44]]],721],[[[47,[734]]],722],[[[47,[734]]],723],[[[47,[734]]],724],[[[47,[75]]],735],[[[47,[75]]],736],[[[47,[75]]],737],[[328,53],726],[[328,53],727],[[720,44],729],[[720,44],731],[[720,44],732],[[720,44],733],[[744,744],740],[[636,636],741],[[750,750],742],[[744,744],740],[[636,636],741],[[750,750],742],[[636,636,636],725],[[718,718,718,718],726],[[718,718,718],727],[[719,719,719],728],[[720,720,720,720],729],[[719,719],730],[[720,720,720],731],[[721,721,721,721],732],[[[47,[53]]],725],[[[47,[53]]],726],[[[47,[53]]],727],[[[47,[44]]],728],[[[47,[44]]],729],[[[47,[44]]],730],[[[47,[44]]],731],[[[47,[44]]],732],[[[47,[[47,[53]]]]],725],[[[47,[[47,[53]]]]],726],[[[47,[[47,[53]]]]],727],[[[47,[[47,[44]]]]],728],[[[47,[[47,[44]]]]],729],[[[47,[[47,[44]]]]],730],[[[47,[[47,[44]]]]],731],[[[47,[[47,[44]]]]],732],[[[52,[53]]],725],[[[52,[53]]],726],[[[52,[53]]],727],[[[52,[44]]],728],[[[52,[44]]],729],[[[52,[44]]],730],[[[52,[44]]],731],[[[52,[44]]],732],[[744,744],740],[[636,636],741],[[750,750],742],[328,727],[719,730],[720,731],[721,732],[[743,53,53,53],727],[[743,44,44,44],731],[[743,44,44,44],732],[[743,44,44,44],733],[747,725],[747,727],[730,728],[730,731],[[747,636],725],[[730,719],728],[748,725],[748,726],[731,728],[731,729],[731,730],[731,732],[731,733],[[748,328],726],[[731,720],729],[727,725],[749,726],[749,727],[732,729],[732,731],[732,733],[643,726],[643,727],[733,729],[733,731],[733,732],[94,[[14,[740]]]],[94,[[14,[741]]]],[94,[[14,[742]]]],[94,[[14,[743]]]],[94,[[14,[738]]]],[94,[[14,[739]]]],[94,[[14,[725]]]],[94,[[14,[726]]]],[94,[[14,[727]]]],[94,[[14,[718]]]],[94,[[14,[728]]]],[94,[[14,[729]]]],[94,[[14,[730]]]],[94,[[14,[731]]]],[94,[[14,[732]]]],[94,[[14,[733]]]],[94,[[14,[719]]]],[94,[[14,[720]]]],[94,[[14,[721]]]],[94,[[14,[722]]]],[94,[[14,[723]]]],[94,[[14,[724]]]],[94,[[14,[735]]]],[94,[[14,[736]]]],[94,[[14,[737]]]],[[720,720],733],[[719,719],733],[[720,720],733],[[643,328],726],[[733,720],729],[[733,720],732],[53,726],[53,727],[44,729],[44,731],[44,732],[44,733],[53,726],[53,727],[44,729],[44,731],[44,732],[44,733],[53,726],[53,727],[44,729],[44,731],[44,732],[44,733],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[636,725],[328,726],[636,727],[719,728],[720,729],[719,731],[720,732],[[719,44],730],[[636,53,636],725],[[636,53,636],727],[[719,44,719],728],[[719,44,719],731],[[328,643,328],726],[[720,733,720],729],[[720,733,720],732],[720,733],[[[52,[53]]],718],[[[52,[44]]],733],[[[52,[44]]],719],[[[52,[44]]],720],[[[52,[44]]],721],[[[52,[734]]],722],[[[52,[734]]],723],[[[52,[734]]],724],[[[52,[75]]],735],[[[52,[75]]],736],[[[52,[75]]],737],[636,725],[328,726],[636,727],[719,728],[720,729],[719,731],[720,732],[721,733],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[[44,44,44,44],733],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[[754,53],328],[740,[[14,[99]]]],[741,[[14,[99]]]],[742,[[14,[99]]]],[743,[[14,[99]]]],[738,[[14,[99]]]],[739,[[14,[99]]]],[725,[[14,[99]]]],[726,[[14,[99]]]],[727,[[14,[99]]]],[718,[[14,[99]]]],[728,[[14,[99]]]],[729,[[14,[99]]]],[730,[[14,[99]]]],[731,[[14,[99]]]],[732,[[14,[99]]]],[733,[[14,[99]]]],[719,[[14,[99]]]],[720,[[14,[99]]]],[721,[[14,[99]]]],[722,[[14,[99]]]],[723,[[14,[99]]]],[724,[[14,[99]]]],[735,[[14,[99]]]],[736,[[14,[99]]]],[737,[[14,[99]]]],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[740,744],[741,636],[742,750],[[740,30]],[[742,30]],[[743,30]],[[738,30]],[[739,30]],[[722,30]],[[723,30]],[[724,30]],[[735,30]],[[736,30]],[[737,30]],[740,760],[741,53],[742,49],0,0,[[734,734],722],[[734,734,734],723],[[734,734,734,734],724],[[718,7]],[[719,7]],[[720,7]],[[721,7]],[[722,7]],[[723,7]],[[724,7]],[[735,7]],[[736,7]],[[737,7]],[[718,7]],[[719,7]],[[720,7]],[[721,7]],[[722,7]],[[723,7]],[[724,7]],[[735,7]],[[736,7]],[[737,7]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[740,760],740],[[741,53],741],[[742,760],742],[[740,740],740],[[741,741],741],[[742,742],742],[[754,328,328],[[14,[53]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[740,8]]],[[9,[1,8]]]],[[[9,[741,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[742,8]]],[[9,[1,8]]]],[[[9,[743,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[738,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[739,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[725,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[726,8]]],[[9,[1,8]]]],[[[9,[727,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[718,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[728,8]]],[[9,[1,8]]]],[[[9,[729,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[730,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[731,8]]],[[9,[1,8]]]],[[[9,[732,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[733,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[719,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[720,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[721,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[722,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[723,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[724,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[735,8]]],[[9,[1,8]]]],[[[9,[736,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[737,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[9,[740,8]]],[[9,[94,8]]]],[[[9,[741,8]]],[[9,[94,8]]]],[[[9,[742,8]]],[[9,[94,8]]]],[[[9,[743,8]]],[[9,[94,8]]]],[[[9,[738,8]]],[[9,[94,8]]]],[[[9,[739,8]]],[[9,[94,8]]]],[[[9,[725,8]]],[[9,[94,8]]]],[[[9,[726,8]]],[[9,[94,8]]]],[[[9,[727,8]]],[[9,[94,8]]]],[[[9,[718,8]]],[[9,[94,8]]]],[[[9,[728,8]]],[[9,[94,8]]]],[[[9,[729,8]]],[[9,[94,8]]]],[[[9,[730,8]]],[[9,[94,8]]]],[[[9,[731,8]]],[[9,[94,8]]]],[[[9,[732,8]]],[[9,[94,8]]]],[[[9,[733,8]]],[[9,[94,8]]]],[[[9,[719,8]]],[[9,[94,8]]]],[[[9,[720,8]]],[[9,[94,8]]]],[[[9,[721,8]]],[[9,[94,8]]]],[[[9,[722,8]]],[[9,[94,8]]]],[[[9,[723,8]]],[[9,[94,8]]]],[[[9,[724,8]]],[[9,[94,8]]]],[[[9,[735,8]]],[[9,[94,8]]]],[[[9,[736,8]]],[[9,[94,8]]]],[[[9,[737,8]]],[[9,[94,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[725,725],[726,726],[727,727],[728,728],[729,729],[730,730],[731,731],[732,732],[733,733],[758],[740,29],[741,29],[742,29],[725,29],[726,29],[727,29],[718,29],[728,29],[729,29],[730,29],[731,29],[732,29],[733,29],[719,29],[720,29],[721,29],[725,29],[726,29],[727,29],[718,29],[728,29],[729,29],[730,29],[731,29],[732,29],[733,29],[719,29],[720,29],[721,29],[718,738],[719,755],[720,756],[721,757],[733,29],[718,49],[719,49],[720,49],[721,49],[722,49],[723,49],[724,49],[718,29],[733,29],[719,29],[720,29],[721,29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[740,103],[741,103],[742,103],[725,103],[726,103],[727,103],[718,103],[728,103],[729,103],[730,103],[731,103],[732,103],[733,103],[719,103],[720,103],[721,103],[722,103],[723,103],[724,103],[735,103],[736,103],[737,103],[[760,760],744],[[760,760,760],745],[[760,760,760,760],746],[718,53],[733,44],[719,44],[720,44],[721,44],[718,53],[733,44],[719,44],[720,44],[721,44],[718,53],[733,44],[719,44],[720,44],[721,44],[722,734],[723,734],[724,734],[735,75],[736,75],[737,75],[[718,718,53],718],[[733,733,44],733],[[719,719,44],719],[[720,720,44],720],[[721,721,44],721],[[328,328,328],726],[[720,720,720],729],[[720,720,720],732],[[328,328,328],726],[[720,720,720],729],[[720,720,720],732],[[328,328,328],726],[[720,720,720],729],[[720,720,720],732],[[328,328,328],726],[[720,720,720],729],[[720,720,720],732],[[636,636],747],[[328,328,328],748],[[718,718,718],727],[[753,753,753,753],749],0,0,0,0,0,[[718,718],718],[[719,719],719],[[720,720],720],[[721,721],721],[[722,722],722],[[723,723],723],[[724,724],724],[[735,735],735],[[736,736],736],[[737,737],737],0,0,0,[718,53],[719,44],[720,44],[721,44],[722,734],[723,734],[724,734],[735,75],[736,75],[737,75],[[718,718],718],[[719,719],719],[[720,720],720],[[721,721],721],[[722,722],722],[[723,723],723],[[724,724],724],[[735,735],735],[[736,736],736],[[737,737],737],0,0,0,[718,53],[719,44],[720,44],[721,44],[722,734],[723,734],[724,734],[735,75],[736,75],[737,75],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[725,725]],[[725,727]],[[725,748]],[[726,749]],[[726,726]],[[727,727]],[[727,53]],[[727,328],328],[[727,725]],[[727,718]],[[718,53],718],[[718,718],718],[[728,728]],[[728,731]],[[729,729]],[[729,732]],[[730,44]],[[730,730]],[[730,719]],[[731,728]],[[731,731]],[[731,720]],[[731,44]],[[732,721]],[[732,732]],[[732,44]],[[732,729]],[[733,733],733],[[733,44],733],[[733,720]],[[719,719],719],[[719,44],719],[[720,720],720],[[720,44],720],[[721,44],721],[[721,721],721],[[722,734],722],[[722,722],722],[[723,734],723],[[723,723],723],[[724,734],724],[[724,724],724],[[735,735],735],[[735,75],735],[[736,736],736],[[736,75],736],[[737,737],737],[[737,75],737],[[718,718,718],718],[[719,719,719],719],[[720,720,720],720],[[721,721,721],721],[[725,725]],[[726,726]],[[727,727]],[[727,53]],[[718,53]],[[718,718]],[[728,728]],[[729,729]],[[730,44]],[[730,730]],[[731,731]],[[731,44]],[[732,732]],[[732,44]],[[733,733]],[[719,44]],[[719,719]],[[720,44]],[[720,720]],[[721,44]],[[721,721]],[[722,734]],[[722,722]],[[723,734]],[[723,723]],[[724,734]],[[724,724]],[[735,75]],[[735,735]],[[736,736]],[[736,75]],[[737,75]],[[737,737]],[[730,730],730],[[727,727],727],[[731,731],731],[[732,732],732],[[733,733],733],[[727,53],727],[[730,44],730],[[731,44],731],[[732,44],732],[[730,719],719],[[727,328],328],[[731,720],720],[[733,720],720],[[727,718],718],[[732,721],721],[[740,7],[[14,[38]]]],[[741,7],[[14,[38]]]],[[742,7],[[14,[38]]]],[[725,7],[[14,[38]]]],[[726,7],[[14,[38]]]],[[727,7],[[14,[38]]]],[[718,7],[[14,[38]]]],[[728,7],[[14,[38]]]],[[729,7],[[14,[38]]]],[[730,7],[[14,[38]]]],[[731,7],[[14,[38]]]],[[732,7],[[14,[38]]]],[[733,7],[[14,[38]]]],[[719,7],[[14,[38]]]],[[720,7],[[14,[38]]]],[[721,7],[[14,[38]]]],[[722,7],[[14,[38]]]],[[723,7],[[14,[38]]]],[[724,7],[[14,[38]]]],[[735,7],[[14,[38]]]],[[736,7],[[14,[38]]]],[[737,7],[[14,[38]]]],[727],[718,718],[730],[731],[732],[733,733],[719,719],[720,720],[721,721],[722,722],[723,723],[724,724],[[760,760,760,760],740],[[53,53,53,53],741],[[49,49,49,49],742],[[29,29,29],738],[[29,29,29,29],739],[[53,53,53],718],[[44,44],719],[[44,44,44],720],[[44,44,44,44],721],[[734,734],722],[[734,734,734],723],[[734,734,734,734],724],[[75,75],735],[[75,75,75],736],[[75,75,75,75],737],[718,718],[733,733],[719,719],[720,720],[721,721],[718,718],[719,719],[720,720],[721,721],[738,738],[739,739],[722],[723],[724],[735],[736],[737],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[44,44,44,44,44,44],732],[[44,44,44,44,44,44],732],[[44,44,44,44,44,44],732],[719,719],[722,722],[[719,719],44],[[722,722],734],[[44,44,44],732],[[44,44,44],732],[[44,44,44],732],[[44,44,44],732],[[44,44,44,44],732],[[44,44,44,44],732],[[44,44,44,44],732],[[718,53],718],[[719,44],719],[[720,44],720],[[721,44],721],0,[215,725],[215,726],[215,727],[215,727],[215,718],[215,718],[215,728],[215,729],[215,730],[215,730],[215,731],[215,731],[215,732],[215,732],[215,733],[215,733],[215,719],[215,719],[215,720],[215,720],[215,721],[215,721],[215,722],[215,722],[215,723],[215,723],[215,724],[215,724],[215,735],[215,735],[215,736],[215,736],[215,737],[215,737],[[718,718],718],[[719,719],719],[[720,720],720],[[721,721],721],[[718,718],718],[[719,719],719],[[720,720],720],[[721,721],721],[[732,720],720],[[53,53,53,53],643],[718,718],[719,719],[720,720],[721,721],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[740,[[14,[75]]]],[742,[[14,[75]]]],[722,[[14,[75]]]],[723,[[14,[75]]]],[724,[[14,[75]]]],[735,[[14,[75]]]],[736,[[14,[75]]]],[737,[[14,[75]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[740,105],[741,105],[742,105],[743,105],[738,105],[739,105],[725,105],[726,105],[727,105],[718,105],[728,105],[729,105],[730,105],[731,105],[732,105],[733,105],[719,105],[720,105],[721,105],[722,105],[723,105],[724,105],[735,105],[736,105],[737,105],[[[9,[740,8]]],106],[[[9,[741,8]]],106],[[[9,[742,8]]],106],[[[9,[743,8]]],106],[[[9,[738,8]]],106],[[[9,[739,8]]],106],[[[9,[725,8]]],106],[[[9,[726,8]]],106],[[[9,[727,8]]],106],[[[9,[718,8]]],106],[[[9,[728,8]]],106],[[[9,[729,8]]],106],[[[9,[730,8]]],106],[[[9,[731,8]]],106],[[[9,[732,8]]],106],[[[9,[733,8]]],106],[[[9,[719,8]]],106],[[[9,[720,8]]],106],[[[9,[721,8]]],106],[[[9,[722,8]]],106],[[[9,[723,8]]],106],[[[9,[724,8]]],106],[[[9,[735,8]]],106],[[[9,[736,8]]],106],[[[9,[737,8]]],106],[[740,94],[[14,[29]]]],[[741,94],[[14,[29]]]],[[742,94],[[14,[29]]]],[[725,94],[[14,[29]]]],[[726,94],[[14,[29]]]],[[727,94],[[14,[29]]]],[[718,94],[[14,[29]]]],[[728,94],[[14,[29]]]],[[729,94],[[14,[29]]]],[[730,94],[[14,[29]]]],[[731,94],[[14,[29]]]],[[732,94],[[14,[29]]]],[[733,94],[[14,[29]]]],[[719,94],[[14,[29]]]],[[720,94],[[14,[29]]]],[[721,94],[[14,[29]]]],[[722,94],[[14,[29]]]],[[723,94],[[14,[29]]]],[[724,94],[[14,[29]]]],[[735,94],[[14,[29]]]],[[736,94],[[14,[29]]]],[[737,94],[[14,[29]]]],[740,107],[741,107],[742,107],[743,107],[738,107],[739,107],[725,107],[726,107],[727,107],[718,107],[728,107],[729,107],[730,107],[731,107],[732,107],[733,107],[719,107],[720,107],[721,107],[722,107],[723,107],[724,107],[735,107],[736,107],[737,107],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[718,718],718],[[719,719],719],[[720,720],720],[[721,721],721],[[718,718],718],[[719,719],719],[[720,720],720],[[721,721],721],[[718,53],718],[[718,718],718],[[719,719],719],[[719,44],719],[[720,44],720],[[720,720],720],[[721,721],721],[[721,44],721],[[722,734],722],[[722,722],722],[[723,734],723],[[723,723],723],[[724,724],724],[[724,734],724],[[735,75],735],[[735,735],735],[[736,75],736],[[736,736],736],[[737,737],737],[[737,75],737],[[718,718]],[[718,53]],[[719,44]],[[719,719]],[[720,44]],[[720,720]],[[721,44]],[[721,721]],[[722,722]],[[722,734]],[[723,734]],[[723,723]],[[724,734]],[[724,724]],[[735,75]],[[735,735]],[[736,75]],[[736,736]],[[737,737]],[[737,75]],[[718,718],718],[[719,719],719],[[720,720],720],[[721,721],721],[[722,722],722],[[723,723],723],[[724,724],724],[[719,719],719],[[722,722],722],[718,718],[719,719],[720,720],[721,721],[[727,7],718],[[730,7],719],[[731,7],720],[[732,7],721],[[722,722],722],[[723,723],723],[[724,724],724],[[735,735],735],[[736,736],736],[[737,737],737],[[722,722],722],[[723,723],723],[[724,724],724],[[735,735],735],[[736,736],736],[[737,737],737],[[722,722],722],[[723,723],723],[[724,724],724],[[735,735],735],[[736,736],736],[[737,737],737],[[722,722],722],[[723,723],723],[[724,724],724],[[735,735],735],[[736,736],736],[[737,737],737],[[738,718,718],718],[[755,719,719],719],[[756,720,720],720],[[757,721,721],721],[[755,722,722],722],[[756,723,723],723],[[757,724,724],724],[[755,735,735],735],[[756,736,736],736],[[757,737,737],737],[[754,226],12],[[740,226],12],[[741,226],12],[[742,226],12],[[743,226],12],[[738,226],12],[[739,226],12],[[725,226],12],[[726,226],12],[[727,226],12],[[718,226],12],[[728,226],12],[[729,226],12],[[730,226],12],[[731,226],12],[[732,226],12],[[733,226],12],[[719,226],12],[[720,226],12],[[721,226],12],[[722,226],12],[[723,226],12],[[724,226],12],[[735,226],12],[[736,226],12],[[737,226],12],[[740,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[741,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[742,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[743,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[738,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[738,7,29]],[[739,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[739,7,29]],[[725,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[726,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[727,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[718,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[728,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[729,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[730,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[731,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[732,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[733,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[719,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[720,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[721,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[722,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[723,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[724,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[735,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[736,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[737,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[722,760]],[[722,750]],[[722,75]],[[722,301]],[[722,744]],[[722,51]],[[722,761]],[[722,762]],[[722,49]],[[722,734]],[[723,49]],[[723,762]],[[723,761]],[[723,51]],[[723,734]],[[723,301]],[[723,75]],[[723,751]],[[723,760]],[[723,745]],[[724,760]],[[724,51]],[[724,75]],[[724,761]],[[724,762]],[[724,746]],[[724,49]],[[724,301]],[[724,752]],[[724,734]],[[735,49]],[[735,761]],[[735,75]],[[735,760]],[[735,301]],[[735,750]],[[735,51]],[[735,734]],[[735,744]],[[735,762]],[[736,745]],[[736,762]],[[736,734]],[[736,761]],[[736,51]],[[736,760]],[[736,75]],[[736,49]],[[736,301]],[[736,751]],[[737,761]],[[737,75]],[[737,51]],[[737,760]],[[737,49]],[[737,734]],[[737,752]],[[737,746]],[[737,301]],[[737,762]],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[722,51]],[[722,762]],[[722,761]],[[722,49]],[[722,75]],[[722,744]],[[722,301]],[[722,734]],[[722,750]],[[722,760]],[[723,762]],[[723,751]],[[723,49]],[[723,761]],[[723,51]],[[723,734]],[[723,75]],[[723,745]],[[723,301]],[[723,760]],[[724,752]],[[724,762]],[[724,51]],[[724,746]],[[724,301]],[[724,761]],[[724,760]],[[724,75]],[[724,734]],[[724,49]],[[735,744]],[[735,49]],[[735,51]],[[735,762]],[[735,301]],[[735,750]],[[735,761]],[[735,734]],[[735,75]],[[735,760]],[[736,760]],[[736,734]],[[736,75]],[[736,51]],[[736,761]],[[736,301]],[[736,745]],[[736,762]],[[736,49]],[[736,751]],[[737,762]],[[737,51]],[[737,49]],[[737,752]],[[737,75]],[[737,760]],[[737,761]],[[737,301]],[[737,746]],[[737,734]],[718,718],[719,719],[720,720],[721,721],[722,722],[723,723],[724,724],[740,744],[741,636],[742,750],[[733,733,44],733],[29,738],[29,739],[53,718],[44,719],[44,720],[44,721],[734,722],[734,723],[734,724],[75,735],[75,736],[75,737],[[727,727]],[[718,53],718],[[718,718],718],[[730,730]],[[731,731]],[[732,732]],[[733,733],733],[[719,44],719],[[719,719],719],[[720,720],720],[[720,44],720],[[721,721],721],[[721,44],721],[[722,722],722],[[722,734],722],[[723,723],723],[[723,734],723],[[724,734],724],[[724,724],724],[[735,735],735],[[735,75],735],[[736,736],736],[[736,75],736],[[737,75],737],[[737,737],737],[[727,727]],[[718,718]],[[718,53]],[[730,730]],[[731,731]],[[732,732]],[[719,44]],[[719,719]],[[720,720]],[[720,44]],[[721,721]],[[721,44]],[[722,722]],[[722,734]],[[723,723]],[[723,734]],[[724,734]],[[724,724]],[[735,75]],[[735,735]],[[736,736]],[[736,75]],[[737,75]],[[737,737]],[[730,730],730],[[727,727],727],[[731,731],731],[[732,732],732],[215,727],[215,727],[215,718],[215,718],[215,730],[215,730],[215,731],[215,731],[215,732],[215,732],[215,733],[215,733],[215,719],[215,719],[215,720],[215,720],[215,721],[215,721],[215,722],[215,722],[215,723],[215,723],[215,724],[215,724],[215,735],[215,735],[215,736],[215,736],[215,737],[215,737],0,[[738,7],29],[[739,7],29],[718,[[47,[53]]]],[733,[[47,[44]]]],[719,[[47,[44]]]],[720,[[47,[44]]]],[721,[[47,[44]]]],[722,[[47,[734]]]],[723,[[47,[734]]]],[724,[[47,[734]]]],[735,[[47,[75]]]],[736,[[47,[75]]]],[737,[[47,[75]]]],[733],[725,[[47,[53]]]],[726,[[47,[53]]]],[727,[[47,[53]]]],[728,[[47,[44]]]],[729,[[47,[44]]]],[730,[[47,[44]]]],[731,[[47,[44]]]],[732,[[47,[44]]]],[725,[[47,[[47,[53]]]]]],[726,[[47,[[47,[53]]]]]],[727,[[47,[[47,[53]]]]]],[728,[[47,[[47,[44]]]]]],[729,[[47,[[47,[44]]]]]],[730,[[47,[[47,[44]]]]]],[731,[[47,[[47,[44]]]]]],[732,[[47,[[47,[44]]]]]],[[733,743]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[725],[728],[726],[729],[732],[733,720],[[],141],[[],141],[[],141],[[],141],[[],141],[[],141],[[],141],[[],141],[[],141],[[],141],[[],141],[[],141],[[],141],[[],141],[[],141],[[],141],[[],141],[[],141],[[],141],[[],141],[[],141],[758,[[47,[753]]]],[[726,[77,[328]]],328],[[725,636],636],[[727,636],636],[[728,719],719],[[731,719],719],[[726,328],328],[[729,720],720],[[732,720],720],[[726,718],718],[[725,636],636],[[727,636],636],[[728,719],719],[[731,719],719],[[726,328],328],[[729,720],720],[[732,720],720],[[726,718],718],0,0,0,0,0,[727,727],[730,730],[731,731],[732,732],[718,718],[719,719],[720,720],[721,721],[718,636],[720,719],[721,720],[723,722],[724,723],[736,735],[737,736],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[735,[[12,[722]]]],[736,[[12,[723]]]],[[],12],[737,[[12,[724]]]],[[],12],[[],12],[722,[[12,[735]]]],[723,[[12,[736]]]],[[],12],[724,[[12,[737]]]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[718,[[14,[718]]]],[719,[[14,[719]]]],[720,[[14,[720]]]],[721,[[14,[721]]]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],0,0,[[75,75],735],[[75,75,75],736],[[75,75,75,75],737],[[740,740],740],[[741,741],741],[[742,742],742],[[740,744],740],[[741,636],741],[[742,750],742],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[49,49],750],[[49,49,49],751],[[49,49,49,49],752],[[53,53],636],[[53,53,53],328],[[53,53,53],718],[[53,53,53,53],753],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[740,760],[741,53],[742,49],[[722,722],722],[[723,723],723],[[724,724],724],[[735,735],735],[[736,736],736],[[737,737],737],[[722,722],722],[[723,723],723],[[724,724],724],[[735,735],735],[[736,736],736],[[737,737],737],[[722,722],722],[[723,723],723],[[724,724],724],[[735,735],735],[[736,736],736],[[737,737],737],[[722,722],722],[[723,723],723],[[724,724],724],[[735,735],735],[[736,736],736],[[737,737],737],[[725,[52,[53]]]],[[726,[52,[53]]]],[[727,[52,[53]]]],[[728,[52,[44]]]],[[729,[52,[44]]]],[[730,[52,[44]]]],[[731,[52,[44]]]],[[732,[52,[44]]]],[[718,[52,[53]]]],[[733,[52,[44]]]],[[719,[52,[44]]]],[[720,[52,[44]]]],[[721,[52,[44]]]],[[722,[52,[734]]]],[[723,[52,[734]]]],[[724,[52,[734]]]],[[735,[52,[75]]]],[[736,[52,[75]]]],[[737,[52,[75]]]],[[]],[721,719],[724,722],[737,735],[[]],[721,720],[724,723],[737,736],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,720],[724,723],[737,736],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,720],[724,723],[737,736],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,720],[724,723],[737,736],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,719],[724,722],[737,735],[[]],[721,720],[724,723],[737,736],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,720],[724,723],[737,736],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,720],[724,723],[737,736],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,720],[724,723],[737,736],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,719],[724,722],[737,735],[[]],[721,720],[724,723],[737,736],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,720],[724,723],[737,736],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,720],[724,723],[737,736],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,720],[724,723],[737,736],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,719],[724,722],[737,735],[[]],[721,720],[724,723],[737,736],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,720],[724,723],[737,736],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,720],[724,723],[737,736],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,720],[724,723],[737,736],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[721,719],[724,722],[737,735],[[]],[721,720],[724,723],[737,736],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,720],[724,723],[737,736],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,720],[724,723],[737,736],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,720],[724,723],[737,736],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[[]],[[]],[718,636],[719,719],[720,719],[721,719],[722,722],[723,722],[724,722],[735,735],[736,735],[737,735],[[]],[721,720],[724,723],[737,736],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[[]],[[]],[718,718],[719,720],[720,720],[721,720],[722,723],[723,723],[724,723],[735,736],[736,736],[737,736],[[]],[721,721],[724,724],[737,737],[[]],[[]],[[]],[718,753],[719,721],[720,721],[721,721],[722,724],[723,724],[724,724],[735,737],[736,737],[737,737],[[]],[[]],[[]],[718,753],[719,721],[720,721],[721,721],[722,724],[723,724],[724,724],[735,737],[736,737],[737,737],[[]],[[]],[718,753],[720,721],[721,721],[723,724],[724,724],[736,737],[737,737],[[]],[[]],[[]],[718,718],[719,720],[720,720],[721,720],[722,723],[723,723],[724,723],[735,736],[736,736],[737,736],[[]],[721,721],[724,724],[737,737],[[]],[[]],[[]],[718,753],[719,721],[720,721],[721,721],[722,724],[723,724],[724,724],[735,737],[736,737],[737,737],[[]],[[]],[[]],[718,753],[719,721],[720,721],[721,721],[722,724],[723,724],[724,724],[735,737],[736,737],[737,737],[[]],[[]],[718,753],[720,721],[721,721],[723,724],[724,724],[736,737],[737,737],[[]],[[]],[718,718],[720,720],[721,720],[723,723],[724,723],[736,736],[737,736],[[]],[721,721],[724,724],[737,737],[[]],[[]],[718,753],[720,721],[721,721],[723,724],[724,724],[736,737],[737,737],[[]],[[]],[718,753],[720,721],[721,721],[723,724],[724,724],[736,737],[737,737],[[]],[[]],[718,753],[720,721],[721,721],[723,724],[724,724],[736,737],[737,737],[[]],[[]],[[]],[718,636],[719,719],[720,719],[721,719],[722,722],[723,722],[724,722],[735,735],[736,735],[737,735],[[]],[721,720],[724,723],[737,736],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[[]],[[]],[718,718],[719,720],[720,720],[721,720],[722,723],[723,723],[724,723],[735,736],[736,736],[737,736],[[]],[721,721],[724,724],[737,737],[[]],[[]],[[]],[718,753],[719,721],[720,721],[721,721],[722,724],[723,724],[724,724],[735,737],[736,737],[737,737],[[]],[[]],[[]],[718,753],[719,721],[720,721],[721,721],[722,724],[723,724],[724,724],[735,737],[736,737],[737,737],[[]],[[]],[718,753],[720,721],[721,721],[723,724],[724,724],[736,737],[737,737],[[]],[[]],[[]],[718,718],[719,720],[720,720],[721,720],[722,723],[723,723],[724,723],[735,736],[736,736],[737,736],[[]],[721,721],[724,724],[737,737],[[]],[[]],[[]],[718,753],[719,721],[720,721],[721,721],[722,724],[723,724],[724,724],[735,737],[736,737],[737,737],[[]],[[]],[[]],[718,753],[719,721],[720,721],[721,721],[722,724],[723,724],[724,724],[735,737],[736,737],[737,737],[[]],[[]],[718,753],[720,721],[721,721],[723,724],[724,724],[736,737],[737,737],[[]],[[]],[718,718],[733,720],[720,720],[721,720],[723,723],[724,723],[736,736],[737,736],[[]],[721,721],[724,724],[737,737],[[]],[[]],[718,753],[720,721],[721,721],[723,724],[724,724],[736,737],[737,737],[[]],[[]],[718,753],[720,721],[721,721],[723,724],[724,724],[736,737],[737,737],[[]],[[]],[718,753],[720,721],[721,721],[723,724],[724,724],[736,737],[737,737],[[]],[[]],[718,636],[720,719],[721,719],[723,722],[724,722],[736,735],[737,735],[[]],[721,720],[724,723],[737,736],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[[]],[718,718],[720,720],[721,720],[723,723],[724,723],[736,736],[737,736],[[]],[721,721],[724,724],[737,737],[[]],[[]],[718,753],[720,721],[721,721],[723,724],[724,724],[736,737],[737,737],[[]],[[]],[718,753],[720,721],[721,721],[723,724],[724,724],[736,737],[737,737],[[]],[[]],[718,753],[720,721],[721,721],[723,724],[724,724],[736,737],[737,737],[[]],[[]],[718,718],[720,720],[721,720],[723,723],[724,723],[736,736],[737,736],[[]],[721,721],[724,724],[737,737],[[]],[[]],[718,753],[720,721],[721,721],[723,724],[724,724],[736,737],[737,737],[[]],[[]],[718,753],[720,721],[721,721],[723,724],[724,724],[736,737],[737,737],[[]],[[]],[718,753],[720,721],[721,721],[723,724],[724,724],[736,737],[737,737],[[]],[[]],[718,718],[720,720],[721,720],[723,723],[724,723],[736,736],[737,736],[[]],[721,721],[724,724],[737,737],[[]],[[]],[718,753],[720,721],[721,721],[723,724],[724,724],[736,737],[737,737],[[]],[[]],[718,753],[720,721],[721,721],[723,724],[724,724],[736,737],[737,737],[[]],[[]],[718,753],[720,721],[721,721],[723,724],[724,724],[736,737],[737,737],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[721,719],[724,722],[737,735],[[]],[721,720],[724,723],[737,736],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,720],[724,723],[737,736],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,720],[724,723],[737,736],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,720],[724,723],[737,736],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[[]],[[]],[718,636],[719,719],[720,719],[721,719],[722,722],[723,722],[724,722],[735,735],[736,735],[737,735],[[]],[721,720],[724,723],[737,736],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[[]],[[]],[718,718],[719,720],[720,720],[721,720],[722,723],[723,723],[724,723],[735,736],[736,736],[737,736],[[]],[721,721],[724,724],[737,737],[[]],[[]],[[]],[718,753],[719,721],[720,721],[721,721],[722,724],[723,724],[724,724],[735,737],[736,737],[737,737],[[]],[[]],[[]],[718,753],[719,721],[720,721],[721,721],[722,724],[723,724],[724,724],[735,737],[736,737],[737,737],[[]],[[]],[718,753],[720,721],[721,721],[723,724],[724,724],[736,737],[737,737],[[]],[[]],[[]],[718,718],[719,720],[720,720],[721,720],[722,723],[723,723],[724,723],[735,736],[736,736],[737,736],[[]],[721,721],[724,724],[737,737],[[]],[[]],[[]],[718,753],[719,721],[720,721],[721,721],[722,724],[723,724],[724,724],[735,737],[736,737],[737,737],[[]],[[]],[[]],[718,753],[719,721],[720,721],[721,721],[722,724],[723,724],[724,724],[735,737],[736,737],[737,737],[[]],[[]],[718,753],[720,721],[721,721],[723,724],[724,724],[736,737],[737,737],[[]],[[]],[718,718],[720,720],[721,720],[723,723],[724,723],[736,736],[737,736],[[]],[721,721],[724,724],[737,737],[[]],[[]],[718,753],[720,721],[721,721],[723,724],[724,724],[736,737],[737,737],[[]],[[]],[718,753],[720,721],[721,721],[723,724],[724,724],[736,737],[737,737],[[]],[[]],[718,753],[720,721],[721,721],[723,724],[724,724],[736,737],[737,737],[[]],[[]],[[]],[718,636],[719,719],[720,719],[721,719],[722,722],[723,722],[724,722],[735,735],[736,735],[737,735],[[]],[721,720],[724,723],[737,736],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[[]],[[]],[718,718],[719,720],[720,720],[721,720],[722,723],[723,723],[724,723],[735,736],[736,736],[737,736],[[]],[721,721],[724,724],[737,737],[[]],[[]],[[]],[718,753],[719,721],[720,721],[721,721],[722,724],[723,724],[724,724],[735,737],[736,737],[737,737],[[]],[[]],[[]],[718,753],[719,721],[720,721],[721,721],[722,724],[723,724],[724,724],[735,737],[736,737],[737,737],[[]],[[]],[718,753],[720,721],[721,721],[723,724],[724,724],[736,737],[737,737],[[]],[[]],[[]],[718,718],[719,720],[720,720],[721,720],[722,723],[723,723],[724,723],[735,736],[736,736],[737,736],[[]],[721,721],[724,724],[737,737],[[]],[[]],[[]],[718,753],[719,721],[720,721],[721,721],[722,724],[723,724],[724,724],[735,737],[736,737],[737,737],[[]],[[]],[[]],[718,753],[719,721],[720,721],[721,721],[722,724],[723,724],[724,724],[735,737],[736,737],[737,737],[[]],[[]],[718,753],[720,721],[721,721],[723,724],[724,724],[736,737],[737,737],[[]],[[]],[718,718],[720,720],[721,720],[723,723],[724,723],[736,736],[737,736],[[]],[721,721],[724,724],[737,737],[[]],[[]],[718,753],[720,721],[721,721],[723,724],[724,724],[736,737],[737,737],[[]],[[]],[718,753],[720,721],[721,721],[723,724],[724,724],[736,737],[737,737],[[]],[[]],[718,753],[720,721],[721,721],[723,724],[724,724],[736,737],[737,737],[[]],[[]],[718,636],[720,719],[721,719],[723,722],[724,722],[736,735],[737,735],[[]],[721,720],[724,723],[737,736],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[[]],[718,718],[720,720],[721,720],[723,723],[724,723],[736,736],[737,736],[[]],[721,721],[724,724],[737,737],[[]],[[]],[718,753],[720,721],[721,721],[723,724],[724,724],[736,737],[737,737],[[]],[[]],[718,753],[720,721],[721,721],[723,724],[724,724],[736,737],[737,737],[[]],[[]],[718,753],[720,721],[721,721],[723,724],[724,724],[736,737],[737,737],[[]],[[]],[718,718],[720,720],[721,720],[723,723],[724,723],[736,736],[737,736],[[]],[721,721],[724,724],[737,737],[[]],[[]],[718,753],[720,721],[721,721],[723,724],[724,724],[736,737],[737,737],[[]],[[]],[718,753],[720,721],[721,721],[723,724],[724,724],[736,737],[737,737],[[]],[[]],[718,753],[720,721],[721,721],[723,724],[724,724],[736,737],[737,737],[[]],[[]],[718,718],[720,720],[721,720],[723,723],[724,723],[736,736],[737,736],[[]],[721,721],[724,724],[737,737],[[]],[[]],[718,753],[720,721],[721,721],[723,724],[724,724],[736,737],[737,737],[[]],[[]],[718,753],[720,721],[721,721],[723,724],[724,724],[736,737],[737,737],[[]],[[]],[718,753],[720,721],[721,721],[723,724],[724,724],[736,737],[737,737],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[721,719],[724,722],[737,735],[[]],[721,720],[724,723],[737,736],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,720],[724,723],[737,736],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,720],[724,723],[737,736],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,720],[724,723],[737,736],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[[]],[718,636],[720,719],[721,719],[723,722],[724,722],[736,735],[737,735],[[]],[721,720],[724,723],[737,736],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[[]],[718,718],[720,720],[721,720],[723,723],[724,723],[736,736],[737,736],[[]],[721,721],[724,724],[737,737],[[]],[[]],[718,753],[720,721],[721,721],[723,724],[724,724],[736,737],[737,737],[[]],[[]],[718,753],[720,721],[721,721],[723,724],[724,724],[736,737],[737,737],[[]],[[]],[718,753],[720,721],[721,721],[723,724],[724,724],[736,737],[737,737],[[]],[[]],[718,718],[720,720],[721,720],[723,723],[724,723],[736,736],[737,736],[[]],[721,721],[724,724],[737,737],[[]],[[]],[718,753],[720,721],[721,721],[723,724],[724,724],[736,737],[737,737],[[]],[[]],[718,753],[720,721],[721,721],[723,724],[724,724],[736,737],[737,737],[[]],[[]],[718,753],[720,721],[721,721],[723,724],[724,724],[736,737],[737,737],[[]],[[]],[718,718],[720,720],[721,720],[723,723],[724,723],[736,736],[737,736],[[]],[721,721],[724,724],[737,737],[[]],[[]],[718,753],[720,721],[721,721],[723,724],[724,724],[736,737],[737,737],[[]],[[]],[718,753],[720,721],[721,721],[723,724],[724,724],[736,737],[737,737],[[]],[[]],[718,753],[720,721],[721,721],[723,724],[724,724],[736,737],[737,737],[[]],[[]],[718,636],[720,719],[721,719],[723,722],[724,722],[736,735],[737,735],[[]],[721,720],[724,723],[737,736],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[[]],[718,718],[720,720],[721,720],[723,723],[724,723],[736,736],[737,736],[[]],[721,721],[724,724],[737,737],[[]],[[]],[718,753],[720,721],[721,721],[723,724],[724,724],[736,737],[737,737],[[]],[[]],[718,753],[720,721],[721,721],[723,724],[724,724],[736,737],[737,737],[[]],[[]],[718,753],[720,721],[721,721],[723,724],[724,724],[736,737],[737,737],[[]],[[]],[718,718],[720,720],[721,720],[723,723],[724,723],[736,736],[737,736],[[]],[721,721],[724,724],[737,737],[[]],[[]],[718,753],[720,721],[721,721],[723,724],[724,724],[736,737],[737,737],[[]],[[]],[718,753],[720,721],[721,721],[723,724],[724,724],[736,737],[737,737],[[]],[[]],[718,753],[720,721],[721,721],[723,724],[724,724],[736,737],[737,737],[[]],[[]],[718,718],[720,720],[721,720],[723,723],[724,723],[736,736],[737,736],[[]],[721,721],[724,724],[737,737],[[]],[[]],[718,753],[720,721],[721,721],[723,724],[724,724],[736,737],[737,737],[[]],[[]],[718,753],[720,721],[721,721],[723,724],[724,724],[736,737],[737,737],[[]],[[]],[718,753],[720,721],[721,721],[723,724],[724,724],[736,737],[737,737],[[]],[[]],[718,636],[720,719],[721,719],[723,722],[724,722],[736,735],[737,735],[[]],[721,720],[724,723],[737,736],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[721,721],[724,724],[737,737],[[]],[[]],[718,718],[720,720],[721,720],[723,723],[724,723],[736,736],[737,736],[[]],[721,721],[724,724],[737,737],[[]],[[]],[718,753],[720,721],[721,721],[723,724],[724,724],[736,737],[737,737],[[]],[[]],[718,753],[720,721],[721,721],[723,724],[724,724],[736,737],[737,737],[[]],[[]],[718,753],[720,721],[721,721],[723,724],[724,724],[736,737],[737,737],[[]],[[]],[718,718],[720,720],[721,720],[723,723],[724,723],[736,736],[737,736],[[]],[721,721],[724,724],[737,737],[[]],[[]],[718,753],[720,721],[721,721],[723,724],[724,724],[736,737],[737,737],[[]],[[]],[718,753],[720,721],[721,721],[723,724],[724,724],[736,737],[737,737],[[]],[[]],[718,753],[720,721],[721,721],[723,724],[724,724],[736,737],[737,737],[[]],[[]],[718,718],[720,720],[721,720],[723,723],[724,723],[736,736],[737,736],[[]],[721,721],[724,724],[737,737],[[]],[[]],[718,753],[720,721],[721,721],[723,724],[724,724],[736,737],[737,737],[[]],[[]],[718,753],[720,721],[721,721],[723,724],[724,724],[736,737],[737,737],[[]],[[]],[718,753],[720,721],[721,721],[723,724],[724,724],[736,737],[737,737],0,0,0,0,0,0,0,0,0,0,0,[755,29],[756,29],[757,29],[755,29],[756,29],[757,29],[[755,94]],[[756,94]],[[757,94]],[755,1],[[],1],[[],1],[756,1],[[],1],[[],1],[[],1],[757,1],[[],1],[755,1],[[],1],[756,1],[[],1],[757,1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],15],[[],15],[[],15],[755,94],[756,94],[757,94],[755,94],[756,94],[757,94],[[755,755],755],[[756,756],756],[[757,757],757],[[755,755]],[[756,756]],[[757,757]],[755,49],[756,49],[757,49],[[755,755],755],[[756,756],756],[[757,757],757],[[755,755]],[[756,756]],[[757,757]],[[755,755],755],[[756,756],756],[[757,757],757],[[755,755]],[[756,756]],[[757,757]],[[]],[[]],[[]],[[]],[[]],[[]],[755,755],[756,756],[757,757],[755,98],[756,98],[757,98],[[]],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[755,[[9,[94,8]]]],[756,[[9,[94,8]]]],[757,[[9,[94,8]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[755,31],[[12,[32]]]],[[756,31],[[12,[32]]]],[[757,31],[[12,[32]]]],[[],755],[[],756],[[],757],[7],[7],[7],[7],[7],[7],[150,[[12,[755]]]],[150,[[12,[756]]]],[150,[[12,[757]]]],[[]],[[]],[[]],[7],[7],[7],[15,29],[15,29],[15,29],[30],[30],[30],[[755,755],29],[[756,756],29],[[757,757],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[[755,38],[[14,[94]]]],[[756,38],[[14,[94]]]],[[757,38],[[14,[94]]]],[[755,7],[[14,[94]]]],[[756,7],[[14,[94]]]],[[757,7],[[14,[94]]]],[[755,7],[[14,[94]]]],[[756,7],[[14,[94]]]],[[757,7],[[14,[94]]]],[755,7],[756,7],[757,7],[[755,38],[[14,[94]]]],[[756,38],[[14,[94]]]],[[757,38],[[14,[94]]]],[[755,31],[[12,[32]]]],[[755,31],[[12,[32]]]],[[756,31],[[12,[32]]]],[[756,31],[[12,[32]]]],[[757,31],[[12,[32]]]],[[757,31],[[12,[32]]]],[[]],[[]],[[]],[94,[[14,[755]]]],[94,[[14,[756]]]],[94,[[14,[757]]]],[[]],[[]],[[]],[34],[34],[34],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[755,[[14,[99]]]],[756,[[14,[99]]]],[757,[[14,[99]]]],[[],100],[[],100],[[],100],[[755,30]],[[756,30]],[[757,30]],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[[9,[755,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[756,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[757,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[9,[755,8]]],[[9,[94,8]]]],[[[9,[756,8]]],[[9,[94,8]]]],[[[9,[757,8]]],[[9,[94,8]]]],[[]],[[]],[[]],[755,103],[756,103],[757,103],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[755,7],[[14,[38]]]],[[756,7],[[14,[38]]]],[[757,7],[[14,[38]]]],[[29,29],755],[[29,29,29],756],[[29,29,29,29],757],[755,755],[756,756],[757,757],[[]],[[]],[[]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[755,105],[756,105],[757,105],[[[9,[755,8]]],106],[[[9,[756,8]]],106],[[[9,[757,8]]],106],[[755,94],[[14,[29]]]],[[756,94],[[14,[29]]]],[[757,94],[[14,[29]]]],[755,107],[756,107],[757,107],[[],38],[[],38],[[],38],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],38],[[],38],[[],38],[[755,226],12],[[756,226],12],[[757,226],12],[[755,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[755,7,29]],[[756,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[756,7,29]],[[757,7,29]],[[757,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[],38],[[],38],[[],38],[29,755],[29,756],[29,757],[[755,7],29],[[756,7],29],[[757,7],29],[[]],[[]],[[]],[[]],[[]],[[]],[[],141],[[],141],[[],141],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],99],[[],99],[[],99],[[],38],[[],38],[[],38],[[],14],[[],14],[[],14],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[764,[763]],53],763],[[[765,[763]],53],763],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[764,[[0,[261,763]]]]],[[764,[[0,[261,763]]]]]],[[[765,[[0,[261,763]]]]],[[765,[[0,[261,763]]]]]],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[764,[[0,[284,763]]]]]],[[],[[765,[[0,[284,763]]]]]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[]],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[7],[[[764,[636]],53],53],[[[764,[[0,[[505,[[0,[[505,[[0,[[505,[[0,[505,763]]]],763]]]],763]]]],763]]]],[764,[[0,[[505,[[0,[[505,[[0,[[505,[[0,[505,763]]]],763]]]],763]]]],763]]]]],29],[[[765,[[0,[[505,[[0,[[505,[[0,[[505,[[0,[505,763]]]],763]]]],763]]]],763]]]],[765,[[0,[[505,[[0,[[505,[[0,[[505,[[0,[505,763]]]],763]]]],763]]]],763]]]]],29],[[[764,[[0,[490,763]]]],31],[[12,[32]]]],[[[765,[[0,[490,763]]]],31],[[12,[32]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[34],[34],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[765,[763]],7],215],[[[765,[763]],7],215],[[[765,[763]],7,25],215],[[[765,[763]],7],215],[[[77,[[79,[[47,[763]],8]]]]],[[766,[763]]]],[[489,489],[[767,[763]]]],[[53,[77,[[79,[763,8]]]]],[[768,[763]]]],[[[77,[[79,[763,8]]]]],[[769,[763]]]],[[[77,[636]],[77,[636]]],[[764,[636]]]],[[[77,[[79,[763,8]]]]],[[768,[763]]]],[[]],[[]],[[[764,[763]],53],763],[[[765,[763]],53],763],[[[765,[763]]],[[52,[[764,[763]]]]]],[[],765],[[[766,[763]]],[[765,[763]]]],[[[767,[763]]],[[765,[763]]]],[[[768,[763]]],[[765,[763]]]],[[[769,[763]]],[[765,[763]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[[764,[763]],53],763],[[[765,[763]],53],763],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[636,636],[328,328],[753,753],[[748,748,53],29],[[636,636,53],29],[[328,328,53],29],[[747,747,53],29],[[749,749,53],29],[[643,643,53],29],[[753,753,53],29],[[748,748]],[[636,53],636],[[636,636],636],[[328,328],328],[[328,53],328],[[747,747]],[[749,749]],[[643,643],643],[[753,753],753],[[753,53],753],[[748,748]],[[636,53]],[[636,636]],[[328,328]],[[328,53]],[[747,747]],[[749,749]],[[753,53]],[[753,753]],[[747,747],747],[[748,748],748],[[749,749],749],[[636,636],53],[[328,328],53],[[643,643],53],[328,328],[328],[328,328],[[748,94]],[[636,94]],[[328,94]],[[747,94]],[[749,94]],[[643,94]],[[753,94]],[[],1],[748,1],[[],1],[636,1],[[],1],[328,1],[[],1],[747,1],[749,1],[[],1],[643,1],[[],1],[753,1],[[],1],[748,1],[[],1],[[],1],[636,1],[[],1],[328,1],[[],1],[747,1],[749,1],[[],1],[643,1],[[],1],[[],1],[753,1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[747,730],[748,731],[749,732],[636,719],[328,720],[753,721],[643,733],[636,722],[328,723],[753,724],[636,744],[328,745],[753,746],[748,[[47,[53]]]],[636,[[47,[53]]]],[328,[[47,[53]]]],[747,[[47,[53]]]],[749,[[47,[53]]]],[753,[[47,[53]]]],[748,[[47,[[47,[53]]]]]],[636,[[47,[53]]]],[328,[[47,[53]]]],[747,[[47,[[47,[53]]]]]],[749,[[47,[[47,[53]]]]]],[753,[[47,[53]]]],[748,[[47,[53]]]],[636,[[47,[53]]]],[328,[[47,[53]]]],[747,[[47,[53]]]],[749,[[47,[53]]]],[643,[[47,[53]]]],[753,[[47,[53]]]],[748,[[47,[[47,[53]]]]]],[636,[[47,[53]]]],[328,[[47,[53]]]],[747,[[47,[[47,[53]]]]]],[749,[[47,[[47,[53]]]]]],[753,[[47,[53]]]],[748,94],[636,94],[328,94],[747,94],[749,94],[643,94],[753,94],[748,94],[636,94],[328,94],[747,94],[749,94],[643,94],[753,94],[636,735],[328,736],[753,737],[636,750],[328,751],[753,752],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[636,636],[328,328],[753,753],[[636,636,636],636],[[328,328,328],328],[[753,753,753],753],[[636,53,53],636],[[328,53,53],328],[[753,53,53],753],[[636,53],636],[[328,53],328],[[753,53],753],[[636,53],636],[[328,53],328],[[753,53],753],[748,748],[636,636],[328,328],[747,747],[749,749],[643,643],[753,753],[748,98],[636,98],[328,98],[747,98],[749,98],[643,98],[753,98],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[748,[[9,[94,8]]]],[636,[[9,[94,8]]]],[328,[[9,[94,8]]]],[747,[[9,[94,8]]]],[749,[[9,[94,8]]]],[643,[[9,[94,8]]]],[753,[[9,[94,8]]]],[[636,636],755],[[328,328],756],[[753,753],739],[[636,636],755],[[328,328],756],[[753,753],739],[[636,636],755],[[328,328],756],[[753,753],739],[[636,636],755],[[328,328],756],[[753,753],739],[[636,636],755],[[328,328],756],[[753,753],739],[[636,636],755],[[328,328],756],[[753,753],739],[[748,7],328],[[747,7],636],[[749,7],753],[[748,7],328],[[747,7],636],[[749,7],753],[643,643],[[636,636],636],[[328,328],328],[[753,753],753],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[[771,[770]]],748],[[[771,[770]]],636],[[[771,[770]]],328],[[[771,[770]]],747],[[[771,[770]]],749],[[[771,[770]]],753],[[328,328],328],[[748,31],[[12,[32]]]],[[636,31],[[12,[32]]]],[[328,31],[[12,[32]]]],[[747,31],[[12,[32]]]],[[749,31],[[12,[32]]]],[[643,31],[[12,[32]]]],[[753,31],[[12,[32]]]],[[],748],[[],636],[[],328],[[],747],[[],749],[[],643],[[],753],[7],[7],[7],[747],[7],[7],[643],[7],[753],[7],[7],[7],[7],[7],[747],[7],[643],[7],[753],[7],[150,[[12,[748]]]],[150,[[12,[636]]]],[150,[[12,[328]]]],[150,[[12,[747]]]],[150,[[12,[749]]]],[150,[[12,[643]]]],[150,[[12,[753]]]],[748,53],[747,53],[749,53],[[636,636],53],[[328,328],53],[[753,753],53],[[636,636],53],[[328,328],53],[[753,753],53],[[636,636],636],[[636,53],636],[[328,328],328],[[328,53],328],[[643,53],643],[[753,53],753],[[753,753],753],[[636,636]],[[636,53]],[[328,328]],[[328,53]],[[753,753]],[[753,53]],[[636,636],636],[[328,328],328],[[753,753],753],[[636,636],53],[[328,328],53],[[643,643],53],[[753,753],53],[[636,636],636],[[328,328],328],[[753,753],753],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[7],[7],[[748,748],29],[[636,636],29],[[328,328],29],[[747,747],29],[[749,749],29],[[643,643],29],[[753,753],29],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[636,636],[328,328],[753,753],[[636,53],328],[[328,53],753],[[748,38],[[14,[94]]]],[[636,38],[[14,[94]]]],[[328,38],[[14,[94]]]],[[747,38],[[14,[94]]]],[[749,38],[[14,[94]]]],[[643,38],[[14,[94]]]],[[753,38],[[14,[94]]]],[[748,7],[[14,[94]]]],[[636,7],[[14,[94]]]],[[328,7],[[14,[94]]]],[[747,7],[[14,[94]]]],[[749,7],[[14,[94]]]],[[643,7],[[14,[94]]]],[[753,7],[[14,[94]]]],[[748,7],[[14,[94]]]],[[636,7],[[14,[94]]]],[[328,7],[[14,[94]]]],[[747,7],[[14,[94]]]],[[749,7],[[14,[94]]]],[[643,7],[[14,[94]]]],[[753,7],[[14,[94]]]],[748,7],[636,7],[328,7],[747,7],[749,7],[643,7],[753,7],[[748,38],[[14,[94]]]],[[636,38],[[14,[94]]]],[[328,38],[[14,[94]]]],[[747,38],[[14,[94]]]],[[749,38],[[14,[94]]]],[[643,38],[[14,[94]]]],[[753,38],[[14,[94]]]],[636,636],[328,328],[753,753],[[748,31],[[12,[32]]]],[[748,31],[[12,[32]]]],[[636,31],[[12,[32]]]],[[636,31],[[12,[32]]]],[[328,31],[[12,[32]]]],[[328,31],[[12,[32]]]],[[747,31],[[12,[32]]]],[[747,31],[[12,[32]]]],[[749,31],[[12,[32]]]],[[749,31],[[12,[32]]]],[[643,31],[[12,[32]]]],[[643,31],[[12,[32]]]],[[753,31],[[12,[32]]]],[[753,31],[[12,[32]]]],[636,636],[328,328],[753,753],[727,748],[[]],[725,748],[[]],[[],636],[[[47,[53]]],636],[718,328],[[]],[[],328],[[[47,[53]]],328],[[],328],[[]],[726,749],[[]],[[]],[[],753],[[],753],[643,753],[[],753],[637,753],[[],753],[[]],[[],753],[[],753],[759,753],[[],753],[[[47,[53]]],753],[726,643],[53,748],[53,636],[53,747],[[[47,[53]]],636],[[[47,[53]]],328],[[[47,[53]]],643],[[[47,[53]]],753],[[328,53],748],[[328,53],749],[[328,53],643],[[328,328,328],748],[[636,636],747],[[753,753,753,753],749],[[[47,[53]]],748],[[[47,[53]]],747],[[[47,[53]]],749],[[[47,[[47,[53]]]]],748],[[[47,[[47,[53]]]]],747],[[[47,[[47,[53]]]]],749],[[[52,[53]]],748],[[[52,[53]]],747],[[[52,[53]]],749],[328,748],[636,747],[753,749],[[743,53,53,53],748],[[743,53,53,53],749],[[743,53,53,53],643],[747,748],[748,747],[748,749],[748,643],[727,747],[727,749],[727,643],[749,748],[749,643],[[[47,[[47,[53]]]]],748],[[[47,[53]]],636],[[[47,[53]]],328],[[[47,[[47,[53]]]]],747],[[[47,[[47,[53]]]]],749],[[[47,[53]]],753],[643,748],[643,749],[94,[[14,[748]]]],[94,[[14,[636]]]],[94,[[14,[328]]]],[94,[[14,[747]]]],[94,[[14,[749]]]],[94,[[14,[643]]]],[94,[[14,[753]]]],[[328,328],643],[[636,636],643],[[328,328],643],[[643,328],749],[53,748],[53,749],[53,643],[53,748],[53,749],[53,643],[53,748],[53,749],[53,643],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[636,748],[328,749],[[636,53],747],[[636,53,636],748],[[328,643,328],749],[328,643],[[[52,[53]]],636],[[[52,[53]]],328],[[[52,[53]]],643],[[[52,[53]]],753],[636,748],[328,749],[753,643],[34],[34],[34],[34],[34],[34],[34],[[53,53,53,53],643],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[748,[[14,[99]]]],[636,[[14,[99]]]],[328,[[14,[99]]]],[747,[[14,[99]]]],[749,[[14,[99]]]],[643,[[14,[99]]]],[753,[[14,[99]]]],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[636,7]],[[328,7]],[[753,7]],[[636,7]],[[328,7]],[[753,7]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[748,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[636,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[328,8]]],[[9,[1,8]]]],[[[9,[747,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[749,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[643,8]]],[[9,[1,8]]]],[[[9,[753,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[9,[748,8]]],[[9,[94,8]]]],[[[9,[636,8]]],[[9,[94,8]]]],[[[9,[328,8]]],[[9,[94,8]]]],[[[9,[747,8]]],[[9,[94,8]]]],[[[9,[749,8]]],[[9,[94,8]]]],[[[9,[643,8]]],[[9,[94,8]]]],[[[9,[753,8]]],[[9,[94,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[748,748],[747,747],[749,749],[643,643],[748,29],[636,29],[328,29],[747,29],[749,29],[643,29],[753,29],[748,29],[636,29],[328,29],[747,29],[749,29],[643,29],[753,29],[636,755],[328,756],[753,739],[643,29],[636,49],[328,49],[753,49],[636,29],[328,29],[643,29],[753,29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[748,103],[636,103],[328,103],[747,103],[749,103],[643,103],[753,103],[636,53],[328,53],[643,53],[753,53],[636,53],[328,53],[643,53],[753,53],[636,53],[328,53],[643,53],[753,53],[[636,636,53],636],[[328,328,53],328],[[643,643,53],643],[[753,753,53],753],[[328,328,328],749],[[328,328,328],749],[[328,328,328],749],[[328,328,328],749],[[636,636],747],[[328,328,328],748],[[718,718,718],727],[[753,753,753,753],749],0,0,[[636,636],636],[[328,328],328],[[753,753],753],[636,53],[328,53],[753,53],[[636,636],636],[[328,328],328],[[753,753],753],[636,53],[328,53],[753,53],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[748,725]],[[748,718],718],[[748,748]],[[748,328]],[[748,53]],[[636,636],636],[[636,53],636],[[328,328],328],[[328,53],328],[[747,747]],[[747,636]],[[747,53]],[[749,753]],[[749,726]],[[749,749]],[[749,53]],[[643,328]],[[643,53],643],[[643,643],643],[[643,718]],[[753,753],753],[[753,53],753],[[636,636,636],636],[[328,328,328],328],[[753,753,753],753],[[748,53]],[[748,748]],[[636,53]],[[636,636]],[[328,53]],[[328,328]],[[747,747]],[[747,53]],[[749,53]],[[749,749]],[[643,643]],[[753,53]],[[753,753]],[[747,747],747],[[748,748],748],[[749,749],749],[[643,643],643],[[748,53],748],[[747,53],747],[[749,53],749],[[747,636],636],[[748,328],328],[[643,328],328],[[748,718],718],[[643,718],718],[[749,753],753],[[748,7],[[14,[38]]]],[[636,7],[[14,[38]]]],[[328,7],[[14,[38]]]],[[747,7],[[14,[38]]]],[[749,7],[[14,[38]]]],[[643,7],[[14,[38]]]],[[753,7],[[14,[38]]]],[748],[636,636],[328,328],[747],[749],[643,643],[753,753],[[53,53],636],[[53,53,53],328],[[53,53,53,53],753],[636,636],[328,328],[643,643],[753,753],[636,636],[328,328],[753,753],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[53,53,53,53,53,53],749],[[53,53,53,53,53,53],749],[[53,53,53,53,53,53],749],[636,636],[[636,636],53],[[53,53,53],749],[[53,53,53],749],[[53,53,53],749],[[53,53,53],749],[[53,53,53,53],749],[[53,53,53,53],749],[[53,53,53,53],749],[[636,53],636],[[328,53],328],[[753,53],753],[215,748],[215,748],[215,636],[215,636],[215,328],[215,328],[215,747],[215,747],[215,749],[215,749],[215,643],[215,643],[215,753],[215,753],[[636,636],636],[[328,328],328],[[753,753],753],[[636,636],636],[[328,328],328],[[753,753],753],[[749,328],328],[[53,53,53,53],643],[[748,[771,[770]]]],[[636,[771,[770]]]],[[328,[771,[770]]]],[[747,[771,[770]]]],[[749,[771,[770]]]],[[753,[771,[770]]]],[636,636],[328,328],[753,753],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[748,105],[636,105],[328,105],[747,105],[749,105],[643,105],[753,105],[[[9,[748,8]]],106],[[[9,[636,8]]],106],[[[9,[328,8]]],106],[[[9,[747,8]]],106],[[[9,[749,8]]],106],[[[9,[643,8]]],106],[[[9,[753,8]]],106],[[748,94],[[14,[29]]]],[[636,94],[[14,[29]]]],[[328,94],[[14,[29]]]],[[747,94],[[14,[29]]]],[[749,94],[[14,[29]]]],[[643,94],[[14,[29]]]],[[753,94],[[14,[29]]]],[748,107],[636,107],[328,107],[747,107],[749,107],[643,107],[753,107],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[636,636],636],[[328,328],328],[[753,753],753],[[636,636],636],[[328,328],328],[[753,753],753],[[636,53],636],[[636,636],636],[[328,328],328],[[328,53],328],[[753,753],753],[[753,53],753],[[636,636]],[[636,53]],[[328,53]],[[328,328]],[[753,753]],[[753,53]],[[636,636],636],[[328,328],328],[[753,753],753],[[636,636],636],[636,636],[328,328],[753,753],[[748,7],328],[[747,7],636],[[749,7],753],[[755,636,636],636],[[756,328,328],328],[[739,753,753],753],[[748,226],12],[[636,226],12],[[328,226],12],[[747,226],12],[[749,226],12],[[643,226],12],[[753,226],12],[[748,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[636,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[328,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[747,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[749,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[643,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[753,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[636,636],[328,328],[753,753],[[643,643,53],643],[53,636],[53,328],[53,753],[[748,748]],[[636,53],636],[[636,636],636],[[328,53],328],[[328,328],328],[[747,747]],[[749,749]],[[643,643],643],[[753,753],753],[[753,53],753],[[748,748]],[[636,636]],[[636,53]],[[328,328]],[[328,53]],[[747,747]],[[749,749]],[[753,753]],[[753,53]],[[747,747],747],[[748,748],748],[[749,749],749],[215,748],[215,748],[215,636],[215,636],[215,328],[215,328],[215,747],[215,747],[215,749],[215,749],[215,643],[215,643],[215,753],[215,753],[636,[[47,[53]]]],[328,[[47,[53]]]],[643,[[47,[53]]]],[753,[[47,[53]]]],[643],[748,[[47,[53]]]],[747,[[47,[53]]]],[749,[[47,[53]]]],[748,[[47,[[47,[53]]]]]],[747,[[47,[[47,[53]]]]]],[749,[[47,[[47,[53]]]]]],[[643,743]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[749],[643,328],[[],141],[[],141],[[],141],[[],141],[[],141],[[],141],[[],141],[[749,[77,[328]]],328],[[748,636],636],[[749,328],328],[[749,718],718],[[748,636],636],[[749,328],328],[[749,718],718],0,0,[748,748],[747,747],[749,749],[636,636],[328,328],[753,753],[328,636],[753,328],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[636,[[14,[636]]]],[328,[[14,[328]]]],[753,[[14,[753]]]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[53,53],636],[[53,53,53],328],[[53,53,53],718],[[53,53,53,53],753],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[748,[52,[53]]]],[[747,[52,[53]]]],[[749,[52,[53]]]],[[748,[773,[772]]]],[[636,[773,[772]]]],[[328,[773,[772]]]],[[747,[773,[772]]]],[[749,[773,[772]]]],[[753,[773,[772]]]],[[636,[52,[53]]]],[[328,[52,[53]]]],[[643,[52,[53]]]],[[753,[52,[53]]]],[753,636],[753,328],[753,753],[753,753],[753,753],[753,753],[753,328],[753,753],[753,753],[753,753],[753,753],[753,328],[753,753],[753,753],[753,753],[753,753],[753,328],[753,753],[753,753],[753,753],[753,753],[753,636],[753,328],[753,753],[753,753],[753,753],[753,753],[753,328],[753,753],[753,753],[753,753],[753,753],[753,328],[753,753],[753,753],[753,753],[753,753],[753,328],[753,753],[753,753],[753,753],[753,753],[753,636],[753,328],[753,753],[753,753],[753,753],[753,753],[753,328],[753,753],[753,753],[753,753],[753,753],[753,328],[753,753],[753,753],[753,753],[753,753],[753,328],[753,753],[753,753],[753,753],[753,753],[753,636],[753,328],[753,753],[753,753],[753,753],[753,753],[753,328],[753,753],[753,753],[753,753],[753,753],[753,328],[753,753],[753,753],[753,753],[753,753],[753,328],[753,753],[753,753],[753,753],[753,753],0,0,0,0,0,[753,636],[753,328],[753,753],[753,753],[753,753],[753,753],[753,328],[753,753],[753,753],[753,753],[753,753],[753,328],[753,753],[753,753],[753,753],[753,753],[753,328],[753,753],[753,753],[753,753],[753,753],[636,636],[328,636],[753,636],[753,328],[753,753],[753,753],[753,753],[753,753],[636,328],[328,328],[753,328],[753,753],[636,753],[328,753],[753,753],[636,753],[328,753],[753,753],[328,753],[753,753],[636,328],[328,328],[753,328],[753,753],[636,753],[328,753],[753,753],[636,753],[328,753],[753,753],[328,753],[753,753],[328,328],[753,328],[753,753],[328,753],[753,753],[328,753],[753,753],[328,753],[753,753],[636,636],[328,636],[753,636],[753,328],[753,753],[753,753],[753,753],[753,753],[636,328],[328,328],[753,328],[753,753],[636,753],[328,753],[753,753],[636,753],[328,753],[753,753],[328,753],[753,753],[636,328],[328,328],[753,328],[753,753],[636,753],[328,753],[753,753],[636,753],[328,753],[753,753],[328,753],[753,753],[328,328],[643,328],[753,328],[753,753],[328,753],[753,753],[328,753],[753,753],[328,753],[753,753],[328,636],[753,636],[753,328],[753,753],[753,753],[753,753],[753,753],[328,328],[753,328],[753,753],[328,753],[753,753],[328,753],[753,753],[328,753],[753,753],[328,328],[753,328],[753,753],[328,753],[753,753],[328,753],[753,753],[328,753],[753,753],[328,328],[753,328],[753,753],[328,753],[753,753],[328,753],[753,753],[328,753],[753,753],0,0,0,0,0,[753,636],[753,328],[753,753],[753,753],[753,753],[753,753],[753,328],[753,753],[753,753],[753,753],[753,753],[753,328],[753,753],[753,753],[753,753],[753,753],[753,328],[753,753],[753,753],[753,753],[753,753],[636,636],[328,636],[753,636],[753,328],[753,753],[753,753],[753,753],[753,753],[636,328],[328,328],[753,328],[753,753],[636,753],[328,753],[753,753],[636,753],[328,753],[753,753],[328,753],[753,753],[636,328],[328,328],[753,328],[753,753],[636,753],[328,753],[753,753],[636,753],[328,753],[753,753],[328,753],[753,753],[328,328],[753,328],[753,753],[328,753],[753,753],[328,753],[753,753],[328,753],[753,753],[636,636],[328,636],[753,636],[753,328],[753,753],[753,753],[753,753],[753,753],[636,328],[328,328],[753,328],[753,753],[636,753],[328,753],[753,753],[636,753],[328,753],[753,753],[328,753],[753,753],[636,328],[328,328],[753,328],[753,753],[636,753],[328,753],[753,753],[636,753],[328,753],[753,753],[328,753],[753,753],[328,328],[753,328],[753,753],[328,753],[753,753],[328,753],[753,753],[328,753],[753,753],[328,636],[753,636],[753,328],[753,753],[753,753],[753,753],[753,753],[328,328],[753,328],[753,753],[328,753],[753,753],[328,753],[753,753],[328,753],[753,753],[328,328],[753,328],[753,753],[328,753],[753,753],[328,753],[753,753],[328,753],[753,753],[328,328],[753,328],[753,753],[328,753],[753,753],[328,753],[753,753],[328,753],[753,753],0,0,0,0,[753,636],[753,328],[753,753],[753,753],[753,753],[753,753],[753,328],[753,753],[753,753],[753,753],[753,753],[753,328],[753,753],[753,753],[753,753],[753,753],[753,328],[753,753],[753,753],[753,753],[753,753],[328,636],[753,636],[753,328],[753,753],[753,753],[753,753],[753,753],[328,328],[753,328],[753,753],[328,753],[753,753],[328,753],[753,753],[328,753],[753,753],[328,328],[753,328],[753,753],[328,753],[753,753],[328,753],[753,753],[328,753],[753,753],[328,328],[753,328],[753,753],[328,753],[753,753],[328,753],[753,753],[328,753],[753,753],[328,636],[753,636],[753,328],[753,753],[753,753],[753,753],[753,753],[328,328],[753,328],[753,753],[328,753],[753,753],[328,753],[753,753],[328,753],[753,753],[328,328],[753,328],[753,753],[328,753],[753,753],[328,753],[753,753],[328,753],[753,753],[328,328],[753,328],[753,753],[328,753],[753,753],[328,753],[753,753],[328,753],[753,753],[328,636],[753,636],[753,328],[753,753],[753,753],[753,753],[753,753],[328,328],[753,328],[753,753],[328,753],[753,753],[328,753],[753,753],[328,753],[753,753],[328,328],[753,328],[753,753],[328,753],[753,753],[328,753],[753,753],[328,753],[753,753],[328,328],[753,328],[753,753],[328,753],[753,753],[328,753],[753,753],[328,753],[753,753],0,0,0,0,0,0,0,0,0,[[719,719],730],[[720,720,720],731],[[721,721,721,721],732],[[44,44,44,44],733],[[44,44],719],[[44,44,44],720],[[44,44,44,44],721],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[744,744],[745,745],[746,746],[[744,744],744],[[744,760],744],[[745,760],745],[[745,745],745],[[746,746],746],[[746,760],746],[[744,760]],[[744,744]],[[745,760]],[[745,745]],[[746,746]],[[746,760]],[[744,94]],[[745,94]],[[746,94]],[[],1],[744,1],[[],1],[[],1],[[],1],[745,1],[[],1],[746,1],[[],1],[[],1],[744,1],[[],1],[745,1],[[],1],[746,1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[744,719],[745,720],[746,721],[[],15],[[],15],[[],15],[744,722],[745,723],[746,724],[744,[[47,[760]]]],[745,[[47,[760]]]],[746,[[47,[760]]]],[744,[[47,[760]]]],[745,[[47,[760]]]],[746,[[47,[760]]]],[744,[[47,[760]]]],[745,[[47,[760]]]],[746,[[47,[760]]]],[744,[[47,[760]]]],[745,[[47,[760]]]],[746,[[47,[760]]]],[744,94],[745,94],[746,94],[744,94],[745,94],[746,94],[744,735],[745,736],[746,737],[744,750],[745,751],[746,752],[744,636],[745,328],[745,718],[746,753],[[744,760]],[[744,744]],[[745,760]],[[745,745]],[[746,760]],[[746,746]],[[744,744]],[[744,760]],[[745,760]],[[745,745]],[[746,746]],[[746,760]],[[744,760]],[[744,744]],[[745,745]],[[745,760]],[[746,746]],[[746,760]],[[]],[[]],[[]],[[]],[[]],[[]],[[744,744,744],744],[[745,745,745],745],[[746,746,746],746],[744,744],[745,745],[746,746],[744,98],[745,98],[746,98],[[]],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[744,[[9,[94,8]]]],[745,[[9,[94,8]]]],[746,[[9,[94,8]]]],[[744,744],755],[[745,745],756],[[746,746],757],[[744,744],755],[[745,745],756],[[746,746],757],[[744,744],755],[[745,745],756],[[746,746],757],[[744,744],755],[[745,745],756],[[746,746],757],[[744,744],755],[[745,745],756],[[746,746],757],[[744,744],755],[[745,745],756],[[746,746],757],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[[771,[770]]],744],[[[771,[770]]],745],[[[771,[770]]],746],[[745,745],745],[[744,31],[[12,[32]]]],[[745,31],[[12,[32]]]],[[746,31],[[12,[32]]]],[[],744],[[],745],[[],746],[7],[7],[7],[7],[7],[7],[150,[[12,[744]]]],[150,[[12,[745]]]],[150,[[12,[746]]]],[[744,744],760],[[745,745],760],[[746,746],760],[[744,744],744],[[744,760],744],[[745,745],745],[[745,760],745],[[746,760],746],[[746,746],746],[[744,744]],[[744,760]],[[745,745]],[[745,760]],[[746,760]],[[746,746]],[[744,744],744],[[745,745],745],[[746,746],746],[[744,744],760],[[745,745],760],[[746,746],760],[[744,744],744],[[745,745],745],[[746,746],746],[[]],[[]],[[]],[7],[7],[7],[15,29],[15,29],[15,29],[30],[30],[30],[[744,744],29],[[745,745],29],[[746,746],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[[744,760],745],[[745,760],746],[[744,38],[[14,[94]]]],[[745,38],[[14,[94]]]],[[746,38],[[14,[94]]]],[[744,7],[[14,[94]]]],[[745,7],[[14,[94]]]],[[746,7],[[14,[94]]]],[[744,7],[[14,[94]]]],[[745,7],[[14,[94]]]],[[746,7],[[14,[94]]]],[744,7],[745,7],[746,7],[[744,38],[[14,[94]]]],[[745,38],[[14,[94]]]],[[746,38],[[14,[94]]]],[[744,31],[[12,[32]]]],[[744,31],[[12,[32]]]],[[745,31],[[12,[32]]]],[[745,31],[[12,[32]]]],[[746,31],[[12,[32]]]],[[746,31],[[12,[32]]]],[[],744],[[[47,[760]]],744],[[]],[[],745],[[]],[[[47,[760]]],745],[[],745],[[],746],[[],746],[[],746],[[],746],[[],746],[[[47,[760]]],746],[[]],[[[47,[760]]],744],[[[47,[760]]],745],[[[47,[760]]],746],[[[47,[760]]],744],[[[47,[760]]],745],[[[47,[760]]],746],[94,[[14,[744]]]],[94,[[14,[745]]]],[94,[[14,[746]]]],[[]],[[]],[[]],[[[52,[760]]],744],[[[52,[760]]],745],[[[52,[760]]],746],[34],[34],[34],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[744,[[14,[99]]]],[745,[[14,[99]]]],[746,[[14,[99]]]],[[],100],[[],100],[[],100],[[744,30]],[[745,30]],[[746,30]],[[744,7]],[[745,7]],[[746,7]],[[744,7]],[[745,7]],[[746,7]],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[744,8]]],[[9,[1,8]]]],[[[9,[745,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[746,8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[9,[744,8]]],[[9,[94,8]]]],[[[9,[745,8]]],[[9,[94,8]]]],[[[9,[746,8]]],[[9,[94,8]]]],[[]],[[]],[[]],[744,49],[745,49],[746,49],[[],29],[[],29],[[],29],[744,103],[745,103],[746,103],[[760,760],744],[[760,760,760],745],[[760,760,760,760],746],[744,760],[745,760],[746,760],[[744,744],744],[[745,745],745],[[746,746],746],[744,760],[745,760],[746,760],[[744,744],744],[[745,745],745],[[746,746],746],[744,760],[745,760],[746,760],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[744,760],744],[[744,744],744],[[745,745],745],[[745,760],745],[[746,746],746],[[746,760],746],[[744,744]],[[744,760]],[[745,745]],[[745,760]],[[746,746]],[[746,760]],[[744,7],[[14,[38]]]],[[745,7],[[14,[38]]]],[[746,7],[[14,[38]]]],[744,744],[745,745],[746,746],[[760,760],744],[[760,760,760],745],[[760,760,760,760],746],[744],[745],[746],[[]],[[]],[[]],[744,744],[[744,744],760],[215,744],[215,744],[215,745],[215,745],[215,746],[215,746],[[744,[771,[770]]]],[[745,[771,[770]]]],[[746,[771,[770]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[744,[[14,[75]]]],[745,[[14,[75]]]],[746,[[14,[75]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[744,105],[745,105],[746,105],[[[9,[744,8]]],106],[[[9,[745,8]]],106],[[[9,[746,8]]],106],[[744,94],[[14,[29]]]],[[745,94],[[14,[29]]]],[[746,94],[[14,[29]]]],[744,107],[745,107],[746,107],[[],38],[[],38],[[],38],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],38],[[],38],[[],38],[[744,744],744],[[744,760],744],[[745,760],745],[[745,745],745],[[746,746],746],[[746,760],746],[[744,744]],[[744,760]],[[745,760]],[[745,745]],[[746,760]],[[746,746]],[[744,744],744],[[745,745],745],[[746,746],746],[[744,744],744],[[744,744],744],[[745,745],745],[[746,746],746],[[744,744],744],[[745,745],745],[[746,746],746],[[744,744],744],[[745,745],745],[[746,746],746],[[744,744],744],[[745,745],745],[[746,746],746],[[755,744,744],744],[[756,745,745],745],[[757,746,746],746],[[744,226],12],[[745,226],12],[[746,226],12],[[744,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[745,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[746,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[744,750]],[[744,762]],[[744,49]],[[744,75]],[[744,760]],[[744,301]],[[744,761]],[[744,51]],[[744,744]],[[744,734]],[[745,49]],[[745,745]],[[745,301]],[[745,734]],[[745,751]],[[745,75]],[[745,51]],[[745,760]],[[745,761]],[[745,762]],[[746,75]],[[746,752]],[[746,301]],[[746,746]],[[746,51]],[[746,762]],[[746,734]],[[746,49]],[[746,761]],[[746,760]],[[],38],[[],38],[[],38],[[744,762]],[[744,761]],[[744,301]],[[744,734]],[[744,49]],[[744,51]],[[744,744]],[[744,75]],[[744,750]],[[744,760]],[[745,762]],[[745,301]],[[745,734]],[[745,760]],[[745,75]],[[745,49]],[[745,51]],[[745,745]],[[745,751]],[[745,761]],[[746,752]],[[746,762]],[[746,734]],[[746,75]],[[746,760]],[[746,49]],[[746,761]],[[746,746]],[[746,301]],[[746,51]],[744,744],[745,745],[746,746],[760,744],[760,745],[760,746],[[744,760],744],[[744,744],744],[[745,760],745],[[745,745],745],[[746,760],746],[[746,746],746],[[744,744]],[[744,760]],[[745,760]],[[745,745]],[[746,760]],[[746,746]],[215,744],[215,744],[215,745],[215,745],[215,746],[215,746],[744,[[47,[760]]]],[745,[[47,[760]]]],[746,[[47,[760]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],141],[[],141],[[],141],[745,744],[746,745],[735,[[12,[744]]]],[722,[[12,[744]]]],[[],12],[750,[[12,[744]]]],[723,[[12,[745]]]],[736,[[12,[745]]]],[[],12],[751,[[12,[745]]]],[752,[[12,[746]]]],[[],12],[737,[[12,[746]]]],[724,[[12,[746]]]],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],99],[[],99],[[],99],[[],38],[[],38],[[],38],[[],14],[[],14],[[],14],[[]],[[]],[[]],0,[[744,744],744],[[745,745],745],[[746,746],746],[[744,744],744],[[745,745],745],[[746,746],746],[[744,744],744],[[745,745],745],[[746,746],746],[[744,744],744],[[745,745],745],[[746,746],746],[[744,[773,[772]]]],[[745,[773,[772]]]],[[746,[773,[772]]]],[[744,[52,[760]]]],[[745,[52,[760]]]],[[746,[52,[760]]]],[746,744],[746,745],[746,746],[746,746],[746,746],[746,746],[746,745],[746,746],[746,746],[746,746],[746,746],[746,745],[746,746],[746,746],[746,746],[746,746],[746,745],[746,746],[746,746],[746,746],[746,746],[746,744],[746,745],[746,746],[746,746],[746,746],[746,746],[746,745],[746,746],[746,746],[746,746],[746,746],[746,745],[746,746],[746,746],[746,746],[746,746],[746,745],[746,746],[746,746],[746,746],[746,746],[746,744],[746,745],[746,746],[746,746],[746,746],[746,746],[746,745],[746,746],[746,746],[746,746],[746,746],[746,745],[746,746],[746,746],[746,746],[746,746],[746,745],[746,746],[746,746],[746,746],[746,746],[746,744],[746,745],[746,746],[746,746],[746,746],[746,746],[746,745],[746,746],[746,746],[746,746],[746,746],[746,745],[746,746],[746,746],[746,746],[746,746],[746,745],[746,746],[746,746],[746,746],[746,746],0,0,0,[746,744],[746,745],[746,746],[746,746],[746,746],[746,746],[746,745],[746,746],[746,746],[746,746],[746,746],[746,745],[746,746],[746,746],[746,746],[746,746],[746,745],[746,746],[746,746],[746,746],[746,746],[744,744],[745,744],[746,744],[746,745],[746,746],[746,746],[746,746],[746,746],[744,745],[745,745],[746,745],[746,746],[744,746],[745,746],[746,746],[744,746],[745,746],[746,746],[745,746],[746,746],[744,745],[745,745],[746,745],[746,746],[744,746],[745,746],[746,746],[744,746],[745,746],[746,746],[745,746],[746,746],[745,745],[746,745],[746,746],[745,746],[746,746],[745,746],[746,746],[745,746],[746,746],[744,744],[745,744],[746,744],[746,745],[746,746],[746,746],[746,746],[746,746],[744,745],[745,745],[746,745],[746,746],[744,746],[745,746],[746,746],[744,746],[745,746],[746,746],[745,746],[746,746],[744,745],[745,745],[746,745],[746,746],[744,746],[745,746],[746,746],[744,746],[745,746],[746,746],[745,746],[746,746],[745,745],[746,745],[746,746],[745,746],[746,746],[745,746],[746,746],[745,746],[746,746],[745,744],[746,744],[746,745],[746,746],[746,746],[746,746],[746,746],[745,745],[746,745],[746,746],[745,746],[746,746],[745,746],[746,746],[745,746],[746,746],[745,745],[746,745],[746,746],[745,746],[746,746],[745,746],[746,746],[745,746],[746,746],[745,745],[746,745],[746,746],[745,746],[746,746],[745,746],[746,746],[745,746],[746,746],0,0,0,[746,744],[746,745],[746,746],[746,746],[746,746],[746,746],[746,745],[746,746],[746,746],[746,746],[746,746],[746,745],[746,746],[746,746],[746,746],[746,746],[746,745],[746,746],[746,746],[746,746],[746,746],[744,744],[745,744],[746,744],[746,745],[746,746],[746,746],[746,746],[746,746],[744,745],[745,745],[746,745],[746,746],[744,746],[745,746],[746,746],[744,746],[745,746],[746,746],[745,746],[746,746],[744,745],[745,745],[746,745],[746,746],[744,746],[745,746],[746,746],[744,746],[745,746],[746,746],[745,746],[746,746],[745,745],[746,745],[746,746],[745,746],[746,746],[745,746],[746,746],[745,746],[746,746],[744,744],[745,744],[746,744],[746,745],[746,746],[746,746],[746,746],[746,746],[744,745],[745,745],[746,745],[746,746],[744,746],[745,746],[746,746],[744,746],[745,746],[746,746],[745,746],[746,746],[744,745],[745,745],[746,745],[746,746],[744,746],[745,746],[746,746],[744,746],[745,746],[746,746],[745,746],[746,746],[745,745],[746,745],[746,746],[745,746],[746,746],[745,746],[746,746],[745,746],[746,746],[745,744],[746,744],[746,745],[746,746],[746,746],[746,746],[746,746],[745,745],[746,745],[746,746],[745,746],[746,746],[745,746],[746,746],[745,746],[746,746],[745,745],[746,745],[746,746],[745,746],[746,746],[745,746],[746,746],[745,746],[746,746],[745,745],[746,745],[746,746],[745,746],[746,746],[745,746],[746,746],[745,746],[746,746],0,0,[746,744],[746,745],[746,746],[746,746],[746,746],[746,746],[746,745],[746,746],[746,746],[746,746],[746,746],[746,745],[746,746],[746,746],[746,746],[746,746],[746,745],[746,746],[746,746],[746,746],[746,746],[745,744],[746,744],[746,745],[746,746],[746,746],[746,746],[746,746],[745,745],[746,745],[746,746],[745,746],[746,746],[745,746],[746,746],[745,746],[746,746],[745,745],[746,745],[746,746],[745,746],[746,746],[745,746],[746,746],[745,746],[746,746],[745,745],[746,745],[746,746],[745,746],[746,746],[745,746],[746,746],[745,746],[746,746],[745,744],[746,744],[746,745],[746,746],[746,746],[746,746],[746,746],[745,745],[746,745],[746,746],[745,746],[746,746],[745,746],[746,746],[745,746],[746,746],[745,745],[746,745],[746,746],[745,746],[746,746],[745,746],[746,746],[745,746],[746,746],[745,745],[746,745],[746,746],[745,746],[746,746],[745,746],[746,746],[745,746],[746,746],[745,744],[746,744],[746,745],[746,746],[746,746],[746,746],[746,746],[745,745],[746,745],[746,746],[745,746],[746,746],[745,746],[746,746],[745,746],[746,746],[745,745],[746,745],[746,746],[745,746],[746,746],[745,746],[746,746],[745,746],[746,746],[745,745],[746,745],[746,746],[745,746],[746,746],[745,746],[746,746],[745,746],[746,746],0,0,0,[[734,734],722],[[734,734,734],723],[[734,734,734,734],724],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],765],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[750,750],750],[[750,49],750],[[751,49],751],[[751,751],751],[[752,49],752],[[752,752],752],[[750,49]],[[750,750]],[[751,49]],[[751,751]],[[752,752]],[[752,49]],[[750,94]],[[751,94]],[[752,94]],[[],1],[[],1],[750,1],[751,1],[[],1],[[],1],[752,1],[[],1],[[],1],[750,1],[[],1],[[],1],[751,1],[752,1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[750,719],[751,720],[752,721],[[],15],[[],15],[[],15],[750,722],[751,723],[752,724],[750,744],[751,745],[752,746],[750,[[47,[49]]]],[751,[[47,[49]]]],[752,[[47,[49]]]],[750,[[47,[49]]]],[751,[[47,[49]]]],[752,[[47,[49]]]],[750,[[47,[49]]]],[751,[[47,[49]]]],[752,[[47,[49]]]],[750,[[47,[49]]]],[751,[[47,[49]]]],[752,[[47,[49]]]],[750,94],[751,94],[752,94],[750,94],[751,94],[752,94],[750,735],[751,736],[752,737],[750,636],[751,328],[751,718],[752,753],[[750,750]],[[750,49]],[[751,49]],[[751,751]],[[752,752]],[[752,49]],[[750,750]],[[750,49]],[[751,49]],[[751,751]],[[752,49]],[[752,752]],[[750,750]],[[750,49]],[[751,49]],[[751,751]],[[752,752]],[[752,49]],[[]],[[]],[[]],[[]],[[]],[[]],[[750,750,750],750],[[751,751,751],751],[[752,752,752],752],[750,750],[751,751],[752,752],[750,98],[751,98],[752,98],[[]],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[750,[[9,[94,8]]]],[751,[[9,[94,8]]]],[752,[[9,[94,8]]]],[[750,750],755],[[751,751],756],[[752,752],757],[[750,750],755],[[751,751],756],[[752,752],757],[[750,750],755],[[751,751],756],[[752,752],757],[[750,750],755],[[751,751],756],[[752,752],757],[[750,750],755],[[751,751],756],[[752,752],757],[[750,750],755],[[751,751],756],[[752,752],757],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[[771,[770]]],750],[[[771,[770]]],751],[[[771,[770]]],752],[[751,751],751],[[750,31],[[12,[32]]]],[[751,31],[[12,[32]]]],[[752,31],[[12,[32]]]],[[],750],[[],751],[[],752],[7],[7],[7],[7],[7],[7],[150,[[12,[750]]]],[150,[[12,[751]]]],[150,[[12,[752]]]],[[750,750],750],[[750,49],750],[[751,751],751],[[751,49],751],[[752,49],752],[[752,752],752],[[750,49]],[[750,750]],[[751,49]],[[751,751]],[[752,49]],[[752,752]],[[750,750],49],[[751,751],49],[[752,752],49],[[750,750],750],[[751,751],751],[[752,752],752],[[]],[[]],[[]],[7],[7],[7],[15,29],[15,29],[15,29],[30],[30],[30],[[750,750],29],[[751,751],29],[[752,752],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[[750,49],751],[[751,49],752],[[750,38],[[14,[94]]]],[[751,38],[[14,[94]]]],[[752,38],[[14,[94]]]],[[750,7],[[14,[94]]]],[[751,7],[[14,[94]]]],[[752,7],[[14,[94]]]],[[750,7],[[14,[94]]]],[[751,7],[[14,[94]]]],[[752,7],[[14,[94]]]],[750,7],[751,7],[752,7],[[750,38],[[14,[94]]]],[[751,38],[[14,[94]]]],[[752,38],[[14,[94]]]],[[750,31],[[12,[32]]]],[[750,31],[[12,[32]]]],[[751,31],[[12,[32]]]],[[751,31],[[12,[32]]]],[[752,31],[[12,[32]]]],[[752,31],[[12,[32]]]],[[[47,[49]]],750],[[],750],[[]],[[]],[[],751],[[],751],[[[47,[49]]],751],[[],752],[[]],[[[47,[49]]],752],[[],752],[[],752],[[],752],[[],752],[[[47,[49]]],750],[[[47,[49]]],751],[[[47,[49]]],752],[[[47,[49]]],750],[[[47,[49]]],751],[[[47,[49]]],752],[94,[[14,[750]]]],[94,[[14,[751]]]],[94,[[14,[752]]]],[[]],[[]],[[]],[[[52,[49]]],750],[[[52,[49]]],751],[[[52,[49]]],752],[34],[34],[34],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[750,[[14,[99]]]],[751,[[14,[99]]]],[752,[[14,[99]]]],[[],100],[[],100],[[],100],[[750,30]],[[751,30]],[[752,30]],[[750,7]],[[751,7]],[[752,7]],[[750,7]],[[751,7]],[[752,7]],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[[9,[750,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[751,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[752,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[9,[750,8]]],[[9,[94,8]]]],[[[9,[751,8]]],[[9,[94,8]]]],[[[9,[752,8]]],[[9,[94,8]]]],[[]],[[]],[[]],[[],29],[[],29],[[],29],[750,103],[751,103],[752,103],[750,49],[751,49],[752,49],[[750,750],750],[[751,751],751],[[752,752],752],[750,49],[751,49],[752,49],[[750,750],750],[[751,751],751],[[752,752],752],[750,49],[751,49],[752,49],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[750,49],750],[[750,750],750],[[751,49],751],[[751,751],751],[[752,752],752],[[752,49],752],[[750,49]],[[750,750]],[[751,751]],[[751,49]],[[752,49]],[[752,752]],[[750,7],[[14,[38]]]],[[751,7],[[14,[38]]]],[[752,7],[[14,[38]]]],[[49,49],750],[[49,49,49],751],[[49,49,49,49],752],[750],[751],[752],[[]],[[]],[[]],[215,750],[215,750],[215,751],[215,751],[215,752],[215,752],[[750,[771,[770]]]],[[751,[771,[770]]]],[[752,[771,[770]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[750,[[14,[75]]]],[751,[[14,[75]]]],[752,[[14,[75]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[750,105],[751,105],[752,105],[[[9,[750,8]]],106],[[[9,[751,8]]],106],[[[9,[752,8]]],106],[[750,94],[[14,[29]]]],[[751,94],[[14,[29]]]],[[752,94],[[14,[29]]]],[750,107],[751,107],[752,107],[[],38],[[],38],[[],38],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],38],[[],38],[[],38],[[750,49],750],[[750,750],750],[[751,49],751],[[751,751],751],[[752,49],752],[[752,752],752],[[750,750]],[[750,49]],[[751,751]],[[751,49]],[[752,49]],[[752,752]],[[750,750],750],[[751,751],751],[[752,752],752],[[750,750],750],[[751,751],751],[[752,752],752],[[750,750],750],[[751,751],751],[[752,752],752],[[750,750],750],[[751,751],751],[[752,752],752],[[755,750,750],750],[[756,751,751],751],[[757,752,752],752],[[750,226],12],[[751,226],12],[[752,226],12],[[750,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[751,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[752,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[750,760]],[[750,762]],[[750,301]],[[750,750]],[[750,75]],[[750,761]],[[750,744]],[[750,49]],[[750,734]],[[750,51]],[[751,301]],[[751,75]],[[751,745]],[[751,751]],[[751,761]],[[751,51]],[[751,49]],[[751,760]],[[751,734]],[[751,762]],[[752,746]],[[752,49]],[[752,51]],[[752,762]],[[752,301]],[[752,734]],[[752,761]],[[752,75]],[[752,752]],[[752,760]],[[],38],[[],38],[[],38],[[750,51]],[[750,761]],[[750,760]],[[750,744]],[[750,75]],[[750,734]],[[750,301]],[[750,762]],[[750,750]],[[750,49]],[[751,762]],[[751,49]],[[751,734]],[[751,751]],[[751,51]],[[751,75]],[[751,745]],[[751,760]],[[751,761]],[[751,301]],[[752,75]],[[752,752]],[[752,301]],[[752,762]],[[752,760]],[[752,746]],[[752,51]],[[752,734]],[[752,49]],[[752,761]],[49,750],[49,751],[49,752],[[750,49],750],[[750,750],750],[[751,751],751],[[751,49],751],[[752,752],752],[[752,49],752],[[750,49]],[[750,750]],[[751,751]],[[751,49]],[[752,752]],[[752,49]],[215,750],[215,750],[215,751],[215,751],[215,752],[215,752],[750,[[47,[49]]]],[751,[[47,[49]]]],[752,[[47,[49]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],141],[[],141],[[],141],[751,750],[752,751],[735,[[12,[750]]]],[744,[[12,[750]]]],[[],12],[722,[[12,[750]]]],[736,[[12,[751]]]],[[],12],[723,[[12,[751]]]],[745,[[12,[751]]]],[724,[[12,[752]]]],[737,[[12,[752]]]],[746,[[12,[752]]]],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],99],[[],99],[[],99],[[],38],[[],38],[[],38],[[],14],[[],14],[[],14],[[49,49],750],[[49,49,49],751],[[49,49,49,49],752],[[]],[[]],[[]],0,[[750,750],750],[[751,751],751],[[752,752],752],[[750,750],750],[[751,751],751],[[752,752],752],[[750,750],750],[[751,751],751],[[752,752],752],[[750,750],750],[[751,751],751],[[752,752],752],[[750,[773,[772]]]],[[751,[773,[772]]]],[[752,[773,[772]]]],[[750,[52,[49]]]],[[751,[52,[49]]]],[[752,[52,[49]]]],[752,750],[752,751],[752,752],[752,752],[752,752],[752,752],[752,751],[752,752],[752,752],[752,752],[752,752],[752,751],[752,752],[752,752],[752,752],[752,752],[752,751],[752,752],[752,752],[752,752],[752,752],[752,750],[752,751],[752,752],[752,752],[752,752],[752,752],[752,751],[752,752],[752,752],[752,752],[752,752],[752,751],[752,752],[752,752],[752,752],[752,752],[752,751],[752,752],[752,752],[752,752],[752,752],[752,750],[752,751],[752,752],[752,752],[752,752],[752,752],[752,751],[752,752],[752,752],[752,752],[752,752],[752,751],[752,752],[752,752],[752,752],[752,752],[752,751],[752,752],[752,752],[752,752],[752,752],[752,750],[752,751],[752,752],[752,752],[752,752],[752,752],[752,751],[752,752],[752,752],[752,752],[752,752],[752,751],[752,752],[752,752],[752,752],[752,752],[752,751],[752,752],[752,752],[752,752],[752,752],0,0,0,[752,750],[752,751],[752,752],[752,752],[752,752],[752,752],[752,751],[752,752],[752,752],[752,752],[752,752],[752,751],[752,752],[752,752],[752,752],[752,752],[752,751],[752,752],[752,752],[752,752],[752,752],[750,750],[751,750],[752,750],[752,751],[752,752],[752,752],[752,752],[752,752],[750,751],[751,751],[752,751],[752,752],[750,752],[751,752],[752,752],[750,752],[751,752],[752,752],[751,752],[752,752],[750,751],[751,751],[752,751],[752,752],[750,752],[751,752],[752,752],[750,752],[751,752],[752,752],[751,752],[752,752],[751,751],[752,751],[752,752],[751,752],[752,752],[751,752],[752,752],[751,752],[752,752],[750,750],[751,750],[752,750],[752,751],[752,752],[752,752],[752,752],[752,752],[750,751],[751,751],[752,751],[752,752],[750,752],[751,752],[752,752],[750,752],[751,752],[752,752],[751,752],[752,752],[750,751],[751,751],[752,751],[752,752],[750,752],[751,752],[752,752],[750,752],[751,752],[752,752],[751,752],[752,752],[751,751],[752,751],[752,752],[751,752],[752,752],[751,752],[752,752],[751,752],[752,752],[751,750],[752,750],[752,751],[752,752],[752,752],[752,752],[752,752],[751,751],[752,751],[752,752],[751,752],[752,752],[751,752],[752,752],[751,752],[752,752],[751,751],[752,751],[752,752],[751,752],[752,752],[751,752],[752,752],[751,752],[752,752],[751,751],[752,751],[752,752],[751,752],[752,752],[751,752],[752,752],[751,752],[752,752],0,0,0,[752,750],[752,751],[752,752],[752,752],[752,752],[752,752],[752,751],[752,752],[752,752],[752,752],[752,752],[752,751],[752,752],[752,752],[752,752],[752,752],[752,751],[752,752],[752,752],[752,752],[752,752],[750,750],[751,750],[752,750],[752,751],[752,752],[752,752],[752,752],[752,752],[750,751],[751,751],[752,751],[752,752],[750,752],[751,752],[752,752],[750,752],[751,752],[752,752],[751,752],[752,752],[750,751],[751,751],[752,751],[752,752],[750,752],[751,752],[752,752],[750,752],[751,752],[752,752],[751,752],[752,752],[751,751],[752,751],[752,752],[751,752],[752,752],[751,752],[752,752],[751,752],[752,752],[750,750],[751,750],[752,750],[752,751],[752,752],[752,752],[752,752],[752,752],[750,751],[751,751],[752,751],[752,752],[750,752],[751,752],[752,752],[750,752],[751,752],[752,752],[751,752],[752,752],[750,751],[751,751],[752,751],[752,752],[750,752],[751,752],[752,752],[750,752],[751,752],[752,752],[751,752],[752,752],[751,751],[752,751],[752,752],[751,752],[752,752],[751,752],[752,752],[751,752],[752,752],[751,750],[752,750],[752,751],[752,752],[752,752],[752,752],[752,752],[751,751],[752,751],[752,752],[751,752],[752,752],[751,752],[752,752],[751,752],[752,752],[751,751],[752,751],[752,752],[751,752],[752,752],[751,752],[752,752],[751,752],[752,752],[751,751],[752,751],[752,752],[751,752],[752,752],[751,752],[752,752],[751,752],[752,752],0,0,[752,750],[752,751],[752,752],[752,752],[752,752],[752,752],[752,751],[752,752],[752,752],[752,752],[752,752],[752,751],[752,752],[752,752],[752,752],[752,752],[752,751],[752,752],[752,752],[752,752],[752,752],[751,750],[752,750],[752,751],[752,752],[752,752],[752,752],[752,752],[751,751],[752,751],[752,752],[751,752],[752,752],[751,752],[752,752],[751,752],[752,752],[751,751],[752,751],[752,752],[751,752],[752,752],[751,752],[752,752],[751,752],[752,752],[751,751],[752,751],[752,752],[751,752],[752,752],[751,752],[752,752],[751,752],[752,752],[751,750],[752,750],[752,751],[752,752],[752,752],[752,752],[752,752],[751,751],[752,751],[752,752],[751,752],[752,752],[751,752],[752,752],[751,752],[752,752],[751,751],[752,751],[752,752],[751,752],[752,752],[751,752],[752,752],[751,752],[752,752],[751,751],[752,751],[752,752],[751,752],[752,752],[751,752],[752,752],[751,752],[752,752],[751,750],[752,750],[752,751],[752,752],[752,752],[752,752],[752,752],[751,751],[752,751],[752,752],[751,752],[752,752],[751,752],[752,752],[751,752],[752,752],[751,751],[752,751],[752,752],[751,752],[752,752],[751,752],[752,752],[751,752],[752,752],[751,751],[752,751],[752,752],[751,752],[752,752],[751,752],[752,752],[751,752],[752,752],0,0,0,[[75,75],735],[[75,75,75],736],[[75,75,75,75],737],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[386,89]],0,[[],774],[[],775],[[],776],[[],777],0,[[],778],[[[781,[779,780]]],778],[782,778],0,0,[[778,94]],[[783,94]],[[784,94]],[[785,94]],[[786,94]],[[787,94]],[[788,94]],[[789,94]],[[790,94]],[[791,94]],[[792,94]],[[793,94]],[[794,94]],[[795,94]],[[796,94]],[[797,94]],[[798,94]],[[799,94]],[[800,94]],[[801,94]],[[802,94]],[[803,94]],[[804,94]],[[805,94]],[[782,94]],[[806,94]],[[807,94]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[778,1],[[],1],[783,1],[[],1],[784,1],[[],1],[[],1],[[],1],[[],1],[[],1],[785,1],[[],1],[[],1],[786,1],[[],1],[787,1],[788,1],[[],1],[[],1],[789,1],[[],1],[790,1],[[],1],[791,1],[[],1],[792,1],[793,1],[[],1],[[],1],[794,1],[[],1],[795,1],[796,1],[[],1],[797,1],[[],1],[[],1],[798,1],[799,1],[[],1],[[],1],[[],1],[[],1],[800,1],[[],1],[[],1],[801,1],[[],1],[802,1],[[],1],[[],1],[[],1],[[],1],[[],1],[803,1],[804,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[805,1],[782,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[806,1],[[],1],[[],1],[[],1],[[],1],[807,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[778,1],[[],1],[[],1],[783,1],[784,1],[[],1],[[],1],[[],1],[[],1],[785,1],[[],1],[[],1],[[],1],[786,1],[787,1],[[],1],[[],1],[788,1],[[],1],[789,1],[[],1],[790,1],[791,1],[[],1],[792,1],[[],1],[793,1],[[],1],[794,1],[[],1],[795,1],[[],1],[796,1],[[],1],[797,1],[[],1],[[],1],[798,1],[799,1],[[],1],[[],1],[[],1],[800,1],[801,1],[[],1],[802,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[803,1],[804,1],[[],1],[[],1],[[],1],[[],1],[[],1],[805,1],[[],1],[782,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[806,1],[807,1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[782,[3,[2]]],808],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[778,94],[783,94],[784,94],[785,94],[786,94],[787,94],[788,94],[789,94],[790,94],[791,94],[792,94],[793,94],[794,94],[795,94],[796,94],[797,94],[798,94],[799,94],[800,94],[801,94],[802,94],[803,94],[804,94],[805,94],[782,94],[806,94],[807,94],[778,94],[783,94],[784,94],[785,94],[786,94],[787,94],[788,94],[789,94],[790,94],[791,94],[792,94],[793,94],[794,94],[795,94],[796,94],[797,94],[798,94],[799,94],[800,94],[801,94],[802,94],[803,94],[804,94],[805,94],[782,94],[806,94],[807,94],[[],38],[[],38],0,0,0,0,0,[809,[[380,[49]]]],0,[809,[[380,[49]]]],0,0,0,0,[403,[[79,[437,8]]]],[403,[[79,[437,8]]]],[810,[[14,[811]]]],0,[[774,774],774],[[775,775],775],[[776,776],776],[[777,777],777],[[774,774]],[[775,775]],[[776,776]],[[777,777]],[[774,774],774],[[775,775],775],[[776,776],776],[[777,777],777],[[774,774]],[[775,775]],[[776,776]],[[777,777]],[774,49],[774,49],[775,49],[775,49],[776,49],[776,49],[777,49],[777,49],[[774,774],774],[[775,775],775],[[776,776],776],[[777,777],777],[[774,774]],[[775,775]],[[776,776]],[[777,777]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[812,793],[[[813,[779]],17]],[[[814,[779]],17]],[[[815,[779]],17]],[[816,17]],[[817,17]],[[818,17]],[[819,17]],[809,382],[[53,53,53,29],636],[75,820],0,0,[[[89,[821]],89,89,[89,[[822,[790]]]],89]],[823],[[[824,[779]]],[[824,[779]]]],[778,778],[[[825,[[0,[261,779]]]]],[[825,[[0,[261,779]]]]]],[783,783],[784,784],[785,785],[[[781,[[0,[261,779]],[0,[261,780]]]]],[[781,[[0,[261,779]],[0,[261,780]]]]]],[786,786],[787,787],[788,788],[789,789],[790,790],[791,791],[792,792],[793,793],[794,794],[795,795],[796,796],[799,799],[826,826],[800,800],[801,801],[802,802],[821,821],[[[827,[779]]],[[827,[779]]]],[803,803],[804,804],[828,828],[805,805],[782,782],[808,808],[829,829],[830,830],[831,831],[832,832],[833,833],[834,834],[835,835],[836,836],[837,837],[838,838],[776,776],[839,839],[840,840],[777,777],[806,806],[807,807],[778,97],[783,98],[784,98],[785,98],[786,98],[787,97],[788,98],[789,98],[790,98],[791,98],[792,98],[793,98],[794,98],[795,98],[796,98],[797,98],[798,98],[799,97],[800,97],[801,98],[802,97],[803,367],[804,97],[805,97],[782,98],[806,98],[807,97],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[778,[[9,[94,8]]]],[783,[[9,[94,8]]]],[784,[[9,[94,8]]]],[785,[[9,[94,8]]]],[786,[[9,[94,8]]]],[787,[[9,[94,8]]]],[788,[[9,[94,8]]]],[789,[[9,[94,8]]]],[790,[[9,[94,8]]]],[791,[[9,[94,8]]]],[792,[[9,[94,8]]]],[793,[[9,[94,8]]]],[794,[[9,[94,8]]]],[795,[[9,[94,8]]]],[796,[[9,[94,8]]]],[797,[[9,[94,8]]]],[798,[[9,[94,8]]]],[799,[[9,[94,8]]]],[800,[[9,[94,8]]]],[801,[[9,[94,8]]]],[802,[[9,[94,8]]]],[803,[[9,[94,8]]]],[804,[[9,[94,8]]]],[805,[[9,[94,8]]]],[782,[[9,[94,8]]]],[806,[[9,[94,8]]]],[807,[[9,[94,8]]]],0,0,0,0,0,0,[774,774],[775,775],[776,776],[777,777],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[841,343],29],[[774,774],29],[[775,775],29],[[776,776],29],[[777,777],29],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[[771,[770]]],808],[[[771,[770]]],830],[[[771,[770]]],831],[[[771,[770]]],832],[[[771,[770]]],842],[[[771,[770]]],843],[[[771,[770]]],833],[[[771,[770]]],834],[[[771,[770]]],835],[[[771,[770]]],837],0,0,0,[[778,31],[[12,[32]]]],[[782,31],[[12,[32]]]],[[],812],[[],[[813,[779]]]],[[],[[844,[779]]]],[[],[[814,[779]]]],[[],[[815,[779]]]],[[],818],[[],778],[[],[[825,[779]]]],[[],783],[[],784],[[],845],[[],846],[[],847],[[],786],[[],788],[[],789],[[],790],[[],791],[[],792],[[],793],[[],794],[[],795],[[],796],[[],797],[[],798],[[],799],[[],801],[[],802],[[],848],[[],821],[[],841],[[],803],[[],804],[[],828],[[],[[849,[779]]]],[[],[[850,[779]]]],[[],805],[[],782],[[],808],[[],851],[[],852],[[],831],[[],853],[[],832],[[],842],[[],843],[[],833],[[],834],[[],854],[[],819],[[],855],[[],856],[[],857],[[],858],[[],806],[[],807],0,[[],803],[[],859],[[],859],[[],859],[[],859],0,0,0,0,[[],859],[[],859],[[],859],[[],53],[[[781,[779,780]]],53],[782,53],0,0,0,0,0,[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[828],[7],[7],[7],[[[850,[779]]]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[855],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[828],[7],[7],[[[850,[779]]]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[855],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],0,[[774,774],774],[[775,775],775],[[776,776],776],[[777,777],777],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[809,384],0,[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],0,[826,[[9,[28,8]]]],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[30],[30],[30],[30],[30],[30],[30],[809,[[14,[385]]]],0,[809,[[14,[385]]]],0,0,0,[[],774],[[],775],[[],776],[[],777],0,[809,343],0,0,[[[824,[779]],[824,[779]]],29],[[778,778],29],[[799,799],29],[[826,826],29],[[828,828],29],[[805,805],29],[[829,829],29],[[776,776],29],[[777,777],29],[[806,806],29],[[807,807],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[774,489]],[[775,489]],[[776,489]],[[777,489]],0,[[386,[388,[[89,[[387,[390]]]]]]]],[[386,[388,[[89,[[387,[860]]]]]]]],[[],14],[[],14],[[],14],[[],14],[[386,[388,[[86,[789]]]],[388,[[86,[792]]]],[388,[[86,[841]]]],[388,[89]],[388,[89]],[388,[[89,[[822,[790]]]]]],[149,[7]],[149,[7]]]],[[386,[388,[[484,[[166,[779]]]]]],[388,[[86,[[87,[779]]]]]]]],[[386,[149,[7]],[165,[855]],[149,[[862,[[861,[[79,[8]]]]]]]],[388,[89]]]],[[],796],[[],803],[[[165,[863]],[165,[857]],[388,[89]],[388,[[86,[[87,[864]]]]]],[388,[[89,[865]]]]]],0,0,[[778,38],[[14,[94]]]],[[783,38],[[14,[94]]]],[[784,38],[[14,[94]]]],[[785,38],[[14,[94]]]],[[786,38],[[14,[94]]]],[[787,38],[[14,[94]]]],[[788,38],[[14,[94]]]],[[789,38],[[14,[94]]]],[[790,38],[[14,[94]]]],[[791,38],[[14,[94]]]],[[792,38],[[14,[94]]]],[[793,38],[[14,[94]]]],[[794,38],[[14,[94]]]],[[795,38],[[14,[94]]]],[[796,38],[[14,[94]]]],[[797,38],[[14,[94]]]],[[798,38],[[14,[94]]]],[[799,38],[[14,[94]]]],[[800,38],[[14,[94]]]],[[801,38],[[14,[94]]]],[[802,38],[[14,[94]]]],[[803,7],[[14,[94]]]],[[804,38],[[14,[94]]]],[[805,38],[[14,[94]]]],[[782,38],[[14,[94]]]],[[806,38],[[14,[94]]]],[[807,38],[[14,[94]]]],[[778,7],[[14,[94]]]],[[783,7],[[14,[94]]]],[[784,7],[[14,[94]]]],[[785,7],[[14,[94]]]],[[786,7],[[14,[94]]]],[[787,7],[[14,[94]]]],[[788,7],[[14,[94]]]],[[789,7],[[14,[94]]]],[[790,7],[[14,[94]]]],[[791,7],[[14,[94]]]],[[792,7],[[14,[94]]]],[[793,7],[[14,[94]]]],[[794,7],[[14,[94]]]],[[795,7],[[14,[94]]]],[[796,7],[[14,[94]]]],[[797,7],[[14,[94]]]],[[798,7],[[14,[94]]]],[[799,7],[[14,[94]]]],[[800,7],[[14,[94]]]],[[801,7],[[14,[94]]]],[[802,7],[[14,[94]]]],[[804,7],[[14,[94]]]],[[805,7],[[14,[94]]]],[[782,7],[[14,[94]]]],[[806,7],[[14,[94]]]],[[807,7],[[14,[94]]]],[[778,7],[[14,[94]]]],[[783,7],[[14,[94]]]],[[784,7],[[14,[94]]]],[[785,7],[[14,[94]]]],[[786,7],[[14,[94]]]],[[787,7],[[14,[94]]]],[[788,7],[[14,[94]]]],[[789,7],[[14,[94]]]],[[790,7],[[14,[94]]]],[[791,7],[[14,[94]]]],[[792,7],[[14,[94]]]],[[793,7],[[14,[94]]]],[[794,7],[[14,[94]]]],[[795,7],[[14,[94]]]],[[796,7],[[14,[94]]]],[[797,7],[[14,[94]]]],[[798,7],[[14,[94]]]],[[799,7],[[14,[94]]]],[[800,7],[[14,[94]]]],[[801,7],[[14,[94]]]],[[802,7],[[14,[94]]]],[[804,7],[[14,[94]]]],[[805,7],[[14,[94]]]],[[782,7],[[14,[94]]]],[[806,7],[[14,[94]]]],[[807,7],[[14,[94]]]],[778,7],[783,7],[784,7],[785,7],[786,7],[787,7],[788,7],[789,7],[790,7],[791,7],[792,7],[793,7],[794,7],[795,7],[796,7],[797,7],[798,7],[799,7],[800,7],[801,7],[802,7],[803,7],[804,7],[805,7],[782,7],[806,7],[807,7],[[778,38],[[14,[94]]]],[[783,38],[[14,[94]]]],[[784,38],[[14,[94]]]],[[785,38],[[14,[94]]]],[[786,38],[[14,[94]]]],[[787,38],[[14,[94]]]],[[788,38],[[14,[94]]]],[[789,38],[[14,[94]]]],[[790,38],[[14,[94]]]],[[791,38],[[14,[94]]]],[[792,38],[[14,[94]]]],[[793,38],[[14,[94]]]],[[794,38],[[14,[94]]]],[[795,38],[[14,[94]]]],[[796,38],[[14,[94]]]],[[797,38],[[14,[94]]]],[[798,38],[[14,[94]]]],[[799,38],[[14,[94]]]],[[800,38],[[14,[94]]]],[[801,38],[[14,[94]]]],[[802,38],[[14,[94]]]],[[803,7],[[14,[94]]]],[[804,38],[[14,[94]]]],[[805,38],[[14,[94]]]],[[782,38],[[14,[94]]]],[[806,38],[[14,[94]]]],[[807,38],[[14,[94]]]],[[[813,[779]],17]],[[[814,[779]],17]],[[817,17]],[[818,17]],[[819,17]],0,0,0,0,0,0,[[778,31],[[12,[32]]]],[[783,31],[[12,[32]]]],[[784,31],[[12,[32]]]],[[845,31],[[12,[32]]]],[[846,31],[[12,[32]]]],[[847,31],[[12,[32]]]],[[786,31],[[12,[32]]]],[[787,31],[[12,[32]]]],[[788,31],[[12,[32]]]],[[789,31],[[12,[32]]]],[[790,31],[[12,[32]]]],[[791,31],[[12,[32]]]],[[792,31],[[12,[32]]]],[[793,31],[[12,[32]]]],[[794,31],[[12,[32]]]],[[795,31],[[12,[32]]]],[[796,31],[[12,[32]]]],[[826,31],[[12,[32]]]],[[800,31],[[12,[32]]]],[[801,31],[[12,[32]]]],[[802,31],[[12,[32]]]],[[848,31],[[12,[32]]]],[[821,31],[[12,[32]]]],[[803,31],[[12,[32]]]],[[804,31],[[12,[32]]]],[[805,31],[[12,[32]]]],[[782,31],[[12,[32]]]],[[774,31],[[12,[32]]]],[[774,31],[[12,[32]]]],[[774,31],[[12,[32]]]],[[774,31],[[12,[32]]]],[[831,31],[[12,[32]]]],[[866,31],[[12,[32]]]],[[832,31],[[12,[32]]]],[[833,31],[[12,[32]]]],[[834,31],[[12,[32]]]],[[835,31],[[12,[32]]]],[[775,31],[[12,[32]]]],[[775,31],[[12,[32]]]],[[775,31],[[12,[32]]]],[[775,31],[[12,[32]]]],[[776,31],[[12,[32]]]],[[776,31],[[12,[32]]]],[[776,31],[[12,[32]]]],[[776,31],[[12,[32]]]],[[776,31],[[12,[32]]]],[[777,31],[[12,[32]]]],[[777,31],[[12,[32]]]],[[777,31],[[12,[32]]]],[[777,31],[[12,[32]]]],[[777,31],[[12,[32]]]],0,[[],803],[[],859],[[],859],[[],859],[[],859],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[812,793],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[637,782],[[[84,[2]]],782],[[]],[[]],[[]],[782,829],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[867,837],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[776,777],[[]],[397,777],[[[14,[868]]],777],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[49,[[14,[774]]]],[49,[[14,[775]]]],[49,[[14,[776]]]],[49,[[14,[777]]]],[49,774],[49,774],[49,775],[49,775],[49,776],[49,776],[49,777],[49,777],[49,774],[49,775],[49,776],[49,777],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[29,776],[489,774],[489,775],[489,776],[489,777],[49,776],[38,[[14,[774]]]],[38,[[14,[775]]]],[38,[[14,[776]]]],[38,[[14,[777]]]],[869,776],[94,[[14,[778]]]],[94,[[14,[783]]]],[94,[[14,[784]]]],[94,[[14,[785]]]],[94,[[14,[786]]]],[94,[[14,[787]]]],[94,[[14,[788]]]],[94,[[14,[789]]]],[94,[[14,[790]]]],[94,[[14,[791]]]],[94,[[14,[792]]]],[94,[[14,[793]]]],[94,[[14,[794]]]],[94,[[14,[795]]]],[94,[[14,[796]]]],[94,[[14,[797]]]],[94,[[14,[798]]]],[94,[[14,[799]]]],[94,[[14,[800]]]],[94,[[14,[801]]]],[94,[[14,[802]]]],[94,[[14,[803]]]],[94,[[14,[804]]]],[94,[[14,[805]]]],[94,[[14,[782]]]],[94,[[14,[806]]]],[94,[[14,[807]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[53,787],[[53,637],787],[[53,637,637],787],[[53,53],787],[[53,53,637],787],[[53,53,637,637],787],[[53,53],787],[53,787],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34,[[827,[779]]]],[34],[34],[34],[34],[34],[34],[34],[34],[34,[[870,[779]]]],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34,836],[34,871],[34],[34],[34],[34,838],[34],[34],[34],[34],[34],0,0,[[403,872],[[47,[840]]]],[[783,7],873],[[856,[161,[874]],29,29],[[14,[875]]]],[[]],[[[876,[779]]],828],[[[47,[49]],777],[[877,[[47,[437]]]]]],[[[14,[868]]],[[47,[[14,[878]]]]]],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[7,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[7,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[[838,[3,[2]],[14,[[84,[2]]]]],14],[[783,7],873],[778,[[14,[99]]]],[783,[[14,[99]]]],[784,[[14,[99]]]],[785,[[14,[99]]]],[786,[[14,[99]]]],[787,[[14,[99]]]],[788,[[14,[99]]]],[789,[[14,[99]]]],[790,[[14,[99]]]],[791,[[14,[99]]]],[792,[[14,[99]]]],[793,[[14,[99]]]],[794,[[14,[99]]]],[795,[[14,[99]]]],[796,[[14,[99]]]],[797,[[14,[99]]]],[798,[[14,[99]]]],[799,[[14,[99]]]],[800,[[14,[99]]]],[801,[[14,[99]]]],[802,[[14,[99]]]],[803,[[14,[99]]]],[804,[[14,[99]]]],[805,[[14,[99]]]],[782,[[14,[99]]]],[806,[[14,[99]]]],[807,[[14,[99]]]],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[838,777],879],0,0,0,0,0,0,[[[824,[779]],30]],[[826,30]],[[829,30]],[[776,30]],[[777,30]],[[806,30]],[[807,30]],0,0,[[778,38],[[14,[7]]]],[[787,38],[[14,[7]]]],[[799,38],[[14,[7]]]],[[800,38],[[14,[7]]]],[[802,38],[[14,[7]]]],[[804,38],[[14,[7]]]],[[805,38],[[14,[7]]]],[[807,38],[[14,[7]]]],0,0,0,0,[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],0,[[[9,[8]],101,34]],[[[9,[8]],101,34]],[[774,774]],[[775,775]],[[776,776]],[[777,777]],0,0,[[774,774],774],[[775,775],775],[[776,776],776],[[777,777],777],[[774,774],29],[[775,775],29],[[776,776],29],[[777,777],29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[778,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[783,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[784,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[785,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[786,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[787,8]]],[[9,[1,8]]]],[[[9,[788,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[789,8]]],[[9,[1,8]]]],[[[9,[790,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[791,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[792,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[793,8]]],[[9,[1,8]]]],[[[9,[794,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[795,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[796,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[797,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[798,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[799,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[800,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[801,8]]],[[9,[1,8]]]],[[[9,[802,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[803,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[804,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[805,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[782,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[806,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[807,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[],[[35,[[9,[28,8]]]]]],[774],[775],[776],[777],[[[9,[778,8]]],[[9,[94,8]]]],[[[9,[783,8]]],[[9,[94,8]]]],[[[9,[784,8]]],[[9,[94,8]]]],[[[9,[785,8]]],[[9,[94,8]]]],[[[9,[786,8]]],[[9,[94,8]]]],[[[9,[787,8]]],[[9,[94,8]]]],[[[9,[788,8]]],[[9,[94,8]]]],[[[9,[789,8]]],[[9,[94,8]]]],[[[9,[790,8]]],[[9,[94,8]]]],[[[9,[791,8]]],[[9,[94,8]]]],[[[9,[792,8]]],[[9,[94,8]]]],[[[9,[793,8]]],[[9,[94,8]]]],[[[9,[794,8]]],[[9,[94,8]]]],[[[9,[795,8]]],[[9,[94,8]]]],[[[9,[796,8]]],[[9,[94,8]]]],[[[9,[797,8]]],[[9,[94,8]]]],[[[9,[798,8]]],[[9,[94,8]]]],[[[9,[799,8]]],[[9,[94,8]]]],[[[9,[800,8]]],[[9,[94,8]]]],[[[9,[801,8]]],[[9,[94,8]]]],[[[9,[802,8]]],[[9,[94,8]]]],[[[9,[803,8]]],[[9,[94,8]]]],[[[9,[804,8]]],[[9,[94,8]]]],[[[9,[805,8]]],[[9,[94,8]]]],[[[9,[782,8]]],[[9,[94,8]]]],[[[9,[806,8]]],[[9,[94,8]]]],[[[9,[807,8]]],[[9,[94,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[774,29],[775,29],[776,29],[777,29],[821,29],[774,29],[775,29],[776,29],[777,29],[[785,[3,[2]]],29],[783,880],[821,880],[841,215],[774,[[881,[774]]]],[775,[[881,[775]]]],[776,[[881,[776]]]],[777,[[881,[777]]]],[778,102],[783,103],[784,103],[785,103],[786,103],[787,102],[788,103],[789,103],[790,103],[791,103],[792,103],[793,103],[794,103],[795,103],[796,103],[797,103],[798,103],[799,102],[800,102],[801,103],[802,102],[803,368],[804,102],[805,102],[782,103],[806,103],[807,102],[783,880],[774,[[882,[774]]]],[775,[[882,[775]]]],[776,[[882,[776]]]],[777,[[882,[777]]]],0,[[53,53],53],[[],[[14,[38]]]],[777,141],[821,7],[823,[[14,[811]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[872,820],[872,820],[872,820],0,0,[[839,403,811],875],0,[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[839,403,811,883,878],875],0,[[839,403,811,883,883,878],875],0,[776,49],[823,7],[[778,7],[[14,[38]]]],[[783,7],[[14,[38]]]],[[784,7],[[14,[38]]]],[[785,7],[[14,[38]]]],[[786,7],[[14,[38]]]],[[787,7],[[14,[38]]]],[[788,7],[[14,[38]]]],[[789,7],[[14,[38]]]],[[790,7],[[14,[38]]]],[[791,7],[[14,[38]]]],[[792,7],[[14,[38]]]],[[793,7],[[14,[38]]]],[[794,7],[[14,[38]]]],[[795,7],[[14,[38]]]],[[796,7],[[14,[38]]]],[[797,7],[[14,[38]]]],[[798,7],[[14,[38]]]],[[799,7],[[14,[38]]]],[[800,7],[[14,[38]]]],[[801,7],[[14,[38]]]],[[802,7],[[14,[38]]]],[[804,7],[[14,[38]]]],[[805,7],[[14,[38]]]],[[782,7],[[14,[38]]]],[[806,7],[[14,[38]]]],[[807,7],[[14,[38]]]],[34,884],[872,871],[872,823],[403,839],0,0,[774,774],[775,775],[776,776],[777,777],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[823,[[14,[811]]]],[[],804],[[[781,[779,780]]],804],[782,804],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[386,[86,[403]],[86,[885]],[86,[838]],[86,[871]],[89,[[387,[[886,[395]]]]]]]],[[386,[86,[403]],[86,[885]],[165,[853]],[89,[[387,[887]]]]]],[[386,[165,[402]],[86,[[3,[2]]]],[86,[403]],[86,[885]],[165,[871]],[165,[854]],[89,[[387,[[886,[395]]]]]],[86,[796]],[86,[789]],[86,[792]],[149,[29]],[149,[29]],89,89]],[[[149,[[844,[779]]]],[165,[[849,[779]]]],[165,[[850,[779]]]],[86,[403]],[86,[[3,[2]]]],[86,[888]],[86,[[827,[779]]]],[86,[803]]]],[[[86,[[3,[874]]]],[165,[856]],[86,[838]],[86,[403]],[86,[[889,[837]]]],[86,[857]],[86,[890]]]],[[386,[86,[403]],[86,[838]],[86,[836]],[86,[854]],[86,[871]],[86,[853]],[86,[891]],89,[86,[397]],[86,[892]],[86,[433]]]],[[[86,[403]],[86,[[870,[779]]]],[86,[891]],[86,[892]],[86,[851]],[165,[852]]]],[[386,[86,[403]],[86,[885]],[165,[851]],[89,[[387,[425]]]]]],[[[86,[403]],[86,[885]],[165,[857]]]],0,0,[[],859],[[],859],[[],859],[[],859],0,0,[[],859],[[],859],[[],859],0,0,[776,869],0,[[823,7]],[[823,7,7,7]],0,[[[86,[[893,[393]]]],[86,[[893,[394]]]],[86,[[893,[395]]]],[86,[[827,[779]]]],[165,[[894,[[827,[779]]]]]],[86,[419]],[86,[397]],[86,[[3,[874]]]],[86,[[850,[779]]]],[165,[855]],[86,[[895,[[161,[779]]]]]],[86,[[3,[2]]]],89]],[[[86,[[893,[427]]]],[86,[[893,[428]]]],[86,[[893,[404]]]],[86,[[893,[405]]]],[86,[[870,[779]]]],[165,[[894,[[870,[779]]]]]],[86,[419]],[86,[397]],[86,[[3,[874]]]],[86,[855]],[86,[[850,[779]]]],[86,[[895,[[161,[779]]]]]],[89,[896]]]],[[[86,[[893,[809]]]],[86,[[870,[779]]]],[86,[[3,[874]]]],[86,[855]],[86,[[850,[779]]]],[86,[[895,[[161,[779]]]]]],[165,[[894,[[870,[779]]]]]],[86,[419]],89,89,[89,[783,[387,[897]]]],[89,[784,[387,[866]]]],[89,[873,[387,[897]]]]]],0,0,0,0,[[808,[771,[770]]]],[[830,[771,[770]]]],[[831,[771,[770]]]],[[832,[771,[770]]]],[[842,[771,[770]]]],[[843,[771,[770]]]],[[833,[771,[770]]]],[[834,[771,[770]]]],[[835,[771,[770]]]],[[837,[771,[770]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[778,[[14,[75]]]],[787,[[14,[75]]]],[799,[[14,[75]]]],[800,[[14,[75]]]],[802,[[14,[75]]]],[804,[[14,[75]]]],[805,[[14,[75]]]],[807,[[14,[75]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[778,105],[783,105],[784,105],[785,105],[786,105],[787,105],[788,105],[789,105],[790,105],[791,105],[792,105],[793,105],[794,105],[795,105],[796,105],[797,105],[798,105],[799,105],[800,105],[801,105],[802,105],[803,105],[804,105],[805,105],[782,105],[806,105],[807,105],[[[9,[778,8]]],106],[[[9,[783,8]]],106],[[[9,[784,8]]],106],[[[9,[785,8]]],106],[[[9,[786,8]]],106],[[[9,[787,8]]],106],[[[9,[788,8]]],106],[[[9,[789,8]]],106],[[[9,[790,8]]],106],[[[9,[791,8]]],106],[[[9,[792,8]]],106],[[[9,[793,8]]],106],[[[9,[794,8]]],106],[[[9,[795,8]]],106],[[[9,[796,8]]],106],[[[9,[797,8]]],106],[[[9,[798,8]]],106],[[[9,[799,8]]],106],[[[9,[800,8]]],106],[[[9,[801,8]]],106],[[[9,[802,8]]],106],[[[9,[803,8]]],106],[[[9,[804,8]]],106],[[[9,[805,8]]],106],[[[9,[782,8]]],106],[[[9,[806,8]]],106],[[[9,[807,8]]],106],[[778,94],[[14,[29]]]],[[783,94],[[14,[29]]]],[[784,94],[[14,[29]]]],[[785,94],[[14,[29]]]],[[786,94],[[14,[29]]]],[[787,94],[[14,[29]]]],[[788,94],[[14,[29]]]],[[789,94],[[14,[29]]]],[[790,94],[[14,[29]]]],[[791,94],[[14,[29]]]],[[792,94],[[14,[29]]]],[[793,94],[[14,[29]]]],[[794,94],[[14,[29]]]],[[795,94],[[14,[29]]]],[[796,94],[[14,[29]]]],[[797,94],[[14,[29]]]],[[798,94],[[14,[29]]]],[[799,94],[[14,[29]]]],[[800,94],[[14,[29]]]],[[801,94],[[14,[29]]]],[[802,94],[[14,[29]]]],[[803,94],[[14,[29]]]],[[804,94],[[14,[29]]]],[[805,94],[[14,[29]]]],[[782,94],[[14,[29]]]],[[806,94],[[14,[29]]]],[[807,94],[[14,[29]]]],[778,107],[783,107],[784,107],[785,107],[786,107],[787,107],[788,107],[789,107],[790,107],[791,107],[792,107],[793,107],[794,107],[795,107],[796,107],[797,107],[798,107],[799,107],[800,107],[801,107],[802,107],[803,107],[804,107],[805,107],[782,107],[806,107],[807,107],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],0,0,[[774,774]],[[775,775]],[[776,776]],[[777,777]],[[898,899],900],[[898,899],900],[[898,899],900],[[898,899],900],[[898,899],900],0,[856],0,[[884,375,376,34],[[12,[377]]]],0,[[778,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[783,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[784,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[785,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[786,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[787,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[788,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[789,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[790,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[791,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[792,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[793,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[794,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[795,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[796,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[797,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[798,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[799,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[800,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[801,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[802,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[803,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[804,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[805,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[782,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[774,774,29]],[[775,775,29]],[[776,776,29]],[[777,777,29]],[[806,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[807,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[803],[803],0,[[839,[903,[901,902]],49,776,[79,[904,8]],[79,[905,8]]],879],0,0,0,0,0,0,0,0,0,0,[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[808,820],[830,820],[831,820],[832,820],[842,820],[843,820],[833,820],[834,820],[835,820],[837,820],0,0,[[839,403,811,883],875],0,[[[52,[809]]]],[809],[[906,360,[903,[901,902]],907],[[12,[908]]]],[[827,360,[903,[901,902]],824],[[12,[908]]]],[[[827,[[781,[779,780]]]],360,[903,[901,902]],[824,[[781,[779,780]]]]],[[12,[908]]]],[[[827,[779]],[903,[901,902]]],[[12,[360,908]]]],[[[827,[782]],360,[903,[901,902]],[824,[782]]],[[12,[908]]]],[[[870,[779]],[903,[901,902]]],[[12,[360,908]]]],[[838,[903,[901,902]]],[[12,[360,908]]]],0,0,0,[[774,774],774],[[775,775],775],[[776,776],776],[[777,777],777],[[774,774]],[[775,775]],[[776,776]],[[777,777]],[[774,774],774],[[775,775],775],[[776,776],776],[[777,777],777],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[774,774]],[[775,775]],[[776,776]],[[777,777]],0,0,0,0,0,0,0,[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],0,[[774,774],774],[[775,775],775],[[776,776],776],[[777,777],777],0,[[[781,[779,780]],879,403,[3,[2]],888],[[12,[909,910]]]],[[782,879,403,[3,[2]],888],[[12,[909,910]]]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[884,34]],[[[86,[792]],89,89]],[89],[[386,[89,[860]],[89,[[387,[[84,[874]]]]]]]],[[[86,[841]],[89,[896]]]],[[386,89]],[[[86,[841]],[89,[896]]]],0,[778,7],[787,7],[799,7],[800,7],[802,7],[804,7],[805,7],[807,7],[778,38],[787,38],[799,38],[800,38],[802,38],[804,38],[805,38],[807,38],[778,108],[787,108],[799,108],[800,108],[802,108],[804,108],[805,108],[807,108],[[],859],[[],859],[[],859],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[781,[779,780]],25]],[[782,25]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[823,403,885]],[[808,[773,[772]]]],[[830,[773,[772]]]],[[831,[773,[772]]]],[[832,[773,[772]]]],[[842,[773,[772]]]],[[843,[773,[772]]]],[[833,[773,[772]]]],[[834,[773,[772]]]],[[835,[773,[772]]]],[[837,[773,[772]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[911,17]],[912,912],[[]],[[],[[9,[22,8]]]],[[23,24,25]],[[23,24,25]],[[[771,[770]]],912],[[],912],[[],913],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[[],14],[[911,17]],[[]],[[]],[[]],[[]],[[]],[25],[25],[[]],[[]],[[]],[[]],[[]],[34],[34],[34,914],[912,51],[25],[25],[[],7],[[],7],[[],7],[[],7],[[],7],[[386,[89,[343]]]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],[[]],[[]],[[]],[51,912],[[]],[[]],0,[[386,[86,[419]],[165,[[420,[914]]]],[86,[914]],[89,[[387,[426]]]],[86,[[3,[2]]]]]],[[912,[771,[770]]]],[[913,375,376,34],[[12,[377]]]],[[912,51]],[912,820],[914,360],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[912,[773,[772]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],778],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],859],0,[[],859],[[],53],0,0,0,0,0,0,0,0,0,0,0,0,[[],859],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],804],0,0,0,0,0,0,0,[[],859],[[],859],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[827,360,[903,[901,902]],824],[[12,[908]]]],0,0,0,0,0,0,0,[[],859],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[915,94]],[[916,94]],[[917,94]],[[918,94]],[[],1],[[],1],[[],1],[915,1],[[],1],[916,1],[917,1],[[],1],[[],1],[[],1],[918,1],[[],1],[[],1],[915,1],[[],1],[[],1],[916,1],[[],1],[917,1],[918,1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[915,94],[916,94],[917,94],[918,94],[915,94],[916,94],[917,94],[918,94],[[],38],[403,[[79,[437,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[919,17]],[915,915],[916,916],[917,917],[918,918],[920,920],[915,98],[916,98],[917,98],[918,98],[[]],[[]],[[]],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[915,[[9,[94,8]]]],[916,[[9,[94,8]]]],[917,[[9,[94,8]]]],[918,[[9,[94,8]]]],0,0,[[23,24,25]],[[23,24,25]],[[23,24,25]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],919],[[],915],[[],916],[[],917],[[],918],[[],920],0,[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[]],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[7],[15,29],[15,29],[[915,915],29],[[917,917],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],918],[[915,38],[[14,[94]]]],[[916,38],[[14,[94]]]],[[917,38],[[14,[94]]]],[[918,38],[[14,[94]]]],[[915,7],[[14,[94]]]],[[916,7],[[14,[94]]]],[[917,7],[[14,[94]]]],[[918,7],[[14,[94]]]],[[915,7],[[14,[94]]]],[[916,7],[[14,[94]]]],[[917,7],[[14,[94]]]],[[918,7],[[14,[94]]]],[915,7],[916,7],[917,7],[918,7],[[915,38],[[14,[94]]]],[[916,38],[[14,[94]]]],[[917,38],[[14,[94]]]],[[918,38],[[14,[94]]]],[[919,31],[[12,[32]]]],[[915,31],[[12,[32]]]],[[916,31],[[12,[32]]]],[[917,31],[[12,[32]]]],[[918,31],[[12,[32]]]],[[920,31],[[12,[32]]]],[[],859],[[]],[[]],[[]],[[]],[[]],[[]],[25],[25],[25],[94,[[14,[915]]]],[94,[[14,[916]]]],[94,[[14,[917]]]],[94,[[14,[918]]]],[[]],[[]],[[]],[[]],[[]],[[]],[34],[34],[34],[34],[34],[34],[25],[25],[25],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[915,[[14,[99]]]],[916,[[14,[99]]]],[917,[[14,[99]]]],[918,[[14,[99]]]],[[],100],[[],100],[[],100],[[],100],0,[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[[9,[8]],101,34]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[915,8]]],[[9,[1,8]]]],[[[9,[916,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[917,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[918,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[9,[915,8]]],[[9,[94,8]]]],[[[9,[916,8]]],[[9,[94,8]]]],[[[9,[917,8]]],[[9,[94,8]]]],[[[9,[918,8]]],[[9,[94,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[915,103],[916,103],[917,103],[918,103],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[915,7],[[14,[38]]]],[[916,7],[[14,[38]]]],[[917,7],[[14,[38]]]],[[918,7],[[14,[38]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[915,105],[916,105],[917,105],[918,105],[[[9,[915,8]]],106],[[[9,[916,8]]],106],[[[9,[917,8]]],106],[[[9,[918,8]]],106],[[915,94],[[14,[29]]]],[[916,94],[[14,[29]]]],[[917,94],[[14,[29]]]],[[918,94],[[14,[29]]]],[915,107],[916,107],[917,107],[918,107],[[],38],[[],38],[[],38],[[],38],[[],38],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],38],[[],38],[[],38],[[],38],[[],38],[[915,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[916,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[917,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[918,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[],38],[[],38],[[],38],[[],38],[[],38],[[[827,[920]],360,[903,[901,902]],[824,[920]]],[[12,[908]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],99],[[],99],[[],99],[[],99],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],201],[[920,879,403,[3,[2]],888],[[12,[909,910]]]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[920,25]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[343],[343],0,[492,[[35,[[9,[493,8]]]]]],[492,[[35,[[9,[28,8]]]]]],0,0,0,0,[[],778],0,[492,[[35,[[9,[493,8]]]]]],[492,[[35,[[9,[28,8]]]]]],[[],[[35,[[9,[493,8]]]]]],[[],[[35,[[9,[28,8]]]]]],0,0,[494,[[496,[495]]]],[[],25],[[],[[0,[25,261]]]],[94],[34],[34],[34],[[],[[352,[351]]]],0,[[],1],[[],1],[[],94],[[],94],0,0,0,0,0,0,0,0,0,0,0,[492,[[35,[[9,[493,8]]]]]],[492,[[35,[[9,[28,8]]]]]],0,0,0,0,0,0,0,[17],[[],5],0,0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[35,[[9,[493,8]]]]]],[[],[[35,[[9,[28,8]]]]]],0,[346],0,0,[17],[[]],0,0,0,[[],98],[[],367],[[],[[9,[94,8]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[352,[353]]]],0,0,0,[[],[[14,[38]]]],0,0,0,0,0,0,0,[[[497,[490]]]],0,[31,[[12,[32]]]],0,0,[[]],0,[[],284],0,0,[[],[[79,[[9,[28,8]],8]]]],[[],859],0,[[],859],[[],53],0,0,0,0,0,[[]],[[]],[[34,343]],0,0,0,0,0,0,0,[[[0,[494,261]]],[[35,[[9,[493,8]]]]]],0,0,0,0,[[],[[9,[28,8]]]],[[[140,[139]]],[[12,[453]]]],[94,[[12,[94,921]]]],[94,[[12,[94,921]]]],0,0,[[],29],0,0,0,0,0,0,0,[[[497,[[12,[490]]]]]],0,0,0,0,0,0,[38,[[14,[94]]]],[7,[[14,[94]]]],[7,[[14,[94]]]],[7,[[14,[94]]]],[[],7],[[],7],[38,[[14,[94]]]],[7,[[14,[94]]]],0,0,[17],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],859],0,0,[94,14],[34],0,0,0,0,0,0,0,[38,[[14,[94]]]],[7,[[14,[94]]]],[38,[[14,[94]]]],[7,[[14,[94]]]],[[],346],[[],[[14,[99]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[497],0,0,0,0,0,0,0,0,0,0,[28,[[35,[[9,[493,8]]]]]],[28,[[35,[[9,[28,8]]]]]],[498,[[0,[25,261]]]],0,0,[[[497,[490]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[34],0,[[7,[52,[343]]]],[[7,[52,[343]]]],0,0,0,0,[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[94,8]]]],[[]],[[]],0,0,[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[343,617],[343,618],[[],103],[[],368],0,0,0,0,0,[[],346],0,0,0,0,0,0,[[[140,[139]]]],0,0,[[[0,[143,218,25]]],[[499,[[0,[143,218,25]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[14,[38]]]],0,[[],[[348,[38]]]],[[],38],[[],141],0,[7,[[14,[38]]]],0,0,0,0,0,0,0,0,[[[501,[500]]],[[499,[502]]]],0,0,[[],[[0,[25,261]]]],[[],804],0,[494,[[496,[503]]]],0,0,0,0,0,0,0,0,0,0,[922,[[12,[94,921]]]],0,[922,[[12,[94,921]]]],[[]],0,0,0,[501,[[496,[504]]]],[[]],0,0,0,0,0,0,0,[[],859],[[],859],[[[52,[38]]]],0,0,0,0,0,0,[[[52,[343]]]],[[[52,[343]]]],0,0,0,0,[17,29],0,[94,[[12,[94,921]]]],[94,[[12,[94,921]]]],[[],[[14,[75]]]],[[],105],[[[9,[8]]],106],[94,[[14,[29]]]],[922,[[12,[94,921]]]],[922,[[12,[94,921]]]],[[],107],0,0,[144],[145],[[]],[[[77,[146]],147]],[[[52,[343]]]],[[[52,[343]]]],[[]],[[]],[[]],0,[[[52,[343]]]],[[],14],0,0,0,[[],[[0,[25,261]]]],[[],[[0,[25,261]]]],[[],[[0,[25,261]]]],[[[0,[138,[505,[[0,[138,[505,[[0,[138,[505,[[0,[138,[505,[[0,[138,505]]]]]]]]]]]]]]]]]]],25],[[],[[0,[25,261]]]],[[],[[0,[25,261]]]],[[[0,[138,[505,[[0,[138,[505,[[0,[138,[505,[[0,[138,[505,[[0,[138,505]]]]]]]]]]]]]]]]]]],25],[[],[[0,[25,261]]]],0,0,0,0,0,0,[[]],[34],[494,[[35,[[9,[493,8]]]]]],[494,[[35,[[9,[28,8]]]]]],[[],[[0,[25,261]]]],[34],[214],0,0,0,0,0,0,0,0,[[],[[14,[923]]]],[[[9,[94,8]]],[[12,[[9,[94,8]]]]]],[109,5],[[]],[38],[[],29],[346],[346],[343],[343],[343],[53],[53],0,0,0,0,0,0,0,0,0,0,0,0,[[],38],0,0,0,0,0,[[827,360,[903,[901,902]],824],[[12,[908]]]],0,[[],53],0,0,0,0,[[],[[0,[25,261]]]],[[],[[0,[25,261]]]],[498,[[0,[25,261]]]],[[]],0,0,0,0,0,0,0,[[],[[14,[13]]]],[[[9,[94,8]]],[[12,[[9,[94,8]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],765],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[77,[328]]],328],0,0,[[],13],[[],[[14,[38]]]],[[],38],[[],38],0,[[[497,[[12,[490]]]]]],[214],0,[[],859],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],53],0,0,0,0,0,0,[[[497,[[12,[490]]]]]],0,0,0,0,0,0,0,0,0,0,0,[76],[76],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[924,924],[925,925],[926,926],[927,927],[928,928],[929,929],[930,930],[931,931],[932,932],[933,933],[934,934],[935,935],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],924],[[],925],[[],926],[[],927],[[],928],[[],929],[[],930],[[],931],[[],932],[[],933],[[],934],[[],935],0,[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],0,[636,926],[[924,31],[[12,[32]]]],[[925,31],[[12,[32]]]],[[926,31],[[12,[32]]]],[[927,31],[[12,[32]]]],[[928,31],[[12,[32]]]],[[929,31],[[12,[32]]]],[[930,31],[[12,[32]]]],[[931,31],[[12,[32]]]],[[932,31],[[12,[32]]]],[[933,31],[[12,[32]]]],[[934,31],[[12,[32]]]],[[935,31],[[12,[32]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[933,932],[[]],[[]],[[]],[[]],[[328,328],925],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[53,927],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],0,[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[53,924],[[53,53,53],925],[636,926],[[53,7],932],[53,933],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[497,[490]]]],[[[497,[[12,[490]]]]]],[497],[[[497,[490]]]],[25,25],[[[497,[[12,[490]]]]]],[[[497,[[12,[490]]]]]],0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[627,[936]]],[[468,[936]]]],[[[468,[936]]],51],[[[627,[936]]],51],[[[469,[936]]],51],[[[468,[936]]],[[469,[936]]]],[[[627,[936]]],[[469,[936]]]],[[[469,[936]]],[[468,[936]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[468,[936]],7],[[468,[936]]]],[[[627,[936]],7],[[627,[936]]]],[[[469,[936]],7],[[469,[936]]]],[[[468,[936]],937],[[468,[936]]]],[[[627,[936]],937],[[627,[936]]]],[[[469,[936]],937],[[469,[936]]]],[938,938],[467,467],[939,939],[[[469,[[0,[261,936]]]]],[[469,[[0,[261,936]]]]]],[[]],[[]],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[506,[[507,[51]]]],[[]],[7],[7],[7],[7],[7],[[[469,[936]]]],[7],[[]],[[[468,[936]]]],[7],[7],[7],[7],[7],[7],[[]],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[7],[[[627,[936]]]],[[[468,[936]],31],[[12,[32]]]],[[[627,[936]],31],[[12,[32]]]],[[[469,[936]],31],[[12,[32]]]],[[],[[468,[467]]]],[[]],[[]],[52,938],[[]],[[]],[[]],[[],[[469,[467]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[938,7]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[76],[[[507,[51]]],[[468,[936]]]],[[[507,[51]]],[[627,[936]]]],[[[507,[51]]],[[469,[936]]]],[[[468,[936]]],[[627,[936]]]],[[],508],[[[627,[936]]]],[[[627,[939]]]],[[[468,[936]]],[[468,[936]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[468,[467]]],[[468,[939]]]],[[[627,[467]]],[[627,[939]]]],[[[469,[467]]],[[469,[939]]]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[527,100]],[94],[[940,94]],[[941,94]],[[942,94]],[[98,94]],[[943,94]],[[367,94]],[[97,94]],[[944,94]],[[944,31],[[12,[32]]]],[944,[[14,[75]]]],[[944,94],[[14,[29]]]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[940,1],[[],1],[[],1],[[],1],[[],1],[[],1],[941,1],[[],1],[942,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[98,1],[[],1],[[],1],[943,1],[[],1],[[],1],[[],1],[367,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[97,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[940,1],[[],1],[[],1],[[],1],[[],1],[[],1],[941,1],[[],1],[942,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[98,1],[[],1],[[],1],[[],1],[943,1],[[],1],[367,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[97,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],15],[[],15],[[],94],[940,94],[941,94],[942,94],[98,94],[943,94],[367,94],[[945,[469,[467]]],94],[97,94],[[],94],[940,94],[941,94],[942,94],[98,94],[943,94],[367,94],[[945,[468,[467]]],94],[97,94],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[946,7],[100,100],[946,946],[947,947],[948,948],[949,949],[950,950],[951,951],[952,952],[953,953],[954,954],[955,955],[99,99],[956,956],[957,957],[958,958],[959,959],[960,960],[945,945],[961,961],[962,962],[108,108],[963,963],[964,964],[965,965],[966,966],[[],942],[[],98],[[],943],[[],367],[[],97],[[],940],[[],941],[940,940],[941,941],[942,942],[98,98],[943,943],[367,367],[97,97],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[94,8]]]],[940,[[9,[94,8]]]],[941,[[9,[94,8]]]],[942,[[9,[94,8]]]],[98,[[9,[94,8]]]],[943,[[9,[94,8]]]],[367,[[9,[94,8]]]],[97,[[9,[94,8]]]],[[952,952],74],[[],74],[[962,38],29],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[957,[[14,[38]]]],[[],[[14,[38]]]],[100,[[14,[22]]]],[100,[[14,[22]]]],[31,[[12,[32]]]],[[941,31],[[12,[32]]]],[[942,31],[[12,[32]]]],[[98,31],[[12,[32]]]],[[943,31],[[12,[32]]]],[[367,31],[[12,[32]]]],[[97,31],[[12,[32]]]],[[],527],[[],941],[[],942],[[],98],[[],943],[[],367],[[],958],[[],961],[[],97],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[960,150],[[12,[[9,[94,8]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[94,8]]],[[12,[[9,[94,8]],[9,[94,8]]]]]],[[]],[[]],[[]],[[]],[[]],[[[9,[22,8]]],[[12,[[9,[22,8]],[9,[22,8]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[94,[[14,[94]]]],[22,[[14,[22]]]],[[[11,[22,8]]],[[12,[[11,[22,8]],[11,[22,8]]]]]],[94,[[14,[94]]]],[22,[[14,[22]]]],[[[9,[8]]],[[79,[[9,[94,8]],8]]]],[[[9,[8]]],[[79,[[9,[94,8]],8]]]],[[[9,[8]]],[[79,[8]]]],[[[9,[8]]],[[79,[[9,[94,8]],8]]]],[[[9,[940,8]]],[[79,[[9,[94,8]],8]]]],[[[9,[941,8]]],[[79,[[9,[94,8]],8]]]],[[[9,[942,8]]],[[79,[8]]]],[[[9,[943,8]]],[[79,[[9,[94,8]],8]]]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[15,29],[15,29],[15,29],[15,29],[15,29],[30],[30],[94,[[12,[94,921]]]],[94,[[12,[94,921]]]],[[],527],[[967,31],[[12,[32]]]],[967,[[14,[75]]]],[[967,94],[[14,[29]]]],[[968,968],29],[[969,969],29],[[921,921],29],[[952,952],29],[[108,108],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[38,[[14,[94]]]],[7,[[14,[94]]]],[7,[[14,[94]]]],[38,[[14,[94]]]],[[953,38],[[14,[947]]]],[[98,38],[[14,[94]]]],[[943,7],[[14,[94]]]],[[367,7],[[14,[94]]]],[[97,38],[[14,[94]]]],[[964,38],[[14,[947]]]],[7,[[14,[94]]]],[7,[[14,[94]]]],[[953,7],[[14,[947]]]],[[98,7],[[14,[94]]]],[[954,7],[[14,[948]]]],[[955,7],[[14,[948]]]],[[97,7],[[14,[94]]]],[[964,7],[[14,[947]]]],[[965,7],[[14,[948]]]],[7,[[14,[94]]]],[7,[[14,[94]]]],[[98,7],[[14,[94]]]],[[97,7],[[14,[94]]]],[[],7],[[],7],[[],7],[[],7],[953,7],[98,7],[954,7],[943,7],[955,7],[367,7],[97,7],[964,7],[965,7],[38,[[14,[94]]]],[7,[[14,[94]]]],[7,[[14,[94]]]],[38,[[14,[94]]]],[[98,38],[[14,[94]]]],[[943,7],[[14,[94]]]],[[367,7],[[14,[94]]]],[[97,38],[[14,[94]]]],[953,[[52,[38]]]],[964,[[52,[38]]]],[[94,31],[[12,[32]]]],[[100,31],[[12,[32]]]],[[946,31],[[12,[32]]]],[[940,31],[[12,[32]]]],[[947,31],[[12,[32]]]],[[948,31],[[12,[32]]]],[[950,31],[[12,[32]]]],[[941,31],[[12,[32]]]],[[951,31],[[12,[32]]]],[[942,31],[[12,[32]]]],[[968,31],[[12,[32]]]],[[968,31],[[12,[32]]]],[[969,31],[[12,[32]]]],[[969,31],[[12,[32]]]],[[921,31],[[12,[32]]]],[[921,31],[[12,[32]]]],[[952,31],[[12,[32]]]],[[952,31],[[12,[32]]]],[[953,31],[[12,[32]]]],[[98,31],[[12,[32]]]],[[954,31],[[12,[32]]]],[[943,31],[[12,[32]]]],[[955,31],[[12,[32]]]],[[367,31],[[12,[32]]]],[[99,31],[[12,[32]]]],[[956,31],[[12,[32]]]],[[957,31],[[12,[32]]]],[[958,31],[[12,[32]]]],[[961,31],[[12,[32]]]],[[97,31],[[12,[32]]]],[[962,31],[[12,[32]]]],[[108,31],[[12,[32]]]],[[963,31],[[12,[32]]]],[[964,31],[[12,[32]]]],[[965,31],[[12,[32]]]],[[966,31],[[12,[32]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[943,367],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[98,961],[[],961],[[]],[943,961],[967,97],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[945],[945],[967,97],[94,14],[[949,94],[[14,[[9,[94,8]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],949],[[],959],[[],960],[[],945],[[[79,[94,8]]],940],[34],[34],[34],[34],[34],[34],[34],[34],[34],0,[7,[[14,[94]]]],[7,[[14,[94]]]],[94,[[14,[94]]]],[[527,13],[[14,[100]]]],[[940,7],[[14,[94]]]],[[941,7],[[14,[94]]]],[[942,94],[[14,[94]]]],[7,14],[[942,7],14],[7,14],[[942,7],14],[38,[[14,[94]]]],[7,[[14,[94]]]],[7,[[14,[94]]]],[[970,38],[[14,[94]]]],[[971,7],[[14,[94]]]],[[972,7],[[14,[94]]]],[38,[[14,[94]]]],[7,[[14,[94]]]],[7,[[14,[94]]]],[38,[[14,[94]]]],[7,[[14,[94]]]],[7,[[14,[94]]]],[[970,38],[[14,[94]]]],[[971,7],[[14,[94]]]],[[972,7],[[14,[94]]]],[38,[[14,[94]]]],[7,[[14,[94]]]],[7,[[14,[94]]]],[7,[[14,[94]]]],[7,[[14,[94]]]],[94,[[14,[94]]]],[[527,13],[[14,[100]]]],[[940,7],[[14,[94]]]],[[941,7],[[14,[94]]]],[[942,94],[[14,[94]]]],[[],[[14,[99]]]],[940,[[14,[99]]]],[941,[[14,[99]]]],[942,[[14,[99]]]],[98,[[14,[99]]]],[943,[[14,[99]]]],[367,[[14,[99]]]],[97,[[14,[99]]]],[[959,94],923],[[527,13],[[14,[22]]]],[[527,13],[[14,[22]]]],[[527,13],[[14,[99]]]],[[],100],[[527,38],[[14,[100]]]],[[527,38],[[14,[100]]]],[[527,38],[[14,[100]]]],[[527,38],[[14,[100]]]],[[952,30]],[[108,30]],[957,[[14,[38]]]],0,0,0,0,0,[[]],[[]],[[]],[948,7],[38,[[14,[7]]]],[[953,38],[[14,[7]]]],[[98,38],[[14,[7]]]],[[97,38],[[14,[7]]]],[[962,38],[[14,[7]]]],[[964,38],[[14,[7]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[7,[9,[94,8]]]],[[100,22]],[[941,7,[9,[94,8]]]],[[942,94,94]],[[98,38,94]],[[943,94]],[[367,94]],[[[9,[94,8]],[9,[94,8]]],[[14,[[9,[94,8]]]]]],[[942,[9,[94,8]],[9,[94,8]]],[[14,[[9,[94,8]]]]]],[[98,38,[9,[94,8]]]],[[943,[9,[94,8]]]],[[367,[9,[94,8]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[940,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[941,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[942,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[98,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[943,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[367,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[97,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[941],[942],[[[9,[8]]],[[9,[94,8]]]],[[[9,[940,8]]],[[9,[94,8]]]],[[[9,[941,8]]],[[9,[94,8]]]],[[[9,[942,8]]],[[9,[94,8]]]],[[[9,[98,8]]],[[9,[94,8]]]],[[[9,[943,8]]],[[9,[94,8]]]],[[[9,[367,8]]],[[9,[94,8]]]],[[[9,[97,8]]],[[9,[94,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[94,29],[22,29],[946,29],[947,29],[948,29],[950,29],[951,29],[953,29],[954,29],[955,29],[99,29],[956,29],[962,29],[[],29],[940,29],[941,29],[942,29],[98,29],[943,29],[367,29],[[],29],[[],29],[[],29],[108,29],[946,29],[950,29],[946,13],[950,13],[946,957],[950,957],[[],973],[[],974],[[],975],[527,215],[940,973],[941,974],[942,975],[953,[[577,[947]]]],[954,[[577,[948]]]],[955,[[577,[948]]]],[962,[[577,[963]]]],[964,[[577,[947]]]],[965,[[577,[948]]]],[[],103],[[],976],[[],368],[[],102],[98,103],[943,976],[367,368],[97,102],[527,215],[951,29],[951,13],[951,957],[[],7],[[],7],[[],7],[940,7],[941,7],[942,7],[[977,94]],[[977,31],[[12,[32]]]],[977,[[14,[75]]]],[[977,94],[[14,[29]]]],[[978,94]],[[978,31],[[12,[32]]]],[[978,94],[[14,[29]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[957,[[14,[38]]]],[[],[[14,[38]]]],[979,[[14,[38]]]],[947,38],[963,38],[964,38],[965,38],[966,38],[7,[[14,[38]]]],[7,[[14,[38]]]],[[98,7],[[14,[38]]]],[[97,7],[[14,[38]]]],[944,973],[977,974],[978,975],[970,103],[971,976],[972,368],[[],527],[967,102],[7,946],[[[9,[[52,[[9,[94,8]]]],8]]],940],[38,947],[7,948],[[],950],[[],951],[[[52,[947]]],953],[[[52,[948]]],954],[[[52,[948]]],955],[[],956],[[[77,[141]],[77,[961]]],97],[[[52,[963]]],962],[[38,[52,[947]]],964],[[38,[52,[948]]],965],[38,966],[[7,[77,[141]],[77,[961]]],97],[973,14],[974,14],[975,14],[103,14],[976,14],[368,14],[102,14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],100],[[],957],[38,[[12,[952,921]]]],[38,[[12,[952,921]]]],[[952,952],[[14,[74]]]],[922,[[12,[94,921]]]],[957,38],[922,[[12,[94,921]]]],[[],[[14,[[9,[94,8]]]]]],[941,[[14,[[9,[94,8]]]]]],0,[[[9,[94,8]]]],[[941,94]],[[941,[9,[94,8]]]],[[941,[9,[94,8]]]],[958,[[980,[527]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[94,[[12,[94,921]]]],[[952,94],[[12,[94,921]]]],[94,[[12,[94,921]]]],[[952,94],[[12,[94,921]]]],[[],[[14,[75]]]],[940,[[14,[75]]]],[941,[[14,[75]]]],[97,[[14,[75]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],105],[940,105],[941,105],[942,105],[98,105],[943,105],[367,105],[97,105],[[[9,[8]]],106],[[[9,[940,8]]],106],[[[9,[941,8]]],106],[[[9,[942,8]]],106],[[[9,[98,8]]],106],[[[9,[943,8]]],106],[[[9,[367,8]]],106],[[[9,[97,8]]],106],[94,[[14,[29]]]],[[940,94],[[14,[29]]]],[[941,94],[[14,[29]]]],[[942,94],[[14,[29]]]],[[98,94],[[14,[29]]]],[[943,94],[[14,[29]]]],[[367,94],[[14,[29]]]],[[97,94],[[14,[29]]]],[922,[[12,[94,921]]]],[922,[[12,[94,921]]]],[[],107],[940,107],[941,107],[942,107],[98,107],[943,107],[367,107],[97,107],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],0,[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[527],[527],[7,[[9,[94,8]]]],[94,[[14,[[9,[94,8]]]]]],[[941,7],[[9,[94,8]]]],[[942,94],[[14,[[9,[94,8]]]]]],[94,29],0,[[],[[14,[923]]]],[[[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[940,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[941,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[942,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[98,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[943,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[367,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[97,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[940,[14,[99]]]],[[941,[14,[99]]]],[[942,[14,[99]]]],[[98,[14,[99]]]],[[943,[14,[99]]]],[[367,[14,[99]]]],[[97,[14,[99]]]],[[97,[77,[141]],[77,[961]]]],[[97,7,[77,[141]],[77,[961]]]],[957,38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[973],[974],[975],[103],[976],[368],[102],[968,[[14,[227]]]],[969,[[14,[227]]]],0,[[970,31],[[12,[32]]]],[[970,94],[[14,[29]]]],[[[9,[94,8]]],[[12,[94,[9,[94,8]]]]]],[[[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],141],[[],141],[[],141],[[],141],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[971,94]],[[971,31],[[12,[32]]]],[[971,94],[[14,[29]]]],[[972,31],[[12,[32]]]],[[972,94],[[14,[29]]]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[100,13],[[],13],[[],13],[[],13],[946,13],[[],13],[947,13],[[],13],[[],13],[948,13],[[],13],[[],13],[950,13],[[],13],[951,13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[953,13],[[],13],[954,13],[[],13],[[],13],[955,13],[[],13],[[],13],[[],13],[99,13],[[],13],[956,13],[[],13],[[],13],[[],13],[[],13],[945,13],[[],13],[[],13],[[],13],[962,13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],99],[[],99],[100,99],[[],38],[[],38],[[],38],[[],38],[946,38],[[],38],[947,38],[948,38],[950,38],[[],38],[951,38],[[],38],[953,38],[[],38],[954,38],[[],38],[955,38],[[],38],[99,38],[956,38],[[],38],[962,38],[946,957],[947,957],[948,957],[950,957],[951,957],[953,957],[954,957],[955,957],[99,957],[956,957],[962,957],[[],201],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],0,[979,94],[951,29],[951,13],[951,957],[[962,38],[[14,[963]]]],[[962,7],[[14,[963]]]],[[],7],[97,7],[962,7],[[],38],[97,38],[962,[[52,[38]]]],[[],141],[[962,38],141],[[],108],[97,108],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[958,[[981,[527]]]],0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[[3,[2]]]],[[]],[[]],[982,192],[982,192],[7],[7],[983,[[12,[272,192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,38,[52,[38]],984],[[12,[192]]]],[[983,38,[52,[38]],984],[[12,[192]]]],[[983,38,[52,[38]],984],[[12,[192]]]],[[983,38,[52,[38]],984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,38,984],[[12,[192]]]],[[983,38,984],[[12,[192]]]],[[983,38,984],[[12,[192]]]],[[983,38,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,38,[52,[38]],984],[[12,[192]]]],[[983,38,[52,[38]],984],[[12,[192]]]],[[983,38,[52,[38]],984],[[12,[192]]]],[[983,38,[52,[38]],984],[[12,[192]]]],[[983,7,984],[[12,[192]]]],[[983,7,984],[[12,[192]]]],[[983,7,984],[[12,[192]]]],[[983,7,984],[[12,[192]]]],[[983,38,7,984],[[12,[192]]]],[[983,38,7,984],[[12,[192]]]],[[983,38,7,984],[[12,[192]]]],[[983,38,7,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,984],[[12,[192]]]],[[983,38,984],[[12,[192]]]],[[983,38,984],[[12,[192]]]],[[983,38,984],[[12,[192]]]],[[983,38,984],[[12,[192]]]],[[]],[7],[150,[[985,[150]]]],[226,[[986,[226]]]],[987,[[12,[988,192]]]],[987,[[12,[988,192]]]],[987,[[12,[988,192]]]],[987,[[12,[988,192]]]],[987,[[12,[988,192]]]],[[38,[52,[38]],987],[[12,[988,192]]]],[987,[[12,[988,192]]]],[987,[[12,[988,192]]]],[987,[[12,[988,192]]]],[987,[[12,[988,192]]]],[987,[[12,[988,192]]]],[987,[[12,[988,192]]]],[987,[[12,[988,192]]]],[987,[[12,[988,192]]]],[987,[[12,[988,192]]]],[987,[[12,[988,192]]]],[[38,987],[[12,[988,192]]]],[987,[[12,[988,192]]]],[987,[[12,[988,192]]]],[987,[[12,[988,192]]]],[987,[[12,[988,192]]]],[[38,[52,[38]],987],[[12,[988,192]]]],[[7,987],[[12,[988,192]]]],[[38,7,987],[[12,[988,192]]]],[987,[[12,[988,192]]]],[987,[[12,[988,192]]]],[987,[[12,[988,192]]]],[987,[[12,[988,192]]]],[987,[[12,[988,192]]]],[987,[[12,[988,192]]]],[[38,987],[[12,[988,192]]]],[[],29],[[],29],[190,[[12,[191,192]]]],[29,[[12,[191,192]]]],[[[52,[51]]],[[12,[191,192]]]],[318,[[12,[191,192]]]],[53,[[12,[191,192]]]],[44,[[12,[191,192]]]],[989,[[12,[191,192]]]],[762,[[12,[191,192]]]],[760,[[12,[191,192]]]],[734,[[12,[191,192]]]],[761,[[12,[191,192]]]],[[[14,[7]]],[[12,[990,192]]]],[[38,991],[[12,[191,192]]]],[[38,49,38,991],[[12,[191,192]]]],[[],[[12,[191,192]]]],[[[14,[7]]],[[12,[992,192]]]],[991,[[12,[191,192]]]],[38,[[12,[191,192]]]],[[38,7],[[12,[993,192]]]],[[38,49,38,7],[[12,[994,192]]]],[7,[[12,[995,192]]]],[[38,7],[[12,[996,192]]]],[[38,49,38,7],[[12,[997,192]]]],[229,[[12,[191,192]]]],[301,[[12,[191,192]]]],[49,[[12,[191,192]]]],[75,[[12,[191,192]]]],[51,[[12,[191,192]]]],[[],[[12,[191,192]]]],[38,[[12,[191,192]]]],[[38,49,38],[[12,[191,192]]]],[[192,31],[[12,[32]]]],[[192,31],[[12,[32]]]],[[]],[[]],[[]],[[],7],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[983,29],[983,29],[983,29],[983,29],[190,29],[190,29],[190,29],[190,29],[[[0,[991,170]],226],12],[[991,226],12],[[991,226],12],[[991,226],12],[[991,226],12],[[190,29],[[12,[191,192]]]],[[190,29],[[12,[191,192]]]],[[190,29],[[12,[191,192]]]],[[190,29],[[12,[191,192]]]],[[190,[52,[51]]],[[12,[191,192]]]],[[190,[52,[51]]],[[12,[191,192]]]],[[190,[52,[51]]],[[12,[191,192]]]],[[190,[52,[51]]],[[12,[191,192]]]],[[190,318],[[12,[191,192]]]],[[190,318],[[12,[191,192]]]],[[190,318],[[12,[191,192]]]],[[190,318],[[12,[191,192]]]],[[190,53],[[12,[191,192]]]],[[190,53],[[12,[191,192]]]],[[190,53],[[12,[191,192]]]],[[190,53],[[12,[191,192]]]],[[190,44],[[12,[191,192]]]],[[190,44],[[12,[191,192]]]],[[190,44],[[12,[191,192]]]],[[190,44],[[12,[191,192]]]],[[190,989],[[12,[191,192]]]],[[190,989],[[12,[191,192]]]],[[190,989],[[12,[191,192]]]],[[190,989],[[12,[191,192]]]],[[190,762],[[12,[191,192]]]],[[190,762],[[12,[191,192]]]],[[190,762],[[12,[191,192]]]],[[190,762],[[12,[191,192]]]],[[190,760],[[12,[191,192]]]],[[190,760],[[12,[191,192]]]],[[190,760],[[12,[191,192]]]],[[190,760],[[12,[191,192]]]],[[190,734],[[12,[191,192]]]],[[190,734],[[12,[191,192]]]],[[190,734],[[12,[191,192]]]],[[190,734],[[12,[191,192]]]],[[190,761],[[12,[191,192]]]],[[190,761],[[12,[191,192]]]],[[190,761],[[12,[191,192]]]],[[190,761],[[12,[191,192]]]],[[190,[14,[7]]],[[12,[990,192]]]],[[190,[14,[7]]],[[12,[990,192]]]],[[190,[14,[7]]],[[12,[990,192]]]],[[190,[14,[7]]],[[12,[990,192]]]],[[190,38,[0,[278,170]]],[[12,[191,192]]]],[[190,38,[0,[278,170]]],[[12,[191,192]]]],[[190,38,[0,[278,170]]],[[12,[191,192]]]],[[190,38,[0,[278,170]]],[[12,[191,192]]]],[[190,38,49,38,[0,[278,170]]],[[12,[191,192]]]],[[190,38,49,38,[0,[278,170]]],[[12,[191,192]]]],[[190,38,49,38,[0,[278,170]]],[[12,[191,192]]]],[[190,38,49,38,[0,[278,170]]],[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[[190,[14,[7]]],[[12,[992,192]]]],[[190,[14,[7]]],[[12,[992,192]]]],[[190,[14,[7]]],[[12,[992,192]]]],[[190,[14,[7]]],[[12,[992,192]]]],[[190,[0,[278,170]]],[[12,[191,192]]]],[[190,[0,[278,170]]],[[12,[191,192]]]],[[190,[0,[278,170]]],[[12,[191,192]]]],[[190,[0,[278,170]]],[[12,[191,192]]]],[[190,38],[[12,[191,192]]]],[[190,38],[[12,[191,192]]]],[[190,38],[[12,[191,192]]]],[[190,38],[[12,[191,192]]]],[[190,38,7],[[12,[993,192]]]],[[190,38,7],[[12,[993,192]]]],[[190,38,7],[[12,[993,192]]]],[[190,38,7],[[12,[993,192]]]],[[190,38,49,38,7],[[12,[994,192]]]],[[190,38,49,38,7],[[12,[994,192]]]],[[190,38,49,38,7],[[12,[994,192]]]],[[190,38,49,38,7],[[12,[994,192]]]],0,[[190,7],[[12,[995,192]]]],[[190,7],[[12,[995,192]]]],[[190,7],[[12,[995,192]]]],[[190,7],[[12,[995,192]]]],[[190,38,7],[[12,[996,192]]]],[[190,38,7],[[12,[996,192]]]],[[190,38,7],[[12,[996,192]]]],[[190,38,7],[[12,[996,192]]]],[[190,38,49,38,7],[[12,[997,192]]]],[[190,38,49,38,7],[[12,[997,192]]]],[[190,38,49,38,7],[[12,[997,192]]]],[[190,38,49,38,7],[[12,[997,192]]]],[[190,229],[[12,[191,192]]]],[[190,229],[[12,[191,192]]]],[[190,229],[[12,[191,192]]]],[[190,229],[[12,[191,192]]]],[[190,301],[[12,[191,192]]]],[[190,301],[[12,[191,192]]]],[[190,301],[[12,[191,192]]]],[[190,301],[[12,[191,192]]]],[[190,49],[[12,[191,192]]]],[[190,49],[[12,[191,192]]]],[[190,49],[[12,[191,192]]]],[[190,49],[[12,[191,192]]]],[[190,75],[[12,[191,192]]]],[[190,75],[[12,[191,192]]]],[[190,75],[[12,[191,192]]]],[[190,75],[[12,[191,192]]]],[[190,51],[[12,[191,192]]]],[[190,51],[[12,[191,192]]]],[[190,51],[[12,[191,192]]]],[[190,51],[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[[190,38],[[12,[191,192]]]],[[190,38],[[12,[191,192]]]],[[190,38],[[12,[191,192]]]],[[190,38],[[12,[191,192]]]],[[190,38,49,38],[[12,[191,192]]]],[[190,38,49,38],[[12,[191,192]]]],[[190,38,49,38],[[12,[191,192]]]],[[190,38,49,38],[[12,[191,192]]]],[[]],[[],141],[[],12],[[],12],[[],13],[[],14],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[94],[[],1],[[],1],[[],94],[[],94],[[],98],[[],367],[[],[[9,[94,8]]]],[[],[[14,[38]]]],[31,[[12,[32]]]],[94,[[12,[94,921]]]],[94,[[12,[94,921]]]],[38,[[14,[94]]]],[7,[[14,[94]]]],[7,[[14,[94]]]],[7,[[14,[94]]]],[[],7],[[],7],[38,[[14,[94]]]],[7,[[14,[94]]]],[94,14],0,[38,[[14,[94]]]],[7,[[14,[94]]]],[38,[[14,[94]]]],[7,[[14,[94]]]],[[],[[14,[99]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[94,8]]]],[[],29],[[],103],[[],368],[[],[[14,[38]]]],[7,[[14,[38]]]],[922,[[12,[94,921]]]],[922,[[12,[94,921]]]],[94,[[12,[94,921]]]],[94,[[12,[94,921]]]],[[],[[14,[75]]]],[[],105],[[[9,[8]]],106],[94,[[14,[29]]]],[922,[[12,[94,921]]]],[922,[[12,[94,921]]]],[[],107],0,[[],[[14,[923]]]],[[[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[],38],[[[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[],[[14,[38]]]],[[],38],[[],38],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[923,991],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[998,998],[999,999],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[983,527],[[12,[[9,[94,8]],192]]]],[[1000,150],12],[[1001,150],12],[[1002,150],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],0,[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[[998,31],[[12,[32]]]],[[999,31],[[12,[32]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[998,7],[[14,[[9,[94,8]]]]]],[999,[[9,[94,8]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[998,29],[[998,7],29],[998,[[1003,[7,999]]]],[998,7],0,0,[527,1000],[527,1001],[[100,527],1002],[[94,527],1004],[[94,527],1005],[215,998],[[],999],0,0,0,0,0,0,0,0,0,0,[[1004,226],12],[[1005,226],12],[[1006,226],12],[[1007,226],12],[[1008,226],12],[[1009,226],12],[[1010,226],12],[[1011,226],12],[[1012,226],12],[[1013,226],12],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,0,[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],1],[[],1],[[[3,[2]]]],[[]],[[]],[1014,1014],[[]],[[],[[9,[22,8]]]],[1014,[[9,[94,8]]]],[7],[7],[[]],[7],[[]],[[]],[[],1014],[[],7],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],[[]],[[],12],[[],12],[[],13],[[],14],[[]],0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[7],[[]],[[]],[[]],[7],[7],[7],[[]],[[]],[[]],[[]],[[]],[[]],[[[1016,[1015]],76]],[[[1017,[1015]],76]],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],[[]],[[],[[1017,[1015]]]],[[],[[1016,[1015]]]],[[],250],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],15],[[],15],[1018,15],[[],15],[1019,15],[[],15],[1018,112],[1019,112],[1020,38],[[],111],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1021,17]],0,[1022,1022],[1018,1018],[1019,1019],[1020,1020],[[]],[[]],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],0,[[],1021],[[],1023],0,[7],[[[388,[615]]]],[7],[7],[7],[7],[1023],[7],[7],[7],[[[388,[615]]]],[7],[7],[7],[7],[7],[1023],[7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[7],[7],[1022,[[9,[28,8]]]],[1018,[[9,[112,8]]]],[1019,[[9,[112,8]]]],[15,29],[15,29],[15,29],[15,29],[30],[30],[[1018,30]],[30],[[1019,30]],[30],[[1022,1022],29],[[1018,1018],29],[[1019,1019],29],[[1020,1020],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],0,0,0,[[1021,17]],[[1022,31],[[12,[32]]]],[[1018,31],[[12,[32]]]],[[1019,31],[[12,[32]]]],[[1020,31],[[12,[32]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[34],[34],[[445,214,346]],0,0,[[1022,30]],[[1018,30]],[[1019,30]],[[1020,30]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[34,445]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[],[[35,[[9,[28,8]]]]]],[[[388,[615]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],0,0,0,[[1021,17],29],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[],1],[[],1],[[[3,[2]]]],[[[165,[889]],[89,[[886,[1024]]]],89,612]],[[]],[[]],[[23,24,25]],[7],[7],[[]],[7],[[]],[25],[[]],[[]],[25],[[],7],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],[[],12],[[],12],[[],13],[[],14],[[]],[[[86,[403]],[86,[885]],[165,[889]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1025,94]],[[860,94]],[[1026,94]],[[1027,94]],[[1028,94]],[[1029,94]],[[1030,94]],[[1031,94]],[[1032,94]],[[1033,94]],0,[[],1],[[],1],[[],1],[1025,1],[[],1],[[],1],[[],1],[860,1],[[],1],[[],1],[[],1],[1026,1],[[],1],[1027,1],[[],1],[[],1],[1028,1],[[],1],[[],1],[[],1],[[],1],[1029,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[1030,1],[1031,1],[[],1],[1032,1],[[],1],[[],1],[1033,1],[[],1],[[],1],[[],1],[[],1],[[],1],[1025,1],[[],1],[[],1],[[],1],[860,1],[[],1],[1026,1],[[],1],[[],1],[1027,1],[1028,1],[[],1],[[],1],[[],1],[[],1],[[],1],[1029,1],[[],1],[[],1],[[],1],[[],1],[1030,1],[[],1],[[],1],[1031,1],[[],1],[1032,1],[[],1],[1033,1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],15],[[],15],[[],15],[1025,94],[860,94],[1026,94],[1027,94],[1028,94],[1029,94],[1030,94],[1031,94],[1032,94],[1033,94],[1025,94],[860,94],[1026,94],[1027,94],[1028,94],[1029,94],[1030,94],[1031,94],[1032,94],[1033,94],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[1036,[[0,[1034,475,1035]]]],17]],[[1037,17]],[[[484,[1038]],[484,[1039]],[484,[[166,[2]]]],[89,[343,[387,[1040]]]],89,[86,[[87,[2]]]],[86,[1041]],89]],[1025,1025],[1042,1042],[1043,1043],[860,860],[1044,1044],[1027,1027],[1028,1028],[1045,1045],[1029,1029],[1046,1046],[1041,1041],[1047,1047],[1030,1030],[1031,1031],[1032,1032],[1033,1033],[1025,98],[860,98],[1026,367],[1027,97],[1028,97],[1029,367],[1030,97],[1031,98],[1032,97],[1033,98],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[1025,[[9,[94,8]]]],[860,[[9,[94,8]]]],[1026,[[9,[94,8]]]],[1027,[[9,[94,8]]]],[1028,[[9,[94,8]]]],[1029,[[9,[94,8]]]],[1030,[[9,[94,8]]]],[1031,[[9,[94,8]]]],[1032,[[9,[94,8]]]],[1033,[[9,[94,8]]]],[[1028,1028],74],[[1029,1029],74],[[],74],[[],74],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[23,24,25]],0,[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[1036,[1034]]]],[[],1025],[[],1042],[[],1043],[[],860],[[],1044],[[],1026],[[],1027],[[],1048],[[],1045],[[],1029],[[],1041],[[],1030],[[],1031],[[],1033],[[],1037],0,[7],[7],[7],[7],[7],[7],[7],[7],[7],[1026],[7],[7],[7],[7],[7],[7],[7],[7],[7],[1041],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[1026],[7],[7],[7],[7],[7],[7],[7],[7],[1041],[7],[7],[7],[7],[7],[7],[7],[150,[[12,[1032]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[1047,[[9,[28,8]]]],[15,29],[15,29],[15,29],[30],[30],[30],0,[[1028,1028],29],[[1029,1029],29],[[1047,1047],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[190,[[12,[191,192]]]],[[386,[388,[89]],[388,[[89,[343,[387,[1040]]]]]]]],[[],1041],[[],53],[1030,53],[1031,53],[1033,53],0,0,[[1025,38],[[14,[94]]]],[[860,38],[[14,[94]]]],[[1026,7],[[14,[94]]]],[[1027,38],[[14,[94]]]],[[1028,38],[[14,[94]]]],[[1029,7],[[14,[94]]]],[[1030,38],[[14,[94]]]],[[1031,38],[[14,[94]]]],[[1032,38],[[14,[94]]]],[[1033,38],[[14,[94]]]],[[1025,7],[[14,[94]]]],[[860,7],[[14,[94]]]],[[1027,7],[[14,[94]]]],[[1028,7],[[14,[94]]]],[[1030,7],[[14,[94]]]],[[1031,7],[[14,[94]]]],[[1032,7],[[14,[94]]]],[[1033,7],[[14,[94]]]],[[1025,7],[[14,[94]]]],[[860,7],[[14,[94]]]],[[1027,7],[[14,[94]]]],[[1028,7],[[14,[94]]]],[[1030,7],[[14,[94]]]],[[1031,7],[[14,[94]]]],[[1032,7],[[14,[94]]]],[[1033,7],[[14,[94]]]],[1025,7],[860,7],[1026,7],[1027,7],[1028,7],[1029,7],[1030,7],[1031,7],[1032,7],[1033,7],[[1025,38],[[14,[94]]]],[[860,38],[[14,[94]]]],[[1026,7],[[14,[94]]]],[[1027,38],[[14,[94]]]],[[1028,38],[[14,[94]]]],[[1029,7],[[14,[94]]]],[[1030,38],[[14,[94]]]],[[1031,38],[[14,[94]]]],[[1032,38],[[14,[94]]]],[[1033,38],[[14,[94]]]],[[1025,31],[[12,[32]]]],[[1042,31],[[12,[32]]]],[[1043,31],[[12,[32]]]],[[860,31],[[12,[32]]]],[[1044,31],[[12,[32]]]],[[1027,31],[[12,[32]]]],[[1028,31],[[12,[32]]]],[[1049,31],[[12,[32]]]],[[1029,31],[[12,[32]]]],[[1046,31],[[12,[32]]]],[[1047,31],[[12,[32]]]],[[1030,31],[[12,[32]]]],[[1031,31],[[12,[32]]]],[[1032,31],[[12,[32]]]],[[1033,31],[[12,[32]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1031,1030],[[]],[1033,1030],[[]],[[]],[[]],[[]],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[94,[[14,[1025]]]],[94,[[14,[860]]]],[94,[[14,[1026]]]],[94,[[14,[1027]]]],[94,[[14,[1028]]]],[94,[[14,[1029]]]],[94,[[14,[1030]]]],[94,[[14,[1031]]]],[94,[[14,[1032]]]],[94,[[14,[1033]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[38,[[14,[94]]]],[38,[[14,[94]]]],[7,[[14,[94]]]],[7,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[7,[[14,[94]]]],[7,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[[],749],[1030,749],[1031,749],[1033,749],[[1028,489,[87,[2]],1041],[[14,[1042]]]],[1025,[[14,[99]]]],[860,[[14,[99]]]],[1026,[[14,[99]]]],[1027,[[14,[99]]]],[1028,[[14,[99]]]],[1029,[[14,[99]]]],[1030,[[14,[99]]]],[1031,[[14,[99]]]],[1032,[[14,[99]]]],[1033,[[14,[99]]]],[[1028,1050,[3,[2]],1041],[[14,[1051]]]],[[1028,1050,[3,[2]],1041],[[14,[878]]]],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[1028,30]],[[1029,30]],[[1047,30]],0,[[1027,38],[[14,[7]]]],[[1028,38],[[14,[7]]]],[[1030,38],[[14,[7]]]],[[1032,38],[[14,[7]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1025,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[860,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1026,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1027,8]]],[[9,[1,8]]]],[[[9,[1028,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1029,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1030,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1031,8]]],[[9,[1,8]]]],[[[9,[1032,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1033,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[],[[35,[[9,[28,8]]]]]],[[[9,[1025,8]]],[[9,[94,8]]]],[[[9,[860,8]]],[[9,[94,8]]]],[[[9,[1026,8]]],[[9,[94,8]]]],[[[9,[1027,8]]],[[9,[94,8]]]],[[[9,[1028,8]]],[[9,[94,8]]]],[[[9,[1029,8]]],[[9,[94,8]]]],[[[9,[1030,8]]],[[9,[94,8]]]],[[[9,[1031,8]]],[[9,[94,8]]]],[[[9,[1032,8]]],[[9,[94,8]]]],[[[9,[1033,8]]],[[9,[94,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[1025,103],[860,103],[1026,368],[1027,102],[1028,102],[1029,368],[1030,102],[1031,103],[1032,102],[1033,103],[[1045,749,636]],[860,[[14,[636]]]],[860,[[14,[741]]]],[860,[[14,[636]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],0,0,[[1025,7],[[14,[38]]]],[[860,7],[[14,[38]]]],[[1027,7],[[14,[38]]]],[[1028,7],[[14,[38]]]],[[1030,7],[[14,[38]]]],[[1031,7],[[14,[38]]]],[[1032,7],[[14,[38]]]],[[1033,7],[[14,[38]]]],[[860,865,328],[[14,[328]]]],0,0,[34,1052],[[[77,[[348,[38]]]]],1026],[[1027,[14,[343]]],[[14,[1028]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[1028,1028],[[14,[74]]]],[[1029,1029],[[14,[74]]]],0,0,0,[860,[[14,[750]]]],0,[860,[[14,[742]]]],[860,[[14,[750]]]],0,[860,749],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[1027,[[14,[75]]]],[1028,[[14,[75]]]],[1030,[[14,[75]]]],[1032,[[14,[75]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[1025,105],[860,105],[1026,105],[1027,105],[1028,105],[1029,105],[1030,105],[1031,105],[1032,105],[1033,105],[[[9,[1025,8]]],106],[[[9,[860,8]]],106],[[[9,[1026,8]]],106],[[[9,[1027,8]]],106],[[[9,[1028,8]]],106],[[[9,[1029,8]]],106],[[[9,[1030,8]]],106],[[[9,[1031,8]]],106],[[[9,[1032,8]]],106],[[[9,[1033,8]]],106],[[1025,94],[[14,[29]]]],[[860,94],[[14,[29]]]],[[1026,94],[[14,[29]]]],[[1027,94],[[14,[29]]]],[[1028,94],[[14,[29]]]],[[1029,94],[[14,[29]]]],[[1030,94],[[14,[29]]]],[[1031,94],[[14,[29]]]],[[1032,94],[[14,[29]]]],[[1033,94],[[14,[29]]]],[1025,107],[860,107],[1026,107],[1027,107],[1028,107],[1029,107],[1030,107],[1031,107],[1032,107],[1033,107],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],0,[[1052,375,376,34],[[12,[377]]]],0,0,0,[[1032,226],12],[[1025,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[860,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1026,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1026,[77,[[348,[38]]]]]],[[1027,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1028,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1029,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1030,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1031,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1032,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1033,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],0,[[[165,[1048]],89]],0,0,0,0,0,[[860,750],[[14,[636]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[53,53]],[[1052,34]],[[1030,53,53]],[[1031,53,53]],[[1033,53,53]],[1027,7],[1028,7],[1030,7],[1032,7],[1027,38],[1028,38],[1030,38],[1032,38],[1027,108],[1028,108],[1030,108],[1032,108],0,0,0,[[860,865,636],[[14,[754]]]],[[860,865,636],[[14,[636]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[878,750],1046],[[860,865,328],[[14,[328]]]],[[860,865,328],[[14,[636]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[637,53],[[637,753]],[[637,637]],[[637,637]],[[637,753]],[[637,94]],[[],1],[[],1],[[],1],[637,1],[[],1],[[],1],[[],1],[[],1],[[],1],[637,1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[637,637],[637,[[47,[53]]]],[637,637],[637,[[47,[53]]]],[637,[[47,[53]]]],[637,49],[637,94],[637,94],[637,637],[637,[[47,[53]]]],[637,637],[637,49],[637,[[47,[51]]]],[637,53],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[637,637],[637,97],[[]],[[],[[9,[22,8]]]],[637,[[9,[94,8]]]],[[],[[14,[38]]]],[[[771,[770]]],637],[[],637],[7],[7],[7],[7],[7],[7],[7],[7],[150,[[12,[637]]]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[15,29],[[637,637],29],[[1053,1053],29],[[],29],[[],29],[[],29],[[],29],[190,[[12,[191,192]]]],[[637,38],[[14,[94]]]],[[637,7],[[14,[94]]]],[[637,7],[[14,[94]]]],[637,7],[[637,38],[[14,[94]]]],[[637,31],[[12,[32]]]],[[1053,31],[[12,[32]]]],[[1053,31],[[12,[32]]]],[[]],[[]],[[[47,[53]]],637],[[[47,[53]]],637],[[]],[753,637],[[]],[94,[[14,[637]]]],[[]],[[]],[[]],[[]],[34],[637,53],[637,[[14,[99]]]],[[],100],[637,53],[[[140,[38]]],[[12,[637,1053]]]],[[53,53,53],637],[[53,53,53],[[47,[53]]]],[[53,53,53,53],637],[[]],[[637,38],[[14,[7]]]],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[637,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[9,[637,8]]],[[9,[94,8]]]],[[]],[[]],[[]],[[]],[637,102],[637,53],[[53,53,53],637],[[53,53,53],[[47,[53]]]],[[53,53,53,53],637],[[]],[[],[[14,[38]]]],[[637,[47,[53]]]],[[637,328]],[[637,753]],[[637,53]],[[637,[47,[53]]]],[[637,[47,[53]]]],[[637,328]],[[637,753]],[[637,[47,[53]]]],[[637,53]],[[637,7],[[14,[38]]]],[[[47,[53]]]],[[[47,[53]]]],[[]],[[]],[637,53],[[637,[771,[770]]]],[[],[[14,[38]]]],[637,[[14,[75]]]],[[],[[14,[38]]]],[637,105],[[[9,[637,8]]],106],[[637,94],[[14,[29]]]],[637,107],[[],38],[[],[[14,[38]]]],[[],38],[[53,53,53],637],[[53,53,53],637],[[51,51,51],637],[[53,53,53,53],637],[[53,53,53,53],637],[[51,51,51,51],637],[637,53],[[637,226],12],[[637,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[637,53],637],[[637,53],637],[[637,53],637],[[637,53],637],[[637,53],637],[[637,53],637],[[637,53],637],[[],38],[[]],[[]],[[]],[[]],[[]],[[],141],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],[[14,[38]]]],[[],99],[[],38],[[],14],[[],14],[[],14],[[],14],[637,7],[637,38],[637,108],[[]],[[]],[[]],[[]],[[637,53],637],[[637,53],637],[[637,53],637],[[637,53],637],[[637,53],637],[[637,53],637],[[637,53],637],[[637,[773,[772]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[1056,[[0,[475,1054,1055,261]]]],17]],[[[1058,[1057]],17]],[[23,24,25]],[[],1056],[[],1058],[[],[[1059,[[0,[475,1054]]]]]],[7],[7],[7],[7],[[[1059,[[0,[475,1054]]]]]],[7],[7],[7],[7],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[[],14],[[],1058],[[]],[[]],[[]],[[]],[25],[[]],[[]],[[]],[[]],[34],[34],[34],[25],[[[1060,[475]]],49],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[[1059,[[0,[475,1054]]]]],[[1061,[[0,[475,1054]]]]]],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[[[1063,[1062]],17]],[[],[[1063,[[0,[284,1062]]]]]],[[],[[895,[1062]]]],[7],[[[895,[1062]]]],[7],[7],[7],[[[895,[1062]]]],[[]],[[]],[7],[7],[[],14],[[],[[1063,[1062]]]],[[]],[[]],[[]],[[]],[34],[34],[[],7],[[],7],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],[[],[[1063,[1062]]]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],14],[[],14],[[]],[[]],0,0,0,0,[[],1],[[],1],[[[3,[2]]]],[[]],[[]],[[[1065,[1064]],17]],[[],[[1065,[1064]]]],[7],[7],[[]],[7],[[386,[388,[[14,[86]]]],[14,[[165,[1064]]]],[149,[29]]]],[[]],[[]],[[]],[34],[[],7],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],[[]],[[],12],[[],12],[[],13],[[],14],[[]],0,0,0,0,[[1066,94]],[[],1],[[],1],[1066,1],[[],1],[[],1],[[],1],[1066,1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[1066,94],[1066,94],[[]],[[]],[[]],[[]],[[]],[[]],0,[[1067,17]],[1066,1066],[1066,98],[[]],[[],[[9,[22,8]]]],[1066,[[9,[94,8]]]],[[],[[14,[38]]]],[[[771,[770]]],1066],[[],1066],[[],892],[7],[7],[7],[7],[7],[7],[[]],[[]],[[]],[7],[7],[7],[[],1066],[[1066,38],[[14,[94]]]],[[1066,7],[[14,[94]]]],[[1066,7],[[14,[94]]]],[1066,7],[[1066,38],[[14,[94]]]],[[]],[[]],[[]],[94,[[14,[1066]]]],[[]],[[]],[[]],[34],[34],[38,[[14,[94]]]],[38,[[14,[94]]]],[1066,[[14,[99]]]],[[],100],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1066,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[9,[1066,8]]],[[9,[94,8]]]],[[]],[[]],[[]],[1066,103],[[],[[14,[38]]]],[[1066,7],[[14,[38]]]],[[]],[[]],[[1066,[771,[770]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[1066,105],[[[9,[1066,8]]],106],[[1066,94],[[14,[29]]]],[1066,107],[[],38],[[],[[14,[38]]]],[[],38],[[1066,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[],38],[1066,820],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],[[14,[38]]]],[[],99],[[],38],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[1066,[773,[772]]]],0,[[],1],[[],1],[[[3,[2]]]],[[]],[[]],[[[1069,[[0,[475,1068]]]],17]],[[],[[1069,[[0,[475,1068]]]]]],[7],[7],[[]],[7],[[[1069,[[0,[475,1068]]]],17]],[[]],[[]],[34],[[],7],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],[[]],[[],12],[[],12],[[],13],[[],14],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[874,94]],[[1070,94]],[[],1],[[],1],[[],1],[874,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[1070,1],[[],1],[[],1],[[],1],[[],1],[[],1],[874,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[1070,1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],15],[[],15],[1071,[[14,[[52,[[47,[53]]]]]]]],[874,94],[1070,94],[874,94],[1070,94],[[],38],[[645,49],905],[[874,[77,[1072]]],[[14,[1071]]]],[901,[[52,[1072]]]],[[874,[77,[1072]]],[[14,[1071]]]],[874,215],[874,215],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[1073,17]],[874,874],[645,645],[1072,1072],[901,901],[1071,1071],[1070,1070],[1074,1074],[1075,1075],[874,98],[1070,97],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[874,[[9,[94,8]]]],[1070,[[9,[94,8]]]],[[1072,1072],74],[[],74],[874,[[14,[1076]]]],[874],[[901,[77,[1072]]],29],[[874,[77,[1072]]],29],[874,7],[[],[[14,[38]]]],[[],[[14,[38]]]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[874],[15,29],[15,29],[30],[30],[1071,7],[1071,38],[[1072,1072],29],[[901,901],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[874],[[874,38],[[14,[94]]]],[[1070,38],[[14,[94]]]],[[874,7],[[14,[94]]]],[[1070,7],[[14,[94]]]],[[874,7],[[14,[94]]]],[[1070,7],[[14,[94]]]],[874,7],[1070,7],[[874,38],[[14,[94]]]],[[1070,38],[[14,[94]]]],[[874,31],[[12,[32]]]],[[645,31],[[12,[32]]]],[[1072,31],[[12,[32]]]],[[901,31],[[12,[32]]]],[[1077,31],[[12,[32]]]],[[1077,31],[[12,[32]]]],[[1071,31],[[12,[32]]]],[[1070,31],[[12,[32]]]],[[1074,31],[[12,[32]]]],[[1075,31],[[12,[32]]]],[[655,31],[[12,[32]]]],[[655,31],[[12,[32]]]],0,[[]],[[]],[934,874],[[]],[930,874],[932,874],[927,874],[935,874],[933,874],[924,874],[928,874],[926,874],[925,874],[[]],[645,1072],[[]],[[]],[[]],[[[79,[[47,[53]],8]]],1071],[[[79,[[47,[760]],8]]],1071],[[[79,[[47,[760]],8]]],1071],[[[79,[718,8]]],1071],[[]],[[[79,[745,8]]],1071],[[[79,[746,8]]],1071],[[[79,[[47,[49]],8]]],1071],[[[79,[760,8]]],1071],[[[79,[[47,[49]],8]]],1071],[[[79,[[47,[760]],8]]],1071],[[[79,[49,8]]],1071],[[[79,[[47,[49]],8]]],1071],[[[79,[752,8]]],1071],[[[79,[750,8]]],1071],[[[79,[[47,[53]],8]]],1071],[[[79,[[47,[53]],8]]],1071],[[[79,[751,8]]],1071],[[[79,[636,8]]],1071],[[[79,[328,8]]],1071],[[[79,[753,8]]],1071],[[[79,[744,8]]],1071],[[[79,[53,8]]],1071],[[]],[[]],[[]],[[]],[94,[[14,[874]]]],[94,[[14,[1070]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[874,[[12,[655]]]],[1071,[[52,[51]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[874,[[14,[[52,[51]]]]]],[[901,[52,[905]]],[[12,[1078,1077]]]],[874,[[903,[901,902]]]],[874,[[14,[99]]]],[1070,[[14,[99]]]],[[],75],[[],100],[[],100],[874,[[79,[51,8]]]],[874,29],[[1072,30]],[[901,30]],0,0,[[]],[[]],[[1070,38],[[14,[7]]]],[874,[[14,[1070]]]],[874,[[14,[1070]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[[9,[8]],101,34]],[[874,645,[77,[1071]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[874,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1070,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[9,[874,8]]],[[9,[94,8]]]],[[[9,[1070,8]]],[[9,[94,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1071,29],[1070,29],[1070,215],[874,103],[1070,102],[901,1078],0,[1071,7],[1070,7],[[],[[14,[38]]]],[[],[[14,[38]]]],0,[874,[[14,[[52,[141]]]]]],0,0,[[874,7],[[14,[38]]]],[[1070,7],[[14,[38]]]],[[49,1072,38],905],[869,874],[[38,7,1079],645],[[1072,1072],[[14,[74]]]],[[],[[12,[1080]]]],[874,869],0,[[],[[14,[38]]]],[[],[[14,[38]]]],[1070,[[14,[75]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[874,105],[1070,105],[[[9,[874,8]]],106],[[[9,[1070,8]]],106],[[874,94],[[14,[29]]]],[[1070,94],[[14,[29]]]],[874,107],[1070,107],[[],38],[[],38],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],38],[[],38],[[17,[35,[[9,[493,8]]]]]],[[874,[77,[1072]]],[[14,[1071]]]],[[874,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1070,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[874,[14,[1070]]]],[[874,[79,[141,8]]]],[[874,[84,[2]]]],0,[[],38],[[],38],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],141],[[],141],[[],12],[[],12],[931,[[12,[874]]]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],99],[[],99],[[],38],[[],38],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[1070,7],[1070,38],[1070,108],0,0,[[874,25]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[874,874],[874,874],[874,[[12,[874,655]]]],[[874,[14,[1070]]],874],[[874,645,[77,[1071]]],874],[[874,[79,[141,8]]],874],[[874,[84,[2]]],874],[[874,[77,[1072]]],874],0,0,0,0,0,0,0,0,0,0,0,0,0,[[92,94]],[[1081,94]],[[],1],[[],1],[[],1],[[],1],[92,1],[1081,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[92,1],[[],1],[1081,1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[92,94],[1081,94],[92,94],[1081,94],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1082,17]],[653,653],[92,92],[1081,1081],[1083,1083],[92,98],[1081,98],[[]],[[]],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[92,[[9,[94,8]]]],[1081,[[9,[94,8]]]],[[23,24,25]],[[23,24,25]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[92,31],[[12,[32]]]],[[1081,31],[[12,[32]]]],[[],92],[[],1081],[[],1083],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[]],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[7],[[1083,1083],29],[[92,38],[[14,[94]]]],[[1081,38],[[14,[94]]]],[[92,7],[[14,[94]]]],[[1081,7],[[14,[94]]]],[[92,7],[[14,[94]]]],[[1081,7],[[14,[94]]]],[92,7],[1081,7],[[92,38],[[14,[94]]]],[[1081,38],[[14,[94]]]],[92,[[14,[[84,[874]]]]]],[[653,31],[[12,[32]]]],[[653,31],[[12,[32]]]],[[1084,31],[[12,[32]]]],[[92,31],[[12,[32]]]],[[1081,31],[[12,[32]]]],[[]],[[]],[[]],[[]],[[]],[[[47,[328]]],1083],[[]],[25],[25],[94,[[14,[92]]]],[94,[[14,[1081]]]],[[]],[[]],[[]],[[]],[[]],[[]],[34],[34],[34],[25],[25],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[92,[[14,[99]]]],[1081,[[14,[99]]]],[[],100],[[],100],[[]],[[89,[89,[1081,[387,[[84,[874]]]]]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[92,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1081,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[9,[92,8]]],[[9,[94,8]]]],[[[9,[1081,8]]],[[9,[94,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],29],[92,103],[1081,103],[[],[[14,[38]]]],[[],[[14,[38]]]],[[92,7],[[14,[38]]]],[[1081,7],[[14,[38]]]],[[491,7],[[12,[1084,653]]]],[[[79,[53,8]],[14,[[84,[874]]]]],[[12,[92,653]]]],[[[79,[53,8]]],[[12,[1081,653]]]],[[328,328,328],1083],0,[[]],[[]],[[]],0,[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[92,105],[1081,105],[[[9,[92,8]]],106],[[[9,[1081,8]]],106],[[92,94],[[14,[29]]]],[[1081,94],[[14,[29]]]],[92,107],[1081,107],[[],38],[[],38],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],38],[[],38],[[92,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1081,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[],38],[[],38],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],141],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],99],[[],99],[[],38],[[],38],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[92,[[52,[53]]]],[1081,[[52,[53]]]],[92,[[52,[53]]]],[1081,[[52,[53]]]],0,0,0,0,0,[[1085,94]],[[],1],[1085,1],[[],1],[[],1],[1085,1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[1085,94],[1085,94],[[],38],[[]],[[]],[[]],[[]],[1085,1085],[1085,98],[[]],[[],[[9,[22,8]]]],[1085,[[9,[94,8]]]],[[23,24,25]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],1085],[7],[864],[7],[7],[7],[[]],[[]],[7],[7],[[1085,38],[[14,[94]]]],[[1085,7],[[14,[94]]]],[[1085,7],[[14,[94]]]],[1085,7],[[1085,38],[[14,[94]]]],[[1085,31],[[12,[32]]]],[[864,31],[[12,[32]]]],[[]],[[]],[[[79,[749,8]]],864],[25],[94,[[14,[1085]]]],[[]],[[]],[34],[25],[38,[[14,[94]]]],[38,[[14,[94]]]],[1085,[[14,[99]]]],[[],100],[[],7],[[],7],[[[9,[8]],101,34]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1085,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[9,[1085,8]]],[[9,[94,8]]]],[[]],[[]],0,[1085,103],0,[[1085,480]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[1085,7],[[14,[38]]]],[[]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[1085,105],[[[9,[1085,8]]],106],[[1085,94],[[14,[29]]]],[1085,107],[[],38],[[],38],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],38],[[],38],[[1085,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[],38],[[],38],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],99],[[],38],[[],38],[[],14],[[],14],[[864,25]],[[]],[[]],0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],15],[1086,38],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1087,17]],[[1087,17]],[1086,1086],[[]],[[],[[9,[22,8]]]],[[],1087],[7],[7],[7],[7],[7],[7],[7],[7],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[15,29],[30],[[1086,1086],29],[[],29],[[],29],[[],29],[[],29],[[1086,31],[[12,[32]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[34],[[1086,30]],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[[3,[2]]]],0,[[]],[[]],0,0,[[],1088],0,[7],[7],[[]],[7],0,0,0,[[1088,31],[[12,[32]]]],0,[91,1088],[[]],[[]],[91,1088],[34],0,0,0,0,0,0,[[],7],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],0,0,0,0,[[]],0,0,0,0,0,0,0,0,0,0,0,[[]],0,[[],12],[[],12],[[],13],[[],14],0,0,0,0,0,0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1076,94]],[[1089,94]],[[1090,94]],[[1091,94]],[[],1],[1076,1],[[],1],[[],1],[[],1],[1089,1],[[],1],[1090,1],[1091,1],[[],1],[1076,1],[[],1],[[],1],[[],1],[[],1],[1089,1],[1090,1],[[],1],[1091,1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[1076,94],[1089,94],[1090,94],[1091,94],[1076,94],[1089,94],[1090,94],[1091,94],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[1076,1076],[1092,1092],[1093,1093],[1089,1089],[1076,98],[1089,98],[1090,98],[1091,98],[[]],[[]],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[1076,[[9,[94,8]]]],[1089,[[9,[94,8]]]],[1090,[[9,[94,8]]]],[1091,[[9,[94,8]]]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[1093,53],[[],1076],[[],1092],[[],1093],[[],1089],[[],1090],[[],1091],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[]],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[7],[489,[[14,[1076]]]],[[1076,1076],29],[[1076,38],[[14,[94]]]],[[1089,38],[[14,[94]]]],[[1090,38],[[14,[94]]]],[[1091,38],[[14,[94]]]],[[1076,7],[[14,[94]]]],[[1089,7],[[14,[94]]]],[[1090,7],[[14,[94]]]],[[1091,7],[[14,[94]]]],[[1076,7],[[14,[94]]]],[[1089,7],[[14,[94]]]],[[1090,7],[[14,[94]]]],[[1091,7],[[14,[94]]]],[1076,7],[1089,7],[1090,7],[1091,7],[[1076,38],[[14,[94]]]],[[1089,38],[[14,[94]]]],[[1090,38],[[14,[94]]]],[[1091,38],[[14,[94]]]],[[1076,31],[[12,[32]]]],[[1092,31],[[12,[32]]]],[[1093,31],[[12,[32]]]],[[1089,31],[[12,[32]]]],[[1090,31],[[12,[32]]]],[[1091,31],[[12,[32]]]],[1092,1076],[[]],[[]],[[]],[[]],[[]],[[]],[25],[25],[25],[25],[[328,328],1076],[94,[[14,[1076]]]],[94,[[14,[1089]]]],[94,[[14,[1090]]]],[94,[[14,[1091]]]],[[]],[[]],[[]],[[]],[[]],[[]],[749,1089],[[749,328,328,53],1089],[34],[34],[34],[34],[34],[34],0,0,[25],[25],[25],[25],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[1076,[[14,[99]]]],[1089,[[14,[99]]]],[1090,[[14,[99]]]],[1091,[[14,[99]]]],[[],100],[[],100],[[],100],[[],100],0,0,[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[1092,1076,726],29],[[1089,1076,726,29,29],29],[[1089,1092,29],29],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[1076,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1089,8]]],[[9,[1,8]]]],[[[9,[1090,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1091,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[9,[1076,8]]],[[9,[94,8]]]],[[[9,[1089,8]]],[[9,[94,8]]]],[[[9,[1090,8]]],[[9,[94,8]]]],[[[9,[1091,8]]],[[9,[94,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[1090,880],[1076,103],[1089,103],[1090,103],[1091,103],[1090,880],[1076,718],[1076,718],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[1076,7],[[14,[38]]]],[[1089,7],[[14,[38]]]],[[1090,7],[[14,[38]]]],[[1091,7],[[14,[38]]]],[753,1093],[1093,718],[1093,753],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[1076,105],[1089,105],[1090,105],[1091,105],[[[9,[1076,8]]],106],[[[9,[1089,8]]],106],[[[9,[1090,8]]],106],[[[9,[1091,8]]],106],[[1076,94],[[14,[29]]]],[[1089,94],[[14,[29]]]],[[1090,94],[[14,[29]]]],[[1091,94],[[14,[29]]]],[1076,107],[1089,107],[1090,107],[1091,107],[[],38],[[],38],[[],38],[[],38],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],38],[[],38],[[],38],[[],38],[[1076,718,727],53],[[1076,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1089,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1090,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1091,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[],38],[[],38],[[],38],[[],38],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],99],[[],99],[[],99],[[],99],[[],38],[[],38],[[],38],[[],38],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[1096,[1094,1095]],17]],[[],[[1096,[1094,1095]]]],[[],[[1097,[1094]]]],[[],[[3,[1094]]]],[[],[[1098,[1094]]]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[34],[34],[34],[34],[[[3,[1094]],[77,[[161,[1094]]]]],14],[[[3,[1094]],[77,[[161,[1094]]]]],14],[[],7],[[],7],[[],7],[[],7],[[],7],[[[3,[1094]],[77,[[161,[1094]]]]],14],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],[[]],[[]],[[]],[[[3,[1094]]],215],[[[3,[1094]]],215],[[]],[[]],[[]],[[]],[[],[[12,[1080]]]],[[[165,[[1097,[1094]]]],[165,[[3,[1094]]]],[165,[[1098,[1094]]]],612]],[[17,[35,[[9,[493,8]]]]]],[[[3,[1094]],[77,[[161,[1094]]]]],14],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1099,[77,[[348,[38]]]],1100],1101],[[1099,[77,[1102]],[77,[1102]]]],[[1099,[52,[38]]]],[[38,38,38]],[[38,[52,[38]]]],[[38,38]],[38],[[1099,[77,[1102]],[77,[1103]],[77,[1102]],[77,[1103]]]],[[1099,[77,[[348,[38]]]],1099]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1104,1104],[1101,1101],[1102,1102],[1105,1105],[1106,1106],[1103,1103],[1107,1107],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],1099],[[],1108],[[],1109],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[]],[[]],[[]],[[[9,[1100,8]]],[[12,[[9,[1100,8]],[9,[1100,8]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1100,[[14,[1100]]]],[[[11,[1100,8]]],[[12,[[11,[1100,8]],[11,[1100,8]]]]]],[1100,[[14,[1100]]]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[30],0,[[1110,1110],29],[[1111,1111],29],[[1112,1112],29],[[1104,1104],29],[[1113,1113],29],[[1101,1101],29],[[377,377],29],[[1102,1102],29],[[1106,1106],29],[[1103,1103],29],[[1114,1114],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[375,[[79,[1115,8]]]],[[1116,31],[[12,[32]]]],[[1110,31],[[12,[32]]]],[[1110,31],[[12,[32]]]],[[1111,31],[[12,[32]]]],[[1111,31],[[12,[32]]]],[[1112,31],[[12,[32]]]],[[1112,31],[[12,[32]]]],[[1104,31],[[12,[32]]]],[[1099,31],[[12,[32]]]],[[1101,31],[[12,[32]]]],[[377,31],[[12,[32]]]],[[377,31],[[12,[32]]]],[[1117,31],[[12,[32]]]],[[1102,31],[[12,[32]]]],[[1105,31],[[12,[32]]]],[[1106,31],[[12,[32]]]],[[1106,31],[[12,[32]]]],[[1103,31],[[12,[32]]]],[[1107,31],[[12,[32]]]],[[1109,31],[[12,[32]]]],[[1114,31],[[12,[32]]]],[[1114,31],[[12,[32]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1112,377],[1110,377],[1111,377],[[]],[1101,1102],[141,1102],[[]],[1102,1102],[38,1102],[[]],[878,1105],[343,1105],[883,1105],[1118,1105],[[]],[[]],[7,1103],[38,1103],[141,1103],[1103,1103],[[[348,[38]]],1103],[[]],[[]],[489,1109],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[34,[[1120,[[0,[1119,587]]]]]],[34],[34],[34],[[375,[77,[1103]]],[[12,[1105,1112]]]],[[375,[77,[1103]]],[[12,[883,1112]]]],[[375,[77,[1103]]],[[12,[343,1112]]]],[1104,1101],[1099,[[14,[1116]]]],[[375,[77,[1103]]],[[12,[1118,1112]]]],[[1117,7],[[12,[1104,1114]]]],[[375,[77,[1103]]],[[12,[878,1112]]]],[[1099,[77,[1102]]],[[12,[1100,1114]]]],[[1099,[77,[1102]]],[[12,[1101,1114]]]],[[1099,[77,[1102]]],[[12,[1100,1114]]]],[[1099,[77,[1102]]],[[12,[1116,1114]]]],[[1099,[77,[1102]]],[[12,[1116,1114]]]],[1104,1101],[[1117,7],[[12,[1104,1114]]]],[[1109,[77,[1103]]],[[14,[1107]]]],[[1109,[77,[1103]]],[[14,[7]]]],[[1109,[77,[1103]]],[[14,[1107]]]],[[1099,[140,[38]]],[[14,[1099]]]],[[1099,[140,[38]]],[[14,[1099]]]],[375,[[14,[343]]]],[[1099,1104],29],[[1117,1104],29],[[1117,1104],29],[[1101,30]],[1117,1101],0,[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[1121,[[79,[1107,8]]]],[[],[[79,[1107,8]]]],[1117,[[52,[1104]]]],[375,1109],[1099,1116],0,[375,[[52,[1105]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1100,29],[1109,29],[1109,215],[[1099,[77,[1102]]],[[12,[215,1114]]]],[[1099,[77,[1102]]],[[12,[215,1114]]]],[1099,215],[1099,215],[1099,215],[1099,215],[1109,7],0,0,0,[[1099,1116,[52,[1105]],[52,[[14,[1105]]]]],375],[[1101,1100],1116],[[[77,[[348,[38]]]]],1122],[[1119,34],[[1120,[1119]]]],[[],1101],[[[77,[[348,[38]]]],1106],1107],[1116,[[12,[1100,1114]]]],0,[1116,[[12,[1100,1114]]]],[[]],[[]],[[]],[1121,[[79,[1107,8]]]],[[],[[79,[1107,8]]]],[1117,[[52,[1104]]]],[375,1109],0,[[1099,[77,[[348,[38]]]]],[[12,[1114]]]],[[1099,[77,[1102]],[77,[1102]]],[[12,[1114]]]],[[1099,[77,[1102]],[77,[1103]],[77,[1102]],[77,[1103]]],[[12,[1114]]]],[[1099,[77,[[348,[38]]]]]],[[375,376,34],[[12,[377]]]],[[375,376,34],[[12,[377]]]],[[1121,375,376,34],[[12,[377]]]],[[1122,375,376,34],[[12,[377]]]],[[[1120,[[0,[1119,143,218]]]],375,376,34],[[12,[377]]]],[[1108,375,376,34],[[12,[377]]]],[[375,[77,[[348,[38]]]],[79,[1105,8]],[14,[343]]],[[12,[1110]]]],[[1099,[79,[1107,8]]],1101],[[375,[77,[1103]],[77,[1105]]],[[12,[1111]]]],[[375,343]],[1105,1106],0,[377,[[14,[227]]]],[[1099,[140,[38]]],1099],[[1099,[140,[38]]],1099],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],141],[[],141],[[],141],[[],141],[[],141],[[],141],[[1099,[77,[1102]],[77,[1102]]],[[12,[1114]]]],[[1099,[77,[1102]],[77,[1103]],[77,[1102]],[77,[1103]]],[[12,[1114]]]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],0,[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[34],[34],[[[1120,[[0,[1119,143,218]]]],34]],[[1099,34]],[[1099,1104,1113],[[12,[1114]]]],[1116,[[12,[1114]]]],[1116,[[12,[1114]]]],[375,343],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[1123,[898]],[1124,[898]]],384],[[[886,[898]],898]],[[]],[[[1123,[898]],[1124,[898]]],384],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],15],[[],[[380,[49]]]],[[],[[380,[49]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],382],[384,384],[[]],[[],[[9,[22,8]]]],[[23,24,25]],[[],[[893,[898]]]],[[],[[886,[898]]]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[1125,749],53],[[1125,328],53],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[34,899,343]],[[[1127,[898,[0,[[1126,[898]],143,218]]]],34,899,343,898]],[[899,[380,[49]],[380,[49]]]],[[],384],0,[[899,[380,[49]],760,[380,[49]]]],[[899,883,75]],[[899,883,75]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[15,29],[30],[[],[[14,[385]]]],[[],[[14,[385]]]],[[],343],[[384,384],29],[[],29],[[],29],[[],29],[[],29],[[384,31],[[12,[32]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[749,1125],[34],[34],[25],[[[1123,[898]]],[[14,[384]]]],[[[1123,[898]],384],[[14,[1124]]]],[[384,30]],[[[1123,[898]]],384],0,[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[899,38]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[[886,[898]]],215],[[899,883,75,49]],[[899,883,75,883,75,49]],[[899,883,75,49]],[[899,883,75,883,75,49]],[34,[[1127,[898,[1126,[898]]]]]],[[403,1128],899],[[]],[[]],[899],[34],[[[1123,[898]],34]],[[[1127,[898,[0,[[1126,[898]],143,218]]]],34]],[[899,38]],[[[893,[898]]],[[980,[[1123,[898]]]]]],[899,900],[[1024,899],900],[[[886,[898]],899,34,343]],[[[886,[898]],899,34,343,[1129,[[52,[898]]]]]],[[899,7,875,[52,[49]]]],[[899,637]],[[899,1025]],[[899,1130,75,1131]],[[899,1132,49,[52,[51]]]],[[899,1133]],[[899,49,49,49,49]],[[899,49]],[[899,7,1130]],[[899,53,53,53,53,53,53]],[52],[[[886,[898]]]],[[]],[[[89,[[886,[898]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[893,[898]]],[[981,[[1123,[898]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1051,1051],[[[1134,[[0,[1054,1055]]]],1135]],[[[1136,[[0,[1054,1055]]]],1135]],[[[1137,[[0,[1054,1055]]]],1135]],[[[1061,[[0,[1054,1055]]]],1135]],0,0,0,0,[[],1132],[[],1138],[[],1135],[[],401],0,0,0,[[[1140,[1139]],[1140,[1139]]]],0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[879,403,[3,[2]],888],[[12,[1141,910]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[1142,38],0,0,0,[[1051,1143],[[14,[1051]]]],[[]],[[],13],[[],38],[[],38],0,0,0,0,0,0,0,0,[403,[[14,[49]]]],[[1144,1145],1146],[[1146,1147,49]],[[1144,1148],1128],[[],1051],0,0,[403,879],[403,[[79,[437,8]]]],0,[[[1134,[[0,[1054,1055]]]]],[[14,[811]]]],[[[1136,[[0,[1054,1055]]]]],[[14,[811]]]],[[[1137,[[0,[1054,1055]]]]],[[14,[811]]]],[[[1061,[[0,[1054,1055]]]]],[[14,[811]]]],[[[889,[1068]]],[[14,[811]]]],0,0,[[49,1132,403],437],0,0,[[1132,1132],1132],[[1138,1138],1138],[[1135,1135],1135],[[401,401],401],[[1132,1132]],[[1138,1138]],[[1135,1135]],[[401,401]],[[1132,1132],1132],[[1138,1138],1138],[[1135,1135],1135],[[401,401],401],[[1132,1132]],[[1138,1138]],[[1135,1135]],[[401,401]],[1132,49],[1132,49],[1138,49],[1138,49],[1135,49],[1135,49],[401,49],[401,49],[[1132,1132],1132],[[1138,1138],1138],[[1135,1135],1135],[[401,401],401],[[1132,1132]],[[1138,1138]],[[1135,1135]],[[401,401]],0,[1051],[[1051,[14,[1143]]],[[14,[49]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[1140,[1139]]],[[14,[883]]]],[[[1134,[[0,[1054,1055]]]]],[[14,[883]]]],[[[1136,[[0,[1054,1055]]]]],[[14,[883]]]],[[[1137,[[0,[1054,1055]]]]],[[14,[883]]]],[[[1061,[[0,[1054,1055]]]]],[[14,[883]]]],0,0,0,0,0,[[[1140,[1139]]],7],0,[[[1140,[1139]]]],[[[1136,[[0,[1054,1055]]]]]],[[[1061,[[0,[1054,1055]]]]]],[[[889,[1068]]]],[[1144,1149,75,[14,[820]]]],[[1144,1150,1151]],[1152,1152],[1132,1132],[1153,1153],[1154,1154],[1155,1155],[1156,1156],[1157,1157],[1158,1158],[1159,1159],[1160,1160],[1161,1161],[811,811],[869,869],[1162,1162],[1163,1163],[[[1164,[261]]],[[1164,[261]]]],[1165,1165],[[[1166,[261]]],[[1166,[261]]]],[1167,1167],[1168,1168],[1169,1169],[1170,1170],[1171,1171],[1172,1172],[1173,1173],[1174,1174],[1175,1175],[1176,1176],[1148,1148],[1177,1177],[1178,1178],[1179,1179],[1180,1180],[1145,1145],[1181,1181],[1182,1182],[1183,1183],[1051,1051],[1138,1138],[1184,1184],[1185,1185],[1186,1186],[1131,1131],[1187,1187],[1188,1188],[1189,1189],[1190,1190],[1191,1191],[1079,1079],[1135,1135],[401,401],[1192,1192],[1193,1193],[1194,1194],[1143,1143],[1195,1195],[1196,1196],[1197,1197],[1198,1198],[872,872],[1199,1199],[1200,1200],[1201,1201],[1202,1202],[437,437],[[[1203,[261]]],[[1203,[261]]]],[[[1204,[261]]],[[1204,[261]]]],[1151,1151],[1205,1205],[1206,1206],[875,875],[1207,1207],[1208,1208],[879,879],[1209,1209],[1210,1210],[883,883],[1130,1130],[[[1211,[[0,[261,1068]]]]],[[1211,[[0,[261,1068]]]]]],[1212,1212],[1213,1213],[1133,1133],[1214,1214],[1215,1215],[1216,1216],[360,360],[412,412],[1078,1078],[1217,1217],[1218,1218],[1219,1219],[1220,1220],[382,382],[1221,1221],[904,904],[1222,1222],[1223,1223],[1142,1142],[1224,1224],[1225,1225],[1226,1226],[1227,1227],[1228,1228],[1229,1229],[1230,1230],[878,878],[1231,1231],[1232,1232],[1118,1118],[1233,1233],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[1233,1233],74],0,0,[[],74],0,0,[1154,1192],[1132,1132],[1138,1138],[1135,1135],[401,401],[[23,24,25]],[1051,51],[[1051,1143],51],0,0,[[1132,1132],29],[[1138,1138],29],[[1135,1135],29],[[401,401],29],[1132,29],[1138,29],[1135,29],[401,29],0,[[1144,1149,75,1149,75,75]],[[1144,[1203,[1149]],[1204,[1150]],1194]],[[1144,[1204,[1150]],[1203,[1149]],1194]],[[1144,[1204,[1150]],[1204,[1150]],1194]],0,0,[[],[[14,[38]]]],[[1227,1172],878],0,0,0,[[],1154],[[],1158],[[],1159],[[],869],[[],1163],[[],[[1164,[284]]]],[[],[[1166,[284]]]],[[],1167],[[],1170],[[],1171],[[],1172],[[],1173],[[],1174],[[],1148],[[],1145],[[],[[1134,[[0,[1054,284]]]]]],[[],[[1136,[1054]]]],[[],[[1137,[[0,[1054,284]]]]]],[[],[[1061,[1054]]]],[[],1138],[[],1184],[[],1185],[[],1131],[[],1187],[[],1188],[[],1190],[[],1193],[[],1194],[[],1143],[[],1195],[[],1196],[[],1198],[[],872],[[],1199],[[],1151],[[],1078],[[],[[420,[1234]]]],[[],[[1236,[1235]]]],[[],[[894,[1237]]]],[[],1238],[[],[[9,[185,8]]]],0,0,0,0,0,0,0,0,[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[1239,[[52,[1175]]]],[7],[7],[7],[7],[7],[1240,[[52,[1175]]]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[1241],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[1206],[875],[7],[7],[7],[7],[1208],[879],[7],[7],[7],[1210],[883],[7],[7],[1130],[7],[7],[7],[1213],[7],[7],[1133],[7],[7],[1215],[1216],[7],[7],[7],[7],[7],[7],[7],[1219],[1220],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[1226],[1227],[7],[7],[7],[1229],[7],[1230],[878],[7],[7],[7],[1232],[7],[1118],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],0,[150,[[12,[1152]]]],[150,[[12,[1132]]]],[150,[[12,[1051]]]],[150,[[12,[1138]]]],[150,[[12,[1131]]]],[150,[[12,[1135]]]],[150,[[12,[401]]]],[[[52,[51]]],[[12,[[9,[185,8]],186]]]],0,0,[[1132,1132],1132],[[1138,1138],1138],[[1135,1135],1135],[[401,401],401],0,[[1146,49,49,49]],[[1146,1149,75]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[7],[7],[7],[7],[1242],[7],[7],[7],[7],[7],[1243],[7],[7],[1144],[7],[1146],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[1206],[7],[7],[7],[1208],[7],[7],[7],[7],[1210],[7],[7],[7],[7],[7],[1213],[7],[7],[7],[7],[1215],[7],[7],[7],[7],[7],[7],[1219],[7],[7],[1220],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[1226],[7],[7],[7],[1229],[7],[7],[1230],[7],[7],[7],[1232],[7],[7],0,[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],0,0,[[],1132],[[],1138],[[],1135],[[],401],0,[1146],0,0,0,0,0,0,0,0,[[1152,1152],29],[[1132,1132],29],[[1153,1153],29],[[1154,1154],29],[[1156,1156],29],[[1158,1158],29],[[1159,1159],29],[[1160,1160],29],[[1161,1161],29],[[869,869],29],[[1163,1163],29],[[[1164,[[505,[[505,[[505,[505]]]]]]]],[1164,[[505,[[505,[[505,[505]]]]]]]]],29],[[1165,1165],29],[[[1166,[[505,[[505,[[505,[505]]]]]]]],[1166,[[505,[[505,[[505,[505]]]]]]]]],29],[[1167,1167],29],[[1170,1170],29],[[1171,1171],29],[[1172,1172],29],[[1174,1174],29],[[1177,1177],29],[[1183,1183],29],[[1051,1051],29],[[1138,1138],29],[[1184,1184],29],[[1185,1185],29],[[1186,1186],29],[[1131,1131],29],[[1187,1187],29],[[1188,1188],29],[[1189,1189],29],[[1190,1190],29],[[1191,1191],29],[[1079,1079],29],[[1135,1135],29],[[401,401],29],[[1192,1192],29],[[1193,1193],29],[[1194,1194],29],[[1143,1143],29],[[1195,1195],29],[[1196,1196],29],[[1197,1197],29],[[872,872],29],[[1199,1199],29],[[1200,1200],29],[[1201,1201],29],[[1202,1202],29],[[437,437],29],[[1151,1151],29],[[1205,1205],29],[[1207,1207],29],[[879,879],29],[[1209,1209],29],[[1212,1212],29],[[1214,1214],29],[[360,360],29],[[412,412],29],[[1078,1078],29],[[1217,1217],29],[[382,382],29],[[1221,1221],29],[[904,904],29],[[1222,1222],29],[[1224,1224],29],[[1225,1225],29],[[1228,1228],29],[[1231,1231],29],[[1233,1233],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[[1132,489]],[[[1140,[1139]],489]],[[1138,489]],[[1135,489]],[[401,489]],[[1240,1244],1240],[[1240,1245],1240],[[],[[52,[38]]]],[1238,[[52,[38]]]],0,0,[1144,1246],[[1152,31],[[12,[32]]]],[[1132,31],[[12,[32]]]],[[1132,31],[[12,[32]]]],[[1132,31],[[12,[32]]]],[[1132,31],[[12,[32]]]],[[1132,31],[[12,[32]]]],[[1153,31],[[12,[32]]]],[[1154,31],[[12,[32]]]],[[1242,31],[[12,[32]]]],[[1156,31],[[12,[32]]]],[[1243,31],[[12,[32]]]],[[1158,31],[[12,[32]]]],[[1144,31],[[12,[32]]]],[[1146,31],[[12,[32]]]],[[1159,31],[[12,[32]]]],[[1160,31],[[12,[32]]]],[[1161,31],[[12,[32]]]],[[811,31],[[12,[32]]]],[[869,31],[[12,[32]]]],[[1162,31],[[12,[32]]]],[[1163,31],[[12,[32]]]],[[[1164,[490]],31],[[12,[32]]]],[[1165,31],[[12,[32]]]],[[[1166,[490]],31],[[12,[32]]]],[[1167,31],[[12,[32]]]],[[1168,31],[[12,[32]]]],[[1169,31],[[12,[32]]]],[[1170,31],[[12,[32]]]],[[1171,31],[[12,[32]]]],[[1172,31],[[12,[32]]]],[[1173,31],[[12,[32]]]],[[1174,31],[[12,[32]]]],[[1175,31],[[12,[32]]]],[[1176,31],[[12,[32]]]],[[1148,31],[[12,[32]]]],[[1177,31],[[12,[32]]]],[[1178,31],[[12,[32]]]],[[1179,31],[[12,[32]]]],[[1180,31],[[12,[32]]]],[[1145,31],[[12,[32]]]],[[1181,31],[[12,[32]]]],[[1182,31],[[12,[32]]]],[[1183,31],[[12,[32]]]],[[1051,31],[[12,[32]]]],[[1138,31],[[12,[32]]]],[[1138,31],[[12,[32]]]],[[1138,31],[[12,[32]]]],[[1138,31],[[12,[32]]]],[[1138,31],[[12,[32]]]],[[1184,31],[[12,[32]]]],[[1185,31],[[12,[32]]]],[[1186,31],[[12,[32]]]],[[1131,31],[[12,[32]]]],[[1187,31],[[12,[32]]]],[[1188,31],[[12,[32]]]],[[1189,31],[[12,[32]]]],[[1190,31],[[12,[32]]]],[[1191,31],[[12,[32]]]],[[1079,31],[[12,[32]]]],[[1135,31],[[12,[32]]]],[[1135,31],[[12,[32]]]],[[1135,31],[[12,[32]]]],[[1135,31],[[12,[32]]]],[[1135,31],[[12,[32]]]],[[401,31],[[12,[32]]]],[[401,31],[[12,[32]]]],[[401,31],[[12,[32]]]],[[401,31],[[12,[32]]]],[[401,31],[[12,[32]]]],[[1192,31],[[12,[32]]]],[[1193,31],[[12,[32]]]],[[1194,31],[[12,[32]]]],[[1143,31],[[12,[32]]]],[[1195,31],[[12,[32]]]],[[1196,31],[[12,[32]]]],[[1197,31],[[12,[32]]]],[[1198,31],[[12,[32]]]],[[872,31],[[12,[32]]]],[[1199,31],[[12,[32]]]],[[1200,31],[[12,[32]]]],[[1201,31],[[12,[32]]]],[[1202,31],[[12,[32]]]],[[437,31],[[12,[32]]]],[[[1203,[490]],31],[[12,[32]]]],[[[1204,[490]],31],[[12,[32]]]],[[1151,31],[[12,[32]]]],[[1205,31],[[12,[32]]]],[[1206,31],[[12,[32]]]],[[875,31],[[12,[32]]]],[[1247,31],[[12,[32]]]],[[1207,31],[[12,[32]]]],[[1208,31],[[12,[32]]]],[[879,31],[[12,[32]]]],[[1209,31],[[12,[32]]]],[[1210,31],[[12,[32]]]],[[883,31],[[12,[32]]]],[[1130,31],[[12,[32]]]],[[1212,31],[[12,[32]]]],[[1213,31],[[12,[32]]]],[[1133,31],[[12,[32]]]],[[1214,31],[[12,[32]]]],[[1215,31],[[12,[32]]]],[[1216,31],[[12,[32]]]],[[360,31],[[12,[32]]]],[[412,31],[[12,[32]]]],[[1078,31],[[12,[32]]]],[[1217,31],[[12,[32]]]],[[1218,31],[[12,[32]]]],[[1219,31],[[12,[32]]]],[[1220,31],[[12,[32]]]],[[1248,31],[[12,[32]]]],[[1249,31],[[12,[32]]]],[[382,31],[[12,[32]]]],[[1221,31],[[12,[32]]]],[[1250,31],[[12,[32]]]],[[904,31],[[12,[32]]]],[[1251,31],[[12,[32]]]],[[1251,31],[[12,[32]]]],[[908,31],[[12,[32]]]],[[908,31],[[12,[32]]]],[[1222,31],[[12,[32]]]],[[1252,31],[[12,[32]]]],[[1252,31],[[12,[32]]]],[[1223,31],[[12,[32]]]],[[1142,31],[[12,[32]]]],[[1253,31],[[12,[32]]]],[[1253,31],[[12,[32]]]],[[1224,31],[[12,[32]]]],[[1225,31],[[12,[32]]]],[[1226,31],[[12,[32]]]],[[1227,31],[[12,[32]]]],[[1228,31],[[12,[32]]]],[[1229,31],[[12,[32]]]],[[1230,31],[[12,[32]]]],[[878,31],[[12,[32]]]],[[1231,31],[[12,[32]]]],[[1232,31],[[12,[32]]]],[[1118,31],[[12,[32]]]],[[1233,31],[[12,[32]]]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1051,1161],[[]],[[]],[[]],[[]],[[]],[[]],[392,[[1164,[53]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[162,859],[38,859],[[[84,[1223]]],859],[200],[[]],[1054,[[1134,[1054]]]],[[]],[[]],[1254,1241],[[]],[[]],[200],[1054,[[1137,[1054]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1070,1131],[[]],[[]],[[]],[[]],[[]],[[]],[1071,1079],[[]],[[]],[391,401],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1255,875],[[]],[[]],[[]],[[]],[1256,879],[[]],[[]],[1149,883],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1257,1133],[[]],[[]],[1258,1216],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[38,904],[[]],[141,904],[[]],[1259,1251],[[]],[[]],[[]],[[]],[1077,908],[[]],[[]],[[[1261,[1260]]],1252],[1262,1252],[1263,1252],[[]],[[]],[[]],[[]],[1264,1253],[[]],[203,1253],[[]],[[]],[[]],[[]],[1150,1227],[[]],[[]],[[]],[[]],[1265,878],[[]],[[]],[[]],[1266,1118],[[]],[49,[[14,[1132]]]],[49,[[14,[1138]]]],[49,[[14,[1135]]]],[49,[[14,[401]]]],[49,1132],[49,1132],[49,1138],[49,1138],[49,1135],[49,1135],[49,401],[49,401],[49,1132],[49,1138],[49,1135],[49,401],[25],[209],[209],[209],[209],[[[77,[[348,[38]]]],1233,[77,[141]]],1223],[210],[210],[211],[211],[489,1132],[489,1138],[489,1135],[489,401],[38,[[14,[1132]]]],[38,[[14,[1138]]]],[38,[[14,[1135]]]],[38,[[14,[401]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[209],[209],[[[77,[[348,[[52,[51]]]]]],[77,[141]]],1223],[[1190,489],1078],[[[77,[[348,[38]]]],[77,[141]]],1223],[[[77,[[348,[38]]]],[77,[141]],[79,[904,8]]],1223],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],0,0,[[[1134,[[0,[1054,1055]]]]],[[0,[1054,1055]]]],[[[1137,[[0,[1054,1055]]]]],[[0,[1054,1055]]]],[1247,811],[25],[[419,1221],[[14,[1216]]]],[[419,1221],1218],[[419,1221],1250],[[[1140,[1139]]],[[14,[38]]]],[[[1134,[[0,[1054,1055]]]]],[[14,[38]]]],[[[1136,[[0,[1054,1055]]]]],[[14,[38]]]],[[[1137,[[0,[1054,1055]]]]],[[14,[38]]]],[[[1061,[[0,[1054,1055]]]]],[[14,[38]]]],[[[1134,[[0,[1054,1055]]]]],[[0,[1054,1055]]]],[[[1137,[[0,[1054,1055]]]]],[[0,[1054,1055]]]],[[419,382],[[14,[1133]]]],[[419,382],360],[[419,382],1250],[1079,75],[[[1061,[[0,[1054,1055]]]],7,403,885],[[14,[[1267,[[0,[1054,1055]]]]]]]],[[1051,1268],1269],[1051,29],[1051,29],[1202,29],[1051,29],[[1132,30]],[[1153,30]],[[1154,30]],[[1156,30]],[[1158,30]],[[1159,30]],[[1160,30]],[[1161,30]],[[869,30]],[[1163,30]],[[[1164,[567]],30]],[[1165,30]],[[[1166,[567]],30]],[[1167,30]],[[1170,30]],[[1171,30]],[[1177,30]],[[1051,30]],[[1138,30]],[[1184,30]],[[1185,30]],[[1186,30]],[[1131,30]],[[1187,30]],[[1188,30]],[[1189,30]],[[1190,30]],[[1191,30]],[[1079,30]],[[1135,30]],[[401,30]],[[1192,30]],[[1193,30]],[[1194,30]],[[1143,30]],[[1195,30]],[[1196,30]],[[1197,30]],[[872,30]],[[1199,30]],[[1200,30]],[[1201,30]],[[1202,30]],[[437,30]],[[1205,30]],[[1207,30]],[[1209,30]],[[1212,30]],[[1214,30]],[[1078,30]],[[382,30]],[[1221,30]],[[904,30]],[[1222,30]],[[1224,30]],[[1225,30]],[[1228,30]],[[1231,30]],[[1233,30]],0,[875,1205],[879,1207],[883,1209],[1130,1209],[1133,1212],[1216,1214],[382,7],[1221,7],[1227,1225],[878,1228],[1118,1231],[1223,1224],0,[1223,491],0,[[]],[[]],[[]],[[]],0,[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[1132,1132]],[[1138,1138]],[[1135,1135]],[[401,401]],[[[9,[8]],101,34]],[[1144,38]],[[1146,38]],[[1132,1132],1132],[[1138,1138],1138],[[1135,1135],1135],[[401,401],401],[[1132,1132],29],[[1138,1138],29],[[1135,1135],29],[[401,401],29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[],[[47,[811]]]],[[],47],[[],811],[811,811],[1162,811],[[[1137,[[0,[1054,1055]]]]],811],[[[1061,[[0,[1054,1055]]]]],811],[878,811],[1118,811],[1132],[1138],[1135],[401],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1132,29],[1138,29],[1135,29],[401,29],[1051,29],[1051,29],[1186,29],[1186,29],[[1051,1051],29],[1051,29],[1132,29],[[[1140,[1139]]],29],[[[1136,[[0,[1054,1055]]]]],29],[[[1061,[[0,[1054,1055]]]]],29],[1138,29],[1135,29],[401,29],[1184,29],[1185,29],[[1151,1051,49,49],29],[[1184,[14,[1165]]],29],[[1186,[14,[1165]]],29],[1188,29],[1051,29],[[1186,[14,[1165]]],29],[869,29],[1132,[[881,[1132]]]],[1138,[[881,[1138]]]],[1135,[[881,[1135]]]],[401,[[881,[401]]]],[1132,[[882,[1132]]]],[1138,[[882,[1138]]]],[1135,[[882,[1135]]]],[401,[[882,[401]]]],[[],[[14,[38]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[1151,49],[[380,[49]]]],0,0,0,0,0,0,[[[1140,[1139]]],7],[[1238,171,156],[[172,[[9,[212,8]]]]]],[[171,[9,[185,8]],156],[[172,[[9,[212,8]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1194,1192],49],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],820],0,0,0,0,0,[[1194,49,1192],1194],[[1151,49],[[380,[49]]]],0,0,0,0,[1224,[[348,[141]]]],[[],[[14,[38]]]],0,0,0,0,[1184,29],[1188,29],[1189,29],[1135,[[1140,[1139]]]],[[],1205],[1255,1206],[[],1207],[1256,1208],[[],1209],[1149,1210],[403,[[889,[1068]]]],[[],1212],[1257,1213],[[],1214],[1258,1215],[1242,1219],[1243,1220],[403,419],[[],1222],[[],1225],[1150,1226],[[],1228],[1265,1229],[1254,1230],[[],1231],[1266,1232],[75,[[1061,[[0,[1054,1055]]]]]],[1245,1240],[1132,1132],[1138,1138],[1135,1135],[401,401],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1130,75],0,0,0,0,0,0,[[1233,1233],[[14,[74]]]],0,0,[[1194,1051],1194],[419,215],[1051,7],0,[1144],[1146],0,0,[419],[[[1140,[1139]],1139],7],[[[1136,[[0,[1054,1055]]]],[0,[1054,1055]]],49],[[[1061,[[0,[1054,1055]]]],[0,[1054,1055]]],49],[[[889,[1068]],1068],[[1211,[1068]]]],0,0,0,[[1144,38]],[[1146,38]],[[419,1218],1221],[[419,360],382],0,0,[[],[[14,[38]]]],[[],[[14,[38]]]],[[],38],[[],[[14,[38]]]],[[],38],[[1132,1132]],[[1138,1138]],[[1135,1135]],[[401,401]],[1051,1051],[1051,1268],[[[1140,[1139]],7,403]],[[1144,1147,[380,[49]],1149,75]],0,0,0,0,[[1051,[14,[1143]]],[[14,[1199]]]],[1244,1239],[1244,1240],[[1152,226],12],[[1132,226],12],[[1154,226],12],[[1156,226],12],[[1158,226],12],[[1159,226],12],[[1160,226],12],[[1161,226],12],[[869,226],12],[[1163,226],12],[[[1164,[278]],226],12],[[1165,226],12],[[[1166,[278]],226],12],[[1167,226],12],[[1170,226],12],[[1171,226],12],[[1051,226],12],[[1138,226],12],[[1184,226],12],[[1185,226],12],[[1186,226],12],[[1131,226],12],[[1187,226],12],[[1188,226],12],[[1189,226],12],[[1190,226],12],[[1191,226],12],[[1079,226],12],[[1135,226],12],[[401,226],12],[[1192,226],12],[[1193,226],12],[[1194,226],12],[[1143,226],12],[[1195,226],12],[[1196,226],12],[[1197,226],12],[[1198,226],12],[[872,226],12],[[1199,226],12],[[1200,226],12],[[1201,226],12],[[1202,226],12],[[437,226],12],[[[1203,[278]],226],12],[[[1204,[278]],226],12],[[1151,226],12],[[1233,226],12],[[1132,1132,29]],[[[1134,[[0,[1054,1055]]]],[0,[1054,1055]]]],[[[1137,[[0,[1054,1055]]]],[0,[1054,1055]]]],[[1138,1138,29]],[[1135,1135,29]],[[401,401,29]],[[1146,49,1255,[52,[49]]]],[[1223,[77,[141]]]],[[[1140,[1139]],[14,[38]]]],[[[1134,[[0,[1054,1055]]]],[14,[38]]]],[[[1136,[[0,[1054,1055]]]],[14,[38]]]],[[[1137,[[0,[1054,1055]]]],[14,[38]]]],[[[1061,[[0,[1054,1055]]]],[14,[38]]]],[[1146,1258]],[[1146,49,[52,[51]]]],0,0,0,0,0,0,0,0,[[],38],[1270,[[47,[1175]]]],[[],820],[1079,75],0,[[883,[1271,[75]]],1130],0,[1251,[[14,[227]]]],[908,[[14,[227]]]],[1252,[[14,[227]]]],[1253,[[14,[227]]]],0,0,[[],360],[[],1218],[[[903,[901,902]]],[[12,[360,908]]]],[[[420,[1234]],419,1234],382],[[[1236,[1235]],419,1235],1221],[[[894,[1237]],419,1237,[903,[901,902]]],[[12,[382,908]]]],0,0,0,0,0,0,0,0,0,[[1132,1132],1132],[[1138,1138],1138],[[1135,1135],1135],[[401,401],401],[[1132,1132]],[[1138,1138]],[[1135,1135]],[[401,401]],[[1132,1132],1132],[[1138,1138],1138],[[1135,1135],1135],[[401,401],401],0,0,0,[1193,1272],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],141],[[],141],[[],141],[[],141],[[1204,1273,29],1274],[[1132,1132]],[[1138,1138]],[[1135,1135]],[[401,401]],0,[[[1140,[1139]],7]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[1241,[[14,[1254]]]],[1206,[[14,[1255]]]],[1208,[[14,[1256]]]],[1210,[[14,[1149]]]],[1213,[[14,[1257]]]],[1215,[[14,[1258]]]],[1219,[[14,[1242]]]],[1220,[[14,[1243]]]],[1226,[[14,[1150]]]],[1229,[[14,[1265]]]],[1230,[[14,[1254]]]],[1232,[[14,[1266]]]],0,[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],[[14,[38]]]],[[],38],[[],38],0,[[1132,1132],1132],[[1138,1138],1138],[[1135,1135],1135],[[401,401],401],[883],[[879,403,[3,[2]],888],[[12,[909,910]]]],[1250,1249],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],0,[1159,29],[879,1256],[904,141],[[[1140,[1139]]],[[79,[1139,8]]]],[[[1140,[1139]]],[[79,[1139,8]]]],0,0,0,0,0,0,[[1223,25]],[1194,7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[1223,[77,[141]]],1223],[1245,1239],[[[1267,[[0,[1054,1055]]]],[0,[1054,1055]]],49],[[[1140,[1139]],403,885]],[[[1134,[[0,[1054,1055]]]],403,885]],[[[1136,[[0,[1054,1055]]]],403,885]],[[[1137,[[0,[1054,1055]]]],403,885]],[[[1061,[[0,[1054,1055]]]],403,885]],[[[889,[1068]],403,885]],0,0,[[1144,1147,49]],[[1146,1147,49]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[1275],[1276],[1277],[1278],[1275],[1276],[1277],[1278],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[75,820],[1279,1279],[[]],[[],[[9,[22,8]]]],[[1279,1279],74],[[],74],[[[1275,[770]]],[[12,[[0,[1054,1280]],1281]]]],[[[1276,[770]]],[[12,[[0,[1054,1280]],1281]]]],[[[1277,[770]]],[[12,[[0,[1054,1280]],1281]]]],[[[1278,[770]]],[[12,[[0,[1054,1280]],1281]]]],[[[771,[770]]],1279],[[],1279],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[15,29],[[],[[319,[318]]]],[[],[[319,[318]]]],[[],[[319,[318]]]],[[],[[319,[318]]]],[[],[[319,[318]]]],[[],[[319,[318]]]],[[],[[319,[318]]]],[[],[[319,[318]]]],[[1279,1279],29],[[],29],[[],29],[[],29],[[],29],[[1279,31],[[12,[32]]]],[[],1275],[200],[[]],[[],1276],[[]],[200],[200],[[]],[[],1277],[[]],[[],1278],[200],[[]],[209],[209],[209],[209],[209],[209],[209],[209],[210],[210],[210],[210],[211],[211],[211],[211],[[]],[[]],[[]],[[]],[[]],[209],[209],[209],[209],[34],0,0,0,0,[[],7],[[],7],[[],7],[[],7],[[],7],0,[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[1275],[1276],[1277],[1278],[[]],[[]],[[]],[[]],[[]],0,[[],820],[[],1275],[[],1276],[[],1277],[[],1278],[75,1277],[75,1278],[[]],[[1279,1279],[[14,[74]]]],[[[1275,[770]],[0,[1054,1282]]],[[12,[1281]]]],[[[1276,[770]],[0,[1054,1282]]],[[12,[1281]]]],[[[1277,[770]],[0,[1054,1282]]],[[12,[1281]]]],[[[1278,[770]],[0,[1054,1282]]],[[12,[1281]]]],[[1279,[771,[770]]]],0,[[1277,75]],[[1278,75]],[[],820],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],0,[[]],[[]],[[]],[[]],[[]],[[[1275,[772]],[0,[1054,1055]]],[[12,[1281]]]],[[[1276,[772]],[0,[1054,1055]]],[[12,[1281]]]],[[[1277,[772]],[0,[1054,1055]]],[[12,[75,1281]]]],[[[1278,[772]],[0,[1054,1055]]],[[12,[75,1281]]]],[[1279,[773,[772]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[773,[772]],7]],[[[771,[770]],7]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[1283,1283],[1281,1281],[1284,1284],[1285,1285],[[]],[[]],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[[771,[770]]]],0,0,[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[7],[7],[7],[15,29],[15,29],[[1283,1283],29],[[1285,1285],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[1283,31],[[12,[32]]]],[[1281,31],[[12,[32]]]],[[1281,31],[[12,[32]]]],[[1284,31],[[12,[32]]]],[[1284,31],[[12,[32]]]],[[1285,31],[[12,[32]]]],[[]],[[]],[[]],[[]],[[]],[[]],[1286,1284],[[]],[820,1285],[[]],[1285,1283],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1283,75],[1285,75],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1283,75],29],[[],7],[[[47,[1283]]],1283],[[1285,75],1285],[[1054,772,7],[[12,[[773,[772]],1281]]]],[[770,7],[[12,[[771,[770]],1281]]]],[75,1283],[75,1285],[[1283,75],75],[7,[[47,[51]]]],[[[771,[770]]],[[47,[51]]]],[[[771,[770]]]],[[[771,[770]]],7],[[1283,75],75],[[1283,1285],1285],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],141],[[],141],[7,[[12,[1284]]]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[7,[47,[51]]]],[[[773,[772]],[47,[51]]]],[[[773,[772]]]],0,0,0,0,0,0,[[],[[47,[47]]]],[[],[[47,[47]]]],[[[47,[47]]]],0,0,0,0,[[],7],[7],0,0,0,0,[[],47],[[],47],[47],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[376,1246]],[7,7],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[376,1148],899],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1287,1287],[403,403],[885,885],[1288,1288],[1289,1289],[1290,1290],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[376,1144],[[403,1291,[1292,[[79,[1051,8]]]]]],[[403,[77,[[14,[38]]]],879,[52,[1175]]],875],[[403,1182],879],[[403,[1293,[[14,[38]]]]],883],[[403,1153],883],[[403,[1294,[[14,[38]]]]],1144],[[403,1181],1216],[[403,1173],1243],[[403,1295],1296],[[403,1180],1133],[[403,1174],1118],[[403,1157],1242],[[403,[1297,[[14,[38]],[52,[1051]]]]],1227],[[403,885,[1297,[[14,[38]],[52,[1051]]]],[52,[51]]],1227],[7],[7],[7],[1287],[7],[7],[885],[7],[1288],[1289],[7],[7],[1290],[7],[7],[7],[7],[885],[7],[1288],[7],[1289],[7],[7],[1290],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7],[7],[1287],[7],[7],[7],[7],[7],[7],[403,1268],[376,[[79,[1246,8]]]],[[1298,31],[[12,[32]]]],[[1298,31],[[12,[32]]]],[[1287,31],[[12,[32]]]],[[1288,31],[[12,[32]]]],[[]],[377,1298],[[]],[[]],[1299,403],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[403,49],872],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[1300,1301,[1302,[1291]]],212],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[403,1303],[[403,1304,1183,[0,[76,143]]]],[403,376],[1299,1287],[[403,[1306,[1305]]],29],[376,403],[34],[1298,[[14,[227]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],141],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[1287,[[14,[1299]]]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[403,1299],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1307],[[],1268],[[],1268],[[],1268],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],15],[[],15],[[],15],[[],15],0,[[1307,1307],1307],[[1268,1268],1268],[[1307,1307]],[[1268,1268]],[[1307,1307],1307],[[1268,1268],1268],[[1307,1307]],[[1268,1268]],[1307,49],[1307,49],[1268,75],[1268,75],[[1307,1307],1307],[[1268,1268],1268],[[1307,1307]],[[1268,1268]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1303,1303],29],[[1303,1303,29,25]],[1308,1308],[1307,1307],[1268,1268],[1303,1303],[1309,1309],[1310,1310],[1301,1301],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[1307,1307],[1268,1268],0,[[1307,1307],29],[[1268,1268],29],[1307,29],[1268,29],[[],1308],[[],1268],[[],1303],[[],1311],[[],1309],[[],1301],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[150,[[12,[1307]]]],[150,[[12,[1268]]]],[150,[[12,[1303]]]],0,[[1307,1307],1307],[[1268,1268],1268],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],1303],[[],1303],[7],[7],[7],[7],[7],[7],[7],[7],0,[15,29],[15,29],[15,29],[15,29],[30],[30],[30],[30],[[],1307],[[],1268],[[1308,1308],29],[[1307,1307],29],[[1268,1268],29],[[1303,1303],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[[1307,489]],[[1268,489]],0,[[1308,31],[[12,[32]]]],[[1307,31],[[12,[32]]]],[[1307,31],[[12,[32]]]],[[1307,31],[[12,[32]]]],[[1307,31],[[12,[32]]]],[[1307,31],[[12,[32]]]],[[1268,31],[[12,[32]]]],[[1268,31],[[12,[32]]]],[[1268,31],[[12,[32]]]],[[1268,31],[[12,[32]]]],[[1268,31],[[12,[32]]]],[[1303,31],[[12,[32]]]],[[1309,31],[[12,[32]]]],[[]],[[]],[1312,1307],[[]],[[]],[[]],[1301,1311],[[]],[[]],[[]],[49,[[14,[1307]]]],[75,[[14,[1268]]]],[49,1307],[49,1307],[75,1268],[75,1268],[49,1307],[75,1268],[489,1307],[489,1268],[38,[[14,[1307]]]],[38,[[14,[1268]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[34],[34],[34],[34],[34],[34],[[1308,30]],[[1307,30]],[[1268,30]],[[1303,30]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[1307,1307]],[[1268,1268]],[[1307,1307],1307],[[1268,1268],1268],[[1307,1307],29],[[1268,1268],29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[1307],[1268],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1307,29],[1268,29],[1307,29],[1268,29],[1307,[[881,[1307]]]],[1268,[[881,[1268]]]],[1307,[[882,[1307]]]],[1268,[[882,[1268]]]],0,[[403,885,1290,1288,1289],1311],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1307,1307],[1268,1268],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[1307,1307]],[[1268,1268]],[[1308,226],12],[[1307,226],12],[[1268,226],12],[[1303,226],12],[[1307,1307,29]],[[1268,1268,29]],[[],[[14,[1310]]]],[[1307,1307],1307],[[1268,1268],1268],[[1307,1307]],[[1268,1268]],[[1307,1307],1307],[[1268,1268],1268],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1307,1307]],[[1268,1268]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[1307,1307],1307],[[1268,1268],1268],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[1303,1303],1303],[[1303,1303],1303],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1313],[[445,34]],[[2,94]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[1314,[[14,[1315]]]],[2,94],[2,94],[2,53],[[],13],[[],13],[[],13],[[],38],[[],38],[[],38],[[],38],[[]],[[1313,1313],1313],[[1313,1313]],[[1313,1313],1313],[[1313,1313]],[1313,49],[1313,49],[[1313,1313],1313],[[1313,1313]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1316,17]],[1317,1317],[1318,1318],[1314,1314],[2,2],[1319,1319],[1320,1320],[1321,1321],[1322,1322],[1323,1323],[1313,1313],[1324,1324],[1325,1325],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[2,[[9,[94,8]]]],[1313,1313],[[1313,1313],29],[[2,1051],[[14,[2]]]],[[],[[14,[38]]]],0,0,0,0,0,0,0,[[[52,[51]],1313,29],[[12,[2,654]]]],[[1326,29],[[12,[1051,654]]]],[[],1316],[[],1317],[[],1327],[[],1318],[[],2],[[],1319],[[],1313],[[],1328],[[],1329],[[],402],[[],1316],[[],[[9,[185,8]]]],[[],[[9,[185,8]]]],[[],[[9,[185,8]]]],[[],1316],0,0,[7],[7],[7],[7],[7],[7],[1330],[7],[7],[1331],[7],[1327],[7],[7],[7],[7],[7],[7],[7],[1320],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[1327],[7],[7],[7],[7],[7],[7],[7],[1320],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[150,[[12,[1314]]]],[150,[[12,[1328]]]],[150,[[12,[1329]]]],[[[52,[51]]],[[12,[[9,[185,8]],186]]]],[[[52,[51]]],[[12,[[9,[185,8]],186]]]],[[[52,[51]]],[[12,[[9,[185,8]],186]]]],[[1313,1313],1313],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[15,29],[[],1313],[[1313,1313],29],[[],29],[[],29],[[],29],[[],29],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[[1313,489]],[[],[[52,[38]]]],[1317,[[52,[38]]]],[[],[[52,[38]]]],[1318,[[52,[38]]]],[1324,[[52,[38]]]],[[],[[52,[38]]]],[2],[[1316,17]],[[1332,31],[[12,[32]]]],[[1332,31],[[12,[32]]]],[[1333,31],[[12,[32]]]],[[1333,31],[[12,[32]]]],[[1334,31],[[12,[32]]]],[[1334,31],[[12,[32]]]],[[1314,31],[[12,[32]]]],[[2,31],[[12,[32]]]],[[1319,31],[[12,[32]]]],[[1320,31],[[12,[32]]]],[[1321,31],[[12,[32]]]],[[1322,31],[[12,[32]]]],[[654,31],[[12,[32]]]],[[654,31],[[12,[32]]]],[[1335,31],[[12,[32]]]],[[1323,31],[[12,[32]]]],[[1313,31],[[12,[32]]]],[[1313,31],[[12,[32]]]],[[1313,31],[[12,[32]]]],[[1313,31],[[12,[32]]]],[[1313,31],[[12,[32]]]],[[1336,31],[[12,[32]]]],[[1336,31],[[12,[32]]]],[[1337,31],[[12,[32]]]],[[1337,31],[[12,[32]]]],0,[[]],[[]],[203,1332],[[]],[[]],[[]],[203,1333],[1338,1333],[[]],[[]],[[]],[[]],[[]],[[]],[1338,1334],[[]],[203,1334],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1338,654],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[203,1336],[1337,1336],[[]],[[]],[[]],[49,[[14,[1313]]]],[49,1313],[49,1313],[49,1313],[[[52,[51]],1335,1313,29],[[12,[2,654]]]],[[1339,29],2],[38,[[14,[1314]]]],[1268,1313],[489,1313],[38,[[14,[1314]]]],[38,[[14,[1313]]]],[94,[[14,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[34],[34],[34,888],[34,1330],[34,1331],[34],[34],[34],[34],[34],[34,1324],[34],[34],[34],[[402,403,[1297,[[14,[38]],[52,[1051]]]]],1325],[[445,214,346]],[2,[[14,[99]]]],[[1313,1321,29]],[[],100],[2,49],[[1340,49,1051],1323],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[34,445]],[[[9,[8]],101,34]],[[1313,1313]],[[1313,1313],1313],[[1313,1313],29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[2,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[1313],[[[9,[2,8]]],[[9,[94,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1313,29],[2,29],[1313,29],0,[1313,[[881,[1313]]]],[1313,[[882,[1313]]]],[[[52,[51]],1313,29],[[12,[2,654]]]],[[1341,[52,[1342]],29],[[12,[1051,654]]]],[[1343,29],[[12,[1051,654]]]],[[[1344,[[140,[[52,[51]]]]]],29],[[12,[1051,654]]]],[[],1319],[[],1174],[[171,[9,[185,8]],156],[[172,[[9,[212,8]]]]]],[[1317,171,156],[[172,[[9,[212,8]]]]]],[[1318,171,156],[[172,[[9,[212,8]]]]]],[[171,[9,[185,8]],156],[[172,[[9,[212,8]]]]]],[[171,[9,[185,8]],156],[[172,[[9,[212,8]]]]]],[[1324,171,1329,156],[[172,[[9,[212,8]]]]]],0,[[],[[14,[38]]]],[[],1319],[[],1174],[[1194,1192,[79,[51,8]],1051],2],[[349,445]],[[1194,1192,[52,[51]],1051],2],[1313,1313],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[],[[12,[1080]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[2,105],[[[9,[2,8]]],106],[2,107],[[],38],[[],[[14,[38]]]],[[],38],[[17,[35,[[9,[493,8]]]]]],[[2,1194]],[[2,49]],[[1313,1313]],[[2,1194]],0,0,[[173,168,277],[[172,[[9,[212,8]]]]]],[[1345,173,296],[[172,[[9,[212,8]]]]]],[[1314,226],12],[[1328,226],12],[[1329,226],12],[[2,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1313,1313,29]],[[],38],[2,750],0,[2,636],[1332,[[14,[227]]]],[1333,[[14,[227]]]],[1334,[[14,[227]]]],[654,[[14,[227]]]],[1336,[[14,[227]]]],[[1313,1313],1313],[[1313,1313]],[[1313,1051],29],[[1313,1313],1313],0,0,0,0,0,0,[1335,[[12,[1314,654]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],141],[[],141],[[],141],[[],141],[[],141],[[],141],[[1313,1313]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[2,[[12,[1339,1346]]]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],[[14,[38]]]],[[],99],[[],38],[[],38],[[],38],[[],38],[[],38],[[1313,1313],1313],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[402],[[[165,[402]]]],[[2,25]],[[],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2,49],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1347],0,[[1347,94]],[[1348,94]],[[1349,94]],[[1350,94]],[[1351,94]],[[873,94]],[[397,94]],[[1352,94]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[1347,1],[[],1],[[],1],[[],1],[1348,1],[1349,1],[[],1],[[],1],[[],1],[[],1],[1350,1],[[],1],[1351,1],[[],1],[873,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[397,1],[[],1],[[],1],[1352,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[1347,1],[1348,1],[[],1],[1349,1],[[],1],[[],1],[1350,1],[[],1],[1351,1],[[],1],[[],1],[873,1],[[],1],[[],1],[[],1],[[],1],[397,1],[[],1],[[],1],[1352,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],15],[1347,94],[1348,94],[1349,94],[1350,94],[1351,94],[873,94],[397,94],[1352,94],[1347,94],[1348,94],[1349,94],[1350,94],[1351,94],[873,94],[397,94],[1352,94],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1353,17]],[[1354,17]],[[1355,17]],[[386,[86,[[87,[874]]]],89]],[[[149,[[862,[[861,[[79,[343,8]]]]]]]],[89,[[387,[860]]]],89,[89,[[822,[1076]]]]]],[1347,1347],[1348,1348],[1349,1349],[1350,1350],[873,873],[1356,1356],[397,397],[1352,1352],[1357,1357],[1347,367],[1348,97],[1349,367],[1350,367],[1351,98],[873,98],[397,97],[1352,98],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[1347,[[9,[94,8]]]],[1348,[[9,[94,8]]]],[1349,[[9,[94,8]]]],[1350,[[9,[94,8]]]],[1351,[[9,[94,8]]]],[873,[[9,[94,8]]]],[397,[[9,[94,8]]]],[1352,[[9,[94,8]]]],[[1347,1347],74],0,[[],74],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[[771,[770]]],1352],[[[771,[770]]],1357],[[],1347],[[],1348],[[],1349],[[],1350],[[],1358],[[],1351],[[],873],[[],1359],[[],1050],[[],1360],[[],397],[[],1352],[[],891],[7],[7],[7],[7],[7],[7],[7],[1349],[7],[1350],[7],[7],[7],[7],[7],[7],[1050],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[1050],[7],[7],[7],[7],[7],[7],[7],[7],[7],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[1356,[[9,[28,8]]]],[15,29],[15,29],[15,29],[15,29],[15,29],[30],0,0,[[1347,1347],29],[[1348,1348],29],[[1348,1348],29],[[1348,1348],29],[[1349,1349],29],[[1350,1350],29],[[1356,1356],29],[[397,397],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],0,[[],397],[[1347,7],[[14,[94]]]],[[1348,38],[[14,[94]]]],[[1349,7],[[14,[94]]]],[[1350,7],[[14,[94]]]],[[1351,38],[[14,[94]]]],[[873,38],[[14,[94]]]],[[397,38],[[14,[94]]]],[[1352,38],[[14,[94]]]],[[1348,7],[[14,[94]]]],[[1351,7],[[14,[94]]]],[[873,7],[[14,[94]]]],[[397,7],[[14,[94]]]],[[1352,7],[[14,[94]]]],[[1348,7],[[14,[94]]]],[[1351,7],[[14,[94]]]],[[873,7],[[14,[94]]]],[[397,7],[[14,[94]]]],[[1352,7],[[14,[94]]]],[1347,7],[1348,7],[1349,7],[1350,7],[1351,7],[873,7],[397,7],[1352,7],[[1347,7],[[14,[94]]]],[[1348,38],[[14,[94]]]],[[1349,7],[[14,[94]]]],[[1350,7],[[14,[94]]]],[[1351,38],[[14,[94]]]],[[873,38],[[14,[94]]]],[[397,38],[[14,[94]]]],[[1352,38],[[14,[94]]]],[[1354,17]],[[1347,31],[[12,[32]]]],[[1348,31],[[12,[32]]]],[[1349,31],[[12,[32]]]],[[1350,31],[[12,[32]]]],[[1358,31],[[12,[32]]]],[[873,31],[[12,[32]]]],[[1356,31],[[12,[32]]]],[[397,31],[[12,[32]]]],[[1352,31],[[12,[32]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[489,1347],[[[52,[51]]],1347],[94,[[14,[1347]]]],[94,[[14,[1348]]]],[94,[[14,[1349]]]],[94,[[14,[1350]]]],[94,[[14,[1351]]]],[94,[[14,[873]]]],[94,[[14,[397]]]],[94,[[14,[1352]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],0,[1349,29],[1350,29],[[438,[1166,[1361]]],1168],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[7,[[14,[94]]]],[7,[[14,[94]]]],[7,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[7,[[14,[94]]]],[7,[[14,[94]]]],[7,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[1347,[[14,[99]]]],[1348,[[14,[99]]]],[1349,[[14,[99]]]],[1350,[[14,[99]]]],[1351,[[14,[99]]]],[873,[[14,[99]]]],[397,[[14,[99]]]],[1352,[[14,[99]]]],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[438,[1166,[1361]]],1168],0,[[1356,30]],0,[[1348,38],[[14,[7]]]],[[397,38],[[14,[7]]]],0,[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[1347,1347],29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1347,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1348,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1349,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1350,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1351,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[873,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[397,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1352,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[],[[35,[[9,[28,8]]]]]],[[[9,[1347,8]]],[[9,[94,8]]]],[[[9,[1348,8]]],[[9,[94,8]]]],[[[9,[1349,8]]],[[9,[94,8]]]],[[[9,[1350,8]]],[[9,[94,8]]]],[[[9,[1351,8]]],[[9,[94,8]]]],[[[9,[873,8]]],[[9,[94,8]]]],[[[9,[397,8]]],[[9,[94,8]]]],[[[9,[1352,8]]],[[9,[94,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[873,29],[438,29],[1347,215],[873,880],[1347,368],[1348,102],[1349,368],[1350,368],[1351,103],[873,103],[397,102],[1352,103],[51,1347],[873,7],[438,1227],[438,1051],[438,1227],[438,878],[438,878],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[1348,7],[[14,[38]]]],[[1351,7],[[14,[38]]]],[[873,7],[[14,[38]]]],[[397,7],[[14,[38]]]],[[1352,7],[[14,[38]]]],[[],1347],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[438,878],[438,1051],[[1347,1347],[[14,[74]]]],[[397,397],[[14,[74]]]],0,0,[438,1362],0,0,[[386,[86,[403]],[86,[885]],[165,[891]],89]],[[[611,[1359]],[165,[1050]],[165,[1360]],[86,[403]],[86,[1289]],[86,[1288]],[86,[1363]],[86,[419]],[165,[[420,[1363]]]],[165,[397]]]],0,0,0,0,[887,1125],[[1352,[771,[770]]]],[[1357,[771,[770]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[1348,[[14,[75]]]],[397,[[14,[75]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[1347,105],[1348,105],[1349,105],[1350,105],[1351,105],[873,105],[397,105],[1352,105],[[[9,[1347,8]]],106],[[[9,[1348,8]]],106],[[[9,[1349,8]]],106],[[[9,[1350,8]]],106],[[[9,[1351,8]]],106],[[[9,[873,8]]],106],[[[9,[397,8]]],106],[[[9,[1352,8]]],106],[[1347,94],[[14,[29]]]],[[1348,94],[[14,[29]]]],[[1349,94],[[14,[29]]]],[[1350,94],[[14,[29]]]],[[1351,94],[[14,[29]]]],[[873,94],[[14,[29]]]],[[397,94],[[14,[29]]]],[[1352,94],[[14,[29]]]],[1347,107],[1348,107],[1349,107],[1350,107],[1351,107],[873,107],[397,107],[1352,107],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[438,[[14,[1227]]]],[438,[[14,[878]]]],[397,49],0,0,[[1347,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1348,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1349,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[1350],[[1350,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1351,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[873,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[397,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1352,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[1352,820],[1357,820],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],0,[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[[89,[896]]]],[1348,7],[397,7],[1348,38],[397,38],[1348,108],[397,108],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[1347,51],1347],[[1347,51],1347],[[1352,[773,[772]]]],[[1357,[773,[772]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[386,[86,[[87,[874]]]],89]],[[[149,[[862,[[861,[[79,[343,8]]]]]]]],[89,[[387,[860]]]],89,[89,[[822,[1076]]]]]],0,0,[[[89,[896]]]],0,0,0,0,0,0,0,0,0,0,0,0,[[[611,[1359]],[165,[1050]],[165,[1360]],[86,[403]],[86,[1289]],[86,[1288]],[86,[1363]],[86,[419]],[165,[[420,[1363]]]],[165,[397]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[1364,17]],[[],1365],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[[1364,17]],[[1366,31],[[12,[32]]]],[[1366,31],[[12,[32]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[34],[34,1363],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[1365,343,[140,[208]]],[[12,[1366]]]],[1363,360],[[1365,343,[0,[76,143,218]]],[[12,[1366]]]],0,[[]],[[]],[[]],[[]],[[]],[[],141],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1367,1367],[1368,1368],[1367,1367],[[],1368],[1367,1367],[[1368,13],1368],[1367,1367],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],15],[[],13],[[],38],[[],38],[[],38],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1367,1369],[[1370,17]],[1368,1368],[1371,1371],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[1372,534],[[12,[1372,1373]]]],[[23,24,25]],0,[[],[[14,[38]]]],[[],[[14,[38]]]],[[],1374],[[],1375],[[],1369],[[],1368],[[],1376],[[],1370],[[],[[9,[185,8]]]],[1367,1367],[1368,1368],[1367,1367],[[],1368],[1367,1367],[[1368,13],1368],[1367,1367],[7],[7],[7],[1377],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[1377],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[[52,[51]]],[[12,[[9,[185,8]],186]]]],[[1376,[77,[[161,[1369]]]]]],[[1376,1371]],[[1376,34,1371]],[[1376,34]],[[1376,34],[[12,[1373]]]],[[1376,34,[77,[[161,[1369]]]]],[[12,[1373]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[15,29],[15,29],[30],0,0,0,[[1368,1368],29],[[1371,1371],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[1378,[[52,[38]]]],[[],[[52,[38]]]],[[1367,215],1367],[[1367,343],1367],[1367,1367],[[1372,31],[[12,[32]]]],[[1368,31],[[12,[32]]]],[[1378,31],[[12,[32]]]],[[1379,31],[[12,[32]]]],[[1379,31],[[12,[32]]]],[[1380,31],[[12,[32]]]],[[1371,31],[[12,[32]]]],[[1373,31],[[12,[32]]]],[[1373,31],[[12,[32]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[202,1379],[203,1379],[[]],[[]],[[]],[[]],[[]],[[]],[25],[[1369,534],[[12,[1372,1373]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1372,1369],[34,1367],[34],[34],[34,1369],[34],[34],[34,1378],[34],[34],[25],0,0,[[1371,30]],[[]],[[]],0,0,[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[[9,[8]],101,34]],[[[9,[8]],101,34]],[[1376,1371],29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[1368],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1368,29],[[1368,13],29],[1368,29],[[1368,13],29],[1368,29],[1368,[[9,[491,8]]]],[[1376,1371],215],[1368,7],[[171,[9,[185,8]],156],[[172,[[9,[212,8]]]]]],[[1378,171,156],[[172,[[9,[212,8]]]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[34,1372],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],38],[[],38],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],38],[[],38],[1367,1367],0,0,0,[[386,89,89,[165,[1376]]]],[34],0,[278,[[12,[141,1381]]]],[[1369,958],[[12,[141,1381]]]],[[],38],[[],38],[1379,[[14,[227]]]],[[1376,[77,[[161,[1372]]]]],1371],[[1376,[77,[[161,[1372]]]],343],1371],[[1376,[77,[[161,[1369]]]]],1371],[[1376,[77,[[161,[1369]]]],343],1371],[[1376,34,[77,[[161,[1369]]]]],[[12,[1373]]]],[[1376,34],[[12,[1373]]]],[[1376,34,[161,[1372]]],[[12,[1371,1373]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],141],[[],141],0,0,[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],38],[[],38],[[],38],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[1376,34,[52,[[161,[1369]]]]],[[12,[1373]]]],0,0,0,0,[[1369,25]],[[1372,25]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1367,1368],1367],[[1367,1368],1367],0,[[1369,34,[253,[343,343,[251,[250]],252]]],[[12,[1373]]]],[[1369,34,[253,[343,343,[251,[250]],252]],534],[[12,[1373]]]],[[1372,34,534],[[12,[1380,1373]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[1382,150],12],[[1383,150],12],[[1384,150],12],[[1385,150],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[7],[7],[7],0,0,0,0,[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1369,958],1386],0,0,0,0,0,0,[[1386,226],12],[[1387,226],12],[[1388,226],12],[[1389,226],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],0,0,0,[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1390,1391,[87,[2]],2],[[14,[7]]]],[[1391,741],7],[[1392,[161,[2]],2]],[[],1393],[[],1394],[[],1395],[[],1396],0,0,0,[[1397,94]],[[1398,94]],[[1399,94]],[[1400,94]],[[1391,94]],[[1401,94]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[1397,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[1398,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[1399,1],[[],1],[[],1],[1400,1],[1391,1],[[],1],[[],1],[1401,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[1397,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[1398,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[1399,1],[1400,1],[[],1],[1391,1],[[],1],[1401,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[1397,[3,[2]]],1402],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],15],[[],15],[[],15],[[],15],[1397,94],[1398,94],[1399,94],[1400,94],[1391,94],[1401,94],[1397,94],[1398,94],[1399,94],[1400,94],[1391,94],[1401,94],[1400,636],[[],38],[[],38],[[1392,29],1392],0,0,0,[403,[[79,[437,8]]]],0,[[1393,1393],1393],[[1394,1394],1394],[[1395,1395],1395],[[1396,1396],1396],[[1393,1393]],[[1394,1394]],[[1395,1395]],[[1396,1396]],[[1393,1393],1393],[[1394,1394],1394],[[1395,1395],1395],[[1396,1396],1396],[[1393,1393]],[[1394,1394]],[[1395,1395]],[[1396,1396]],[1393,49],[1393,49],[1394,49],[1394,49],[1395,49],[1395,49],[1396,49],[1396,49],[[1393,1393],1393],[[1394,1394],1394],[[1395,1395],1395],[[1396,1396],1396],[[1393,1393]],[[1394,1394]],[[1395,1395]],[[1396,1396]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[1404,[1403]],17]],[[1405,17]],[[1406,17]],[[1407,17]],[[386,[86,[[87,[874]]]],[86,[[87,[2]]]],[86,[[87,[1391]]]],89,89,89]],[[[1408,[1403]]],[[1408,[1403]]]],[1409,1409],[1410,1410],[1397,1397],[1402,1402],[[[1411,[1403]]],[[1411,[1403]]]],[1412,1412],[[[1413,[[0,[261,1403]]]]],[[1413,[[0,[261,1403]]]]]],[1398,1398],[1414,1414],[1415,1415],[1395,1395],[1396,1396],[1416,1416],[1399,1399],[1400,1400],[1391,1391],[1401,1401],[1417,1417],[1397,98],[1398,367],[1399,98],[1400,97],[1391,98],[1401,98],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[1397,[[9,[94,8]]]],[1398,[[9,[94,8]]]],[1399,[[9,[94,8]]]],[1400,[[9,[94,8]]]],[1391,[[9,[94,8]]]],[1401,[[9,[94,8]]]],0,0,0,0,0,0,[1393,1393],[1394,1394],[1395,1395],[1396,1396],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[1393,1393],29],[[1394,1394],29],[[1395,1395],29],[[1396,1396],29],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[[771,[770]]],1402],[[[771,[770]]],1414],0,0,0,[[1397,31],[[12,[32]]]],[[1391,31],[[12,[32]]]],[[],[[1404,[1403]]]],[[],[[1418,[1403]]]],[[],1409],[[],1410],[[],1405],[[],1397],[[],1402],[[],[[1419,[1403]]]],[[],1412],[[],[[1420,[1403]]]],[[],[[1421,[1403]]]],[[],[[1413,[1403]]]],[[],1398],[[],1406],[[],1422],[[],1423],[[],1424],[[],1425],[[],1426],[[],1399],[[],1400],[[],1401],[[],1392],[[],1407],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[[1419,[1403]]]],[7],[7],[7],[1412],[7],[7],[[[1421,[1403]]]],[7],[7],[7],[7],[7],[7],[1422],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[[1419,[1403]]]],[7],[7],[1412],[7],[7],[7],[[[1421,[1403]]]],[7],[7],[7],[7],[7],[7],[1422],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[1393,1393],1393],[[1394,1394],1394],[[1395,1395],1395],[[1396,1396],1396],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],0,0,[1417,[[9,[28,8]]]],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[30],[30],[30],[30],[[],1393],[[],1394],[[],1395],[[],1396],[[[1408,[1403]],[1408,[1403]]],29],[[1412,1412],29],[[1398,1398],29],[[1395,1395],29],[[1396,1396],29],[[1416,1416],29],[[1417,1417],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[1393,489]],[[1394,489]],[[1395,489]],[[1396,489]],[[386,[388,[[484,[[166,[1403]]]]]],[388,[[86,[[87,[1403]]]]]]]],[[386,[149,[7]],[165,[1422]],[388,[89]]]],[[[165,[1424]],[388,[[484,[[166,[2]]]]]]]],[[[165,[1423]],[388,[[86,[[87,[1391]]]]]],[388,[89]],[388,[89]]]],[[1397,38],[[14,[94]]]],[[1398,7],[[14,[94]]]],[[1399,38],[[14,[94]]]],[[1400,38],[[14,[94]]]],[[1391,38],[[14,[94]]]],[[1401,38],[[14,[94]]]],[[1397,7],[[14,[94]]]],[[1399,7],[[14,[94]]]],[[1400,7],[[14,[94]]]],[[1391,7],[[14,[94]]]],[[1401,7],[[14,[94]]]],[[1397,7],[[14,[94]]]],[[1399,7],[[14,[94]]]],[[1400,7],[[14,[94]]]],[[1391,7],[[14,[94]]]],[[1401,7],[[14,[94]]]],[1397,7],[1398,7],[1399,7],[1400,7],[1391,7],[1401,7],[[1397,38],[[14,[94]]]],[[1398,7],[[14,[94]]]],[[1399,38],[[14,[94]]]],[[1400,38],[[14,[94]]]],[[1391,38],[[14,[94]]]],[[1401,38],[[14,[94]]]],[[[1404,[1403]],17]],[[1406,17]],[[1392,[87,[2]]],[[12,[1391,1427]]]],[[1407,17]],0,0,0,0,0,0,0,0,0,[[1397,31],[[12,[32]]]],[[1393,31],[[12,[32]]]],[[1393,31],[[12,[32]]]],[[1393,31],[[12,[32]]]],[[1393,31],[[12,[32]]]],[[1398,31],[[12,[32]]]],[[1394,31],[[12,[32]]]],[[1394,31],[[12,[32]]]],[[1394,31],[[12,[32]]]],[[1394,31],[[12,[32]]]],[[1395,31],[[12,[32]]]],[[1395,31],[[12,[32]]]],[[1395,31],[[12,[32]]]],[[1395,31],[[12,[32]]]],[[1395,31],[[12,[32]]]],[[1396,31],[[12,[32]]]],[[1396,31],[[12,[32]]]],[[1396,31],[[12,[32]]]],[[1396,31],[[12,[32]]]],[[1396,31],[[12,[32]]]],[[1399,31],[[12,[32]]]],[[1400,31],[[12,[32]]]],[[1391,31],[[12,[32]]]],[[1401,31],[[12,[32]]]],[[1427,31],[[12,[32]]]],[[1427,31],[[12,[32]]]],[[1392,31],[[12,[32]]]],[[1417,31],[[12,[32]]]],[[1392,1051],1392],[[],859],[[],859],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[84,[2]]],1397],[[]],[637,1397],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[84,[874]]],1398],[[]],[[]],[[]],[[]],[1428,1414],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[49,[[14,[1393]]]],[49,[[14,[1394]]]],[49,[[14,[1395]]]],[49,[[14,[1396]]]],[49,1393],[49,1393],[49,1394],[49,1394],[49,1395],[49,1395],[49,1396],[49,1396],[49,1393],[49,1394],[49,1395],[49,1396],[29,1396],[25],[25],[25],[25],[25],[25],[25],[25],[25],[[[84,[2]],636,7,7,[14,[636]],[14,[636]]],1391],[29,1395],[29,1396],[489,1393],[489,1394],[489,1395],[489,1396],[49,1395],[49,1396],[38,[[14,[1393]]]],[38,[[14,[1394]]]],[38,[[14,[1395]]]],[38,[[14,[1396]]]],[869,1395],[94,[[14,[1397]]]],[94,[[14,[1398]]]],[94,[[14,[1399]]]],[94,[[14,[1400]]]],[94,[[14,[1391]]]],[94,[[14,[1401]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[34],[34],[34],[34],[34],[34],[34],[34],[34,[[1411,[1403]]]],[34],[34],[34],[34],[34],[34],[34],[34,1415],[34,1429],[34],[34],[34],[34],[34],[34],[34],[34],[34],[[]],[[[1430,[1403]]],1412],[25],[25],[25],[25],[25],[25],[25],[25],[25],[38,[[14,[94]]]],[7,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[7,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[[1415,[3,[2]],[14,[[84,[2]]]]],14],[1397,[[14,[99]]]],[1398,[[14,[99]]]],[1399,[[14,[99]]]],[1400,[[14,[99]]]],[1391,[[14,[99]]]],[1401,[[14,[99]]]],[[1391,[77,[[161,[2]]]]],[[14,[7]]]],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],0,0,0,[[[1408,[1403]],30]],[[1395,30]],[[1396,30]],[[1417,30]],0,0,[[]],0,[[1400,38],[[14,[7]]]],0,0,0,[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[1392,636],1392],[[[9,[8]],101,34]],[[1393,1393]],[[1394,1394]],[[1395,1395]],[[1396,1396]],[[[9,[8]],101,34]],[[1393,1393],1393],[[1394,1394],1394],[[1395,1395],1395],[[1396,1396],1396],[[1393,1393],29],[[1394,1394],29],[[1395,1395],29],[[1396,1396],29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1397,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1398,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1399,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1400,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1391,8]]],[[9,[1,8]]]],[[[9,[1401,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[],[[35,[[9,[28,8]]]]]],[1393],[1394],[1395],[1396],[[[9,[1397,8]]],[[9,[94,8]]]],[[[9,[1398,8]]],[[9,[94,8]]]],[[[9,[1399,8]]],[[9,[94,8]]]],[[[9,[1400,8]]],[[9,[94,8]]]],[[[9,[1391,8]]],[[9,[94,8]]]],[[[9,[1401,8]]],[[9,[94,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[1393,29],[1394,29],[1395,29],[1396,29],[1393,29],[1394,29],[1395,29],[1396,29],[1391,29],[1393,[[881,[1393]]]],[1394,[[881,[1394]]]],[1395,[[881,[1395]]]],[1396,[[881,[1396]]]],[1397,103],[1398,368],[1399,103],[1400,102],[1391,103],[1401,103],[1393,[[882,[1393]]]],[1394,[[882,[1394]]]],[1395,[[882,[1395]]]],[1396,[[882,[1396]]]],0,[[],[[14,[38]]]],[1391,7],0,0,0,[[1392,636],1392],0,0,0,0,0,[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[1395,49],[1396,49],[[1397,7],[[14,[38]]]],[[1399,7],[[14,[38]]]],[[1400,7],[[14,[38]]]],[[1391,7],[[14,[38]]]],[[1401,7],[[14,[38]]]],[[636,760],1390],[7,1401],[[[84,[2]],636],1391],[1393,1393],[1394,1394],[1395,1395],[1396,1396],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[1392,750],1392],0,0,[[[149,[[1418,[1403]]]],[165,[[1420,[1403]]]],[165,[[1421,[1403]]]],[86,[403]],[86,[[3,[2]]]],[86,[888]],[86,[[1411,[1403]]]]]],[[386,[86,[1415]],[86,[403]],[86,[[889,[1414]]]]]],[[386,[86,[403]],[86,[1415]],[86,[891]],[89,[343,[387,[887]]]],[86,[892]]]],[[386,[149,[7]],[86,[403]],[86,[885]],[165,[1425]],[86,[891]],[86,[1429]],[165,[1426]],[86,[[3,[2]]]],[86,[1423]],[89,[[886,[379]]]],[86,[1424]]]],[1395,869],[[[86,[[893,[379]]]],[86,[[1411,[1403]]]],[165,[[894,[[1411,[1403]]]]]],[86,[419]],[86,[397]],[86,[[3,[874]]]],[86,[[1421,[1403]]]],[165,[1422]],[86,[[1419,[1403]]]],89]],[[[149,[1431]],[86,[[893,[379]]]],[86,[1429]],[165,[[420,[1429]]]],[86,[419]],[86,[397]],[86,[1423]],89]],[[1402,[771,[770]]]],[[1414,[771,[770]]]],0,0,[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[1400,[[14,[75]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[1397,105],[1398,105],[1399,105],[1400,105],[1391,105],[1401,105],[[[9,[1397,8]]],106],[[[9,[1398,8]]],106],[[[9,[1399,8]]],106],[[[9,[1400,8]]],106],[[[9,[1391,8]]],106],[[[9,[1401,8]]],106],[[1397,94],[[14,[29]]]],[[1398,94],[[14,[29]]]],[[1399,94],[[14,[29]]]],[[1400,94],[[14,[29]]]],[[1391,94],[[14,[29]]]],[[1401,94],[[14,[29]]]],[1397,107],[1398,107],[1399,107],[1400,107],[1391,107],[1401,107],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[1393,1393]],[[1394,1394]],[[1395,1395]],[[1396,1396]],[[898,899],900],[[898,899],900],[[898,899],900],[[898,899],900],[[898,1432,899],900],[[898,1416,899],900],[[898,1416,899],900],[[1397,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1393,1393,29]],[[1398,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1394,1394,29]],[[1395,1395,29]],[[1396,1396,29]],[[1399,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1400,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1391,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1401,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[1402,820],[1414,820],0,[[360,[903,[901,902]],1408],[[12,[908]]]],[[[1411,[1403]],[903,[901,902]]],[[12,[360,908]]]],[[1415,[903,[901,902]]],[[12,[360,908]]]],[1429,360],0,0,0,[[1393,1393],1393],[[1394,1394],1394],[[1395,1395],1395],[[1396,1396],1396],[[1393,1393]],[[1394,1394]],[[1395,1395]],[[1396,1396]],[[1393,1393],1393],[[1394,1394],1394],[[1395,1395],1395],[[1396,1396],1396],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],141],[[1393,1393]],[[1394,1394]],[[1395,1395]],[[1396,1396]],0,0,0,0,0,0,0,[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[1393,1393],1393],[[1394,1394],1394],[[1395,1395],1395],[[1396,1396],1396],[[1397,879,403,[3,[2]],888],[[12,[909,910]]]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],0,0,[1400,7],[1400,38],[1400,108],[[],859],0,0,0,0,0,0,0,0,[[1397,25]],[[1391,25]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1402,[773,[772]]]],[[1414,[773,[772]]]],0,0,0,0,0,0,[[],1],[[],1],[[],1],[[[3,[2]]]],[[]],[[]],[1433,1433],[[]],[[],[[9,[22,8]]]],[[328,636,328,636],[[14,[1433]]]],[7],[7],[[]],[7],[15,29],[[1433,1433],29],[[],29],[[],29],[[],29],[[],29],[[1433,31],[[12,[32]]]],[[]],[[]],[[],7],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],[[]],[[],12],[[],12],[[],13],[[],14],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1434,[0,[25,143,218,261]]],29],[[1434,[0,[25,143,218,261]]],29],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],7],[212],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1435,1434],[[]],[1436,212],[1437,[[1438,[1437]]]],[1437,[[1439,[1437]]]],[1434,319],[1437,[[1440,[1437]]]],[1434,7],[261,[[1441,[261]]]],[[],1435],[[],1434],[[],1442],[7],[7],[7],[7],[7],[1443],[7],[1444],[7],[1445],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[1436],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7],[7],[1434],[7],[1446],[7],[7],[7],[7],[7],[7],[25,[[1447,[25]]]],[25,[[1448,[25]]]],[25,[[1449,[25]]]],[[],1450],[[[1436,[490]],31],[[12,[32]]]],[[1434,31],[[12,[32]]]],[[[1446,[490]],31],[[12,[32]]]],[[1443,31],[[12,[32]]]],[[1444,31],[[12,[32]]]],[[1445,31],[[12,[32]]]],[[1442,31],[[12,[32]]]],[[1451,31],[[12,[32]]]],[[1434,[0,[261,143,218]],[0,[25,143,218,261]]],[[79,[[0,[261,143,218]],8]]]],[[1434,[0,[25,143,261,218]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[34],[34],[34],[[],1452],[[],1443],[[],1444],[[],1445],[76,1443],[76,1444],[76,1445],[[],[[10,[1442,8]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[25,[[1453,[25]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1436,29],[[1442,1442],29],[1434,14],[[[0,[25,143,261]]],[[1454,[[0,[25,143,261]]]]]],[1434,14],[[1434,[0,[25,143,218,261]]],14],[[1434,[0,[25,143,218,261]]],14],[1434,14],[[1434,[0,[25,143,218,261]]],14],[[1434,[0,[25,143,218,261]]],14],[1455,1436],[[],1435],[[],1434],[[],1442],[[],14],[[1434,7],14],[[]],[[]],[[]],[[1435,7],1435],[[1435,[0,[142,143,218]]],1435],[[1435,[0,[142,143,218]]],1435],[[1434,7,[0,[142,143,218]]],[[79,[143,8]]]],[[1434,7,[0,[142,143,218]]],[[79,[143,8]]]],[[1434,[14,[7]],[0,[142,143,218]]],[[79,[143,8]]]],[[1434,[14,[7]],[0,[142,143,218]]],[[79,[143,8]]]],[[1434,[0,[25,143,218,261]]]],[[[172,[1436]],242],243],[[1434,[0,[25,143,218,261]]],[[14,[7]]]],0,[1434,[[1456,[[0,[1456,143]]]]]],[[1434,76],[[79,[143,8]]]],[[1434,29,[14,[1442]],76],[[79,[143,8]]]],[[]],[[1434,[0,[212,143]]],[[1436,[143]]]],[[[1446,[143]],[0,[212,143]]]],[[1442,[0,[212,143]]],[[1455,[143]]]],[[1434,212],1436],[[[1446,[143]],[0,[212,143]]]],[[[1446,[143]],[0,[212,143]]]],[[1435,7],1435],[1434,[[1457,[[0,[1457,143]]]]]],[[1435,141],1435],[1434,7],[1451,212],[[]],[1442,[[14,[1451]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],[[14,[1443]]]],[[],[[14,[1444]]]],[[],[[14,[1445]]]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[172,242],243],[1451,29],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1434,76]],0,0,0,0,0,0,[[1434,[0,[25,143,218,261]]],29],[[1434,[0,[25,143,218,261]]],29],[212],[[]],[1437,[[1438,[1437]]]],[1437,[[1439,[1437]]]],[1434,319],[1437,[[1440,[1437]]]],[1434,7],[261,[[1441,[261]]]],[25,[[1447,[25]]]],[25,[[1448,[25]]]],[25,[[1449,[25]]]],[[],1450],[[1434,[0,[261,143,218]],[0,[25,143,218,261]]],[[79,[[0,[261,143,218]],8]]]],[[1434,[0,[25,143,261,218]]]],[[],1452],[25,[[1453,[25]]]],[1434,14],[[[0,[25,143,261]]],[[1454,[[0,[25,143,261]]]]]],[1434,14],[[1434,[0,[25,143,218,261]]],14],[[1434,[0,[25,143,218,261]]],14],[1434,14],[[1434,[0,[25,143,218,261]]],14],[[1434,[0,[25,143,218,261]]],14],[[],14],[[1434,7],14],[[1434,7,[0,[142,143,218]]],[[79,[143,8]]]],[[1434,7,[0,[142,143,218]]],[[79,[143,8]]]],[[1434,[14,[7]],[0,[142,143,218]]],[[79,[143,8]]]],[[1434,[14,[7]],[0,[142,143,218]]],[[79,[143,8]]]],[[1434,[0,[25,143,218,261]]]],[[1434,[0,[25,143,218,261]]],[[14,[7]]]],[1434,[[1456,[[0,[1456,143]]]]]],[[]],[1434,[[1457,[[0,[1457,143]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1458,[161,[1459]],1460],1461],[[1462,[87,[2]],[87,[1391]],1463,1464,2],29],[[1465,[87,[1391]],[87,[2]],1466],[[12,[1467,1468]]]],0,0,[[1467,94]],[[1469,94]],[[1470,94]],[[1471,94]],[[1472,94]],[[1473,94]],[[1474,94]],[[1475,94]],[[1476,94]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[1467,1],[[],1],[[],1],[1469,1],[[],1],[[],1],[[],1],[1470,1],[[],1],[[],1],[[],1],[1471,1],[[],1],[1472,1],[[],1],[1473,1],[[],1],[1474,1],[[],1],[[],1],[[],1],[1475,1],[1476,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[1467,1],[[],1],[[],1],[[],1],[1469,1],[[],1],[[],1],[[],1],[1470,1],[[],1],[[],1],[[],1],[1471,1],[[],1],[1472,1],[1473,1],[[],1],[[],1],[1474,1],[1475,1],[[],1],[[],1],[1476,1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],15],[[],15],[[],15],[1467,94],[1469,94],[1470,94],[1471,94],[1472,94],[1473,94],[1474,94],[1475,94],[1476,94],[1467,94],[1469,94],[1470,94],[1471,94],[1472,94],[1473,94],[1474,94],[1475,94],[1476,94],[[],13],[[],38],[[],38],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1477,17]],0,[1459,1459],[1464,1464],[1467,1467],[1469,1469],[1470,1470],[1478,1478],[1479,1479],[1471,1471],[1472,1472],[1473,1473],[1474,1474],[1475,1475],[1476,1476],[1480,1480],[1467,98],[1469,98],[1470,98],[1471,98],[1472,98],[1473,97],[1474,98],[1475,97],[1476,98],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[1467,[[9,[94,8]]]],[1469,[[9,[94,8]]]],[1470,[[9,[94,8]]]],[1471,[[9,[94,8]]]],[1472,[[9,[94,8]]]],[1473,[[9,[94,8]]]],[1474,[[9,[94,8]]]],[1475,[[9,[94,8]]]],[1476,[[9,[94,8]]]],0,[[23,24,25]],[[23,24,25]],[[23,24,25]],[[1458,[52,[1481]],636,1473,1475],[[12,[[79,[1482,8]],1468]]]],[[1479,636],636],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],1465],[[],1458],[[],1483],[[],1484],[[],1485],[[],1470],[[],1479],[[],1471],[[],1472],[[],1473],[[],1474],[[],1476],[[],1480],[[],1477],[[],1486],[[],1487],[[],[[9,[185,8]]]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[150,[[12,[1473]]]],[150,[[12,[1475]]]],[[[52,[51]]],[[12,[[9,[185,8]],186]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[15,29],[15,29],[15,29],[15,29],[30],[30],[30],0,[[1468,1468],29],[[1464,1464],29],[[1473,1473],29],[[1475,1475],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[[],[[52,[38]]]],[1484,[[52,[38]]]],[[386,[165,[1423]],[388,[[86,[[87,[1391]]]]]],[388,[[89,[1488,[387,[1040]]]]]],[388,[89]]]],[[1467,38],[[14,[94]]]],[[1469,38],[[14,[94]]]],[[1470,38],[[14,[94]]]],[[1471,38],[[14,[94]]]],[[1472,38],[[14,[94]]]],[[1473,38],[[14,[94]]]],[[1474,38],[[14,[94]]]],[[1475,38],[[14,[94]]]],[[1476,38],[[14,[94]]]],[[1467,7],[[14,[94]]]],[[1469,7],[[14,[94]]]],[[1470,7],[[14,[94]]]],[[1471,7],[[14,[94]]]],[[1472,7],[[14,[94]]]],[[1473,7],[[14,[94]]]],[[1474,7],[[14,[94]]]],[[1475,7],[[14,[94]]]],[[1476,7],[[14,[94]]]],[[1467,7],[[14,[94]]]],[[1469,7],[[14,[94]]]],[[1470,7],[[14,[94]]]],[[1471,7],[[14,[94]]]],[[1472,7],[[14,[94]]]],[[1473,7],[[14,[94]]]],[[1474,7],[[14,[94]]]],[[1475,7],[[14,[94]]]],[[1476,7],[[14,[94]]]],[1467,7],[1469,7],[1470,7],[1471,7],[1472,7],[1473,7],[1474,7],[1475,7],[1476,7],[[1467,38],[[14,[94]]]],[[1469,38],[[14,[94]]]],[[1470,38],[[14,[94]]]],[[1471,38],[[14,[94]]]],[[1472,38],[[14,[94]]]],[[1473,38],[[14,[94]]]],[[1474,38],[[14,[94]]]],[[1475,38],[[14,[94]]]],[[1476,38],[[14,[94]]]],[[1468,31],[[12,[32]]]],[[1468,31],[[12,[32]]]],[[1459,31],[[12,[32]]]],[[1464,31],[[12,[32]]]],[[1467,31],[[12,[32]]]],[[1489,31],[[12,[32]]]],[[1489,31],[[12,[32]]]],[[1469,31],[[12,[32]]]],[[1470,31],[[12,[32]]]],[[1478,31],[[12,[32]]]],[[1479,31],[[12,[32]]]],[[1471,31],[[12,[32]]]],[[1472,31],[[12,[32]]]],[[1473,31],[[12,[32]]]],[[1474,31],[[12,[32]]]],[[1475,31],[[12,[32]]]],[[1476,31],[[12,[32]]]],[[1480,31],[[12,[32]]]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1490,1464],[[]],[[]],[[]],[1491,1489],[[]],[203,1489],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[38,1472],[141,1472],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[25],[25],[25],[94,[[14,[1467]]]],[94,[[14,[1469]]]],[94,[[14,[1470]]]],[94,[[14,[1471]]]],[94,[[14,[1472]]]],[94,[[14,[1473]]]],[94,[[14,[1474]]]],[94,[[14,[1475]]]],[94,[[14,[1476]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[77,[141]],1474],1471],[489,1471],[1474,1472],[[1471,[87,[1459]],44],[[12,[1479,1468]]]],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[[1483,[77,[[161,[1459]]]]],[[14,[1465]]]],[25],[25],[25],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[[1465,53,1463,1490],[[14,[1467]]]],[[1462,1463,1464],[[14,[7]]]],[[1485,[84,[1459]],1459],1461],[1466,2],[1467,[[14,[99]]]],[1469,[[14,[99]]]],[1470,[[14,[99]]]],[1471,[[14,[99]]]],[1472,[[14,[99]]]],[1473,[[14,[99]]]],[1474,[[14,[99]]]],[1475,[[14,[99]]]],[1476,[[14,[99]]]],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],0,0,0,0,[[1462,1463,1464],29],[[1465,1463,1490,53],29],[[1464,30]],[[1473,30]],[[1475,30]],[[]],[[]],[[1473,38],[[14,[7]]]],[[1475,38],[[14,[7]]]],0,[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[[9,[8]],101,34]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1467,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1469,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1470,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1471,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1472,8]]],[[9,[1,8]]]],[[[9,[1473,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1474,8]]],[[9,[1,8]]]],[[[9,[1475,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1476,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[9,[1467,8]]],[[9,[94,8]]]],[[[9,[1469,8]]],[[9,[94,8]]]],[[[9,[1470,8]]],[[9,[94,8]]]],[[[9,[1471,8]]],[[9,[94,8]]]],[[[9,[1472,8]]],[[9,[94,8]]]],[[[9,[1473,8]]],[[9,[94,8]]]],[[[9,[1474,8]]],[[9,[94,8]]]],[[[9,[1475,8]]],[[9,[94,8]]]],[[[9,[1476,8]]],[[9,[94,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1465,29],[1465,215],[1467,103],[1469,103],[1470,103],[1471,103],[1472,103],[1473,102],[1474,103],[1475,102],[1476,103],[1465,7],0,0,[[171,[9,[185,8]],156],[[172,[[9,[212,8]]]]]],[[1484,171,156],[[172,[[9,[212,8]]]]]],0,0,0,0,[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[1467,7],[[14,[38]]]],[[1469,7],[[14,[38]]]],[[1470,7],[[14,[38]]]],[[1471,7],[[14,[38]]]],[[1472,7],[[14,[38]]]],[[1473,7],[[14,[38]]]],[[1474,7],[[14,[38]]]],[[1475,7],[[14,[38]]]],[[1476,7],[[14,[38]]]],[[[87,[2]],[87,[1391]],636],1462],[[[77,[141]],1474],1472],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[1458,[79,[1482,8]],[52,[1492]],1483,[87,[1459]],[87,[1391]],[87,[2]],1486,1487,1493],[[12,[[79,[1469,8]],1468]]]],[[1485,[87,[1459]],[52,[1472]],44,1473,1475,636,1483,[87,[1391]],[87,[2]],1486,1487,1493],[[12,[1470,1468]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[1473,[[14,[75]]]],[1475,[[14,[75]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[1467,105],[1469,105],[1470,105],[1471,105],[1472,105],[1473,105],[1474,105],[1475,105],[1476,105],[[[9,[1467,8]]],106],[[[9,[1469,8]]],106],[[[9,[1470,8]]],106],[[[9,[1471,8]]],106],[[[9,[1472,8]]],106],[[[9,[1473,8]]],106],[[[9,[1474,8]]],106],[[[9,[1475,8]]],106],[[[9,[1476,8]]],106],[[1467,94],[[14,[29]]]],[[1469,94],[[14,[29]]]],[[1470,94],[[14,[29]]]],[[1471,94],[[14,[29]]]],[[1472,94],[[14,[29]]]],[[1473,94],[[14,[29]]]],[[1474,94],[[14,[29]]]],[[1475,94],[[14,[29]]]],[[1476,94],[[14,[29]]]],[1467,107],[1469,107],[1470,107],[1471,107],[1472,107],[1473,107],[1474,107],[1475,107],[1476,107],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[[165,[1483]],[484,[[166,[1459]]]]]],0,[[53,44],53],0,0,0,[[1473,226],12],[[1475,226],12],[[1467,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1469,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1470,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1471,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1472,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1473,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1474,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1475,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1476,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],0,0,[1489,[[14,[227]]]],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1478,1492],[[],141],[[],141],0,[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[[79,[51,8]]],[[12,[1459,1491]]]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[[149,[[671,[343,[251,[250]],252]]]],[165,[[87,[2]]]],[86,[[87,[1459]]]],[86,[1486]],[165,[1487]],[89,[1488,[387,[1040]]]],[484,[1494]],[165,[[87,[1391]]]],[165,[1483]],[165,[1485]],89]],0,[1473,7],[1475,7],[1473,38],[1475,38],[1473,108],[1475,108],0,0,[[1459,25]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1471,1473],1471],[1471,1471],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[85,[284]],104]],[[[85,[284]],104]],[[1495,94]],[[452,94]],[[1496,94]],[[[85,[[0,[284,545,160]]]],94]],[[1497,94]],[[1498,94]],[[1499,94]],[1495,1],[[],1],[[],1],[452,1],[1496,1],[[],1],[[],1],[[[85,[[0,[284,545,160]]]]],1],[[],1],[[],1],[1497,1],[[],1],[[],1],[[],1],[1498,1],[[],1],[1499,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[1495,1],[[],1],[452,1],[[],1],[1496,1],[[[85,[[0,[284,545,160]]]]],1],[[],1],[1497,1],[[],1],[[],1],[1498,1],[1499,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],15],[[],15],[[[85,[284]]],85],[1495,94],[452,94],[1496,94],[[[85,[[0,[284,545,160]]]]],94],[1497,94],[1498,94],[1499,94],[1495,94],[452,94],[1496,94],[[[85,[[0,[284,545,160]]]]],94],[1497,94],[1498,94],[1499,94],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1500,17]],[1495,1495],[452,452],[1496,1496],[[[85,[[0,[261,284]]]]],[[85,[[0,[261,284]]]]]],[1497,1497],[1498,1498],[1499,1499],[1501,1501],[[[1502,[261]]],[[1502,[261]]]],[1495,98],[452,98],[1496,98],[[[85,[[0,[284,545,160]]]]],98],[1497,98],[1498,97],[1499,98],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[1495,[[9,[94,8]]]],[452,[[9,[94,8]]]],[1496,[[9,[94,8]]]],[[[85,[[0,[284,545,160]]]]],[[9,[94,8]]]],[1497,[[9,[94,8]]]],[1498,[[9,[94,8]]]],[1499,[[9,[94,8]]]],0,[[[85,[284]]],284],[[[85,[284]]],284],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[]],[[],1495],[[],452],[[],1496],[[],[[85,[284]]]],[[],1497],[[],1498],[[],1499],[[],1500],[[],1503],[[[85,[284]]],104],[[[85,[284]]],53],[[[85,[284]]],44],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[150,[[12,[1496]]]],[150,[[12,[1497]]]],[150,[[12,[1498]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[1497,104],[1501,[[9,[28,8]]]],[15,29],[15,29],[15,29],[15,29],[15,29],[30],[30],[[[85,[1499]]],53],[[[85,[1499]]],44],[1496,104],[[[85,[284]]],104],[1497,104],[[[85,[284]]],53],[[[85,[284]]],44],[[[85,[284]]],53],[[[85,[284]]],44],[1496,53],[1497,53],[1496,44],[[[85,[284]]],104],[[1496,1496],29],[[1497,1497],29],[[1498,1498],29],[[1501,1501],29],[[[1502,[[505,[[505,[[505,[505]]]]]]]],[1502,[[505,[[505,[[505,[505]]]]]]]]],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[[1495,38],[[14,[94]]]],[[452,38],[[14,[94]]]],[[1496,38],[[14,[94]]]],[[[85,[[0,[284,545,160]]]],38],[[14,[94]]]],[[1497,38],[[14,[94]]]],[[1498,38],[[14,[94]]]],[[1499,38],[[14,[94]]]],[[1495,7],[[14,[94]]]],[[452,7],[[14,[94]]]],[[1496,7],[[14,[94]]]],[[[85,[[0,[284,545,160]]]],7],[[14,[94]]]],[[1497,7],[[14,[94]]]],[[1498,7],[[14,[94]]]],[[1499,7],[[14,[94]]]],[[1495,7],[[14,[94]]]],[[452,7],[[14,[94]]]],[[1496,7],[[14,[94]]]],[[[85,[[0,[284,545,160]]]],7],[[14,[94]]]],[[1497,7],[[14,[94]]]],[[1498,7],[[14,[94]]]],[[1499,7],[[14,[94]]]],[1495,7],[452,7],[1496,7],[[[85,[[0,[284,545,160]]]]],7],[1497,7],[1498,7],[1499,7],[[1495,38],[[14,[94]]]],[[452,38],[[14,[94]]]],[[1496,38],[[14,[94]]]],[[[85,[[0,[284,545,160]]]],38],[[14,[94]]]],[[1497,38],[[14,[94]]]],[[1498,38],[[14,[94]]]],[[1499,38],[[14,[94]]]],[1497,29],[[[85,[452]]],[[14,[1504]]]],[[1495,31],[[12,[32]]]],[[452,31],[[12,[32]]]],[[1496,31],[[12,[32]]]],[[[85,[[0,[490,284]]]],31],[[12,[32]]]],[[1497,31],[[12,[32]]]],[[1498,31],[[12,[32]]]],[[1499,31],[[12,[32]]]],[[1501,31],[[12,[32]]]],[[1502,31],[[12,[32]]]],[[1502,31],[[12,[32]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1505,1502],[104,[[85,[1495]]]],[44,[[85,[1495]]]],[104,[[85,[1499]]]],[94,[[14,[1495]]]],[94,[[14,[452]]]],[94,[[14,[1496]]]],[94,[[14,[[85,[[0,[284,545,160]]]]]]]],[94,[[14,[1497]]]],[94,[[14,[1498]]]],[94,[[14,[1499]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[44,[[85,[1495]]]],[[53,1498],1497],[34],[34],[34],[34],[34],[34],[34],[34],[34],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[1495,[[14,[99]]]],[452,[[14,[99]]]],[1496,[[14,[99]]]],[[[85,[[0,[284,545,160]]]]],[[14,[99]]]],[1497,[[14,[99]]]],[1498,[[14,[99]]]],[1499,[[14,[99]]]],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[1498,30]],[[1501,30]],[[]],[[1498,38],[[14,[7]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1495,8]]],[[9,[1,8]]]],[[[9,[452,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1496,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[[85,[[0,[284,545,160]]]],8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1497,8]]],[[9,[1,8]]]],[[[9,[1498,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1499,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[],[[35,[[9,[28,8]]]]]],[1502],[[[9,[1495,8]]],[[9,[94,8]]]],[[[9,[452,8]]],[[9,[94,8]]]],[[[9,[1496,8]]],[[9,[94,8]]]],[[[9,[[85,[[0,[284,545,160]]]],8]]],[[9,[94,8]]]],[[[9,[1497,8]]],[[9,[94,8]]]],[[[9,[1498,8]]],[[9,[94,8]]]],[[[9,[1499,8]]],[[9,[94,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1502,29],[1502,29],[[[85,[1499]]],29],[1495,103],[452,103],[1496,103],[[[85,[[0,[284,545,160]]]]],103],[1497,103],[1498,102],[1499,103],[1497,29],[[[85,[452]]],[[14,[1504]]]],[[[85,[1499]]],104],[1497,1498],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[1495,7],[[14,[38]]]],[[452,7],[[14,[38]]]],[[1496,7],[[14,[38]]]],[[[85,[[0,[284,545,160]]]],7],[[14,[38]]]],[[1497,7],[[14,[38]]]],[[1498,7],[[14,[38]]]],[[1499,7],[[14,[38]]]],[[],1496],[1504,[[85,[452]]]],[[104,1498],1497],[284,[[85,[284]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[85,[1495]]],104],[[[85,[1495]]],53],[[[85,[1495]]],44],[1496],[[[85,[1499]]]],[1497],[1496,29],[1497,29],[1497,53],[1497,53],0,[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[1498,[[14,[75]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[1495,105],[452,105],[1496,105],[[[85,[[0,[284,545,160]]]]],105],[1497,105],[1498,105],[1499,105],[[[9,[1495,8]]],106],[[[9,[452,8]]],106],[[[9,[1496,8]]],106],[[[9,[[85,[[0,[284,545,160]]]],8]]],106],[[[9,[1497,8]]],106],[[[9,[1498,8]]],106],[[[9,[1499,8]]],106],[[1495,94],[[14,[29]]]],[[452,94],[[14,[29]]]],[[1496,94],[[14,[29]]]],[[[85,[[0,[284,545,160]]]],94],[[14,[29]]]],[[1497,94],[[14,[29]]]],[[1498,94],[[14,[29]]]],[[1499,94],[[14,[29]]]],[1495,107],[452,107],[1496,107],[[[85,[[0,[284,545,160]]]]],107],[1497,107],[1498,107],[1499,107],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[[85,[1499]]],53],[[[85,[1499]]],44],[1497,104],[1497,53],[1496],[1497],[34],[[1496,226],12],[[1497,226],12],[[1498,226],12],[[1495,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[452,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1496,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[[85,[[0,[284,545,160]]]],[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1497,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1498,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1499,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1497,104]],[[1496,104]],[[1497,104]],[[[85,[1499]],104]],[[1497,1498]],[[[85,[1499]],53]],[[[85,[1499]],44]],[[[85,[1495]],104]],[[[85,[1495]],44]],[[[85,[1495]],44]],[[[85,[284]],104]],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[[85,[452]]],1504],[[1496,104],1496],[[1497,104],1497],[1497,49],[[[85,[1495]]],104],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],141],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[1496],[[[85,[1499]]]],[1497],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[[85,[452]]]],[[[85,[452]],104]],[[[85,[452]],1504]],[1498,7],[1498,38],[1498,108],[[[165,[85]],[165,[[85,[1499]]]],[86,[[85,[452]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[85,[1499]]],29],[[[85,[284]]],104],[104,[[0,[25,261]]]],[104,[[0,[25,261]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],15],[[]],[[]],[[]],[[]],[[]],[[]],[[1506,17]],[1507,1507],[1508,1508],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],0,0,[[],1507],[[],1506],[7],[7],[7],[7],[7],[7],[[]],[[]],[[]],[7],[7],[7],[1508,[[9,[28,8]]]],[15,29],[30],[[1508,1508],29],[[],29],[[],29],[[],29],[[],29],[[1507,31],[[12,[32]]]],[[1508,31],[[12,[32]]]],[[]],[91,1507],[[]],[[]],[[]],[[]],[[]],[91,1507],[34],[34],0,[[1508,30]],0,[[],7],[[],7],[[],7],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[],[[35,[[9,[28,8]]]]]],[[]],[[]],[[]],[[]],0,[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[[77,[328]]],328],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[]],[[]],[[]],0,0,0,[[1509,34]],[[1510,34]],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],0,0,[7],[7],[7],[7],[[]],[[]],[7],[7],[[]],[[]],[[]],[[]],[[],7],[[],7],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],0,[[]],[343],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],14],[[],14],[[]],[[]],0,0,0,0,[865,726],[[865,94]],[[91,94]],[865,1],[[],1],[[],1],[91,1],[865,1],[[],1],[91,1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[865,94],[91,94],[865,94],[91,94],[865,328],[91,328],[[]],[[]],[[]],[[]],[865,865],[91,91],[865,367],[91,98],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[865,[[9,[94,8]]]],[91,[[9,[94,8]]]],[[23,24,25]],[[23,24,25]],[91,726],[865,749],[91,749],[865,91],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],865],[[],91],[7],[7],[7],[7],[150,[[12,[865]]]],[150,[[12,[91]]]],[865,328],[91,328],[[]],[[]],[7],[7],[[865,865],29],[[91,91],29],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[[865,7],[[14,[94]]]],[[91,38],[[14,[94]]]],[[91,7],[[14,[94]]]],[[91,7],[[14,[94]]]],[865,7],[91,7],[[865,7],[[14,[94]]]],[[91,38],[[14,[94]]]],[[865,31],[[12,[32]]]],[[91,31],[[12,[32]]]],[865,328],[91,328],[749,865],[[]],[91,865],[726,865],[[]],[865,91],[25],[25],[749,91],[94,[[14,[865]]]],[94,[[14,[91]]]],[643,91],[[]],[[]],[328,91],[328,91],[34],[34],[[53,53,53],91],[25],[25],[7,[[14,[94]]]],[38,[[14,[94]]]],[7,[[14,[94]]]],[38,[[14,[94]]]],[865,[[14,[99]]]],[91,[[14,[99]]]],[[],100],[[],100],[[],7],[[],7],[[]],[[]],[[[9,[865,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[91,8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[9,[865,8]]],[[9,[94,8]]]],[[[9,[91,8]]],[[9,[94,8]]]],[[]],[[]],[865,368],[91,103],[865,328],[91,328],[91,328],[91,328],[91,328],[[91,328,328]],[[91,328,328]],[[91,328,328],91],[[91,328,328],91],[[],[[14,[38]]]],[[],[[14,[38]]]],[[865,328]],[[865,865]],[[865,91]],[[91,91]],[[91,328]],[[91,865]],[[865,91],865],[[91,91],91],[[91,7],[[14,[38]]]],[[]],[[]],[[865,718],53],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[865,105],[91,105],[[[9,[865,8]]],106],[[[9,[91,8]]],106],[[865,94],[[14,[29]]]],[[91,94],[[14,[29]]]],[865,107],[91,107],[[],38],[[],38],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],38],[[],38],[[865,865],91],[865,328],[91,328],[[91,643]],[[91,328,643]],[[91,328,53]],[[91,643]],[[91,328,53]],[[91,53]],[[91,53]],[[91,53]],[[91,53]],[[91,53]],[[91,53]],0,0,[[865,226],12],[[91,226],12],[[865,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[91,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[],38],[[],38],[[]],[[]],[[]],[[]],[865],[[865,[77,[328]]],328],[[865,328],328],[[91,328],328],[[91,[77,[328]]],328],[[91,328,643]],[865,328],0,[865,718],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],99],[[],99],[[],38],[[],38],[865,328],[91,328],[[],14],[[],14],[[]],[[]],[[91,643],91],[[91,328],91],[[91,328],91],0,0,0,0,0,[[445,34]],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[[1511,343],[[12,[865,1512]]]],[7],[7],[7],[7],[[]],[[]],[7],[7],[[1512,31],[[12,[32]]]],[[]],[[]],[[]],[[]],[[445,214,346]],[[],7],[[],7],[[34,445]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],[[349,445]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],14],[[],14],[[]],[[]],[[[89,[[822,[663]]]],[537,[663]],[89,[[387,[663]]]],89,[149,[[79,[343,8]]]]]],[[619,[537,[663]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1513,1514],[[1515,94]],[[1516,94]],[[1517,94]],[[1518,94]],[[1513,94]],[[1514,94]],[[1519,94]],[[1520,94]],[[1521,94]],[[1522,94]],[[1523,94]],[[1524,94]],[[1525,94]],[[1526,94]],[[1527,94]],[[1528,94]],[[1529,94]],[[1530,94]],[[1531,94]],[[1532,94]],[[1533,94]],[[1534,94]],[[1535,94]],[[1536,94]],[[1537,94]],[[1538,94]],[[1539,94]],[[1540,94]],[[1541,94]],[[1542,94]],[[1543,94]],[[1544,94]],[[1545,94]],[[1546,94]],[[1547,94]],[[1548,94]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[1515,1],[[],1],[[],1],[[],1],[1516,1],[[],1],[1517,1],[[],1],[1518,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[1513,1],[[],1],[[],1],[[],1],[1514,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[1519,1],[[],1],[1520,1],[[],1],[1521,1],[[],1],[[],1],[[],1],[[],1],[1522,1],[[],1],[1523,1],[[],1],[1524,1],[[],1],[[],1],[1525,1],[[],1],[[],1],[[],1],[[],1],[1526,1],[[],1],[[],1],[1527,1],[1528,1],[[],1],[[],1],[[],1],[1529,1],[[],1],[1530,1],[[],1],[[],1],[1531,1],[[],1],[[],1],[[],1],[[],1],[1532,1],[1533,1],[[],1],[[],1],[1534,1],[[],1],[[],1],[1535,1],[[],1],[1536,1],[[],1],[1537,1],[[],1],[[],1],[1538,1],[[],1],[1539,1],[1540,1],[[],1],[[],1],[[],1],[[],1],[[],1],[1541,1],[[],1],[1542,1],[[],1],[1543,1],[[],1],[1544,1],[1545,1],[[],1],[1546,1],[[],1],[1547,1],[[],1],[[],1],[[],1],[[],1],[[],1],[1548,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[1515,1],[[],1],[1516,1],[1517,1],[[],1],[[],1],[1518,1],[[],1],[[],1],[[],1],[[],1],[[],1],[1513,1],[[],1],[[],1],[1514,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[1519,1],[1520,1],[[],1],[1521,1],[[],1],[[],1],[1522,1],[1523,1],[[],1],[[],1],[1524,1],[1525,1],[[],1],[[],1],[1526,1],[1527,1],[[],1],[1528,1],[[],1],[1529,1],[[],1],[1530,1],[[],1],[1531,1],[[],1],[1532,1],[[],1],[1533,1],[[],1],[1534,1],[[],1],[[],1],[1535,1],[[],1],[1536,1],[[],1],[1537,1],[[],1],[1538,1],[1539,1],[[],1],[1540,1],[[],1],[[],1],[1541,1],[[],1],[1542,1],[[],1],[1543,1],[[],1],[[],1],[1544,1],[[],1],[1545,1],[1546,1],[[],1],[[],1],[1547,1],[[],1],[[],1],[[],1],[1548,1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],15],[[],15],[[],15],[1515,94],[1516,94],[1517,94],[1518,94],[1513,94],[1514,94],[1519,94],[1520,94],[1521,94],[1522,94],[1523,94],[1524,94],[1525,94],[1526,94],[1527,94],[1528,94],[1529,94],[1530,94],[1531,94],[1532,94],[1533,94],[1534,94],[1535,94],[1536,94],[1537,94],[1538,94],[1539,94],[1540,94],[1541,94],[1542,94],[1543,94],[1544,94],[1545,94],[1546,94],[1547,94],[1548,94],[1515,94],[1516,94],[1517,94],[1518,94],[1513,94],[1514,94],[1519,94],[1520,94],[1521,94],[1522,94],[1523,94],[1524,94],[1525,94],[1526,94],[1527,94],[1528,94],[1529,94],[1530,94],[1531,94],[1532,94],[1533,94],[1534,94],[1535,94],[1536,94],[1537,94],[1538,94],[1539,94],[1540,94],[1541,94],[1542,94],[1543,94],[1544,94],[1545,94],[1546,94],[1547,94],[1548,94],0,0,[[],[[1549,[1537]]]],[301,[[1549,[1539]]]],[[],1540],[[1513,1513],1514],[1550,[[380,[49]]]],0,[1550,[[380,[49]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1513,1514],0,0,[[1551,17]],[17],[1550,382],0,[[],1530],0,0,[[],1530],[[],1530],[1552,1552],[1516,1516],[1517,1517],[1518,1518],[1513,1513],[1553,1553],[1514,1514],[1554,1554],[1555,1555],[1556,1556],[1519,1519],[1520,1520],[1521,1521],[1522,1522],[1523,1523],[1524,1524],[1525,1525],[1526,1526],[1527,1527],[1528,1528],[1529,1529],[1530,1530],[1531,1531],[1532,1532],[1533,1533],[1534,1534],[1535,1535],[1536,1536],[1537,1537],[1538,1538],[1539,1539],[1540,1540],[1557,1557],[1541,1541],[1542,1542],[1543,1543],[1544,1544],[1545,1545],[1546,1546],[1547,1547],[1558,1558],[1515,98],[1516,97],[1517,98],[1518,97],[1513,97],[1514,98],[1519,98],[1520,98],[1521,97],[1522,97],[1523,97],[1524,97],[1525,97],[1526,97],[1527,97],[1528,97],[1529,97],[1530,98],[1531,97],[1532,97],[1533,97],[1534,97],[1537,98],[1538,97],[1539,98],[1540,98],[1541,367],[1542,98],[1543,367],[1544,98],[1545,98],[1546,98],[1547,97],[1548,367],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[1515,[[9,[94,8]]]],[1516,[[9,[94,8]]]],[1517,[[9,[94,8]]]],[1518,[[9,[94,8]]]],[1513,[[9,[94,8]]]],[1514,[[9,[94,8]]]],[1519,[[9,[94,8]]]],[1520,[[9,[94,8]]]],[1521,[[9,[94,8]]]],[1522,[[9,[94,8]]]],[1523,[[9,[94,8]]]],[1524,[[9,[94,8]]]],[1525,[[9,[94,8]]]],[1526,[[9,[94,8]]]],[1527,[[9,[94,8]]]],[1528,[[9,[94,8]]]],[1529,[[9,[94,8]]]],[1530,[[9,[94,8]]]],[1531,[[9,[94,8]]]],[1532,[[9,[94,8]]]],[1533,[[9,[94,8]]]],[1534,[[9,[94,8]]]],[1535,[[9,[94,8]]]],[1536,[[9,[94,8]]]],[1537,[[9,[94,8]]]],[1538,[[9,[94,8]]]],[1539,[[9,[94,8]]]],[1540,[[9,[94,8]]]],[1541,[[9,[94,8]]]],[1542,[[9,[94,8]]]],[1543,[[9,[94,8]]]],[1544,[[9,[94,8]]]],[1545,[[9,[94,8]]]],[1546,[[9,[94,8]]]],[1547,[[9,[94,8]]]],[1548,[[9,[94,8]]]],0,0,0,[[23,24,25]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[1556,53],53],[[1559,343,1560]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],0,[[],1552],[[],1515],[[],1516],[[],1517],[[],1518],[[],1513],[[],1514],[[],1559],[[],1561],[[],1562],[[],1563],[[],1564],[[],1519],[[],1520],[[],1521],[[],1522],[[],1523],[[],1524],[[],1525],[[],1526],[[],1527],[[],1528],[[],1529],[[],1530],[[],1531],[[],1532],[[],1533],[[],1534],[[],1537],[[],1540],[[],1541],[[],1542],[[],1543],[[],1544],[[],1545],[[],1546],[[],1547],[[],1551],[[],1548],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[1517],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[1548],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[1517],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[1548],[150,[[12,[1516]]]],[150,[[12,[1517]]]],[150,[[12,[1518]]]],[150,[[12,[1513]]]],[150,[[12,[1514]]]],[150,[[12,[1520]]]],[150,[[12,[1521]]]],[150,[[12,[1522]]]],[150,[[12,[1523]]]],[150,[[12,[1524]]]],[150,[[12,[1525]]]],[150,[[12,[1526]]]],[150,[[12,[1527]]]],[150,[[12,[1528]]]],[150,[[12,[1529]]]],[150,[[12,[1530]]]],[150,[[12,[1531]]]],[150,[[12,[1532]]]],[150,[[12,[1533]]]],[150,[[12,[1534]]]],[150,[[12,[1535]]]],[150,[[12,[1536]]]],[150,[[12,[1537]]]],[150,[[12,[1538]]]],[150,[[12,[1539]]]],[150,[[12,[1540]]]],[150,[[12,[1541]]]],[150,[[12,[1543]]]],[150,[[12,[1544]]]],0,0,[[1513,53]],[[1513,53]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1550,384],0,0,[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[1555,[[9,[28,8]]]],[1558,[[9,[28,8]]]],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[30],[30],[30],[1550,[[14,[385]]]],0,[1550,[[14,[385]]]],[762,1540],[[762,301],1540],[1550,343],0,[[1516,1516],29],[[1517,1517],29],[[1518,1518],29],[[1513,1513],29],[[1553,1553],29],[[1514,1514],29],[[1554,1554],29],[[1555,1555],29],[[1556,1556],29],[[1520,1520],29],[[1521,1521],29],[[1522,1522],29],[[1523,1523],29],[[1524,1524],29],[[1525,1525],29],[[1526,1526],29],[[1527,1527],29],[[1528,1528],29],[[1529,1529],29],[[1530,1530],29],[[1531,1531],29],[[1532,1532],29],[[1533,1533],29],[[1534,1534],29],[[1535,1535],29],[[1536,1536],29],[[1537,1537],29],[[1538,1538],29],[[1539,1539],29],[[1540,1540],29],[[1557,1557],29],[[1558,1558],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[[[165,[1561]],[388,[[86,[[87,[2]]]]]],[388,[[86,[[87,[1391]]]]]],[388,[[86,[1564]]]],[388,[[89,[[822,[1545]]]]]]]],[[386,[388,[[86,[1548]]]],[388,[[89,[[387,[475]]]]]]]],[[386,[165,[1561]],[388,[[86,[[87,[1391]]]]]],[388,[[89,[1488,[387,[1040]]]]]],[388,[[86,[1564]]]],[388,[[86,[1548]]]],[388,[89]]]],[[386,[165,[1561]],[388,[[89,[1488,[387,[1040]]]]]],[388,[[86,[1548]]]],[388,[[86,[1564]]]],[388,[[89,[[822,[1515]]]]]],[388,[[89,[1519]]]]]],[[386,[165,[1561]],[388,[[86,[1564]]]],[388,[89]],[89,[1546]]]],[[[165,[1561]],[388,[[86,[[87,[2]]]]]],[388,[[86,[1564]]]],[388,[[89,[[822,[1542]]]]]]]],[[343,344]],[[343,344]],[[1515,38],[[14,[94]]]],[[1516,38],[[14,[94]]]],[[1517,38],[[14,[94]]]],[[1518,38],[[14,[94]]]],[[1513,38],[[14,[94]]]],[[1514,38],[[14,[94]]]],[[1519,38],[[14,[94]]]],[[1520,38],[[14,[94]]]],[[1521,38],[[14,[94]]]],[[1522,38],[[14,[94]]]],[[1523,38],[[14,[94]]]],[[1524,38],[[14,[94]]]],[[1525,38],[[14,[94]]]],[[1526,38],[[14,[94]]]],[[1527,38],[[14,[94]]]],[[1528,38],[[14,[94]]]],[[1529,38],[[14,[94]]]],[[1530,38],[[14,[94]]]],[[1531,38],[[14,[94]]]],[[1532,38],[[14,[94]]]],[[1533,38],[[14,[94]]]],[[1534,38],[[14,[94]]]],[[1537,38],[[14,[94]]]],[[1538,38],[[14,[94]]]],[[1539,38],[[14,[94]]]],[[1540,38],[[14,[94]]]],[[1541,7],[[14,[94]]]],[[1542,38],[[14,[94]]]],[[1543,7],[[14,[94]]]],[[1544,38],[[14,[94]]]],[[1545,38],[[14,[94]]]],[[1546,38],[[14,[94]]]],[[1547,38],[[14,[94]]]],[[1548,7],[[14,[94]]]],[[1515,7],[[14,[94]]]],[[1516,7],[[14,[94]]]],[[1517,7],[[14,[94]]]],[[1518,7],[[14,[94]]]],[[1513,7],[[14,[94]]]],[[1514,7],[[14,[94]]]],[[1519,7],[[14,[94]]]],[[1520,7],[[14,[94]]]],[[1521,7],[[14,[94]]]],[[1522,7],[[14,[94]]]],[[1523,7],[[14,[94]]]],[[1524,7],[[14,[94]]]],[[1525,7],[[14,[94]]]],[[1526,7],[[14,[94]]]],[[1527,7],[[14,[94]]]],[[1528,7],[[14,[94]]]],[[1529,7],[[14,[94]]]],[[1530,7],[[14,[94]]]],[[1531,7],[[14,[94]]]],[[1532,7],[[14,[94]]]],[[1533,7],[[14,[94]]]],[[1534,7],[[14,[94]]]],[[1537,7],[[14,[94]]]],[[1538,7],[[14,[94]]]],[[1539,7],[[14,[94]]]],[[1540,7],[[14,[94]]]],[[1542,7],[[14,[94]]]],[[1544,7],[[14,[94]]]],[[1545,7],[[14,[94]]]],[[1546,7],[[14,[94]]]],[[1547,7],[[14,[94]]]],[[1515,7],[[14,[94]]]],[[1516,7],[[14,[94]]]],[[1517,7],[[14,[94]]]],[[1518,7],[[14,[94]]]],[[1513,7],[[14,[94]]]],[[1514,7],[[14,[94]]]],[[1519,7],[[14,[94]]]],[[1520,7],[[14,[94]]]],[[1521,7],[[14,[94]]]],[[1522,7],[[14,[94]]]],[[1523,7],[[14,[94]]]],[[1524,7],[[14,[94]]]],[[1525,7],[[14,[94]]]],[[1526,7],[[14,[94]]]],[[1527,7],[[14,[94]]]],[[1528,7],[[14,[94]]]],[[1529,7],[[14,[94]]]],[[1530,7],[[14,[94]]]],[[1531,7],[[14,[94]]]],[[1532,7],[[14,[94]]]],[[1533,7],[[14,[94]]]],[[1534,7],[[14,[94]]]],[[1537,7],[[14,[94]]]],[[1538,7],[[14,[94]]]],[[1539,7],[[14,[94]]]],[[1540,7],[[14,[94]]]],[[1542,7],[[14,[94]]]],[[1544,7],[[14,[94]]]],[[1545,7],[[14,[94]]]],[[1546,7],[[14,[94]]]],[[1547,7],[[14,[94]]]],[1515,7],[1516,7],[1517,7],[1518,7],[1513,7],[1514,7],[1519,7],[1520,7],[1521,7],[1522,7],[1523,7],[1524,7],[1525,7],[1526,7],[1527,7],[1528,7],[1529,7],[1530,7],[1531,7],[1532,7],[1533,7],[1534,7],[1537,7],[1538,7],[1539,7],[1540,7],[1541,7],[1542,7],[1543,7],[1544,7],[1545,7],[1546,7],[1547,7],[1548,7],[[1515,38],[[14,[94]]]],[[1516,38],[[14,[94]]]],[[1517,38],[[14,[94]]]],[[1518,38],[[14,[94]]]],[[1513,38],[[14,[94]]]],[[1514,38],[[14,[94]]]],[[1519,38],[[14,[94]]]],[[1520,38],[[14,[94]]]],[[1521,38],[[14,[94]]]],[[1522,38],[[14,[94]]]],[[1523,38],[[14,[94]]]],[[1524,38],[[14,[94]]]],[[1525,38],[[14,[94]]]],[[1526,38],[[14,[94]]]],[[1527,38],[[14,[94]]]],[[1528,38],[[14,[94]]]],[[1529,38],[[14,[94]]]],[[1530,38],[[14,[94]]]],[[1531,38],[[14,[94]]]],[[1532,38],[[14,[94]]]],[[1533,38],[[14,[94]]]],[[1534,38],[[14,[94]]]],[[1537,38],[[14,[94]]]],[[1538,38],[[14,[94]]]],[[1539,38],[[14,[94]]]],[[1540,38],[[14,[94]]]],[[1541,7],[[14,[94]]]],[[1542,38],[[14,[94]]]],[[1543,7],[[14,[94]]]],[[1544,38],[[14,[94]]]],[[1545,38],[[14,[94]]]],[[1546,38],[[14,[94]]]],[[1547,38],[[14,[94]]]],[[1548,7],[[14,[94]]]],[[343,344],29],[[343,344],29],[[1551,17]],[53,[[1549,[1537]]]],[[301,53],[[1549,[1539]]]],[53,[[1549,[1537]]]],[[301,53],[[1549,[1539]]]],[636,1515],[53,[[1549,[1537]]]],[[301,53],[[1549,[1539]]]],0,0,0,0,0,0,0,0,0,0,0,[[1515,31],[[12,[32]]]],[[1516,31],[[12,[32]]]],[[1517,31],[[12,[32]]]],[[1518,31],[[12,[32]]]],[[1513,31],[[12,[32]]]],[[1553,31],[[12,[32]]]],[[1553,31],[[12,[32]]]],[[1514,31],[[12,[32]]]],[[1559,31],[[12,[32]]]],[[1565,31],[[12,[32]]]],[[1555,31],[[12,[32]]]],[[1556,31],[[12,[32]]]],[[1564,31],[[12,[32]]]],[[1519,31],[[12,[32]]]],[[1520,31],[[12,[32]]]],[[1521,31],[[12,[32]]]],[[1522,31],[[12,[32]]]],[[1523,31],[[12,[32]]]],[[1524,31],[[12,[32]]]],[[1525,31],[[12,[32]]]],[[1526,31],[[12,[32]]]],[[1527,31],[[12,[32]]]],[[1528,31],[[12,[32]]]],[[1529,31],[[12,[32]]]],[[1530,31],[[12,[32]]]],[[1531,31],[[12,[32]]]],[[1532,31],[[12,[32]]]],[[1533,31],[[12,[32]]]],[[1534,31],[[12,[32]]]],[[1535,31],[[12,[32]]]],[[1536,31],[[12,[32]]]],[[1537,31],[[12,[32]]]],[[1538,31],[[12,[32]]]],[[1539,31],[[12,[32]]]],[[1540,31],[[12,[32]]]],[[1557,31],[[12,[32]]]],[[1557,31],[[12,[32]]]],[[1541,31],[[12,[32]]]],[[1542,31],[[12,[32]]]],[[1543,31],[[12,[32]]]],[[1544,31],[[12,[32]]]],[[1545,31],[[12,[32]]]],[[1546,31],[[12,[32]]]],[[1547,31],[[12,[32]]]],[[1558,31],[[12,[32]]]],[[1548,31],[[12,[32]]]],[53,[[1549,[1537]]]],[[301,53],[[1549,[1539]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[53,1556],[[]],[[[14,[53]]],1556],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[760,1538],[301,1538],[[]],[7,1538],[1537,1539],[[]],[[]],[[]],[[]],[637,1541],[[]],[637,1543],[[]],[[]],[[]],[[[84,[2]]],1545],[[]],[[]],[[]],[[]],[[]],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[[[0,[[77,[53]],508]]],1556],[94,[[14,[1515]]]],[94,[[14,[1516]]]],[94,[[14,[1517]]]],[94,[[14,[1518]]]],[94,[[14,[1513]]]],[94,[[14,[1514]]]],[94,[[14,[1519]]]],[94,[[14,[1520]]]],[94,[[14,[1521]]]],[94,[[14,[1522]]]],[94,[[14,[1523]]]],[94,[[14,[1524]]]],[94,[[14,[1525]]]],[94,[[14,[1526]]]],[94,[[14,[1527]]]],[94,[[14,[1528]]]],[94,[[14,[1529]]]],[94,[[14,[1530]]]],[94,[[14,[1531]]]],[94,[[14,[1532]]]],[94,[[14,[1533]]]],[94,[[14,[1534]]]],[94,[[14,[1535]]]],[94,[[14,[1536]]]],[94,[[14,[1537]]]],[94,[[14,[1538]]]],[94,[[14,[1539]]]],[94,[[14,[1540]]]],[94,[[14,[1541]]]],[94,[[14,[1542]]]],[94,[[14,[1543]]]],[94,[[14,[1544]]]],[94,[[14,[1545]]]],[94,[[14,[1546]]]],[94,[[14,[1547]]]],[94,[[14,[1548]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[34],[34],[34],[34],[34],[34],[34],[34],[34,1566],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[1540,[[14,[762]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[7,[[14,[94]]]],[38,[[14,[94]]]],[7,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[7,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[7,[[14,[94]]]],[38,[[14,[94]]]],[7,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[7,[[14,[94]]]],[[1559,343],[[12,[1567,1565]]]],[1515,[[14,[99]]]],[1516,[[14,[99]]]],[1517,[[14,[99]]]],[1518,[[14,[99]]]],[1513,[[14,[99]]]],[1514,[[14,[99]]]],[1519,[[14,[99]]]],[1520,[[14,[99]]]],[1521,[[14,[99]]]],[1522,[[14,[99]]]],[1523,[[14,[99]]]],[1524,[[14,[99]]]],[1525,[[14,[99]]]],[1526,[[14,[99]]]],[1527,[[14,[99]]]],[1528,[[14,[99]]]],[1529,[[14,[99]]]],[1530,[[14,[99]]]],[1531,[[14,[99]]]],[1532,[[14,[99]]]],[1533,[[14,[99]]]],[1534,[[14,[99]]]],[1535,[[14,[99]]]],[1536,[[14,[99]]]],[1537,[[14,[99]]]],[1538,[[14,[99]]]],[1539,[[14,[99]]]],[1540,[[14,[99]]]],[1541,[[14,[99]]]],[1542,[[14,[99]]]],[1543,[[14,[99]]]],[1544,[[14,[99]]]],[1545,[[14,[99]]]],[1546,[[14,[99]]]],[1547,[[14,[99]]]],[1548,[[14,[99]]]],[1540,[[14,[301]]]],[1540,[[14,[762]]]],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],0,0,0,0,0,0,0,[[1554,30]],[[1555,30]],[[1558,30]],0,0,[1513,1514],0,0,0,[[]],[[]],0,[[1516,38],[[14,[7]]]],[[1518,38],[[14,[7]]]],[[1513,38],[[14,[7]]]],[[1521,38],[[14,[7]]]],[[1522,38],[[14,[7]]]],[[1523,38],[[14,[7]]]],[[1524,38],[[14,[7]]]],[[1525,38],[[14,[7]]]],[[1526,38],[[14,[7]]]],[[1527,38],[[14,[7]]]],[[1528,38],[[14,[7]]]],[[1529,38],[[14,[7]]]],[[1531,38],[[14,[7]]]],[[1532,38],[[14,[7]]]],[[1533,38],[[14,[7]]]],[[1534,38],[[14,[7]]]],[[1538,38],[[14,[7]]]],[[1547,38],[[14,[7]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[214,346,346]],[[214,346,346]],[34,1568],[34,1568],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1515,8]]],[[9,[1,8]]]],[[[9,[1516,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1517,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1518,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1513,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1514,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1519,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1520,8]]],[[9,[1,8]]]],[[[9,[1521,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1522,8]]],[[9,[1,8]]]],[[[9,[1523,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1524,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1525,8]]],[[9,[1,8]]]],[[[9,[1526,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1527,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1528,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1529,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1530,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1531,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1532,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1533,8]]],[[9,[1,8]]]],[[[9,[1534,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1535,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1536,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1537,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1538,8]]],[[9,[1,8]]]],[[[9,[1539,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1540,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1541,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1542,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1543,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1544,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1545,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1546,8]]],[[9,[1,8]]]],[[[9,[1547,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1548,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[],[[35,[[9,[28,8]]]]]],[[],[[35,[[9,[28,8]]]]]],[1556,[[14,[53]]]],[[[9,[1515,8]]],[[9,[94,8]]]],[[[9,[1516,8]]],[[9,[94,8]]]],[[[9,[1517,8]]],[[9,[94,8]]]],[[[9,[1518,8]]],[[9,[94,8]]]],[[[9,[1513,8]]],[[9,[94,8]]]],[[[9,[1514,8]]],[[9,[94,8]]]],[[[9,[1519,8]]],[[9,[94,8]]]],[[[9,[1520,8]]],[[9,[94,8]]]],[[[9,[1521,8]]],[[9,[94,8]]]],[[[9,[1522,8]]],[[9,[94,8]]]],[[[9,[1523,8]]],[[9,[94,8]]]],[[[9,[1524,8]]],[[9,[94,8]]]],[[[9,[1525,8]]],[[9,[94,8]]]],[[[9,[1526,8]]],[[9,[94,8]]]],[[[9,[1527,8]]],[[9,[94,8]]]],[[[9,[1528,8]]],[[9,[94,8]]]],[[[9,[1529,8]]],[[9,[94,8]]]],[[[9,[1530,8]]],[[9,[94,8]]]],[[[9,[1531,8]]],[[9,[94,8]]]],[[[9,[1532,8]]],[[9,[94,8]]]],[[[9,[1533,8]]],[[9,[94,8]]]],[[[9,[1534,8]]],[[9,[94,8]]]],[[[9,[1535,8]]],[[9,[94,8]]]],[[[9,[1536,8]]],[[9,[94,8]]]],[[[9,[1537,8]]],[[9,[94,8]]]],[[[9,[1538,8]]],[[9,[94,8]]]],[[[9,[1539,8]]],[[9,[94,8]]]],[[[9,[1540,8]]],[[9,[94,8]]]],[[[9,[1541,8]]],[[9,[94,8]]]],[[[9,[1542,8]]],[[9,[94,8]]]],[[[9,[1543,8]]],[[9,[94,8]]]],[[[9,[1544,8]]],[[9,[94,8]]]],[[[9,[1545,8]]],[[9,[94,8]]]],[[[9,[1546,8]]],[[9,[94,8]]]],[[[9,[1547,8]]],[[9,[94,8]]]],[[[9,[1548,8]]],[[9,[94,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1556,29],[[1556,1556],29],[1530,29],[1531,29],[1515,103],[1516,102],[1517,103],[1518,102],[1513,102],[1514,103],[1519,103],[1520,103],[1521,102],[1522,102],[1523,102],[1524,102],[1525,102],[1526,102],[1527,102],[1528,102],[1529,102],[1530,103],[1531,102],[1532,102],[1533,102],[1534,102],[1537,103],[1538,102],[1539,103],[1540,103],[1541,368],[1542,103],[1543,368],[1544,103],[1545,103],[1546,103],[1547,102],[1548,368],0,0,0,[1513,1514],0,0,[[1519,865],741],[[1556,76],1556],0,[142,29],[142,29],[[],[[1549,[1537]]]],[301,[[1549,[1539]]]],0,0,0,[[1556,[14,[53]]],1556],[[[14,[53]],[14,[53]],1556,1556],636],[[1552,[14,[53]],[14,[53]],1556,1556],636],0,[[],[[1549,[1537]]]],[301,[[1549,[1539]]]],0,0,0,[[1535,1536],[[1549,[1537]]]],[[[77,[1538]],1535,1536],[[1549,[1539]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[1517,29],[[1513,53]],[[1513,53]],[[1515,7],[[14,[38]]]],[[1516,7],[[14,[38]]]],[[1517,7],[[14,[38]]]],[[1518,7],[[14,[38]]]],[[1513,7],[[14,[38]]]],[[1514,7],[[14,[38]]]],[[1519,7],[[14,[38]]]],[[1520,7],[[14,[38]]]],[[1521,7],[[14,[38]]]],[[1522,7],[[14,[38]]]],[[1523,7],[[14,[38]]]],[[1524,7],[[14,[38]]]],[[1525,7],[[14,[38]]]],[[1526,7],[[14,[38]]]],[[1527,7],[[14,[38]]]],[[1528,7],[[14,[38]]]],[[1529,7],[[14,[38]]]],[[1530,7],[[14,[38]]]],[[1531,7],[[14,[38]]]],[[1532,7],[[14,[38]]]],[[1533,7],[[14,[38]]]],[[1534,7],[[14,[38]]]],[[1537,7],[[14,[38]]]],[[1538,7],[[14,[38]]]],[[1539,7],[[14,[38]]]],[[1540,7],[[14,[38]]]],[[1542,7],[[14,[38]]]],[[1544,7],[[14,[38]]]],[[1545,7],[[14,[38]]]],[[1546,7],[[14,[38]]]],[[1547,7],[[14,[38]]]],[34,1569],[[1513,1513,1513,1513],1514],[[1513,1513,637],1544],[[[84,[2]]],1545],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[1556,1556],1556],[[1556,76],1556],[1519,53],0,0,[[53,53,53,53],1514],[53,[[1549,[1537]]]],[[[77,[1538]],53],[[1549,[1539]]]],[[1519,865,44,44],741],[[1519,44,44],636],0,0,0,[[386,[86,[403]],[86,[885]],[165,[1562]],[165,[1561]],[86,[891]],[86,[1566]],[165,[1563]],[86,[[3,[2]]]],[89,[[886,[1550]]]],[86,[1424]],[149,[7]]]],[[53,53,53,53],1514],[53,[[1549,[1537]]]],[[[77,[1538]],53],[[1549,[1539]]]],[[[86,[1561]],[86,[1566]],[165,[[420,[1566]]]],89,[86,[419]],[86,[[893,[1550]]]]]],0,0,[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[1516,[[14,[75]]]],[1518,[[14,[75]]]],[1513,[[14,[75]]]],[1521,[[14,[75]]]],[1522,[[14,[75]]]],[1523,[[14,[75]]]],[1524,[[14,[75]]]],[1525,[[14,[75]]]],[1526,[[14,[75]]]],[1527,[[14,[75]]]],[1528,[[14,[75]]]],[1529,[[14,[75]]]],[1531,[[14,[75]]]],[1532,[[14,[75]]]],[1533,[[14,[75]]]],[1534,[[14,[75]]]],[1538,[[14,[75]]]],[1547,[[14,[75]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[1515,105],[1516,105],[1517,105],[1518,105],[1513,105],[1514,105],[1519,105],[1520,105],[1521,105],[1522,105],[1523,105],[1524,105],[1525,105],[1526,105],[1527,105],[1528,105],[1529,105],[1530,105],[1531,105],[1532,105],[1533,105],[1534,105],[1535,105],[1536,105],[1537,105],[1538,105],[1539,105],[1540,105],[1541,105],[1542,105],[1543,105],[1544,105],[1545,105],[1546,105],[1547,105],[1548,105],[[[9,[1515,8]]],106],[[[9,[1516,8]]],106],[[[9,[1517,8]]],106],[[[9,[1518,8]]],106],[[[9,[1513,8]]],106],[[[9,[1514,8]]],106],[[[9,[1519,8]]],106],[[[9,[1520,8]]],106],[[[9,[1521,8]]],106],[[[9,[1522,8]]],106],[[[9,[1523,8]]],106],[[[9,[1524,8]]],106],[[[9,[1525,8]]],106],[[[9,[1526,8]]],106],[[[9,[1527,8]]],106],[[[9,[1528,8]]],106],[[[9,[1529,8]]],106],[[[9,[1530,8]]],106],[[[9,[1531,8]]],106],[[[9,[1532,8]]],106],[[[9,[1533,8]]],106],[[[9,[1534,8]]],106],[[[9,[1535,8]]],106],[[[9,[1536,8]]],106],[[[9,[1537,8]]],106],[[[9,[1538,8]]],106],[[[9,[1539,8]]],106],[[[9,[1540,8]]],106],[[[9,[1541,8]]],106],[[[9,[1542,8]]],106],[[[9,[1543,8]]],106],[[[9,[1544,8]]],106],[[[9,[1545,8]]],106],[[[9,[1546,8]]],106],[[[9,[1547,8]]],106],[[[9,[1548,8]]],106],[[1515,94],[[14,[29]]]],[[1516,94],[[14,[29]]]],[[1517,94],[[14,[29]]]],[[1518,94],[[14,[29]]]],[[1513,94],[[14,[29]]]],[[1514,94],[[14,[29]]]],[[1519,94],[[14,[29]]]],[[1520,94],[[14,[29]]]],[[1521,94],[[14,[29]]]],[[1522,94],[[14,[29]]]],[[1523,94],[[14,[29]]]],[[1524,94],[[14,[29]]]],[[1525,94],[[14,[29]]]],[[1526,94],[[14,[29]]]],[[1527,94],[[14,[29]]]],[[1528,94],[[14,[29]]]],[[1529,94],[[14,[29]]]],[[1530,94],[[14,[29]]]],[[1531,94],[[14,[29]]]],[[1532,94],[[14,[29]]]],[[1533,94],[[14,[29]]]],[[1534,94],[[14,[29]]]],[[1535,94],[[14,[29]]]],[[1536,94],[[14,[29]]]],[[1537,94],[[14,[29]]]],[[1538,94],[[14,[29]]]],[[1539,94],[[14,[29]]]],[[1540,94],[[14,[29]]]],[[1541,94],[[14,[29]]]],[[1542,94],[[14,[29]]]],[[1543,94],[[14,[29]]]],[[1544,94],[[14,[29]]]],[[1545,94],[[14,[29]]]],[[1546,94],[[14,[29]]]],[[1547,94],[[14,[29]]]],[[1548,94],[[14,[29]]]],[1515,107],[1516,107],[1517,107],[1518,107],[1513,107],[1514,107],[1519,107],[1520,107],[1521,107],[1522,107],[1523,107],[1524,107],[1525,107],[1526,107],[1527,107],[1528,107],[1529,107],[1530,107],[1531,107],[1532,107],[1533,107],[1534,107],[1535,107],[1536,107],[1537,107],[1538,107],[1539,107],[1540,107],[1541,107],[1542,107],[1543,107],[1544,107],[1545,107],[1546,107],[1547,107],[1548,107],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[1559,489]],[[898,1432,899],900],[[898,1570,899],900],[[898,1570,899],900],[[[77,[1538]],[77,[[79,[1537,8]]]]],[[1549,[1539]]]],[[1513,53,636],[[12,[53,1553]]]],[[[89,[1488,[387,[1040]]]],[86,[1548]],89]],[1513,1514],0,0,0,[[1569,375,376,34],[[12,[377]]]],0,[[1516,226],12],[[1517,226],12],[[1518,226],12],[[1513,226],12],[[1514,226],12],[[1520,226],12],[[1521,226],12],[[1522,226],12],[[1523,226],12],[[1524,226],12],[[1525,226],12],[[1526,226],12],[[1527,226],12],[[1528,226],12],[[1529,226],12],[[1530,226],12],[[1531,226],12],[[1532,226],12],[[1533,226],12],[[1534,226],12],[[1535,226],12],[[1536,226],12],[[1537,226],12],[[1538,226],12],[[1539,226],12],[[1540,226],12],[[1541,226],12],[[1543,226],12],[[1544,226],12],[[1515,1571]],[[1515,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1516,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1517,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1518,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1513,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1514,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1519,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1520,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1521,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1522,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1523,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1524,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1525,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1526,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1527,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1528,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1529,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1530,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1531,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1532,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1533,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1534,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1535,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1536,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1537,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1538,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1539,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1540,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1541,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1542,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1543,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1544,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1545,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1546,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1547,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1548,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[349,350]],[[349,350]],[[1540,762],1540],[[1540,301],1540],[[1540,762],1540],[350],[350],[[1559,343,215]],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[]],[[]],[1519,636],0,[[[52,[1550]]]],[1550],0,[301,1540],[1566,360],0,[762,1540],[[762,762],1540],[[762,301],1540],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],141],[[],141],[1513,1514],0,0,0,[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[1559,343]],[[1559,343]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[[149,[1572]],89,[89,[1488]],[86,[[676,[706]]]],[86,[710]],[86,[1548]],[86,[1564]],[89,[1573]],[89,[343,[387,[1040]]]]]],[[[89,[[387,[1040]]]],89,[86,[1548]],[484,[1494]],[484,[1038]],[165,[1559]],[89,[343]],[89,[[387,[1519]]]],89,[89,[[387,[1519]]]],[89,[88]],[537,[88]],[537,[1515]],89,[537,[1519]]]],0,0,[1519,636],[1556,53],[[1556,53],53],[[1556,76],53],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],0,[[1569,34]],[[349,[352,[351]]]],[[349,[352,[351]]]],[[1559,343,88]],[[[354,[353]]]],[[[354,[353]]]],[[1559,343,1574]],[[1559,343,1520,1575]],0,[1516,7],[1518,7],[1513,7],[1521,7],[1522,7],[1523,7],[1524,7],[1525,7],[1526,7],[1527,7],[1528,7],[1529,7],[1531,7],[1532,7],[1533,7],[1534,7],[1538,7],[1547,7],[1516,38],[1518,38],[1513,38],[1521,38],[1522,38],[1523,38],[1524,38],[1525,38],[1526,38],[1527,38],[1528,38],[1529,38],[1531,38],[1532,38],[1533,38],[1534,38],[1538,38],[1547,38],[1516,108],[1518,108],[1513,108],[1521,108],[1522,108],[1523,108],[1524,108],[1525,108],[1526,108],[1527,108],[1528,108],[1529,108],[1531,108],[1532,108],[1533,108],[1534,108],[1538,108],[1547,108],[1513,1514],0,[[],1530],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[1545,1545],[1545,1545],0,0,0,[[1576,94]],[[],1],[1576,1],[[],1],[1576,1],[[[3,[2]]]],[1576,94],[1576,94],[[]],[[]],[1576,1576],[1576,98],[[]],[[],[[9,[22,8]]]],[1576,[[9,[94,8]]]],[[23,24,25]],[[],[[14,[38]]]],[[],1576],[7],[7],[[]],[7],[[],14],[[1576,38],[[14,[94]]]],[[1576,7],[[14,[94]]]],[[1576,7],[[14,[94]]]],[1576,7],[[1576,38],[[14,[94]]]],[[]],[25],[94,[[14,[1576]]]],[[]],[34],[25],[38,[[14,[94]]]],[38,[[14,[94]]]],[1576,[[14,[99]]]],[[],100],[[],7],[[]],[[[9,[1576,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[9,[1576,8]]],[[9,[94,8]]]],[[]],[1576,103],[[],[[14,[38]]]],[[1576,7],[[14,[38]]]],[[]],[[],[[14,[38]]]],[[],[[14,[38]]]],[1576,105],[[[9,[1576,8]]],106],[[1576,94],[[14,[29]]]],[1576,107],[[],38],[[],[[14,[38]]]],[[],38],[[1576,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[],38],0,[[]],[[]],[[],12],[[],12],[[],13],[[],[[14,[38]]]],[[],99],[[],38],[[],14],[[]],[1559],0,0,0,0,0,0,0,0,0,0,[[[14,[53]],[14,[53]],1556,1556],636],0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[1577,1577],[1578,1578],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],1577],[[],1579],[[],1580],[[],1581],[[],1578],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[[1577,31],[[12,[32]]]],[[1579,31],[[12,[32]]]],[[1580,31],[[12,[32]]]],[[1581,31],[[12,[32]]]],[[1578,31],[[12,[32]]]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[[77,[1472]]],1581],[[]],[[]],[[]],[[]],[[]],[[]],[[[77,[141]],1474],1581],[489,1581],[34],[34],[34],[34],[34],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],7],[[],7],[[],7],[[],7],[[],7],0,[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[1581,637],1581],[1581,1581],[[1581,1520],1581],[[1581,1473],1581],0,0,0,0,0,[[386,[89,[343]],89,[89,[88]]]],0,0,0,0,0,0,[[1582,94]],[[1583,94]],[[1584,94]],[[1585,94]],[1582,1],[[],1],[[],1],[1583,1],[[],1],[[],1],[1584,1],[1585,1],[[],1],[[],1],[[],1],[1582,1],[1583,1],[[],1],[[],1],[[],1],[1584,1],[1585,1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[1582,94],[1583,94],[1584,94],[1585,94],[1582,94],[1583,94],[1584,94],[1585,94],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1582,1582],[1583,1583],[1586,1586],[1584,1584],[1585,1585],[1587,1587],[1582,98],[1583,98],[1584,98],[1585,98],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[1582,[[9,[94,8]]]],[1583,[[9,[94,8]]]],[1584,[[9,[94,8]]]],[1585,[[9,[94,8]]]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[23,24,25]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],1582],[[],1583],[[],1584],[[],1585],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[]],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[7],[[1582,38],[[14,[94]]]],[[1583,38],[[14,[94]]]],[[1584,38],[[14,[94]]]],[[1585,38],[[14,[94]]]],[[1582,7],[[14,[94]]]],[[1583,7],[[14,[94]]]],[[1584,7],[[14,[94]]]],[[1585,7],[[14,[94]]]],[[1582,7],[[14,[94]]]],[[1583,7],[[14,[94]]]],[[1584,7],[[14,[94]]]],[[1585,7],[[14,[94]]]],[1582,7],[1583,7],[1584,7],[1585,7],[[1582,38],[[14,[94]]]],[[1583,38],[[14,[94]]]],[[1584,38],[[14,[94]]]],[[1585,38],[[14,[94]]]],[[1582,31],[[12,[32]]]],[[1583,31],[[12,[32]]]],[[1584,31],[[12,[32]]]],[[1585,31],[[12,[32]]]],[[]],[[]],[[]],[[]],[[]],[[]],[25],[25],[25],[25],[94,[[14,[1582]]]],[94,[[14,[1583]]]],[94,[[14,[1584]]]],[94,[[14,[1585]]]],[[]],[[]],[[]],[[]],[[]],[[]],[34],[34],[34],[34],[25],[25],[25],[25],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[1582,[[14,[99]]]],[1583,[[14,[99]]]],[1584,[[14,[99]]]],[1585,[[14,[99]]]],[[],100],[[],100],[[],100],[[],100],0,[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[1582,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1583,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1584,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1585,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[9,[1582,8]]],[[9,[94,8]]]],[[[9,[1583,8]]],[[9,[94,8]]]],[[[9,[1584,8]]],[[9,[94,8]]]],[[[9,[1585,8]]],[[9,[94,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[1582,103],[1583,103],[1584,103],[1585,103],[[1586,[14,[53]],[14,[53]],1556,1556],636],[[1587,[14,[53]],[14,[53]],1556,1556],636],[[[149,[44]],[86,[[87,[1459]]]],[89,[1488,[387,[1040]]]],[86,[1548]],[89,[[387,[1519]]]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[1582,7],[[14,[38]]]],[[1583,7],[[14,[38]]]],[[1584,7],[[14,[38]]]],[[1585,7],[[14,[38]]]],[[]],[[]],[[]],[[]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[1582,105],[1583,105],[1584,105],[1585,105],[[[9,[1582,8]]],106],[[[9,[1583,8]]],106],[[[9,[1584,8]]],106],[[[9,[1585,8]]],106],[[1582,94],[[14,[29]]]],[[1583,94],[[14,[29]]]],[[1584,94],[[14,[29]]]],[[1585,94],[[14,[29]]]],[1582,107],[1583,107],[1584,107],[1585,107],[[],38],[[],38],[[],38],[[],38],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],38],[[],38],[[],38],[[],38],[[1582,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1583,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1584,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1585,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[],38],[[],38],[[],38],[[],38],[1583,636],0,[[[165,[[87,[2]]]],[149,[44]],[86,[[87,[1459]]]],[89,[1488,[387,[1040]]]],[86,[1486]],[165,[1487]],[86,[1548]],[165,[[87,[1391]]]],[165,[1483]],[165,[1485]],89]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],99],[[],99],[[],99],[[],99],[[],38],[[],38],[[],38],[[],38],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[[149,[44]],[89,[1488,[387,[1040]]]],[86,[1548]],[86,[[87,[1391]]]],89]],[[[149,[44]],[89,[1488,[387,[1040]]]],[86,[1548]],[86,[[87,[2]]]],89]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[104,104],104],[[104,104]],0,0,[[201,94]],[[104,94]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[201,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[104,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[201,1],[[],1],[[],1],[[],1],[104,1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[201,1588],[201,[[47,[51]]]],[[],15],[[],15],[[],15],[[],15],[[],15],[201],[201,1589],[104,229],[104,229],[104,229],[201,[[52,[51]]]],[201,94],[104,94],[201,94],[104,94],[104,75],[104,53],[104,44],[201,1590],[201,229],[201],[201,1591],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[201,1588],[902,250],[1592],[1593],[1594,250],[[104,104],[[14,[104]]]],[[104,49],[[14,[104]]]],[[104,49],[[14,[104]]]],[[104,104],[[14,[104]]]],[[[157,[170]]],[[157,[170]]]],[[[903,[261]]],[[903,[261]]]],[1595,1595],[902,902],[201,201],[250,250],[1594,1594],[104,104],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[157,[170]]],[[157,[170]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[201,[[9,[94,8]]]],[104,[[9,[94,8]]]],[[[157,[[0,[1596,170]]]],[157,[[0,[1596,170]]]]],74],[[1595,1595],74],[[201,201],74],[[104,104],74],[[],74],[[],74],[[],74],[[],74],[[],[[14,[38]]]],[[],[[14,[38]]]],[490],[[201,31],[[12,[32]]]],[[104,31],[[12,[32]]]],[[],284],[[],[[157,[208]]]],[[],[[157,[38]]]],[[],902],[[],1592],[[],1597],[[],1593],[[],1598],[[],201],[[],250],[[],1594],[[],104],0,0,[[[157,[170]]]],[7],[903],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[150,[[12,[201]]]],[150,[[12,[104]]]],[[[1600,[1599]]],[[12,[1601]]]],0,[[104,49],104],[[104,49]],[[104,104],53],[[104,104],44],[[104,53],104],[[104,44],104],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[[[1602,[76]]]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[15,29],[15,29],[15,29],[15,29],[15,29],[30],[30],[30],[30],[30],[[],1599],[[],[[47,[51]]]],[[],[[319,[318]]]],[[],[[319,[318]]]],[[[157,[[0,[[505,[[0,[[505,[[0,[[505,[[0,[505,170]]]],170]]]],170]]]],170]]]],[157,[[0,[[505,[[0,[[505,[[0,[[505,[[0,[505,170]]]],170]]]],170]]]],170]]]]],29],[[[903,[[505,[[505,[[505,[505]]]]]]]],[903,[[505,[[505,[[505,[505]]]]]]]]],29],[[1595,1595],29],[[201,201],29],[[104,104],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[[[12,[490]]]],[1597,75],[1598,75],[250,75],[[[157,[[0,[490,170]]]],31],[[12,[32]]]],[[[157,[[0,[982,170]]]],31],[[12,[32]]]],[[[903,[490]],31],[[12,[32]]]],[[1595,31],[[12,[32]]]],[[902,31],[[12,[32]]]],[[1597,31],[[12,[32]]]],[[1598,31],[[12,[32]]]],[[201,31],[[12,[32]]]],[[201,31],[[12,[32]]]],[[201,31],[[12,[32]]]],[[201,31],[[12,[32]]]],[[250,31],[[12,[32]]]],[[1594,31],[[12,[32]]]],[[104,31],[[12,[32]]]],[170,[[157,[170]]]],[207,[[157,[208]]]],[[]],[141,[[157,[38]]]],[141,[[157,[38]]]],[38,[[157,[208]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1588,201],[1591,201],[1589,201],[1590,201],[[]],[[]],[[]],[[]],[1603,104],[1604,104],[1605,104],[1606,104],[[[47,[51]]],201],[[[47,[51]]],201],[[[47,[51]]],201],[[49,301,301,[47,[51]]],201],[[49,301,301,[47,[51]]],201],[75,104],[75,104],[75,104],[94,[[14,[201]]]],[94,[[14,[104]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[75,104],[53,104],[44,104],[[[52,[51]]],[[12,[201,1607]]]],[[[52,[51]]],[[12,[201,1607]]]],[38,[[12,[201]]]],[229,201],[229,201],[[75,75],201],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],0,[[75,75,75,75],1594],[[[903,[902]],76]],[201,[[14,[99]]]],[104,[[14,[99]]]],[38,141],[201,[[14,[1608]]]],[[],100],[[],100],[201,1609],[201,[[14,[1610]]]],[201,7],[[[157,[[0,[567,170]]]],30]],[[903,30]],[[[903,[567,[0,[1611,284]]]]],75],[[1595,30]],[[201,30]],[[104,30]],[[1594,567],75],[201,1589],[490],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[201,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[104,8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[201,[[47,[51]]]],[[[157,[170]]],[[157,[170]]]],[[[9,[201,8]]],[[9,[94,8]]]],[[[9,[104,8]]],[[9,[94,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[201,29],[104,29],0,[[],[[14,[38]]]],[[],[[14,[38]]]],[[104,49],104],[[104,49]],[[104,53],104],[[104,44],104],[1595],[567,[[903,[567,[0,[1611,284]]]]]],[76,[[1602,[76]]]],[[],1594],[[75,49],104],[[],201],[[],201],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[38,[[12,[201,1607]]]],[[[157,[[0,[[1612,[[0,[[1612,[[0,[[1612,[[0,[1612,170]]]],170]]]],170]]]],170]]]],[157,[[0,[[1612,[[0,[[1612,[[0,[[1612,[[0,[1612,170]]]],170]]]],170]]]],170]]]]],[[14,[74]]]],[[1595,1595],[[14,[74]]]],[[201,201],[[14,[74]]]],[[104,104],[[14,[74]]]],0,[[],[[14,[38]]]],[[],[[14,[38]]]],[201,[[14,[75]]]],[104,[[14,[75]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[201,105],[104,105],[[[9,[201,8]]],106],[[[9,[104,8]]],106],[[201,94],[[14,[29]]]],[[104,94],[[14,[29]]]],[201,107],[104,107],[[],38],[[],38],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],38],[[],38],[[104,104],104],[[104,49],104],[[104,104],104],[[201,226],12],[[104,226],12],[[201,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[104,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[],38],[[],38],[[],1599],[201,1590],[[104,104],104],[[104,104]],[104,49],[104,49],[104,49],[215,104],[215,104],0,0,[201,[[47,[51]]]],[201],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],141],[[],141],[201,229],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[[79,[51,8]]],[[12,[201]]]],[38,[[12,[201]]]],[[],12],[[],12],[[],12],[53,[[12,[104,1613]]]],[44,[[12,[104,1613]]]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[38,[[12,[201,1607]]]],[[[52,[51]]],[[12,[201,1607]]]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],99],[[],99],[[],38],[[],38],[[],38],[[],201],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[201,1591],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[12,[490]]]],[7,1594],[[75,75,75,75],1594],[[1597,[52,[51]]]],[[1598,[52,[51]]]],[[250,[52,[51]]]],[[250,229]],[[250,301]],[[250,49]],[[1597,75]],[[1598,75]],[[250,75]],[[250,51]],[[250,7]],[212,14],0,0,0,0,0,0,0,[[[253,[1614]]],1614],[[[671,[1614]]],1614],[[[1615,[1614]]],1614],[[[253,[[0,[545,160,675,567]],[0,[545,160]],[0,[160,1611,143,218]],252]],94]],[[[671,[[0,[567,675,261,143,218,160]],[251,[250]],252]],94]],[[],1],[[],1],[[[253,[[0,[545,160,675,567]],[0,[545,160]],[0,[160,1611,143,218]],252]]],1],[[[671,[[0,[567,675,261,143,218,160]],[251,[250]],252]]],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[253,[[0,[545,160,675,567]],[0,[545,160]],[0,[160,1611,143,218]],252]]],1],[[],1],[[[671,[[0,[567,675,261,143,218,160]],[251,[250]],252]]],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[253,[[0,[545,160,675,567]],[0,[545,160]],[0,[160,1611,143,218]],252]]],94],[[[671,[[0,[567,675,261,143,218,160]],[251,[250]],252]]],94],[[[253,[[0,[545,160,675,567]],[0,[545,160]],[0,[160,1611,143,218]],252]]],94],[[[671,[[0,[567,675,261,143,218,160]],[251,[250]],252]]],94],[[[671,[[0,[675,567,261]],[0,[1611,284]],1614]],[671,[[0,[675,567,261]],[0,[1611,284]],1614]]],[[671,[[0,[675,567,261]],[0,[1611,284]],252]]]],[[[671,[[0,[675,567,261]],[0,[1611,284]],1614]],[671,[[0,[675,567,261]],[0,[1611,284]],1614]]],[[671,[[0,[675,567,261]],[0,[1611,284]],252]]]],[[[671,[[0,[675,567,261]],[0,[1611,284]],252]],[671,[[0,[675,567,261]],[0,[1611,284]],252]]],[[671,[[0,[675,567,261]],[0,[1611,284]],252]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[253,[1614]]],7],[[[671,[1614]]],7],[[[1615,[1614]]],7],[[[253,[1614]]]],[[[671,[1614]]]],[[[1615,[1614]]]],[[[253,[261,261,261,[0,[1614,261]]]]],[[253,[261,261,261,[0,[1614,261]]]]]],[[[671,[261,261,[0,[1614,261]]]]],[[671,[261,261,[0,[1614,261]]]]]],[[[1615,[261,[0,[1614,261]]]]],[[1615,[261,[0,[1614,261]]]]]],[1616,1616],[[[253,[[0,[545,160,675,567]],[0,[545,160]],[0,[160,1611,143,218]],252]]],942],[[[253,[261,261,261,[0,[1614,261]]]],[253,[261,261,261,[0,[1614,261]]]]]],[[[671,[261,261,[0,[1614,261]]]],[671,[261,261,[0,[1614,261]]]]]],[[]],[[]],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[[253,[[0,[545,160,675,567]],[0,[545,160]],[0,[160,1611,143,218]],252]]],[[9,[94,8]]]],[[[671,[[0,[567,675,261,143,218,160]],[251,[250]],252]]],[[9,[94,8]]]],[[[671,[[0,[675,567]],1611,1614]],[0,[567,[1617,[[0,[675,567]]]],170]]],29],[[[253,[[0,[675,567]],1611,1614]],[0,[567,[1617,[[0,[675,567]]]],170]]],29],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[253,[284,[0,[284,1614]]]]]],[[],[[671,[284,[0,[284,1614]]]]]],[[],[[1615,[[0,[1614,284]]]]]],[7],[7],[7],[7],[7],[7],[7],[7],[150,[[12,[[253,[[0,[272,675,567]],272,[0,[1611,284]],[0,[1614,284]]]]]]]],[150,[[12,[[671,[[0,[272,675,567]],[0,[1611,284]],[0,[1614,284]]]]]]]],[[[671,[[0,[675,567]],1611,1614]],[671,[[0,[675,567]],1611,1614]]],[[1618,[[0,[675,567]],1611,1614]]]],[[]],[[]],[[]],[[]],[[[253,[1614]]],[[1619,[1614]]]],[[[9,[[253,[[0,[545,160,675,567]],[0,[545,160]],[0,[160,1611,143,218]],252]],8]]],[[79,[8]]]],[[[671,[1614]]],[[1620,[1614]]]],[[[1615,[1614]]],[[1621,[1614]]]],[7],[7],[7],[7],[15,29],[15,29],[15,29],[[[253,[[0,[675,567]],1611,1614]],[0,[675,567]]],[[1622,[[0,[675,567]],1611,1614]]]],[[[671,[[0,[675,567]],1611,1614]],[0,[675,567]]],[[1623,[[0,[675,567]],1611,1614]]]],[[[1615,[1614]],75,25,142],[[1624,[1614]]]],[[[253,[[0,[675,567]],1611,1614]],[0,[567,[1617,[[0,[675,567]]]],170]]],[[1625,[[0,[675,567]],[0,[567,[1617,[[0,[675,567]]]],170]],1611,1614]]]],[[[253,[[0,[675,567]],[505,[[505,[[505,[505]]]]]],1611,1614]],[253,[[0,[675,567]],[505,[[505,[[505,[505]]]]]],1611,1614]]],29],[[[671,[[0,[675,567]],1611,1614]],[671,[[0,[675,567]],1611,1614]]],29],[[1616,1616],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[[[253,[[0,[675,567,508]],508,1611,1614]],489]],[[[253,[[0,[675,567,508]],508,1611,1614]],489]],[[[253,[[0,[675,567]],1611,1614]],489]],[[[671,[[0,[675,567]],1611,1614]],489]],[[[671,[[0,[675,567,508]],1611,1614]],489]],[[[253,[1614]],25],[[1626,[25,1614]]]],[[[671,[1614]],25],[[1627,[25,1614]]]],[[[1615,[1614]],25],[[1628,[25,1614]]]],[[[1615,[1614]],75,25],14],[[[1615,[1614]],75,25],[[12,[[1629,[1614]],[1630,[1614]]]]]],[[[1615,[1614]],75,25],14],[[[253,[490,490,1614]],31],[[12,[32]]]],[[[671,[490,1614]],31],[[12,[32]]]],[[[1615,[490,1614]],31],[[12,[32]]]],[[1616,31],[[12,[32]]]],[[]],[47,[[253,[[0,[675,567]],[251,[250]],[0,[284,1614]]]]]],[[]],[[[253,[1614]]],[[671,[1614]]]],[[[47,[[0,[675,567]]]]],[[671,[[0,[675,567]],[251,[250]],[0,[284,1614]]]]]],[[]],[[]],[489,[[253,[[0,[675,567]],[0,[1611,284]],[0,[284,1614]]]]]],[489,[[671,[[0,[675,567]],[0,[1611,284]],[0,[284,1614]]]]]],[94,[[14,[[253,[[0,[545,160,675,567]],[0,[545,160]],[0,[160,1611,284,143,218]],252]]]]]],[94,[[14,[[671,[[0,[567,675,261,143,218,160]],[251,[250]],252]]]]]],[[]],[[]],[[]],[[]],[34],[34],[34],[[[253,[[0,[545,160,675,567]],[0,[545,160]],[0,[160,1611,143,218]],252]],94],[[14,[94]]]],[[[253,[[0,[675,567]],1611,1614]],[0,[567,[1617,[[0,[675,567]]]],170]]],14],[[[671,[[0,[675,567]],1611,1614]],[0,[567,[1617,[[0,[675,567]]]],170]]],[[14,[[0,[675,567]]]]]],[[[253,[[0,[545,160,675,567]],[0,[545,160]],[0,[160,1611,143,218]],252]],7],14],[[[253,[[0,[545,160,675,567]],[0,[545,160]],[0,[160,1611,143,218]],252]],7],14],[[[253,[[0,[675,567]],1611,1614]],[0,[567,[1617,[[0,[675,567]]]],170]]],14],[[[253,[[0,[675,567]],1611,1614]],[0,[567,[1617,[[0,[675,567]]]],170]]],14],[[[253,[[0,[675,567]],1611,1614]],[47,[[0,[567,[1617,[[0,[675,567]]]],170]]]]],[[14,[47]]]],[[[253,[[0,[675,567]],1611,1614]],[47,[[0,[567,[1617,[[0,[675,567]]]],170]]]]],[[14,[47]]]],[[[253,[[0,[675,567]],1611,1614]],[47,[[0,[567,[1617,[[0,[675,567]]]],170]]]]],[[14,[47]]]],[[[1615,[1614]],[47,[75]],25],[[14,[47]]]],[[[253,[[0,[675,567]],1611,1614]],[47,[[0,[567,[1617,[[0,[675,567]]]],170]]]]],[[14,[47]]]],[[[1615,[1614]],[47,[75]],25],[[14,[47]]]],[[[253,[[0,[545,160,675,567]],[0,[545,160]],[0,[160,1611,143,218]],252]],94],[[14,[94]]]],[[[253,[[0,[675,567]],1611,1614]],[0,[567,[1617,[[0,[675,567]]]],170]]],14],[[[671,[[0,[675,567]],1611,1614]],[0,[675,567]]],[[0,[675,567]]]],[[[671,[[0,[675,567]],1611,1614]],[0,[567,[1617,[[0,[675,567]]]],1631,170]]],[[0,[675,567]]]],[[[253,[[903,[[0,[567,675,[505,[[0,[567,675,[505,[[0,[567,675,[505,[[0,[567,675,505,261]]]],261]]]],261]]]],261]],902]],1592,252]],[903,[[0,[567,675,[505,[[0,[567,675,[505,[[0,[567,675,[505,[[0,[567,675,505,261]]]],261]]]],261]]]],261]],902]],76]],[[[671,[[0,[675,567]],1611,1614]],[0,[567,[1617,[[0,[675,567]]]],170]],76],[[0,[675,567]]]],[[[253,[[0,[545,160,675,567]],[0,[545,160]],[0,[160,1611,143,218]],252]]],[[14,[99]]]],[[[671,[[0,[567,675,261,143,218,160]],[251,[250]],252]]],[[14,[99]]]],[[],100],[[],100],0,0,0,[[[253,[1614]]]],[[[671,[1614]]]],[[[253,[[0,[675,567]],1611,1614]],[0,[567,[1617,[[0,[675,567]]]],170]]]],[[],7],[[],7],[[],7],[[],7],[[[253,[[0,[675,567]],1611,1614]],[0,[675,567]]],14],[[[671,[[0,[675,567]],1611,1614]],[0,[675,567]]],29],[[[253,[[0,[545,160,675,567]],[0,[545,160]],[0,[160,1611,143,218]],252]],[9,[94,8]],[9,[94,8]]],[[14,[[9,[94,8]]]]]],[[[1615,[1614]],75,142],[[1629,[1614]]]],[[[253,[[0,[675,567]],1611,1614]],[0,[675,567]]]],[[[671,[[0,[675,567]],1611,1614]],[0,[675,567]]],[[0,[675,567]]]],[[[671,[[0,[675,567]],1611,1614]],[671,[[0,[675,567]],1611,1614]]],[[1632,[[0,[675,567]],1611,1614]]]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[[253,[[0,[545,160,675,567]],[0,[545,160]],[0,[160,1611,143,218]],252]],8]]],[[9,[1,8]]]],[[[9,[[671,[[0,[567,675,261,143,218,160]],[251,[250]],252]],8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[253,[1614]]],1003],[[[253,[1614]]],[[1633,[1614]]]],[[[253,[1614]]],1634],[[[671,[1614]]],1635],[[[671,[1614]]],[[1636,[1614]]]],[[[1615,[1614]]],1637],[[[1615,[1614]]],1638],[[[1615,[1614]]],[[1639,[1614]]]],[[[253,[1614]]],[[1640,[1614]]]],[[[9,[[253,[[0,[545,160,675,567]],[0,[545,160]],[0,[160,1611,143,218]],252]],8]]],[[9,[94,8]]]],[[[9,[[671,[[0,[567,675,261,143,218,160]],[251,[250]],252]],8]]],[[9,[94,8]]]],[[]],[[]],[[]],[[]],[[[253,[1614]]],[[1641,[1614]]]],[[[671,[[0,[675,567]],1611,1614]],[671,[[0,[675,567]],1611,1614]]],29],[[[253,[1614]]],29],[[[671,[1614]]],29],[[[1615,[1614]]],29],[[[671,[[0,[675,567]],1611,1614]],[671,[[0,[675,567]],1611,1614]]],29],[[[671,[[0,[675,567]],1611,1614]],[671,[[0,[675,567]],1611,1614]]],29],[[[253,[[0,[545,160,675,567]],[0,[545,160]],[0,[160,1611,143,218]],252]]],975],[[[253,[1614]]],1003],[[[671,[1614]]],1635],[[[1615,[1614]]],1637],[[[253,[1614]]],1634],[[[1615,[1614]]],1638],[[[253,[1614]]],1642],[[[253,[[0,[545,160,675,567]],[0,[545,160]],[0,[160,1611,143,218]],252]]],7],[[[253,[1614]]],7],[[[671,[1614]]],7],[[[1615,[1614]]],7],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[253,[[251,[250]],252]]]],[[],[[671,[[251,[250]],252]]]],[[],[[1615,[252]]]],[1614,[[253,[[251,[250]],1614]]]],[1614,[[671,[[0,[567,675]],[251,[250]],1614]]]],[1614,[[1615,[1614]]]],[[]],[[]],[[]],0,[[[253,[1614]]],[[1643,[1614]]]],[[[253,[1614]]],[[1644,[1614]]]],[[[253,[1614]]],[[1645,[1614]]]],[[[671,[1614]]],[[1645,[1614]]]],[[[253,[1614]]],[[1645,[1614]]]],[[[671,[1614]]],[[1645,[1614]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[[253,[[0,[545,160,675,567]],[0,[545,160]],[0,[160,1611,143,218]],252]]],105],[[[671,[[0,[567,675,261,143,218,160]],[251,[250]],252]]],105],[[[9,[[253,[[0,[545,160,675,567]],[0,[545,160]],[0,[160,1611,143,218]],252]],8]]],106],[[[9,[[671,[[0,[567,675,261,143,218,160]],[251,[250]],252]],8]]],106],[[[253,[[0,[545,160,675,567]],[0,[545,160]],[0,[160,1611,143,218]],252]],94],[[14,[29]]]],[[[253,[[0,[545,160,675,567]],[0,[545,160]],[0,[160,1611,143,218]],252]]],107],[[[671,[[0,[567,675,261,143,218,160]],[251,[250]],252]]],107],[[],38],[[],38],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],38],[[],38],[[[253,[[0,[675,567]],1611,1614]],[0,[567,[1617,[[0,[675,567]]]],170]]],14],[[[253,[[0,[545,160,675,567]],[0,[545,160]],[0,[160,1611,143,218]],252]],94],[[14,[[9,[94,8]]]]]],[[[671,[[0,[675,567]],1611,1614]],[0,[567,[1617,[[0,[675,567]]]],170]]],29],[[[253,[[0,[675,567]],1611,1614]],[0,[567,[1617,[[0,[675,567]]]],170]]],14],[[[671,[[0,[675,567]],1611,1614]],[0,[675,567]]],[[14,[[0,[675,567]]]]]],[[[253,[[0,[675,567]],1611,1614]],7]],[[[671,[[0,[675,567]],1611,1614]],7]],[[[1615,[1614]],7,142]],[[[253,[1614]],25]],[[[671,[1614]],25]],[[[1615,[1614]],25]],[[[253,[[0,[278,675,567]],278,1611,1614]],226],12],[[[671,[[0,[278,675,567]],1611,1614]],226],12],[[[253,[[0,[545,160,675,567]],[0,[545,160]],[0,[160,1611,143,218]],252]],[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[[671,[[0,[567,675,261,143,218,160]],[251,[250]],252]],[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[],38],[[],38],[[[253,[[0,[675,567]],1611,1614]],7]],[[[671,[[0,[675,567]],1611,1614]],7]],[[[1615,[1614]],7,142]],[[[253,[[0,[675,567]],1611,1614]]]],[[[671,[[0,[675,567]],1611,1614]]]],[[[1615,[1614]],142]],[[[671,[[0,[675,567,261]],[0,[1611,284]],252]],[671,[[0,[675,567,261]],[0,[1611,284]],252]]],[[671,[[0,[675,567,261]],[0,[1611,284]],252]]]],[[[671,[[0,[675,567]],1611,1614]],[671,[[0,[675,567]],1611,1614]]],[[1646,[[0,[675,567]],1611,1614]]]],[[[671,[[0,[675,567]],1611,1614]],[0,[567,[1617,[[0,[675,567]]]],170]]],[[14,[[0,[675,567]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[[253,[[0,[675,567]],1611,1614]],[0,[675,567]]],[[12,[[1647,[[0,[675,567]],1611,1614]]]]]],[[],12],[[],12],[[],12],[[],12],[[[253,[[0,[675,567]],1611,1614]],7],[[12,[1616]]]],[[[671,[[0,[675,567]],1611,1614]],7],[[12,[1616]]]],[[[1615,[1614]],7,142],[[12,[1616]]]],[[],13],[[],13],[[],13],[[],13],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],99],[[],99],[[],38],[[],38],[[],38],[[],38],[[],201],[[],201],[[[671,[[0,[675,567]],1611,1614]],[671,[[0,[675,567]],1611,1614]]],[[1648,[[0,[675,567]],1611,1614]]]],[[],14],[[],14],[[],14],[[],14],[[[253,[1614]]],1649],[[[253,[1614]]],1650],[[]],[[]],[[]],[[]],[7,[[253,[[251,[250]],252]]]],[7,[[671,[[251,[250]],252]]]],[7,[[1615,[252]]]],[7,[[253,[252]]]],[7,[[671,[252]]]],[[7,1614],[[253,[1614]]]],[[7,1614],[[671,[1614]]]],[[7,1614],[[253,[[251,[250]],1614]]]],[[7,1614],[[671,[[0,[567,675]],[251,[250]],1614]]]],[[7,1614],[[1615,[1614]]]],[[],[[253,[252]]]],[[],[[671,[252]]]],[1614,[[253,[1614]]]],[1614,[[671,[1614]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[1651,[1614]],76],[[1651,[1614]]]],[[[1622,[1614]],76],[[1622,[1614]]]],[[[1625,[170,1614]],76],[[1625,[170,1614]]]],[[[1651,[1614]],76],[[1651,[1614]]]],[[[1622,[1614]],76],[[1622,[1614]]]],[[[1625,[170,1614]],76],[[1625,[170,1614]]]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1003,1003],[1642,1642],[1649,1649],[[]],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],0,[[[1003,[490,490]],31],[[12,[32]]]],[[[1634,[490,490]],31],[[12,[32]]]],[[[1633,[490,490,1614]],31],[[12,[32]]]],[[[1640,[490,490,1614]],31],[[12,[32]]]],[[[1641,[490,1614]],31],[[12,[32]]]],[[[1642,[490]],31],[[12,[32]]]],[[[1649,[490]],31],[[12,[32]]]],[[[1619,[490,490,1614]],31],[[12,[32]]]],[[[1650,[490]],31],[[12,[32]]]],[[[1644,[1614]],31],[[12,[32]]]],[[[1651,[490,490,1614]],31],[[12,[32]]]],[[[1652,[490,490,1614]],31],[[12,[32]]]],[[[1653,[1614]],31],[[12,[32]]]],[[[1643,[1614]],31],[[12,[32]]]],[[[1622,[490,490,1614]],31],[[12,[32]]]],[[[1654,[490,490,1614]],31],[[12,[32]]]],[[[1655,[490,1614]],31],[[12,[32]]]],[[[1625,[[1656,[[0,[490,170]]]],[0,[490,170]],490,1614]],31],[[12,[32]]]],[[[1657,[[1656,[[0,[490,170]]]],[0,[490,170]],490,1614]],31],[[12,[32]]]],[[[1658,[[1656,[[0,[490,170]]]],[0,[490,170]],1614]],31],[[12,[32]]]],[[[1647,[490,490,1614]],31],[[12,[32]]]],[[[1647,[490,490,1614]],31],[[12,[32]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[1644,[1614]],75,25],[[1651,[1614]]]],[[[1643,[1614]],75,25],14],[[[1644,[1611,1614]],[0,[567,1617,170]]],[[1651,[1611,1614]]]],[[[1643,[1611,1614]],[0,[567,1617,170]]],14],[[[1644,[1614]],75,[0,[1617,170]]],[[1651,[1614]]]],[[[1643,[1614]],75,[0,[1617,170]]],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[1652,[1614]]]],[[[1654,[1614]]]],[[[1657,[170,1614]]]],[[[1652,[1614]]]],[[[1652,[1614]]]],[[[1652,[1614]]]],[[[1654,[1614]]]],[[[1657,[170,1614]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[[1651,[567,1611,1614]],567],[[1652,[567,1611,1614]]]],[[[1652,[1614]]]],[[[1653,[567,1611,1614]],567]],[[[1622,[567,1611,1614]]],[[1654,[567,1611,1614]]]],[[[1654,[1614]]]],[[[1655,[567,1611,1614]]]],[[[1625,[[0,[567,[1549,[170]]]],170,1611,1614]]],[[1657,[[0,[567,[1549,[170]]]],170,1611,1614]]]],[[[1657,[170,1614]]]],[[[1658,[[0,[567,[1549,[170]]]],170,1611,1614]]]],[[[1653,[567,1611,1614]],75,567]],[[[1652,[1614]]]],[[[1653,[1614]],75,142]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[1652,[1614]]]],[[[1655,[1614]]]],[[[1658,[[1549,[170]],170,1614]]],[[1549,[170]]]],[[[1652,[1614]]]],[[[1652,[1614]]]],[[[1654,[1614]]]],[[[1657,[170,1614]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[1652,[1614]]]],[[[1622,[1614]]]],[[[1654,[1614]]]],[[[1655,[1614]]]],[[[1625,[[1656,[170]],170,1614]]],170],[[[1657,[170,1614]]]],[[[1658,[[1656,[170]],170,1614]]],170],[[[1652,[1614]]]],[1003,7],[1634,7],[[[1633,[1614]]],7],[[[1640,[1614]]],7],[[[1641,[1614]]],7],[1642,7],[1649,7],[[[1619,[1614]]],7],[1650,7],[1003,14],[1634,14],[[[1633,[1614]]],14],[[[1640,[1614]]],14],[[[1641,[1614]]],14],[1642,14],[1649,14],[[[1619,[1614]]],14],[[[1626,[25,1614]]],14],[1650,14],[[[1622,[567,284,1611,1614]]],284],[[[1625,[[0,[567,[1549,[170]]]],170,284,1611,1614]]],284],[[[1651,[567,1611,1614]],567]],[[[1622,[567,1611,1614]]]],[[[1625,[[0,[567,[1549,[170]]]],170,1611,1614]]]],[[[1651,[567,1611,1614]],76]],[[[1622,[567,1611,1614]],76]],[[[1625,[[0,[567,[1549,[170]]]],170,1611,1614]],76]],[[[1622,[567,1611,1614]],76]],[[[1625,[[0,[567,[1656,[170]],[1549,[170]]]],170,1611,1614]],76]],[[[1652,[1614]]]],[[[1654,[1614]]]],[[[1657,[170,1614]]]],[[[1652,[1614]]]],[[[1654,[1614]]]],[[[1657,[170,1614]]]],[[[1654,[1614]]]],[[[1657,[[1549,[170]],170,1614]]]],[[[1652,[1614]],76],[[1651,[1614]]]],[[[1654,[1614]],76],[[1622,[1614]]]],[[[1657,[170,1614]],76],[[1625,[170,1614]]]],[[[1654,[1614]]]],[[[1657,[[1549,[170]],170,1614]]],[[1549,[170]]]],[1003],[1634],[[[1633,[1614]]]],[[[1640,[1614]]]],[[[1641,[1614]]]],[1642],[1649],[[[1619,[1614]]]],[[[1626,[25,1614]]]],[1650],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],141],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1635,1635],[[[1632,[1614]]],[[1632,[1614]]]],[[[1618,[1614]]],[[1618,[1614]]]],[[[1646,[1614]]],[[1646,[1614]]]],[[[1648,[1614]]],[[1648,[1614]]]],[[]],[[]],[[]],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[[1635,[490]],31],[[12,[32]]]],[[[1636,[490,1614]],31],[[12,[32]]]],[[[1620,[490,1614]],31],[[12,[32]]]],[[[1632,[[0,[490,675,567]],1611,1614]],31],[[12,[32]]]],[[[1618,[[0,[490,675,567]],1611,1614]],31],[[12,[32]]]],[[[1646,[[0,[490,675,567]],1611,1614]],31],[[12,[32]]]],[[[1648,[[0,[490,675,567]],1611,1614]],31],[[12,[32]]]],[[[1623,[490,1614]],31],[[12,[32]]]],[[[1659,[490,1614]],31],[[12,[32]]]],[[[1660,[490,1614]],31],[[12,[32]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[1623,[1614]]]],[[[1659,[1614]]]],[[[1660,[1614]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[[1623,[567,1611,1614]]],[[1659,[567,1611,1614]]]],[[[1660,[567,1611,1614]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[1660,[1614]]]],[1635,7],[[[1636,[1614]]],7],[[[1620,[1614]]],7],[1635,14],[[[1636,[1614]]],14],[[[1620,[1614]]],14],[[[1627,[25,1614]]],14],[[[1632,[[0,[675,567]],1611,1614]]],[[14,[[0,[675,567]]]]]],[[[1618,[[0,[675,567]],1611,1614]]],[[14,[[0,[675,567]]]]]],[[[1646,[[0,[675,567]],1611,1614]]],[[14,[[0,[675,567]]]]]],[[[1648,[[0,[675,567]],1611,1614]]],[[14,[[0,[675,567]]]]]],[[[1623,[567,1611,1614]]]],[[[1659,[1614]]]],[[[1659,[1614]]]],[1635],[[[1636,[1614]]]],[[[1620,[1614]]]],[[[1627,[25,1614]]]],[[[1632,[[0,[675,567]],1611,1614]]]],[[[1618,[[0,[675,567]],1611,1614]]]],[[[1646,[[0,[675,567]],1611,1614]]]],[[[1648,[[0,[675,567]],1611,1614]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[[[1624,[1614]],76],[[1624,[1614]]]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[[1624,[490,1614]],31],[[12,[32]]]],[[[1629,[490,1614]],31],[[12,[32]]]],[[[1661,[490,1614]],31],[[12,[32]]]],[[[1630,[490,1614]],31],[[12,[32]]]],[[[1621,[490,1614]],31],[[12,[32]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[1629,[1614]]]],[[[1629,[1614]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[[1624,[1614]]],[[1629,[1614]]]],[[[1661,[1614]]],[[1629,[1614]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],[[]],[[]],[[]],[[[1629,[1614]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[1629,[1614]]],[[1615,[1614]]]],[[[1661,[1614]]],[[1615,[1614]]]],[[[1630,[1614]]],[[1615,[1614]]]],[1637,7],[1638,7],[[[1639,[1614]]],7],[[[1621,[1614]]],7],[1637,14],[1638,14],[[[1639,[1614]]],14],[[[1621,[1614]]],14],[[[1628,[25,1614]]],14],[[[1624,[1614]]],[[1629,[1614]]]],[[[1624,[1614]],76],[[1629,[1614]]]],[[[1629,[1614]]]],[1637],[1638],[[[1639,[1614]]]],[[[1621,[1614]]]],[[[1628,[25,1614]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[[1645,[1614]]]],[[[1645,[1614]]],1614],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[1662],[1662],[1662],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[1645,[1614]],7],1662],[[[1645,[1614]],1662],7],[[[1645,[1614]]],7],[[[1645,[1614]]],7],[[[1645,[1614]]]],[[[1645,[1614]]]],[1662,1662],[[[1645,[261,[0,[1614,261]]]]],[[1645,[261,[0,[1614,261]]]]]],[1663,1663],[[[1645,[261,[0,[1614,261]]]],[1645,[261,[0,[1614,261]]]]]],[[[1645,[261,[0,[1614,261]]]],[1645,[261,[0,[1614,261]]]],142]],[[]],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[1662,1662]],[[[1645,[1614]]],507],[[[1645,[1614]]],507],[[],[[1645,[[0,[1614,284]]]]]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[1645,[1614]]],[[1664,[1614]]]],[[[1645,[1614]],1663],[[1664,[1614]]]],[7],[7],[7],[[[1645,[1614]]]],[7],[7],[[[1665,[1614]]]],[[[1664,[1614]]]],[7],[7],[[[1645,[1614]],1662]],[[[1645,[1614]],75,25],29],[[[1645,[1614]],75,25],[[14,[1662]]]],[[[1645,[1614]],75,25,142],[[12,[1662,1666]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[34],[[[1645,[1614]],75,25],14],[[[1645,[1614]],[47,[75]],25],[[14,[47]]]],[[[1645,[1614]],[47,[75]],25],[[14,[47]]]],[[[1645,[1614]],75,25],14],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[[1645,[1614]],75,142],1662],[[[1645,[1614]],75,142]],[[[1645,[1614]],75,1666],1662],[[[1645,[1614]],75],1662],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[1645,[1614]]],[[1665,[1614]]]],[[]],[[]],[[]],[[]],[[[1645,[1614]],1663],[[1665,[1614]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[1645,[1614]],7],29],[[[1645,[1614]]],29],[[[1645,[1614]]],1663],[[[1665,[1614]]],1663],[[[1664,[1614]]],1663],[[[1645,[1614]],75],1667],[[[1645,[1614]]],7],[[],[[1645,[252]]]],[1614,[[1645,[1614]]]],[1663,[[14,[1662]]]],[[[1665,[1614]]],14],[[[1664,[1614]]],14],[1667,[[14,[1662]]]],[[]],[[1663,1662]],[[1663,1662]],[[[1645,[1614]],1662]],[[[1645,[1614]],75,25],14],[[[1645,[1614]],1662,76],29],[[[1645,[1614]],7,142]],[[[1645,[1614]],7,142]],[1663],[[[1665,[1614]]]],[[[1664,[1614]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[[1645,[1614]],75],[[12,[1662]]]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[[1645,[1614]],7,142],[[12,[1616]]]],[7,[[12,[[1645,[252]],1616]]]],[[7,1614],[[12,[[1645,[1614]],1616]]]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7,[[1645,[252]]]],[[7,1614],[[1645,[1614]]]],0,0,[[],1],[[],15],[15,29],[30],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[1668,1668]],[[1669,1669]],[[1670,1670]],[[1671,1671]],[[1672,1672]],[[1673,1673]],[[1674,1674]],[[1674,51]],[[1675,1675]],[[1675,301]],[[385,49]],[[385,385]],[[1676,1676]],[[1676,75]],[[1677,229]],[[1677,1677]],[[1678,1678]],[[1678,7]],[[1668,1668]],[[1669,1669]],[[1670,1670]],[[1671,1671]],[[1672,1672]],[[1673,1673]],[[1674,1674]],[[1674,51]],[[1675,1675]],[[1675,301]],[[385,49]],[[385,385]],[[1676,1676]],[[1676,75]],[[1677,229]],[[1677,1677]],[[1678,1678]],[[1678,7]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1679,1679],[1680,1680],[1668,1668],[1669,1669],[1670,1670],[1671,1671],[1672,1672],[1673,1673],[1674,1674],[1675,1675],[385,385],[1676,1676],[1677,1677],[1678,1678],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[1668,1668],74],[[1669,1669],74],[[1670,1670],74],[[1671,1671],74],[[1672,1672],74],[[1673,1673],74],[[1674,1674],74],[[1675,1675],74],[[385,385],74],[[1676,1676],74],[[1677,1677],74],[[1678,1678],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],1668],[[],1669],[[],1670],[[],1671],[[],1672],[[],1673],[[],1674],[[],1675],[[],385],[[],1676],[[],1677],[[],1678],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[[1679,1679],29],[[1680,1680],29],[[1668,1668],29],[[1669,1669],29],[[1670,1670],29],[[1671,1671],29],[[1672,1672],29],[[1673,1673],29],[[1674,1674],29],[[1675,1675],29],[[385,385],29],[[1676,1676],29],[[1677,1677],29],[[1678,1678],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[1679,31],[[12,[32]]]],[[1679,31],[[12,[32]]]],[[1680,31],[[12,[32]]]],[[1680,31],[[12,[32]]]],[[1668,31],[[12,[32]]]],[[1668,31],[[12,[32]]]],[[1668,31],[[12,[32]]]],[[1668,31],[[12,[32]]]],[[1668,31],[[12,[32]]]],[[1668,31],[[12,[32]]]],[[1669,31],[[12,[32]]]],[[1669,31],[[12,[32]]]],[[1669,31],[[12,[32]]]],[[1669,31],[[12,[32]]]],[[1669,31],[[12,[32]]]],[[1669,31],[[12,[32]]]],[[1670,31],[[12,[32]]]],[[1670,31],[[12,[32]]]],[[1670,31],[[12,[32]]]],[[1670,31],[[12,[32]]]],[[1670,31],[[12,[32]]]],[[1670,31],[[12,[32]]]],[[1671,31],[[12,[32]]]],[[1671,31],[[12,[32]]]],[[1671,31],[[12,[32]]]],[[1671,31],[[12,[32]]]],[[1671,31],[[12,[32]]]],[[1671,31],[[12,[32]]]],[[1672,31],[[12,[32]]]],[[1672,31],[[12,[32]]]],[[1672,31],[[12,[32]]]],[[1672,31],[[12,[32]]]],[[1672,31],[[12,[32]]]],[[1672,31],[[12,[32]]]],[[1673,31],[[12,[32]]]],[[1673,31],[[12,[32]]]],[[1673,31],[[12,[32]]]],[[1673,31],[[12,[32]]]],[[1673,31],[[12,[32]]]],[[1673,31],[[12,[32]]]],[[1674,31],[[12,[32]]]],[[1674,31],[[12,[32]]]],[[1674,31],[[12,[32]]]],[[1674,31],[[12,[32]]]],[[1674,31],[[12,[32]]]],[[1674,31],[[12,[32]]]],[[1675,31],[[12,[32]]]],[[1675,31],[[12,[32]]]],[[1675,31],[[12,[32]]]],[[1675,31],[[12,[32]]]],[[1675,31],[[12,[32]]]],[[1675,31],[[12,[32]]]],[[385,31],[[12,[32]]]],[[385,31],[[12,[32]]]],[[385,31],[[12,[32]]]],[[385,31],[[12,[32]]]],[[385,31],[[12,[32]]]],[[385,31],[[12,[32]]]],[[1676,31],[[12,[32]]]],[[1676,31],[[12,[32]]]],[[1676,31],[[12,[32]]]],[[1676,31],[[12,[32]]]],[[1676,31],[[12,[32]]]],[[1676,31],[[12,[32]]]],[[1677,31],[[12,[32]]]],[[1677,31],[[12,[32]]]],[[1677,31],[[12,[32]]]],[[1677,31],[[12,[32]]]],[[1677,31],[[12,[32]]]],[[1677,31],[[12,[32]]]],[[1678,31],[[12,[32]]]],[[1678,31],[[12,[32]]]],[[1678,31],[[12,[32]]]],[[1678,31],[[12,[32]]]],[[1678,31],[[12,[32]]]],[[1678,31],[[12,[32]]]],[1681,1679],[[]],[1682,1679],[[]],[1683,1680],[[]],[1668,1669],[761,1669],[1674,1669],[[]],[51,1669],[761,1670],[762,1670],[301,1670],[1674,1670],[51,1670],[[]],[1668,1670],[1675,1670],[1669,1670],[1675,1671],[49,1671],[760,1671],[1670,1671],[1668,1671],[762,1671],[51,1671],[[]],[301,1671],[1674,1671],[761,1671],[1669,1671],[385,1671],[385,1672],[301,1672],[51,1672],[75,1672],[762,1672],[760,1672],[1668,1672],[1676,1672],[1674,1672],[1675,1672],[761,1672],[1670,1672],[1669,1672],[1671,1672],[[]],[734,1672],[49,1672],[1674,1673],[1669,1673],[51,1673],[762,1673],[[]],[1668,1673],[761,1673],[[]],[[]],[51,1675],[1674,1675],[[]],[301,385],[1674,385],[1675,385],[51,385],[49,1676],[[]],[1675,1676],[301,1676],[385,1676],[51,1676],[1674,1676],[301,1677],[75,1677],[385,1677],[1675,1677],[1676,1677],[[]],[51,1677],[49,1677],[1674,1677],[51,1678],[1674,1678],[1675,1678],[301,1678],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[38,[[12,[1668]]]],[38,[[12,[1669]]]],[38,[[12,[1670]]]],[38,[[12,[1671]]]],[38,[[12,[1672]]]],[38,[[12,[1673]]]],[38,[[12,[1674]]]],[38,[[12,[1675]]]],[38,[[12,[385]]]],[38,[[12,[1676]]]],[38,[[12,[1677]]]],[38,[[12,[1678]]]],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[1668,761],[1669,762],[1670,760],[1671,734],[1672,989],[1673,937],[1674,51],[1675,301],[385,49],[1676,75],[1677,229],[1678,7],[[1668,30]],[[1669,30]],[[1670,30]],[[1671,30]],[[1672,30]],[[1673,30]],[[1674,30]],[[1675,30]],[[385,30]],[[1676,30]],[[1677,30]],[[1678,30]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[761,[[14,[1668]]]],[762,[[14,[1669]]]],[760,[[14,[1670]]]],[734,[[14,[1671]]]],[989,[[14,[1672]]]],[937,[[14,[1673]]]],[51,[[14,[1674]]]],[301,[[14,[1675]]]],[49,[[14,[385]]]],[75,[[14,[1676]]]],[229,[[14,[1677]]]],[7,[[14,[1678]]]],[761,1668],[762,1669],[760,1670],[734,1671],[989,1672],[937,1673],[51,1674],[301,1675],[49,385],[75,1676],[229,1677],[7,1678],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1668,1668],[[14,[74]]]],[[1669,1669],[[14,[74]]]],[[1670,1670],[[14,[74]]]],[[1671,1671],[[14,[74]]]],[[1672,1672],[[14,[74]]]],[[1673,1673],[[14,[74]]]],[[1674,1674],[[14,[74]]]],[[1675,1675],[[14,[74]]]],[[385,385],[[14,[74]]]],[[1676,1676],[[14,[74]]]],[[1677,1677],[[14,[74]]]],[[1678,1678],[[14,[74]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],141],[[],141],[[],141],[[],141],[[],141],[[],141],[[],141],[[],141],[[],141],[[],141],[[],141],[[],141],[[],141],[[],141],[[],12],[[],12],[[],12],[761,[[12,[1668]]]],[[],12],[762,[[12,[1669]]]],[[],12],[760,[[12,[1670]]]],[734,[[12,[1671]]]],[[],12],[[],12],[989,[[12,[1672]]]],[[],12],[937,[[12,[1673]]]],[51,[[12,[1674]]]],[[],12],[301,[[12,[1675]]]],[[],12],[49,[[12,[385]]]],[[],12],[75,[[12,[1676]]]],[[],12],[[],12],[229,[[12,[1677]]]],[7,[[12,[1678]]]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[[[1686,[1684,1685]]],14],[[[1686,[1684,1685]],[1687,[1685]],[1687,[1685]]],[[1688,[1685]]]],[[[1686,[1684,1685]]],[[1687,[1685]]]],[[[1686,[1684,1685]]]],0,[[[1686,[1684,1685]]],1431],0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[1686,[1684,1685]]]],[[[1686,[1684,1685]]]],[[[1686,[1684,1685]]]],[[[1686,[261,261,1685]]],[[1686,[261,261,1685]]]],[1689,1689],[565,565],[1690,1690],[[[1686,[261,261,1685]],[1686,[261,261,1685]]]],[[]],[[]],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[1689,1689],74],[[],74],[[[1686,[1684,1685]],[1687,[1685]],[1687,[1685]]],29],0,0,[[],[[1686,[1684,1685]]]],[7],[7],[7],[7],[7],[7],[7],[7],0,[[]],[[]],[[]],[[]],[7],[7],[7],[7],[15,29],[30],[[[1686,[1684,1685]]],7],[[[1686,[1684,1685]]],7],[[[1686,[1684,1685]]],7],[[[1686,[1684,1685]],[1688,[1685]]],14],[[[1686,[1684,1685]]],[[1691,[1685]]]],[[[1686,[1684,1685]]],[[1692,[1685]]]],[[[1686,[1684,1685]]]],[[[1686,[1684,1685]],[1688,[1685]]],14],[[[1686,[1684,1685]]],14],[[[1686,[1684,1685]]],14],[[[1686,[1684,1685]],[1688,[1685]]],14],[[[1686,[1684,1685]]],[[1693,[1685]]]],[[[1686,[1684,1685]]],[[1694,[1685]]]],[[[1686,[1684,1685]]]],[[[1686,[1684,1685]],[1687,[1685]]],[[1695,[1684,1685]]]],[[[1686,[1684,1685]],[1687,[1685]],[1687,[1685]]],[[1696,[1684,1685]]]],[[[1686,[1684,1685]],[1687,[1685]],1689],[[1695,[1684,1685]]]],[[[1686,[1684,1685]],1689]],[[1689,1689],29],[[],29],[[],29],[[],29],[[],29],[[[1686,[284,1684,1685]],489]],[[[1686,[1684,1685]],1689],[[1697,[1684,1685]]]],[[[1686,[1684,1685]],25,25],[[1686,[1684,1685]]]],[[[1686,[1684,1685]],[1687,[1685]],[1687,[1685]]],[[14,[[1688,[1685]]]]]],[[[1686,[1684,1685]],[1687,[1685]],[1687,[1685]]],14],[[[1686,[1684,1685]],[1687,[1685]],1689],[[14,[[1688,[1685]]]]]],[[[1686,[490,490,1684,1685]],31],[[12,[32]]]],[[1689,31],[[12,[32]]]],[[565,31],[[12,[32]]]],[[1690,31],[[12,[32]]]],[[]],[[[1698,[1684,1685]]],[[1686,[1684,1685]]]],[1699,1689],[[]],[[]],[[]],[489,[[1686,[284,1684,1685]]]],[489,[[1686,[1684,1685]]]],[[[1686,[1684,1685]],7]],[[[1686,[1684,1685]],7]],[[]],[[]],[[]],[[]],[34],0,0,[[1689,30]],[[[1686,[1684,1685]],[1688,[1685]]]],[[[1686,[1684,1685]],[1687,[1685]]]],[1689,7],[[[1686,[1684,1685]],[1687,[1685]]]],[[[1686,[1684,1685]],[1688,[1685]]]],[[[1686,[1684,1685]],1700,1700]],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[1686,[1684,1685]]],[[1686,[1684,1685]]]],[[[1686,[1684,1685]]]],[[]],[[]],[[]],[[]],[[]],[[[1686,[1684,1685]],1431,[1687,[1685]],[1687,[1685]]],29],[[],29],[[[1686,[1684,1685]]],29],[[],29],[[],29],[[[1686,[1684,1685]],25,25],[[1686,[1684,1685]]]],0,[[[1686,[1684,1685]],[1687,[1685]]],[[1701,[1685]]]],[[[1686,[1684,1685]],[1687,[1685]]],[[1701,[1685]]]],[[[1686,[1684,1685]],[1687,[1685]],1689],[[1701,[1685]]]],[[[1686,[1684,1685]],[1687,[1685]],1689],[[1701,[1685]]]],[[[1686,[1684,1685]],[1687,[1685]]],[[1701,[1685]]]],[[],[[1686,[565,49]]]],[[],[[1686,[1690,49]]]],[[[1686,[1684,1685]],[1688,[1685]],1689],[[14,[[1688,[1685]]]]]],[[[1686,[1684,1685]]],7],[[[1686,[1684,1685]]],7],[[[1686,[1684,1685]]],7],[[[1686,[1684,1685]]],[[1702,[1685]]]],[[[1686,[1684,1685]]],[[1702,[1685]]]],[[[1686,[1684,1685]]]],[[[1686,[1684,1685]],[1687,[1685]]],14],[[[1686,[1684,1685]]],14],[[[1686,[1684,1685]],[1687,[1685]]],14],[[[1686,[1684,1685]]],14],[[[1686,[1684,1685]]],[[1703,[1685]]]],[[[1686,[1684,1685]]],[[1704,[1685]]]],[[]],0,[1689,1689],[[1689,1689],[[14,[74]]]],0,[[[1686,[1684,1685]]],[[52,[[1705,[1685]]]]]],[[[1686,[1684,1685]]],[[52,[[1706,[1685]]]]]],[[[1686,[1684,1685]],[1688,[1685]]],14],[[[1686,[1684,1685]],[1687,[1685]]],14],[[[1686,[1684,1685]],7]],[[[1686,[1684,1685]],7]],[[[1686,[1684,1685]],7]],[[[1686,[1684,1685]],7]],[[[1686,[1684,1685]]]],[[[1686,[1684,1685]],25]],[[[1686,[1684,1685]],25]],[[[1686,[1684,1685]]]],[[[1686,[1684,1685]]]],[[[1686,[1684,1685]]]],[[[1686,[1684,1685]]]],0,[[[1686,[1684,1685]],[1687,[1685]]],7],[[[1686,[1684,1685]],[1688,[1685]]],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],0,[[],14],[[],14],[[],14],[[],14],[[[1686,[1684,1685]],[1687,[1685]],[1687,[1685]]],[[1688,[1685]]]],[[[1686,[1684,1685]]]],0,[[[1686,[1684,1685]]],1431],[[]],[[]],[[]],[[]],[[7,7],[[1686,[1684,1685]]]],[[7,7],[[1686,[1684,1685]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[[1707,[1685]],1685,1685],[[1708,[1685]]]],[[[1707,[1685]],1685,1685],[[14,[[1708,[1685]]]]]],[[[1707,[1685]]],1685],[[[1707,[1685]]],1685],[[[1707,[1685]],215],1685],[[[1707,[1685]],7],1685],[[[1707,[1685]]],1431],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[1707,[1685]]]],[[[1708,[[0,[261,1685]]]]],[[1708,[[0,[261,1685]]]]]],[[[1709,[[0,[261,1685]]]]],[[1709,[[0,[261,1685]]]]]],[[[1710,[261,[0,[261,1685]]]]],[[1710,[261,[0,[261,1685]]]]]],[[[1711,[1685]]],[[1711,[1685]]]],[[[1712,[261,[0,[261,1685]]]]],[[1712,[261,[0,[261,1685]]]]]],[[[1713,[261]]],[[1713,[261]]]],[[[1707,[261,[0,[261,1685]]]]],[[1707,[261,[0,[261,1685]]]]]],[[[1714,[1685]]],[[1714,[1685]]]],[[[1715,[261,[0,[261,1685]]]]],[[1715,[261,[0,[261,1685]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[[1708,[[0,[1596,1685]]]],[1708,[[0,[1596,1685]]]]],74],[[[1711,[1596,[0,[1596,1685]]]],[1711,[1596,[0,[1596,1685]]]]],74],[[],74],[[],74],[[[1707,[1685]],1685,1685],29],[[],[[1707,[284,[0,[284,1685]]]]]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[15,29],[15,29],[30],[[[1707,[1685]]],7],[[[1707,[1685]]],7],[[[1707,[1685]],[1708,[1685]]],14],[[[1707,[1685]]],[[1712,[1685]]]],[[[1707,[1685]],1685],[[1709,[1685]]]],[[[1707,[1685]]]],[[[1707,[1685]],[1708,[1685]]],14],[[[1707,[1685]],[1708,[1685]]],14],[[[1707,[1685]]]],[[[1708,[[0,[[505,[[0,[[505,[[0,[[505,[[0,[505,1685]]]],1685]]]],1685]]]],1685]]]],[1708,[[0,[[505,[[0,[[505,[[0,[[505,[[0,[505,1685]]]],1685]]]],1685]]]],1685]]]]],29],[[[1711,[[505,[[505,[[505,[505]]]]]],[0,[[505,[[0,[[505,[[0,[[505,[[0,[505,1685]]]],1685]]]],1685]]]],1685]]]],[1711,[[505,[[505,[[505,[505]]]]]],[0,[[505,[[0,[[505,[[0,[[505,[[0,[505,1685]]]],1685]]]],1685]]]],1685]]]]],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[[1707,[1685]],1685,1685],[[14,[[1708,[1685]]]]]],[[[1708,[[0,[490,1685]]]],31],[[12,[32]]]],[[[1709,[[0,[490,1685]]]],31],[[12,[32]]]],[[[1710,[490,[0,[490,1685]]]],31],[[12,[32]]]],[[[1711,[490,[0,[490,1685]]]],31],[[12,[32]]]],[[[1712,[490,[0,[490,1685]]]],31],[[12,[32]]]],[[[1713,[490]],31],[[12,[32]]]],[[[1707,[490,1685]],31],[[12,[32]]]],[[[1714,[490,1685]],31],[[12,[32]]]],[[[1715,[490,[0,[490,1685]]]],31],[[12,[32]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[1707,[1685]],7]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[34],[[[1708,[[0,[567,1685]]]],30]],[[[1711,[1685]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[1707,[1685]],1431,1685,1685],29],[[[1707,[1685]]],29],[[[1710,[1685]]],7],[1713,7],[[]],[[[1707,[1685]],1685]],[7],[[],[[1707,[1685]]]],[[[1709,[1685]]],14],[[[1710,[1685]]],14],[[[1712,[1685]]],[[14,[[1708,[1685]]]]]],[1713,14],[[[1714,[1685]]],14],[[[1715,[1685]]],14],[[[1710,[1685]]],14],[1713,14],[[[1707,[1685]]],7],[[[1707,[1685]]],7],[[[1707,[1685]]],[[1713,[1685]]]],[[[1707,[1685]]],[[1713,[1685]]]],[[[1707,[1685]]]],[[[1707,[1685]]],14],[[[1707,[1685]]],14],[[]],[[[1708,[[0,[[1612,[[0,[[1612,[[0,[[1612,[[0,[1612,1685]]]],1685]]]],1685]]]],1685]]]],[1708,[[0,[[1612,[[0,[[1612,[[0,[[1612,[[0,[1612,1685]]]],1685]]]],1685]]]],1685]]]]],[[14,[74]]]],[[[1711,[[1612,[[1612,[[1612,[1612]]]]]],[0,[[1612,[[0,[[1612,[[0,[[1612,[[0,[1612,1685]]]],1685]]]],1685]]]],1685]]]],[1711,[[1612,[[1612,[[1612,[1612]]]]]],[0,[[1612,[[0,[[1612,[[0,[[1612,[[0,[1612,1685]]]],1685]]]],1685]]]],1685]]]]],[[14,[74]]]],[[[1707,[1685]]]],[[[1710,[1685]],25],14],[[1713,25],14],[[[1710,[1685]],25]],[[1713,25]],[[[1709,[1685]]]],[[[1710,[1685]]]],[1713],[[[1714,[1685]]]],[[[1715,[1685]]]],[[[1711,[1685]]]],[[[1711,[1685]]]],[[[1707,[1685]]],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[[1707,[1685]],1685,1685],[[1708,[1685]]]],[[[1707,[1685]]],1431],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[1711,[1685]]]],[7,[[1707,[1685]]]],0,0,0,0,0,0,0,0,0,[[[0,[1716,1717]],7,[14,[7]]],215],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],0,[[[0,[1718,1719]],25,25,25],14],0,[[[0,[1716,1720,1718,1721]]],[[12,[1722,1723]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[1724,[261,261]]],[[1724,[261,261]]]],[[[1727,[[0,[261,1725,1726]]]]],[[1727,[[0,[261,1725,1726]]]]]],[[[1728,[261]]],[[1728,[261]]]],[1723,1723],[[]],[[]],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[[1686,[1684,1685]],29],[[1686,[[79,[8]],1684,1685]]]],[[[0,[1729,1730]]],7],[[[1731,[1721]]],29],[[[1731,[1721]]],29],[[],[[1724,[[0,[1732,284]]]]]],[[],1733],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],0,[[[0,[1718,1719]],14,25],[[1736,[[0,[1734,508]],1735]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[7],[[[1731,[1721]]],[[1737,[1721]]]],[[[1728,[[505,[[505,[[505,[505]]]]]]]],[1728,[[505,[[505,[[505,[505]]]]]]]]],29],[[1723,1723],29],0,[[[0,[1716,1720,1718,1721,1719]]],[[14,[[79,[8]]]]]],0,[[[0,[1729,1730,1720,1738]],25],[[12,[[1736,[[0,[1739,508]],1735]],1723]]]],[[[1724,[490,490]],31],[[12,[32]]]],[[[1733,[490]],31],[[12,[32]]]],[[[1727,[[0,[490,1725,1726]]]],31],[[12,[32]]]],[[[1728,[490]],31],[[12,[32]]]],[[1723,31],[[12,[32]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[34],[34],[[[0,[1730,1738,1716]]],215],[[[0,[1719,1720,1721,1740]]],[[1731,[[0,[1719,1720,1721,1740]]]]]],[[[0,[1740,1719]],[14,[1724]]],29],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[0,[1741,1719,1740]],[0,[508,[505,[[0,[508,[505,[[0,[508,[505,[[0,[508,[505,[[0,[508,505,490]]]],490]]]],490]]]],490]]]],490]]],29],[[[0,[1720,1740,1719]]],29],[[[0,[1721,1730]]],29],[[[1731,[1721]]],29],[[[0,[1729,1742,1743,1738,1717]],[0,[1729,1742,1743,1738,1717]]],29],[[[0,[1729,1742,1744,1743,1738,1745]],[0,[1729,1742,1744,1743,1738,1745]],25,25],29],[[[0,[1729,1742,1743,1738,1717]],[0,[1729,1742,1743,1738,1717]]],29],[[[0,[1729,1742,1744,1743,1738,1745]],[0,[1729,1742,1744,1743,1738,1745]],25,25],29],[[[1731,[1716]]],29],0,0,[[[0,[1718,1719,1716,1721]],14,7,25],[[1736,[[0,[1734,508]],1735]]]],[[[0,[1717,1719,1720]]],[[79,[[79,[8]],8]]]],[[[1731,[1721]]],7],0,[[[1731,[1721]]],14],[[]],[[[0,[1719,1721,1720,1718]]],[[1731,[[0,[1719,1721,1720,1718]]]]]],[[]],[[[0,[1726,1730,1721]]],[[1727,[[0,[1726,1730,1721]]]]]],[[[0,[1741,1719]]],[[1724,[[0,[508,[505,[[0,[508,[505,[[0,[508,[505,[[0,[508,505]]]]]]]]]]]]]],[1732,[[0,[508,[505,[[0,[508,[505,[[0,[508,505]]]]]]]]]]]]]]]],[[],1733],[[[1727,[[0,[1726,1721]]]]],14],[[[1733,[[0,[508,[505,[[0,[508,[505,[[0,[508,[505,[[0,[508,505]]]]]]]]]]]]]]]],[0,[1740,1721]],[0,[508,[505,[[0,[508,[505,[[0,[508,[505,[[0,[508,[505,[[0,[508,505]]]]]]]]]]]]]]]]]]],7],[[[1728,[508]]],508],[[[1731,[1721]]],[[1746,[1721]]]],[[]],[[]],[[]],[[[1733,[[0,[508,[505,[[0,[508,[505,[[0,[508,[505,[[0,[508,505]]]]]]]]]]]]]]]],[0,[1720,1740,1721]],25]],[[[0,[1717,1719,1720]]],[[79,[[79,[8]],8]]]],0,[[[0,[1729,1742,1744,1743,1738,1745]],[0,[1729,1742,1744,1743,1738,1745]],25,25],[[14,[215]]]],[[[0,[1720,1740,1721]]],[[79,[[79,[8]],8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[0,[1717,1720,1719]],[14,[1724]]],[[12,[[79,[8]],1728]]]],0,[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[0,[1718,1719]],25,25,25],14],0,[[],1],[[],1],[[[3,[2]]]],[[[0,[1716,1720,1718,1721]]],[[12,[1722,1723]]]],[[]],[[]],[[[1722,[261,261]]],[[1722,[261,261]]]],[[]],[[],[[9,[22,8]]]],[7],[7],0,[[]],[7],[[[0,[1716,1720,1718,1721,1719]]],[[14,[[79,[8]]]]]],[[[1722,[490,490]],31],[[12,[32]]]],[[]],[[]],[[],7],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],0,[[]],[[]],[[],12],[[],12],[[],13],[[],14],[[]],[[[0,[1718,1719]],14,25],[[1736,[[0,[1734,508]],1735]]]],0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[1747,[[0,[261,508,675,567]]]]],[[1747,[[0,[261,508,675,567]]]]]],[[[1748,[[0,[261,508,675,567]]]]],[[1748,[[0,[261,508,675,567]]]]]],[[[1749,[[0,[261,508,675,567]]]]],[[1749,[[0,[261,508,675,567]]]]]],[[]],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[7],[7],[7],[7],[7],[7],[[[1747,[[0,[508,675,567]]]],[0,[508,675,567]]],[[14,[[1748,[[0,[508,675,567]]]]]]]],[[]],[[]],[[]],[7],[7],[7],[[[1747,[[0,[490,508,675,567]]]],31],[[12,[32]]]],[[[1748,[[0,[490,508,675,567]]]],31],[[12,[32]]]],[[[1749,[[0,[490,508,675,567]]]],31],[[12,[32]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[1747,[[0,[508,675,567]]]],[0,[508,675,567]]],[[14,[[0,[508,675,567]]]]]],[[[1747,[[0,[508,675,567]]]],[0,[508,675,567]]],[[1749,[[0,[508,675,567]]]]]],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],[[]],[[]],[[]],[[[1748,[[0,[508,675,567]]]]],14],[[[1749,[[0,[508,675,567]]]]],14],[[[1747,[[0,[508,675,567]]]]],[[0,[508,675,567]]]],[[[0,[1740,1719]]],1747],[[[1749,[[0,[508,675,567]]]]]],[[[1747,[[0,[508,675,567]]]],[0,[508,675,567]]],[[14,[[1748,[[0,[508,675,567]]]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[[0,[1730,1738,1716]]],215],[[[0,[1729,1730,1720,1738]],25],[[12,[[1736,[[0,[1739,508]],1735]],1723]]]],[[[0,[1729,1742,1743,1738,1717]],[0,[1729,1742,1743,1738,1717]]],29],[[[0,[1729,1742,1744,1743,1738,1745]],[0,[1729,1742,1744,1743,1738,1745]],25,25],29],[[[0,[1729,1742,1743,1738,1717]],[0,[1729,1742,1743,1738,1717]]],29],[[[0,[1729,1742,1744,1743,1738,1745]],[0,[1729,1742,1744,1743,1738,1745]],25,25],29],[[[0,[1729,1742,1744,1743,1738,1745]],[0,[1729,1742,1744,1743,1738,1745]],25,25],[[14,[215]]]],[[[0,[1718,1719,1716,1721]],14,7,25],[[1736,[[0,[1734,508]],1735]]]],0,0,0,[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[[]],[[]],[7],[7],[[]],[[]],[[]],[[]],[[[0,[1719,1720,1721,1740]]],[[1731,[[0,[1719,1720,1721,1740]]]]]],[[],7],[[],7],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],[[]],[[]],[[[0,[1719,1721,1720,1718]]],[[1731,[[0,[1719,1721,1720,1718]]]]]],[[[1746,[1721]]],14],[[[1737,[1721]]],14],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],14],[[],14],[[]],[[]],[[[0,[1716,1717]],7,[14,[7]]],215],[[[0,[1750,1717,1729,1716]],52]],[[[1707,[1685]]]],0,0,0,0,0,0,0,0,0,0,0,0,[[[1751,[261,1684,1685]],1685,1685,261],29],[[[1751,[1684,1685]]],1685],[[[1751,[1684,1685]]],1431],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[1751,[1684,1685]]]],[[[1751,[261,261,261]]],[[1751,[261,261,261]]]],[1752,1752],[[[1753,[261,261,261]]],[[1753,[261,261,261]]]],[[[1754,[508]]],[[1754,[508]]]],[[[1755,[261,261,261]]],[[1755,[261,261,261]]]],[[[1756,[261]]],[[1756,[261]]]],[[[1757,[261]]],[[1757,[261]]]],[[[1758,[261,[0,[261,1685]]]]],[[1758,[261,[0,[261,1685]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[[1751,[1684,1685]],1685,1685],29],[[],[[1751,[1684,1685]]]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[7],[7],[7],[[[1751,[1684,1685]]],7],[[[1751,[1684,1685]]],7],[[[1751,[1684,1685]]]],[[[1751,[1684,1685]]]],[[[1751,[1684,1685]],1685],[[1753,[1684,1685]]]],[[[1751,[1684,1685]],1685],52],[[[1751,[490,490,490,490]],31],[[12,[32]]]],[[1752,31],[[12,[32]]]],[[[1753,[490,490,490]],31],[[12,[32]]]],[[[1754,[490,490,490]],31],[[12,[32]]]],[[[1755,[490,490,490]],31],[[12,[32]]]],[[[1756,[490]],31],[[12,[32]]]],[[[1757,[490]],31],[[12,[32]]]],[[[1758,[490,[0,[490,1685]]]],31],[[12,[32]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[1751,[1684,1685]],7]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[52,[[0,[261,1759]]]]],[[12,[[1751,[284,565,1685]],1752]]]],[34],[[[1754,[1684,1685]]]],[[],7],[[[1751,[1684,1685]],1685]],[[[1751,[1684,1685]],1685]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[1751,[1684,1685]],1431,1685,1685],29],[[[1751,[1684,1685]]],29],[[]],[[[1751,[1684,1685]]]],[[[1751,[1684,1685]],1685],[[52,[1685]]]],[7],[[],[[1751,[1684,1685]]]],[[[1753,[1684,1685]]],14],[[[1755,[1684,1685]]],14],[[[1756,[1685]]],14],[[[1757,[1685]]],14],[[[1758,[1685]]],14],[[[1758,[1685]]],14],[[[1751,[1684,1685]]],7],[[[1751,[1684,1685]]],7],[[[1751,[1684,1685]]],7],[[[1751,[1684,1685]]]],[[[1751,[1684,1685]]]],[[]],[[[1751,[1684,1685]],1685],7],[[[1751,[1684,1685]]]],[[[1753,[1684,1685]]]],[[[1756,[1685]]]],[[[1757,[1685]]]],[[[1758,[1685]]]],[[[1754,[1684,1685]]]],[[[1754,[1684,1685]]]],[[[1751,[1684,1685]]],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[[1751,[1684,1685]]],1431],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[1754,[1684]]]],[[[1754,[1684,1685]]]],[7,[[1751,[284,1684,1685]]]],0,0,0,0,0,0,0,0,0,0,[[],14],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[[[1760,[261,261]]],[[1760,[261,261]]]],[[[1761,[261,261]]],[[1761,[261,261]]]],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[7],[7],[7],[7],[[]],[[]],[7],[7],[15,29],[[],14],[[],14],[[[1760,[[505,[[505,[[505,[505]]]]]],[505,[[505,[[505,[505]]]]]]]],[1760,[[505,[[505,[[505,[505]]]]]],[505,[[505,[[505,[505]]]]]]]]],29],[[],29],[[],29],[[],29],[[],29],[[170,25],[[1761,[170,25]]]],[[[1760,[490,490]],31],[[12,[32]]]],[[[1761,[490,490]],31],[[12,[32]]]],[[]],[[]],[489,170],[[]],[[]],[[],7],[[],7],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],[[]],[[[1761,[215,25]]],14],[[],14],[[],14],[[[1761,[215,25]]]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],14],[[],14],[[]],[[]],[[]],[[7,7]],0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[[]],[[]],[7],[7],[15,29],[[1762,1762],29],[[],29],[[],29],[[],29],[[],29],[[[1763,[[0,[1730,1726,1721,1738]]]],31],[[12,[32]]]],[[[1763,[[0,[1730,1726,1721,1738]]]],31],[[12,[32]]]],[[1762,31],[[12,[32]]]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],[[[0,[1726,1730]]],[[1763,[[0,[1726,1730]]]]]],[[]],[[]],[[],141],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],14],[[],14],[[]],[[]],[[[0,[1726,1730]],[52,[1762]],142,142],[[1763,[[0,[1726,1730]]]]]],[[[0,[1726,1730]],[52,[1762]]],[[1763,[[0,[1726,1730]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[1764,[1743]]]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[1765,[1685]]],[[1765,[1685]]]],[[[1706,[261,508]]],[[1706,[261,508]]]],[[[1705,[261,508]]],[[1705,[261,508]]]],[[[1697,[261,261,[0,[261,1685]]]]],[[1697,[261,261,[0,[261,1685]]]]]],[[[1701,[1685]]],[[1701,[1685]]]],[[[1695,[1684,1685]]],[[1695,[1684,1685]]]],[[[1696,[261,[0,[261,1684]],[0,[261,1685]]]]],[[1696,[261,[0,[261,1684]],[0,[261,1685]]]]]],[[[1702,[261]]],[[1702,[261]]]],[[[1691,[261]]],[[1691,[261]]]],[[[1766,[1685]]],[[1766,[1685]]]],[[[1767,[261,[0,[261,1685]]]]],[[1767,[261,[0,[261,1685]]]]]],[[[1692,[261,[0,[261,1685]]]]],[[1692,[261,[0,[261,1685]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[7],[1764],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[[1701,[1685]]],[[1765,[1685]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[[1764,[1768]]],7],[[[1764,[1742]]],7],[7,[[1688,[1685]]]],[[[1764,[1730]]]],[[[1764,[1744]]],14],[[[1764,[1769]]],14],[[[1764,[1718]]]],[[[1764,[1745]],1689]],[[[1766,[[505,[[505,[[505,[505]]]]]],1685]],[1766,[[505,[[505,[[505,[505]]]]]],1685]]],29],[[[1706,[490,490]],31],[[12,[32]]]],[[[1705,[490,490]],31],[[12,[32]]]],[[[1697,[490,490,[0,[490,1685]]]],31],[[12,[32]]]],[[[1701,[490,490]],31],[[12,[32]]]],[[[1695,[490,[0,[490,1684]],[0,[490,1685]]]],31],[[12,[32]]]],[[[1696,[490,[0,[490,1684]],[0,[490,1685]]]],31],[[12,[32]]]],[[[1704,[490,[0,[490,1685]]]],31],[[12,[32]]]],[[[1694,[490,[0,[490,1685]]]],31],[[12,[32]]]],[[[1702,[490]],31],[[12,[32]]]],[[[1691,[490]],31],[[12,[32]]]],[[[1766,[490,490]],31],[[12,[32]]]],[[[1767,[490,[0,[490,1685]]]],31],[[12,[32]]]],[[[1692,[490,[0,[490,1685]]]],31],[[12,[32]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[1764,[1768]],7]],[[[1764,[1721]],7]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[1766,[1685]]]],[[],7],[[[1764,[1770]]]],[[[1764,[1771]]]],[[[1764,[[1686,[1684,1685]]]],1700,1700]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[1764,[1743]]],29],[[]],[[[1764,[1740]]]],[[[1764,[1717]],1689]],[7],[[],1764],[[[1765,[1685]],[1686,[1684,1685]]],14],[[[1697,[1684,1685]]],[[14,[[1687,[1685]]]]]],[[[1701,[1685]]],[[14,[[1687,[1685]]]]]],[[[1695,[1684,1685]]],14],[[[1696,[1684,1685]]],[[14,[[1766,[1685]]]]]],[[[1704,[1685]]],14],[[[1694,[1685]]],14],[[[1702,[1685]]],14],[[[1691,[1685]]],14],[[[1767,[1685]]],14],[[[1692,[1685]]],14],[[[1702,[1685]]],14],[[[1691,[1685]]],14],[[[1767,[1685]]],14],[[[1692,[1685]]],14],[[[1765,[1685]],[1686,[1684,1685]]],[[14,[[1688,[1685]]]]]],[[[1706,[1685]],1689],[[1688,[1685]]]],[[[1705,[1685]],1689],[[1688,[1685]]]],[[[1765,[1685]],[1686,[1684,1685]]],[[14,[[1687,[1685]]]]]],[[[1764,[1721]]],7],[[[1764,[1716]]],7],[[[1764,[1720]]]],[7,[[1687,[1685]]]],[[[1764,[1726]]]],[[[1764,[1744]]],14],[[[1764,[1769]]],14],[[[1764,[1719]]]],[[[1697,[1684,1685]]]],[[[1696,[1684,1685]]]],[[[1704,[1685]]]],[[[1694,[1685]]]],[[[1702,[1685]]]],[[[1691,[1685]]]],[[[1767,[1685]]]],[[[1692,[1685]]]],[[[1705,[1685]]],[[1687,[1685]]]],[[[1766,[1685]]]],[[[1705,[1685]]],[[1687,[1685]]]],[[[1766,[1685]]]],[[[1764,[1768]]],7],[[[1764,[1721]]],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[[1764,[1719]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[1766,[1685]]]],[[[1766,[1685]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1772,1772],[[[1774,[[0,[261,1773]]]]],[[1774,[[0,[261,1773]]]]]],[[[1775,[261,[0,[261,1684]]]]],[[1775,[261,[0,[261,1684]]]]]],[[[1776,[261,[0,[261,1684]]]]],[[1776,[261,[0,[261,1684]]]]]],[[[1777,[[0,[261,1773]],261,[0,[261,1684]]]]],[[1777,[[0,[261,1773]],261,[0,[261,1684]]]]]],[[[1778,[[0,[261,1773]],261,[0,[261,1684]]]]],[[1778,[[0,[261,1773]],261,[0,[261,1684]]]]]],[[[1779,[[0,[261,1773]],261,261]]],[[1779,[[0,[261,1773]],261,261]]]],[[[1780,[[0,[261,1773]],261,261]]],[[1780,[[0,[261,1773]],261,261]]]],[[[1781,[[0,[261,1773]],261,261]]],[[1781,[[0,[261,1773]],261,261]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[1772,1772],74],[[],74],[[[1782,[1773,1684]]],7],[[[1779,[1773,1684]]],7],[7],[7],[1772],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[15,29],[30],[[1772,1772],29],[[],29],[[],29],[[],29],[[],29],[[[1772,[490]],31],[[12,[32]]]],[[[1774,[[0,[490,1773]]]],31],[[12,[32]]]],[[[1775,[490,[0,[490,1684]]]],31],[[12,[32]]]],[[[1776,[490,[0,[490,1684]]]],31],[[12,[32]]]],[[[1777,[[0,[490,1773]],490,[0,[490,1684]]]],31],[[12,[32]]]],[[[1778,[[0,[490,1773]],490,[0,[490,1684]]]],31],[[12,[32]]]],[[[1779,[[0,[490,1773]],490,490]],31],[[12,[32]]]],[[[1780,[[0,[490,1773]],490,490]],31],[[12,[32]]]],[[[1781,[[0,[490,1773]],490,490]],31],[[12,[32]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1772,30]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[1782,[1773,1684]]],14],[[[1779,[1773,1684]]],14],[[[1774,[1773]]],7],[[[1782,[1773,1684]]],14],[[[1774,[1773]]],14],[[[1775,[1773,1684]]],[[14,[1773]]]],[[[1776,[1773,1684]]],[[14,[1773]]]],[[[1777,[1773,1684]]],14],[[[1778,[1773,1684]]],14],[[[1779,[1773,1684]]],14],[[[1780,[1773,1684]]],14],[[[1781,[1773,1684]]],14],[[[1782,[1773,1684]]],14],[[[1774,[1773]]],14],[[[1779,[1773,1684]]],14],[[[1782,[1773,1684]],7],14],[[[1779,[1773,1684]],7],14],[[1772,1772],[[14,[74]]]],[[[1774,[1773]],25],14],[[[1774,[1773]],25]],[[[1782,[1773,1684]]]],[[[1774,[1773]]]],[[[1775,[1773,1684]]]],[[[1776,[1773,1684]]]],[[[1777,[1773,1684]]]],[[[1778,[1773,1684]]]],[[[1779,[1773,1684]]]],[[[1780,[1773,1684]]]],[[[1781,[1773,1684]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[[1784,[1684,1783,1685]],[1687,[1685]],[1687,[1685]]]],[[[1784,[1684,1783,1685]]],14],[[[1784,[1684,1783,1685]]]],[[[1784,[1684,1783,1685]]],[[1687,[1685]]]],[[[1784,[1684,1783,1685]]]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[1784,[1684,1783,1685]]]],[[[1784,[261,261,261,[0,[261,1783]],261]]],[[1784,[261,261,261,[0,[261,1783]],261]]]],[[[1785,[261]]],[[1785,[261]]]],[[[1786,[261,261]]],[[1786,[261,261]]]],[[[1787,[[0,[261,1684]],[0,[261,1783]],261]]],[[1787,[[0,[261,1684]],[0,[261,1783]],261]]]],[[[1788,[[0,[261,1684]],[0,[261,1783]],261]]],[[1788,[[0,[261,1684]],[0,[261,1783]],261]]]],[[[1789,[[0,[261,1684]],[0,[261,1783]],261]]],[[1789,[[0,[261,1684]],[0,[261,1783]],261]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[1791,[1790]]]],[[],[[1784,[1684,1783,1685]]]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[7],[7],[[[1784,[1684,1783,1685]]],7],[[[1784,[1684,1783,1685]]],7],[[[1784,[1684,1783,1685]]]],[[[1784,[1684,1783,1685]],[1687,[1685]],[1687,[1685]]]],[[[1784,[1684,1783,1685]],[1687,[1685]],[1687,[1685]]]],[[[1784,[1684,1783,1685]]]],[[[1784,[1684,1783,1685]],[1687,[1685]]],[[1789,[1684,1783,1685]]]],[[[1784,[565,1783,1685]],1689]],[[[1784,[565,1783,1685]],[1687,[1685]],1689],[[1789,[565,1783,1685]]]],[[[1784,[284,1684,1783,1685]],489]],[[[1785,[490]],31],[[12,[32]]]],[[[1786,[490,490]],31],[[12,[32]]]],[[[1787,[[0,[490,1684]],[0,[490,1783]],490]],31],[[12,[32]]]],[[[1788,[[0,[490,1684]],[0,[490,1783]],490]],31],[[12,[32]]]],[[[1789,[[0,[490,1684]],[0,[490,1783]],490]],31],[[12,[32]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[489,[[1784,[284,1684,1783,1685]]]],[[[1784,[1684,1783,1685]],7]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[34],[34],[[[1784,[1684,1783,1685]],[1687,[1685]],[1687,[1685]]],29],[[],7],[[[1784,[1684,1783,1685]],[1687,[1685]]]],[[[1784,[1684,1783,1685]]]],[[[1784,[1684,1783,1685]]]],[[[1784,[1684,1783,1685]],[1687,[1685]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[1784,[1684,1783,1685]],[1687,[1685]],[1687,[1685]]],29],[[[1784,[1684,1783,1685]]],29],[[],29],[[]],[[[1784,[1684,1783,1685]],[1687,[1685]]],[[1788,[1684,1783,1685]]]],[[[1784,[1684,1783,1685]],[1687,[1685]]]],[[[1784,[565,1783,1685]],[1687,[1685]],1689],[[1788,[565,1783,1685]]]],[[[1784,[565,1783,1685]],[1687,[1685]],1689]],[7],[[],[[1784,[565,14,301]]]],[[],[[1784,[1690,14,301]]]],[[[1785,[1685]]],14],[[[1786,[1685]]],14],[[[1787,[1684,1783,1685]]],14],[[[1788,[1684,1783,1685]]],14],[[[1789,[1684,1783,1685]]],14],[[[1784,[1684,1783,1685]]],7],[[[1784,[1684,1783,1685]]],7],[[[1784,[1684,1783,1685]]],7],[[[1784,[1684,1783,1685]]]],[7,[[1687,[301]]]],[[[1784,[1684,1783,1685]]]],[[[1784,[1684,1783,1685]],[1687,[1685]]]],[[[1784,[1684,1783,1685]],[1687,[1685]]]],[[]],[[]],[[[1784,[1684,1783,1685]],[1687,[1685]],[1687,[1685]]]],[[[1784,[1684,1783,1685]],[1687,[1685]]]],[[[1784,[1684,1783,1685]]]],[[[1785,[1685]]]],[[[1786,[1685]]]],[[[1788,[1684,1783,1685]]]],[[[1784,[1684,1783,1685]],[1687,[1685]]],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[[1784,[1684,1783,1685]]]],[[[1784,[1684,1783,1685]],[1687,[1685]],[1687,[1685]]],14],[[[1784,[1684,1783,1685]]],1431],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7,[[1784,[1684,1783,1685]]]],[[]],[[[1686,[261,261,1684,1685]],[1686,[261,261,1684,1685]],261]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[566,[1773,1684]]],14],[[[566,[1773,1684]],1773,1773],14],[[[566,[1773,1684]]]],[[[566,[1773,1684]],1773],1773],[[[566,[[0,[508,1596,567]],1684]]]],[[[566,[1773,1684]]],[[1779,[1773,1684]]]],[[[566,[1773,1684]]],[[1782,[1773,1684]]]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[566,[1773,1684]]]],[[[566,[1773,1684]]]],[[[1792,[261,261]]],[[1792,[261,261]]]],[[[1793,[261,261]]],[[1793,[261,261]]]],[[[1794,[261,261]]],[[1794,[261,261]]]],[[[566,[261,261,261]]],[[566,[261,261,261]]]],[[]],[[]],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[[566,[1773,1684]],1773,1773],29],[[[566,[1773,1684]],1773],29],[[],[[1792,[284]]]],[[],[[1793,[284]]]],[[],[[1794,[284]]]],[[],[[566,[1773,1684]]]],[7],[7],[7],[7],[7],[7],[7],[7],0,0,0,[[]],[[]],[[]],[[]],[7],[7],[7],[7],[[[566,[1773,1684]]],7],[[[566,[1773,1684]]],7],[[[566,[1773,1684]]],7],[[[566,[1773,1684]]]],[[[566,[1773,1684]],1773,1773],14],[[[566,[1773,1684]],1773,1773],14],[[[566,[1773,1684]],1773],[[1777,[1773,1684]]]],[[[566,[1773,1684]]]],[[[566,[1773,1684]],1689]],[[[566,[1773,1684]],1773,1689],[[1778,[1773,1684]]]],[[[0,[1741,1719]]],[[1792,[[0,[508,[505,[[0,[508,[505,[[0,[508,[505,[[0,[508,505]]]]]]]]]]]]]],[1732,[[0,[508,[505,[[0,[508,[505,[[0,[508,505]]]]]]]]]]]]]]]],[[[0,[1741,1719]]],[[1793,[[0,[508,[505,[[0,[508,[505,[[0,[508,[505,[[0,[508,505]]]]]]]]]]]]]],[1732,[[0,[508,[505,[[0,[508,[505,[[0,[508,505]]]]]]]]]]]]]]]],[[[566,[1773,1684]],489]],0,[[[1792,[490,490]],31],[[12,[32]]]],[[[1793,[490,490]],31],[[12,[32]]]],[[[566,[[0,[675,567,490]],490,1684]],31],[[12,[32]]]],[[]],[[]],[[]],[[]],[489,[[566,[1773,1684]]]],[489,[[566,[1773,1684]]]],[[[1686,[1773,261,1684,1685]]],[[566,[1773,261,1684]]]],[[[566,[1773,1684]],7]],[[[566,[1773,1684]],7]],[489,[[566,[1773,1684]]]],[[[79,[[0,[508,[505,[[0,[508,[505,[[0,[508,[505,[[0,[508,505]]]]]]]]]]]]]],8]],[1732,[[0,[508,[505,[[0,[508,[505,[[0,[508,[505,[[0,[508,505]]]]]]]]]]]]]]]]],[[1792,[[0,[508,[505,[[0,[508,[505,[[0,[508,[505,[[0,[508,505]]]]]]]]]]]]]],[1732,[[0,[508,[505,[[0,[508,[505,[[0,[508,505]]]]]]]]]]]]]]]],[[]],[[]],[[]],[[]],[34],[34],[34],[34],[[]],[[[566,[1773,1684]]]],[[[566,[1773,1684]]]],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[566,[1773,1684]]],[[1686,[1773,1684,1685]]]],[[]],[[]],[[]],[[]],[[[566,[[0,[508,1596,567]],1684]],[0,[508,1596,567]],[0,[508,1596,567]]],29],[[[566,[1773,1684]]],29],[[[1792,[[0,[508,[505,[[0,[508,[505,[[0,[508,[505,[[0,[508,505]]]]]]]]]]]]]],[1732,[[0,[508,[505,[[0,[508,[505,[[0,[508,505]]]]]]]]]]]]]],[0,[508,[505,[[0,[508,[505,[[0,[508,[505,[[0,[508,[505,[[0,[508,505]]]]]]]]]]]]]]]]]]]],[[[1793,[[0,[508,[505,[[0,[508,[505,[[0,[508,[505,[[0,[508,505]]]]]]]]]]]]]],[1732,[[0,[508,[505,[[0,[508,[505,[[0,[508,505]]]]]]]]]]]]]],[0,[508,[505,[[0,[508,[505,[[0,[508,[505,[[0,[508,[505,[[0,[508,505]]]]]]]]]]]]]]]]]]]],[[[566,[[0,[508,1596,567]],1684]]]],[[[566,[1773,1684]],1773],[[1775,[1773,1684]]]],[[[566,[[0,[508,1596,567]],1684]],[0,[508,1596,567]],1689]],[[[566,[1773,1684]],1773,1689],[[1776,[1773,1684]]]],[[[0,[1741,1719]],[0,[508,[505,[[0,[508,[505,[[0,[508,[505,[[0,[508,[505,[[0,[508,505]]]]]]]]]]]]]]]]]]],[[1792,[[0,[508,[505,[[0,[508,[505,[[0,[508,[505,[[0,[508,505]]]]]]]]]]]]]],[1732,[[0,[508,[505,[[0,[508,[505,[[0,[508,505]]]]]]]]]]]]]]]],[[[0,[1741,1719]],[0,[508,[505,[[0,[508,[505,[[0,[508,[505,[[0,[508,[505,[[0,[508,505]]]]]]]]]]]]]]]]]]],[[1793,[[0,[508,[505,[[0,[508,[505,[[0,[508,[505,[[0,[508,505]]]]]]]]]]]]]],[1732,[[0,[508,[505,[[0,[508,[505,[[0,[508,505]]]]]]]]]]]]]]]],[[[0,[1741,1719]],[0,[508,[505,[[0,[508,[505,[[0,[508,[505,[[0,[508,[505,[[0,[508,505]]]]]]]]]]]]]]]]]]],[[1794,[[0,[508,[505,[[0,[508,[505,[[0,[508,[505,[[0,[508,505]]]]]]]]]]]]]],[1732,[[0,[508,[505,[[0,[508,[505,[[0,[508,505]]]]]]]]]]]]]]]],[[],[[566,[1773,1684]]]],[[[1792,[[0,[508,[505,[[0,[508,[505,[[0,[508,[505,[[0,[508,505]]]]]]]]]]]]]],[1732,[[0,[508,[505,[[0,[508,[505,[[0,[508,505]]]]]]]]]]]]]],1740],[[14,[[0,[508,[505,[[0,[508,[505,[[0,[508,[505,[[0,[508,505]]]]]]]]]]]]]]]]]],[[[1793,[[0,[508,[505,[[0,[508,[505,[[0,[508,[505,[[0,[508,505]]]]]]]]]]]]]],[1732,[[0,[508,[505,[[0,[508,[505,[[0,[508,505]]]]]]]]]]]]]],1740],[[14,[[0,[508,[505,[[0,[508,[505,[[0,[508,[505,[[0,[508,505]]]]]]]]]]]]]]]]]],[[[1794,[[0,[508,[505,[[0,[508,[505,[[0,[508,[505,[[0,[508,505]]]]]]]]]]]]]],[1732,[[0,[508,[505,[[0,[508,[505,[[0,[508,505]]]]]]]]]]]]]],1740],[[14,[[0,[508,[505,[[0,[508,[505,[[0,[508,[505,[[0,[508,505]]]]]]]]]]]]]]]]]],[[[566,[1773,1684]]],7],[[[566,[1773,1684]]],7],[[[566,[1773,1684]]],7],[[[566,[1773,1684]]]],[[[566,[1773,1684]]]],[[[566,[1773,1684]]],[[1774,[1773]]]],[[]],[[]],[[]],[[]],[[[566,[1773,1684]],1773,1773],14],[[[566,[1773,1684]],1773],29],[[[1792,[[0,[508,[505,[[0,[508,[505,[[0,[508,[505,[[0,[508,505]]]]]]]]]]]]]],[1732,[[0,[508,[505,[[0,[508,[505,[[0,[508,505]]]]]]]]]]]]]],[0,[1741,1719]]]],[[[1793,[[0,[508,[505,[[0,[508,[505,[[0,[508,[505,[[0,[508,505]]]]]]]]]]]]]],[1732,[[0,[508,[505,[[0,[508,[505,[[0,[508,505]]]]]]]]]]]]]],[0,[1741,1719]]]],[[[566,[[0,[508,1596,567]],1684]]]],[[]],0,0,0,[[]],[[[566,[1773,1684]]],7],[[[566,[1773,1684]]],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[[566,[1773,1684]]]],[[[566,[[0,[508,1596,567]],1684]]],[[1795,[[0,[508,1596,567]],1735]]]],[[]],[[]],[[]],[[]],[[1792,[0,[1740,1719]]],14],[[1793,[0,[1740,1719]]],14],[[1794,[0,[1740,1719]]],14],[[]],[[7,7],[[566,[1773,1684]]]],[[7,7],[[566,[1773,1684]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[1698,[1684,1685]]],14],[[[1698,[1684,1685]],[1687,[1685]],[1687,[1685]]],[[1688,[1685]]]],[[[1698,[1684,1685]]],[[1687,[1685]]]],[[[1698,[1684,1685]]]],[[[1698,[1684,1685]]],1431],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],15],[[],15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[1698,[1684,1685]]]],[[[1698,[1684,1685]]]],[[[1698,[1684,1685]]]],[[[1698,[261,261,1685]]],[[1698,[261,261,1685]]]],[[[1796,[1685]]],[[1796,[1685]]]],[[[1687,[261]]],[[1687,[261]]]],[[[1688,[261]]],[[1688,[261]]]],[[[1797,[261,[0,[261,1685]]]]],[[1797,[261,[0,[261,1685]]]]]],[[[1798,[1685]]],[[1798,[1685]]]],[[[1799,[261,[0,[261,1684]],[0,[261,1685]]]]],[[1799,[261,[0,[261,1684]],[0,[261,1685]]]]]],[[[1800,[261,[0,[261,1684]],[0,[261,1685]]]]],[[1800,[261,[0,[261,1684]],[0,[261,1685]]]]]],[[[1801,[261,261]]],[[1801,[261,261]]]],[[[1802,[261,261,[0,[261,1685]]]]],[[1802,[261,261,[0,[261,1685]]]]]],[[[1803,[261,261]]],[[1803,[261,261]]]],[[[1804,[261,261]]],[[1804,[261,261]]]],[[[1805,[261,261]]],[[1805,[261,261]]]],[[[1698,[261,261,1685]],[1698,[261,261,1685]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[[1687,[1596]],[1687,[1596]]],74],[[[1688,[1596]],[1688,[1596]]],74],[[],74],[[],74],[[[1698,[1684,1685]],[1687,[1685]],[1687,[1685]]],29],[[[1698,[1684,1685]],[1687,[1685]]],29],[[],[[1698,[1684,1685]]]],[[],[[1687,[284]]]],[[],[[1688,[284]]]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[[1803,[1685]]],[[1796,[1685]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[15,29],[15,29],[30],[30],[[[1698,[1684,1685]]],7],[[[1698,[1684,1685]]],7],[[[1698,[1684,1685]]],7],[[[1698,[1684,1685]],[1688,[1685]]],14],[7,[[1688,[1685]]]],[[[1698,[1684,1685]]],[[1805,[1685]]]],[[[1698,[1684,1685]]]],[[[1698,[1684,1685]]],14],[[[1698,[1684,1685]],[1688,[1685]]],14],[[[1698,[1684,1685]],[1688,[1685]]],14],[[[1698,[1684,1685]]],14],[[[1698,[1684,1685]]],215],[[[1698,[1684,1685]]],215],[[[1698,[1684,1685]]]],[[[1698,[1684,1685]],[1687,[1685]]],[[1799,[1684,1685]]]],[[[1698,[1684,1685]],[1687,[1685]],[1687,[1685]]],[[1800,[1684,1685]]]],[[[1698,[1684,1685]],1689]],[[[1698,[1684,1685]],[1687,[1685]],1689],[[1799,[1684,1685]]]],[[],[[1687,[1685]]]],[[],[[1688,[1685]]]],[[[1687,[[505,[[505,[[505,[505]]]]]]]],[1687,[[505,[[505,[[505,[505]]]]]]]]],29],[[[1688,[[505,[[505,[[505,[505]]]]]]]],[1688,[[505,[[505,[[505,[505]]]]]]]]],29],[[[1798,[[505,[[505,[[505,[505]]]]]],1685]],[1798,[[505,[[505,[[505,[505]]]]]],1685]]],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[[1698,[284,1684,1685]],489]],[[[1698,[1684,1685]],1689],[[1802,[1684,1685]]]],[[[1698,[1684,1685]],25,25],[[1698,[1684,1685]]]],[[[1698,[1684,1685]],[1687,[1685]],[1687,[1685]]],[[14,[[1688,[1685]]]]]],[[[1698,[1684,1685]],[1687,[1685]],[1687,[1685]]],14],[[[1698,[490,490,1684,1685]],31],[[12,[32]]]],[[[1687,[490]],31],[[12,[32]]]],[[[1688,[490]],31],[[12,[32]]]],[[[1797,[490,[0,[490,1685]]]],31],[[12,[32]]]],[[[1798,[490,490]],31],[[12,[32]]]],[[[1799,[490,[0,[490,1684]],[0,[490,1685]]]],31],[[12,[32]]]],[[[1800,[490,[0,[490,1684]],[0,[490,1685]]]],31],[[12,[32]]]],[[[1801,[490,490]],31],[[12,[32]]]],[[[1802,[490,490,[0,[490,1685]]]],31],[[12,[32]]]],[[[1803,[490,490]],31],[[12,[32]]]],[[[1804,[490,490]],31],[[12,[32]]]],[[[1805,[490,490]],31],[[12,[32]]]],[[[1686,[1684,1685]]],[[1698,[1684,1685]]]],[[]],[[]],[[]],[1685,[[1687,[1685]]]],[[]],[1685,[[1688,[1685]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[489,[[1698,[284,1684,1685]]]],[489,[[1698,[1684,1685]]]],[[[1698,[1684,1685]],7]],[[[1698,[1684,1685]],7]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[34],[34],[34],[[[1687,[567]],30]],[[[1688,[567]],30]],[[]],[[[1798,[1685]]]],[[],7],[[[1698,[1684,1685]],[1687,[1685]]]],[[[1698,[1684,1685]],[1688,[1685]]]],[[[1687,[1685]]],7],[[[1687,[1685]]],7],[[[1688,[1685]]],7],[[[1698,[1684,1685]],[1688,[1685]]]],[[[1698,[1684,1685]],[1687,[1685]]]],[[[1698,[1684,1685]],1700,1700]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[1698,[1684,1685]],1431,[1687,[1685]],[1687,[1685]]],29],[[[1698,[1684,1685]]],29],[[[1698,[1684,1685]],25,25],[[1698,[1684,1685]]]],[[]],[[],[[1687,[1685]]]],[[[1698,[1684,1685]],[1687,[1685]]],[[1803,[1685]]]],[[[1698,[1684,1685]]]],[[[1698,[1684,1685]],[1687,[1685]],1689],[[1803,[1685]]]],[[[1698,[1684,1685]],[1687,[1685]],1689]],[[[1698,[1684,1685]],[1687,[1685]]],[[1803,[1685]]]],[7],[[],[[1698,[565,49]]]],[7,[[1687,[1685]]]],[7,[[1687,[1685]]]],[7,[[1688,[1685]]]],[[[1796,[1685]],[1698,[1684,1685]]],14],[[[1797,[1685]]],14],[[[1799,[1684,1685]]],14],[[[1800,[1684,1685]]],[[14,[[1798,[1685]]]]]],[[[1801,[1685]]],14],[[[1802,[1684,1685]]],[[14,[[1687,[1685]]]]]],[[[1803,[1685]]],[[14,[[1687,[1685]]]]]],[[[1804,[1685]]],14],[[[1805,[1685]]],14],[[[1797,[1685]]],14],[[[1801,[1685]]],14],[[[1804,[1685]]],14],[[[1805,[1685]]],14],[[[1796,[1685]],[1698,[1684,1685]]],[[14,[[1688,[1685]]]]]],[[[1796,[1685]],[1698,[1684,1685]]],[[14,[[1687,[1685]]]]]],[[[1698,[1684,1685]]],7],[[[1698,[1684,1685]]],7],[[[1698,[1684,1685]]],7],[[[1698,[1684,1685]]]],[7,[[1687,[1685]]]],[[[1698,[1684,1685]]],[[1804,[1685]]]],[[[1698,[1684,1685]]]],[[[1698,[1684,1685]]],14],[[[1698,[1684,1685]],[1687,[1685]]],14],[[[1698,[1684,1685]]],14],[[[1698,[1684,1685]],[1687,[1685]]],14],[[[1698,[1684,1685]]],215],[[[1698,[1684,1685]]],215],[[]],[[]],[[]],[[[1687,[[1612,[[1612,[[1612,[1612]]]]]]]],[1687,[[1612,[[1612,[[1612,[1612]]]]]]]]],[[14,[74]]]],[[[1688,[[1612,[[1612,[[1612,[1612]]]]]]]],[1688,[[1612,[[1612,[[1612,[1612]]]]]]]]],[[14,[74]]]],[[[1698,[1684,1685]],[1688,[1685]]],14],[[[1698,[1684,1685]],[1687,[1685]]],14],[[[1698,[1684,1685]]]],[[[1698,[1684,1685]],25]],[[[1698,[1684,1685]],25]],[[[1698,[1684,1685]]]],[[[1797,[1685]]]],[[[1800,[1684,1685]]]],[[[1802,[1684,1685]]]],[[[1804,[1685]]]],[[[1805,[1685]]]],[[[1798,[1685]]]],[[[1798,[1685]]]],[[[1698,[1684,1685]],[1687,[1685]]],7],[[[1698,[1684,1685]],[1688,[1685]]],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[[1698,[1684,1685]],[1687,[1685]],[1687,[1685]]],[[1688,[1685]]]],[[[1698,[1684,1685]]]],[[[1698,[1684,1685]]],1431],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[1798,[1685]]]],[[[1798,[1685]]]],[[7,7],[[1698,[1684,1685]]]],[[7,7],[[1698,[1684,1685]]]],0,[[],1],[[],1],[[[3,[2]]]],[[]],[[]],[[[1806,[261]]],[[1806,[261]]]],[[]],[[],[[9,[22,8]]]],[7],[7],[[]],[7],[[[1806,[1685]],1685,1685],29],[[[1806,[1685]],1685],1685],[[[1806,[1685]],1685],1685],[[[1806,[490]],31],[[12,[32]]]],[[]],[[]],[[],7],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[1806,[1685]]],[[79,[1685,8]]]],[[]],[7,[[1806,[1685]]]],[[]],[[]],[[],12],[[],12],[[],13],[[[1806,[1685]],1685,1685],29],[[],14],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[[1807,[1743]]]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],15],[1808],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1809,14],[[],1809],[1810,1810],[[[1811,[261]]],[[1811,[261]]]],[[[1809,[261]]],[[1809,[261]]]],[[[1812,[261,261]]],[[1812,[261,261]]]],[[[1813,[261,261]]],[[1813,[261,261]]]],[[[1814,[261,261]]],[[1814,[261,261]]]],[[[1815,[261,261]]],[[1815,[261,261]]]],[[[1816,[261,261]]],[[1816,[261,261]]]],[[[1817,[261,261,261]]],[[1817,[261,261,261]]]],[[[1818,[261,261,261]]],[[1818,[261,261,261]]]],[[[1819,[261,261]]],[[1819,[261,261]]]],[[[1820,[[0,[261,1718]],261]]],[[1820,[[0,[261,1718]],261]]]],[[[1821,[261,261,261]]],[[1821,[261,261,261]]]],[[[1822,[[0,[261,1745]],261]]],[[1822,[[0,[261,1745]],261]]]],[[[1807,[261]]],[[1807,[261]]]],[[[1823,[261]]],[[1823,[261]]]],[[[1808,[261]]],[[1808,[261]]]],[[[1824,[261]]],[[1824,[261]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[1810,1810],74],[[],74],[[[1813,[[1825,[261]],261]]],261],[[]],[[],1809],[[],1810],[[],1809],[[],[[1812,[284]]]],[[[0,[1740,1719]],489,25],1826],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[15,29],[30],[[],7],[[[1814,[1768]]],7],[[[1819,[1768]]],7],[[[1807,[1768]]],7],[[],7],[[[1807,[1742]]],7],[[]],[[[1814,[1730,1827]]]],[[[1819,[1730,1828]]]],[[[1807,[1730]]]],[[[1814,[1744,1827]]],14],[[[1807,[1744]]],14],[[[1807,[1769]]],14],[[]],[[[1814,[1718,1827]]]],[[[1819,[1718,1828]]]],[[[1807,[1745]]]],[1689],[[[1814,[1745,1827]],1689]],[[[1819,[1745,1828]],1689]],[[[1807,[1745]],1689]],[[1810,1810],29],[[],29],[[],29],[[],29],[[],29],0,[[1810,31],[[12,[32]]]],[[[1811,[490]],31],[[12,[32]]]],[[[1809,[490]],31],[[12,[32]]]],[[[1813,[490,490]],31],[[12,[32]]]],[[[1814,[490,490]],31],[[12,[32]]]],[[[1815,[490,490]],31],[[12,[32]]]],[[[1816,[490,490]],31],[[12,[32]]]],[[[1817,[490,490,490]],31],[[12,[32]]]],[[[1818,[490,490,490]],31],[[12,[32]]]],[[[1819,[490,490]],31],[[12,[32]]]],[[[1820,[[0,[490,1718]],490]],31],[[12,[32]]]],[[[1821,[490,490,490]],31],[[12,[32]]]],[[[1822,[[0,[490,1745]],490]],31],[[12,[32]]]],[[[1807,[490]],31],[[12,[32]]]],[[[1823,[490]],31],[[12,[32]]]],[[[1808,[490]],31],[[12,[32]]]],[[[1824,[490]],31],[[12,[32]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1750,142],[[1814,[1750,142]]]],[[1730,142],[[1819,[1730,142]]]],[7],[7],[[[1814,[1721]],7]],[[[1814,[1768]],7]],[[[1819,[1768]],7]],[[[1819,[1721]],7]],[[[1807,[1721]],7]],[[[1807,[1768]],7]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[34],[34],[34],[[1810,30]],[[]],[[]],[[[1808,[1829]]]],[[],29],[[],29],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[[1813,[[1825,[261]],261]]],[[1825,[261]]]],[[[1813,[[1825,[261]],261]]],[[1825,[261]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1808],[[],29],[[[1807,[1743]]],29],[[],29],[[],29],[[170,261],[[1813,[170,261]]]],[[]],[[[1814,[1740,1827]]]],[[[1819,[1718,1828]]]],[[[1807,[1717]]]],[1689],[[[1814,[1717,1827]],1689]],[[[1819,[1745,1828]],1689]],[[[1807,[1717]],1689]],[[[0,[1720,1717,1719]]],[[1812,[[0,[508,[505,[[0,[508,[505,[[0,[508,[505,[[0,[508,505]]]]]]]]]]]]]],[1732,[[0,[508,[505,[[0,[508,[505,[[0,[508,505]]]]]]]]]]]]]]]],[[[1812,[[0,[508,[505,[[0,[508,[505,[[0,[508,[505,[[0,[508,505]]]]]]]]]]]]]],[1732,[[0,[508,[505,[[0,[508,[505,[[0,[508,505]]]]]]]]]]]]]],[0,[1717,1719]]],[[14,[[0,[508,[505,[[0,[508,[505,[[0,[508,[505,[[0,[508,505]]]]]]]]]]]]]]]]]],[[[1813,[[1825,[261]],261]]],14],[[[1815,[215,1827]]],14],[[[1816,[215,1827]]],14],[[[1817,[1730,215,1827]]],14],[[[1818,[1718,215,1827]]],14],[[[1820,[1718,1828]]],14],[[[1821,[1730,215,1828]]],14],[[[1822,[1745,1828]]],14],[[[1823,[215]]],14],[[[1824,[215]]],14],[[],7],[[[1814,[1721]]],7],[[[1819,[1721]]],7],[[[1807,[1721]]],7],[[],7],[[[1819,[1716]]],7],[[[1807,[1716]]],7],[[]],[[[1814,[1720,1827]]]],[[[1819,[1720]]]],[[[1807,[1720]]]],[[]],[[[1814,[1726,1827]]]],[[[1819,[1726]]]],[[[1807,[1726]]]],[[[1814,[1744,1827]]],14],[[[1807,[1744]]],14],[[[1807,[1769]]],14],[[]],[[]],[[]],[[1810,1810],[[14,[74]]]],[[[1812,[[0,[508,[505,[[0,[508,[505,[[0,[508,[505,[[0,[508,505]]]]]]]]]]]]]],[1732,[[0,[508,[505,[[0,[508,[505,[[0,[508,505]]]]]]]]]]]]]],[0,[1720,1717,1719]]]],[[]],[[[1814,[1719]]]],[[[1819,[1719]]]],[[[1807,[1719]]]],[[],29],[1809,29],[[],29],[1809,29],[[[1815,[215,1827]]]],[[[1816,[215,1827]]]],[[[1817,[1730,215,1827]]]],[[[1818,[1718,215,1827]]]],[[[1820,[1718,1828]]]],[[[1821,[1730,215,1828]]]],[[[1822,[1745,1828]]]],[[[1823,[215]]]],[[[1824,[215]]]],[[]],[[[1808,[1829]]]],0,0,0,[[]],[[[1808,[1829]]]],[[],7],[[],7],[[[1814,[1721]]],7],[[[1814,[1768]]],7],[[[1819,[1768]]],7],[[[1819,[1721]]],7],[[[1807,[1768]]],7],[[[1807,[1721]]],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],29],[[]],[[[1814,[1719]]]],[[[1819,[1719]]]],[[[1807,[1719]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],14],[[1812,[0,[1717,1719]]],14],[[]],[[]],[[[1808,[1829]]]],[[],284],0,[[],1],[[],1],[[[3,[2]]]],[[]],[[]],[7],[7],[[]],[7],[[]],[170,[[1830,[170]]]],[[]],[[[1830,[170]]],170],[[],7],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[],1830],[[[1830,[218,170]]],[218,170]],[1830],[[]],[[],12],[[],12],[[],13],[[],14],[[]],0,0,[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[1831,[52]]],[[52,[1831]]]],[[]],[[]],[[]],[[]],[[],[[1831,[284]]]],[[],[[576,[284]]]],[7],[576],[7],[7],[7],[576],[[]],[[]],[7],[7],[[[576,[170]],31],[[12,[32]]]],[200],[[],1831],[[]],[200],[[]],[[],576],[209],[209],[209],[209],[210],[210],[211],[211],[170,[[1831,[170]]]],[170,[[576,[170]]]],[[]],[[]],[209],[209],[34],[34],[[[1831,[170]]]],[[[576,[170]]]],[[[1831,[170]]],170],[[[576,[170]]],170],[[],7],[[],7],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[1831],[576],[[]],[[]],[[],1831],[[],576],[[]],[[]],[1831],[576],[[[576,[508]]],508],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],14],[[],14],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],15],[[],15],[1832],[1833,1834],[1833,38],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[1832,1835],[[[77,[[14,[1836]]]],1832,1837],1838],[1838,1838],[1839,1839],[1833,1833],[1836,1836],[[]],[[]],[[]],[[]],[1836,1836],[[1839,1836],1836],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[1833,1833],74],[[],74],[[],1838],[[],1840],[1839,1840],0,0,[[],1839],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],0,[[]],[[]],[[]],[[]],[[]],[13,14],[1841,[[14,[1]]]],[1841,[[14,[1]]]],[1841,[[14,[1]]]],[1841,[[14,[1]]]],[1839,[[14,[1]]]],[1839,1842],[7],[1838],[7],[7],[7],[7],[1836],[[1839,1836]],[15,29],[15,29],[15,29],[30],[30],[1832,29],[[1839,1832],29],0,[1836],[1838,1843],[[1839,1836]],[1838,1844],[[1838,1838],29],[[1832,1832],29],[[1833,1845],29],[[1833,1833],29],[[1836,1836],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],0,0,0,[1846],[[1839,1846]],0,[1846,29],0,[1836],[[1839,1836]],0,[[1838,[0,[1847,170]]],[[14,[1848]]]],[1832,1849],[1832,[[14,[38]]]],[[1850,31],[[12,[32]]]],[[1850,31],[[12,[32]]]],[[1838,31],[[12,[32]]]],[[1832,31],[[12,[32]]]],[[1839,31],[[12,[32]]]],[[1833,31],[[12,[32]]]],[[1833,31],[[12,[32]]]],[[1836,31],[[12,[32]]]],[[1838,[77,[[14,[1836]]]]],1838],[[]],[[]],[[[0,[1841,143,218]]],1839],[[]],[[[1858,[1851,[1853,[1852,1851]],[0,[[1857,[[1856,[[1855,[1852,1851,[1853,[1852,1851]],1854]],1852,1852]]]],143,218]],1854]]],1839],[[]],[[]],[820,1836],[[]],[[]],[[]],[[]],[[]],[38,[[12,[1833,1859]]]],[75,1836],[34],[[1833,1833],29],[[1833,1845],29],[[1833,1845],29],[[1833,1833],29],[[1838,[0,[1847,170]]],29],[[1838,30]],[[1833,30]],[[1836,30]],[1838,[[14,[1836]]]],[[],1860],[[1838,76]],0,0,[[],7],[[],7],[[],7],[[],7],[[],7],0,[1838,1860],0,[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[1836,820],[[]],[[]],[[]],[[]],[[]],[1836,75],[1841,29],[1841,29],[1841,29],[1841,29],[1839,29],[1838,29],[1832,29],[1838,29],[1832,29],[[1833,1845],29],[[1833,1833],29],[1832,1833],0,[1832,[[14,[49]]]],[[1833,1845],29],[[1833,1833],29],[[],[[14,[1845]]]],0,[[],1832],[1838,[[14,[1832]]]],0,[1832,[[14,[38]]]],[1832,38],[[1832,1837],1838],[[38,38,1833,[14,[38]],[14,[49]],[14,[38]],1849,1861],1832],[[[0,[1841,143,218]]],1839],[1832,1838],[[1832,1837],1838],[1862,1836],[[1839,1862],1836],[[],1838],[[],1839],[[]],[1839],[1838,1838],[[1833,1845],[[14,[74]]]],[[1833,1833],[[14,[74]]]],[[1848,1863]],[[1836,1864]],[[1838,[0,[1847,170]],1850],1838],[[1839,1836,1864]],[[1838,1837],1838],[[1836,1836]],[[1839,1836,1836]],[1832,1865],[[1839,1832],1865],[1865],0,0,0,0,[1832,38],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],141],0,0,[1836,29],[[1839,1836],29],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],0,0,[[1838,76],14],0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[],15],[[]],[[]],[[]],[[]],[1835,1835],[[]],[[],[[9,[22,8]]]],[7],[7],[7],[7],[[]],[[]],[7],[7],[15,29],[30],[[1835,1835],29],[[],29],[[],29],[[],29],[[],29],[[1835,31],[[12,[32]]]],[[1866,31],[[12,[32]]]],[[]],[[]],[[]],[[]],[[1835,30]],[[],7],[[],7],[1866,1865],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],[[],1832],[1866,1832],[1832,1866],[[]],[1867],[1866,1865],[1865],[[1866,1865]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],14],[[],14],[[]],[[]],0,0,0,0,[[],1],[[],1],[[[3,[2]]]],[[]],[[]],[1842,1842],[[]],[[],[[9,[22,8]]]],[7],[7],[[]],[7],[[1842,31],[[12,[32]]]],[[]],[[]],[25],[[],7],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[1839,1868],[1839,[[12,[1869]]]],[[]],[[]],[[],12],[[],12],[[],13],[[],14],[1842,[[14,[1839]]]],[[]],[[1839,76]],0,[[],1],[[],1],[[[3,[2]]]],[[]],[[]],[[[77,[[14,[1836]]]],1832,1837]],[7],[7],[[1832,1837]],[[]],[7],[1846,1870],[[1846,31],[[12,[32]]]],[[]],[[]],[[],7],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[1846,29],[1846,29],[1846,29],[1846,1832],[[1832,1837],1846],[[[77,[[14,[1836]]]],1832,1837],1846],[1846,[[14,[1832]]]],[1846,[[14,[1836]]]],[[1846,1863]],[[1846,1863]],[[]],[[],12],[[],12],[[],13],[[],14],[[]],0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],15],[1832,[[14,[1848]]]],[[1848,1832],[[14,[1848]]]],[[1848,1832],[[14,[1848]]]],[1848,38],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1837,1835],[1848,1835],[1848,1848],[[[1871,[[0,[261,982]]]]],[[1871,[[0,[261,982]]]]]],[[[1872,[[0,[261,490]]]]],[[1872,[[0,[261,490]]]]]],[[]],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[1849,1848],29],[490,[[1872,[490]]]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[982,[[1871,[982]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[7],[7],[15,29],[15,29],[15,29],[30],[[1849,1849],29],[[1848,1848],29],[[1873,1873],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[1849,[0,[[1656,[38]],170]]],[[14,[1848]]]],[[1849,31],[[12,[32]]]],[[1849,31],[[12,[32]]]],[[1837,31],[[12,[32]]]],[[1837,31],[[12,[32]]]],[[1848,31],[[12,[32]]]],[[1848,31],[[12,[32]]]],[[1873,31],[[12,[32]]]],[[1870,31],[[12,[32]]]],[[[1871,[982]],31],[[12,[32]]]],[[[1871,[982]],31],[[12,[32]]]],[[[1872,[490]],31],[[12,[32]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1848,30]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[1849],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1849,29],[1837,29],[1849,1870],[1849,7],[1837,7],[1848,38],[[[52,[38]],1835],1849],[1870,[[14,[1848]]]],[[1848,1863]],[[1837,1863]],[[1873,1848,1863]],[[[1871,[982]],1848,1863]],[[[1872,[490]],1848,1863]],[[1848,29]],[[1848,490]],[[1848,227]],[[1848,44]],[[1848,989]],[[1848,734]],[[1848,38]],[[1848,229]],[[1848,75]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],141],[[],141],[[],141],[[],141],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[[[1874,[261]]],[[1874,[261]]]],[[[1860,[261]]],[[1860,[261]]]],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[7],[7],[7],[7],[1874,1839],[[]],[[]],[7],[7],[1860],[[[1874,[490]],31],[[12,[32]]]],[[[1860,[490]],31],[[12,[32]]]],[[]],[[]],[[]],[[]],[[],1860],[[],7],[[],7],[1874],[1860],[1874],[1860],[[[172,[1874]]],172],[[[172,[1860]]],172],[[[172,[1874]]],172],[[[172,[1860]]],172],[1838,1860],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],[1874],[1860],[[]],[[]],[[[172,[[1874,[212]]]],242],243],[[[172,[[1860,[212]]]],242],243],[1860,1838],[1860,1838],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[172,242],243],[[172,242],243],[[],13],[[],13],[[],14],[[],14],[[]],[[]],[[],1874],[[[77,[1839]]],1874],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],15],[1845],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1845,1832],1865],[1861,1861],[1845,1845],[1875,1875],[[]],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[1845,1845],74],[[],74],[[],1845],[7],[7],[7],[7],[7],[7],[7],[7],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[15,29],[15,29],[30],[[1845,1832,1876],29],[[1845,1832,[1876,[1841]]],29],[[1861,1861],29],[[1845,1833],29],[[1845,1845],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[1861,31],[[12,[32]]]],[[1845,31],[[12,[32]]]],[[1845,31],[[12,[32]]]],[[1875,31],[[12,[32]]]],[[1875,31],[[12,[32]]]],[[1859,31],[[12,[32]]]],[[1859,31],[[12,[32]]]],[[]],[1833,1845],[[[14,[1833]]],1845],[[]],[[]],[[]],[1833,1845],[[]],[[]],[[]],[[]],[38,[[12,[1845]]]],[[1845,1845],29],[[1845,1833],29],[[1845,1833],29],[[1845,1845],29],[[1845,30]],[1861,1861],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[1845,[[14,[1833]]]],[[]],[[]],[[]],[[]],[1861,29],[1861,29],[1861,29],[[1845,1845],29],[[1845,1833],29],[[1845,1845],29],[[1845,1833],29],[1845,[[14,[1845]]]],[[1845,1845],[[14,[74]]]],[[1845,1833],[[14,[74]]]],[[1845,1832],1865],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],141],[[],141],[[],141],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],[[14,[1836]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1836,1832,1837],1862],[[1862,1848],29],[[1864,1848],29],[7],[7],[1844,1838],[7],[7],[7],[7],[7],[7],[[]],[[]],[[]],[[]],[1843],[7],[7],[1844],[7],[7],[1844,1838],[1862,1849],[[1843,31],[[12,[32]]]],[[1844,31],[[12,[32]]]],[[1862,31],[[12,[32]]]],[[1864,31],[[12,[32]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1844,[[14,[1836]]]],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],[[]],[[]],[1862,29],[1862,29],[1864,29],[1862,29],[1864,7],[1862,1832],[[1832,1837],1862],[1837,1864],[[1832,1837],1862],[1862,[[14,[1836]]]],[[1862,1863]],[[1862,1863]],[[1864,1863]],[[1864,1863]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[1862,1837],[[]],[[]],[[]],[[]],0,0,0,0,0,[[],1865],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1865,1865],[1877,1877],[[]],[[]],[1836,1836],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],1840],[[],1877],[7],[7],[7],[7],[7],[7],[7],[7],[[]],[[]],[[]],[[]],[13,14],[7],[1868],[7],[7],[7],[1836],[1832,29],[[1877,1832],29],[1836],[[1877,1836]],[1846],[[1877,1846]],[1846,29],[1836],[[1877,1836]],[[1869,31],[[12,[32]]]],[[1869,31],[[12,[32]]]],[[1868,31],[[12,[32]]]],[[1865,31],[[12,[32]]]],[[1877,31],[[12,[32]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[34],[[]],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],[[]],[[]],[1865,29],[1865,29],[1865,29],[[],[[14,[1845]]]],[[],1865],[[],1877],[1862,1836],[[1877,1862],1836],[[]],[1839],[[1836,1864]],[[1877,1836,1864]],[[1836,1836]],[[1877,1836,1836]],[1832,1865],[[1877,1832],1865],[[[0,[1841,143,218]]],1868],[[[0,[1841,143,218]]],[[12,[1869]]]],[[],1865],[[]],[[]],[[]],[[]],[[]],[[]],[[],141],[1836,29],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[[0,[1841,143,218]],76]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1878,94]],[[1038,94]],[[1879,94]],[[1039,94]],[[1880,94]],[[1881,94]],[[1882,94]],[[1883,94]],[[1884,94]],[[1885,94]],[[1886,94]],[[1887,94]],[[1888,94]],[[1494,94]],[[1889,94]],[[1890,94]],[[1891,94]],[[1892,94]],[[1893,94]],[[1040,94]],[[1894,94]],[[1895,94]],[[1488,94]],[[1896,94]],[[1897,94]],[[1898,94]],[[1560,94]],[[1899,94]],[[1900,94]],[[1901,94]],[[1902,94]],[[1903,94]],[[1904,94]],[[1905,94]],[[1906,94]],[[1907,94]],[[],1],[[],1],[[],1],[[],1],[1878,1],[1038,1],[[],1],[[],1],[1879,1],[[],1],[[],1],[[],1],[1039,1],[1880,1],[[],1],[[],1],[[],1],[[],1],[1881,1],[[],1],[1882,1],[[],1],[1883,1],[[],1],[[],1],[[],1],[1884,1],[[],1],[1885,1],[[],1],[[],1],[[],1],[1886,1],[[],1],[[],1],[1887,1],[1888,1],[[],1],[[],1],[1494,1],[[],1],[1889,1],[[],1],[[],1],[[],1],[1890,1],[[],1],[[],1],[1891,1],[1892,1],[[],1],[[],1],[[],1],[1893,1],[[],1],[[],1],[[],1],[1040,1],[[],1],[[],1],[1894,1],[1895,1],[[],1],[[],1],[1488,1],[[],1],[1896,1],[[],1],[1897,1],[[],1],[[],1],[1898,1],[1560,1],[[],1],[1899,1],[[],1],[[],1],[[],1],[1900,1],[1901,1],[[],1],[[],1],[[],1],[1902,1],[[],1],[1903,1],[[],1],[[],1],[1904,1],[[],1],[[],1],[1905,1],[[],1],[[],1],[[],1],[[],1],[1906,1],[[],1],[1907,1],[[],1],[[],1],[[],1],[[],1],[1878,1],[[],1],[1038,1],[1879,1],[[],1],[[],1],[1039,1],[[],1],[1880,1],[[],1],[1881,1],[1882,1],[[],1],[1883,1],[[],1],[[],1],[1884,1],[[],1],[1885,1],[[],1],[1886,1],[1887,1],[[],1],[1888,1],[[],1],[[],1],[1494,1],[1889,1],[[],1],[[],1],[1890,1],[1891,1],[[],1],[1892,1],[[],1],[[],1],[1893,1],[[],1],[1040,1],[[],1],[1894,1],[[],1],[1895,1],[[],1],[[],1],[1488,1],[1896,1],[[],1],[1897,1],[[],1],[[],1],[1898,1],[1560,1],[[],1],[1899,1],[[],1],[[],1],[1900,1],[[],1],[1901,1],[1902,1],[[],1],[1903,1],[[],1],[1904,1],[[],1],[1905,1],[[],1],[[],1],[1906,1],[[],1],[1907,1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],15],[[],15],[[],15],[[],15],[1878,94],[1038,94],[1879,94],[1039,94],[1880,94],[1881,94],[1882,94],[1883,94],[1884,94],[1885,94],[1886,94],[1887,94],[1888,94],[1494,94],[1889,94],[1890,94],[1891,94],[1892,94],[1893,94],[1040,94],[1894,94],[1895,94],[1488,94],[1896,94],[1897,94],[1898,94],[1560,94],[1899,94],[1900,94],[1901,94],[1902,94],[1903,94],[1904,94],[1905,94],[1906,94],[1907,94],[1878,94],[1038,94],[1879,94],[1039,94],[1880,94],[1881,94],[1882,94],[1883,94],[1884,94],[1885,94],[1886,94],[1887,94],[1888,94],[1494,94],[1889,94],[1890,94],[1891,94],[1892,94],[1893,94],[1040,94],[1894,94],[1895,94],[1488,94],[1896,94],[1897,94],[1898,94],[1560,94],[1899,94],[1900,94],[1901,94],[1902,94],[1903,94],[1904,94],[1905,94],[1906,94],[1907,94],[1560,44],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1908,17]],0,[[1898,1901]],0,[1896,1896],[1878,1878],[1038,1038],[1879,1879],[1039,1039],[1880,1880],[1881,1881],[1882,1882],[1883,1883],[1884,1884],[1885,1885],[1886,1886],[1887,1887],[1888,1888],[1494,1494],[1889,1889],[1890,1890],[1891,1891],[1892,1892],[1893,1893],[1909,1909],[1040,1040],[1894,1894],[1895,1895],[1488,1488],[1896,1896],[1897,1897],[1898,1898],[1560,1560],[1899,1899],[1900,1900],[1901,1901],[1902,1902],[1903,1903],[1904,1904],[1905,1905],[1906,1906],[1907,1907],[1910,1910],[1878,97],[1038,98],[1879,98],[1039,98],[1880,98],[1881,98],[1882,98],[1883,98],[1884,98],[1885,98],[1886,98],[1887,97],[1888,98],[1494,98],[1889,98],[1890,97],[1891,98],[1892,98],[1893,97],[1040,98],[1894,97],[1895,367],[1488,98],[1896,98],[1897,98],[1898,97],[1560,98],[1899,97],[1900,98],[1901,97],[1902,97],[1903,97],[1904,97],[1905,97],[1906,97],[1907,98],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[[],[[9,[22,8]]]],[1878,[[9,[94,8]]]],[1038,[[9,[94,8]]]],[1879,[[9,[94,8]]]],[1039,[[9,[94,8]]]],[1880,[[9,[94,8]]]],[1881,[[9,[94,8]]]],[1882,[[9,[94,8]]]],[1883,[[9,[94,8]]]],[1884,[[9,[94,8]]]],[1885,[[9,[94,8]]]],[1886,[[9,[94,8]]]],[1887,[[9,[94,8]]]],[1888,[[9,[94,8]]]],[1494,[[9,[94,8]]]],[1889,[[9,[94,8]]]],[1890,[[9,[94,8]]]],[1891,[[9,[94,8]]]],[1892,[[9,[94,8]]]],[1893,[[9,[94,8]]]],[1040,[[9,[94,8]]]],[1894,[[9,[94,8]]]],[1895,[[9,[94,8]]]],[1488,[[9,[94,8]]]],[1896,[[9,[94,8]]]],[1897,[[9,[94,8]]]],[1898,[[9,[94,8]]]],[1560,[[9,[94,8]]]],[1899,[[9,[94,8]]]],[1900,[[9,[94,8]]]],[1901,[[9,[94,8]]]],[1902,[[9,[94,8]]]],[1903,[[9,[94,8]]]],[1904,[[9,[94,8]]]],[1905,[[9,[94,8]]]],[1906,[[9,[94,8]]]],[1907,[[9,[94,8]]]],0,[[386,89,[86,[[676,[703]]]]]],[[386,[484,[1880]]]],0,[[1040,1040],74],[[1895,1895],74],[[],74],[[],74],[[23,24,25]],[[23,24,25]],[[23,24,25]],0,[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],0,[1488,[[14,[636]]]],[[1878,31],[[12,[32]]]],[[1038,31],[[12,[32]]]],[[1879,31],[[12,[32]]]],[[1039,31],[[12,[32]]]],[[1880,31],[[12,[32]]]],[[1881,31],[[12,[32]]]],[[1882,31],[[12,[32]]]],[[1883,31],[[12,[32]]]],[[1884,31],[[12,[32]]]],[[1885,31],[[12,[32]]]],[[1886,31],[[12,[32]]]],[[1887,31],[[12,[32]]]],[[1888,31],[[12,[32]]]],[[1494,31],[[12,[32]]]],[[1889,31],[[12,[32]]]],[[1890,31],[[12,[32]]]],[[1891,31],[[12,[32]]]],[[1892,31],[[12,[32]]]],[[1893,31],[[12,[32]]]],[[1896,31],[[12,[32]]]],[[1897,31],[[12,[32]]]],[[1898,31],[[12,[32]]]],[[1560,31],[[12,[32]]]],[[1899,31],[[12,[32]]]],[[1900,31],[[12,[32]]]],[[1901,31],[[12,[32]]]],[[1902,31],[[12,[32]]]],[[1903,31],[[12,[32]]]],[[1904,31],[[12,[32]]]],[[1905,31],[[12,[32]]]],[[1906,31],[[12,[32]]]],[[1907,31],[[12,[32]]]],0,[[],1908],[[],1878],[[],1040],[[],1894],[[],1488],[[],1896],[[],1897],[[],1898],[[],1560],[[],1899],[[],1900],[[],1902],[[],1903],[[],1904],[[],1905],[[],1907],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[150,[[12,[1878]]]],[150,[[12,[1038]]]],[150,[[12,[1879]]]],[150,[[12,[1039]]]],[150,[[12,[1880]]]],[150,[[12,[1881]]]],[150,[[12,[1882]]]],[150,[[12,[1883]]]],[150,[[12,[1884]]]],[150,[[12,[1885]]]],[150,[[12,[1886]]]],[150,[[12,[1887]]]],[150,[[12,[1888]]]],[150,[[12,[1494]]]],[150,[[12,[1889]]]],[150,[[12,[1890]]]],[150,[[12,[1891]]]],[150,[[12,[1892]]]],[150,[[12,[1893]]]],[150,[[12,[1894]]]],[150,[[12,[1895]]]],[150,[[12,[1488]]]],[150,[[12,[1896]]]],[150,[[12,[1897]]]],[150,[[12,[1898]]]],[150,[[12,[1560]]]],[150,[[12,[1899]]]],[150,[[12,[1900]]]],[150,[[12,[1901]]]],[150,[[12,[1902]]]],[150,[[12,[1903]]]],[150,[[12,[1904]]]],[150,[[12,[1905]]]],[150,[[12,[1906]]]],[150,[[12,[1907]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[15,29],[30],[30],[30],[30],0,[1895,343],0,[[1878,1878],29],[[1038,1038],29],[[1879,1879],29],[[1039,1039],29],[[1880,1880],29],[[1881,1881],29],[[1882,1882],29],[[1883,1883],29],[[1884,1884],29],[[1885,1885],29],[[1886,1886],29],[[1887,1887],29],[[1888,1888],29],[[1494,1494],29],[[1889,1889],29],[[1890,1890],29],[[1891,1891],29],[[1892,1892],29],[[1893,1893],29],[[1040,1040],29],[[1895,1895],29],[[1896,1896],29],[[1898,1898],29],[[1560,1560],29],[[1899,1899],29],[[1900,1900],29],[[1901,1901],29],[[1902,1902],29],[[1903,1903],29],[[1904,1904],29],[[1905,1905],29],[[1906,1906],29],[[1907,1907],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],[190,[[12,[191,192]]]],0,[[[167,[131]],[89,[1488]]]],[[[167,[131]],89]],[[1878,38],[[14,[94]]]],[[1038,38],[[14,[94]]]],[[1879,38],[[14,[94]]]],[[1039,38],[[14,[94]]]],[[1880,38],[[14,[94]]]],[[1881,38],[[14,[94]]]],[[1882,38],[[14,[94]]]],[[1883,38],[[14,[94]]]],[[1884,38],[[14,[94]]]],[[1885,38],[[14,[94]]]],[[1886,38],[[14,[94]]]],[[1887,38],[[14,[94]]]],[[1888,38],[[14,[94]]]],[[1494,38],[[14,[94]]]],[[1889,38],[[14,[94]]]],[[1890,38],[[14,[94]]]],[[1891,38],[[14,[94]]]],[[1892,38],[[14,[94]]]],[[1893,38],[[14,[94]]]],[[1040,38],[[14,[94]]]],[[1894,38],[[14,[94]]]],[[1895,7],[[14,[94]]]],[[1488,38],[[14,[94]]]],[[1896,38],[[14,[94]]]],[[1897,38],[[14,[94]]]],[[1898,38],[[14,[94]]]],[[1560,38],[[14,[94]]]],[[1899,38],[[14,[94]]]],[[1900,38],[[14,[94]]]],[[1901,38],[[14,[94]]]],[[1902,38],[[14,[94]]]],[[1903,38],[[14,[94]]]],[[1904,38],[[14,[94]]]],[[1905,38],[[14,[94]]]],[[1906,38],[[14,[94]]]],[[1907,38],[[14,[94]]]],[[1878,7],[[14,[94]]]],[[1038,7],[[14,[94]]]],[[1879,7],[[14,[94]]]],[[1039,7],[[14,[94]]]],[[1880,7],[[14,[94]]]],[[1881,7],[[14,[94]]]],[[1882,7],[[14,[94]]]],[[1883,7],[[14,[94]]]],[[1884,7],[[14,[94]]]],[[1885,7],[[14,[94]]]],[[1886,7],[[14,[94]]]],[[1887,7],[[14,[94]]]],[[1888,7],[[14,[94]]]],[[1494,7],[[14,[94]]]],[[1889,7],[[14,[94]]]],[[1890,7],[[14,[94]]]],[[1891,7],[[14,[94]]]],[[1892,7],[[14,[94]]]],[[1893,7],[[14,[94]]]],[[1040,7],[[14,[94]]]],[[1894,7],[[14,[94]]]],[[1488,7],[[14,[94]]]],[[1896,7],[[14,[94]]]],[[1897,7],[[14,[94]]]],[[1898,7],[[14,[94]]]],[[1560,7],[[14,[94]]]],[[1899,7],[[14,[94]]]],[[1900,7],[[14,[94]]]],[[1901,7],[[14,[94]]]],[[1902,7],[[14,[94]]]],[[1903,7],[[14,[94]]]],[[1904,7],[[14,[94]]]],[[1905,7],[[14,[94]]]],[[1906,7],[[14,[94]]]],[[1907,7],[[14,[94]]]],[[1878,7],[[14,[94]]]],[[1038,7],[[14,[94]]]],[[1879,7],[[14,[94]]]],[[1039,7],[[14,[94]]]],[[1880,7],[[14,[94]]]],[[1881,7],[[14,[94]]]],[[1882,7],[[14,[94]]]],[[1883,7],[[14,[94]]]],[[1884,7],[[14,[94]]]],[[1885,7],[[14,[94]]]],[[1886,7],[[14,[94]]]],[[1887,7],[[14,[94]]]],[[1888,7],[[14,[94]]]],[[1494,7],[[14,[94]]]],[[1889,7],[[14,[94]]]],[[1890,7],[[14,[94]]]],[[1891,7],[[14,[94]]]],[[1892,7],[[14,[94]]]],[[1893,7],[[14,[94]]]],[[1040,7],[[14,[94]]]],[[1894,7],[[14,[94]]]],[[1488,7],[[14,[94]]]],[[1896,7],[[14,[94]]]],[[1897,7],[[14,[94]]]],[[1898,7],[[14,[94]]]],[[1560,7],[[14,[94]]]],[[1899,7],[[14,[94]]]],[[1900,7],[[14,[94]]]],[[1901,7],[[14,[94]]]],[[1902,7],[[14,[94]]]],[[1903,7],[[14,[94]]]],[[1904,7],[[14,[94]]]],[[1905,7],[[14,[94]]]],[[1906,7],[[14,[94]]]],[[1907,7],[[14,[94]]]],[1878,7],[1038,7],[1879,7],[1039,7],[1880,7],[1881,7],[1882,7],[1883,7],[1884,7],[1885,7],[1886,7],[1887,7],[1888,7],[1494,7],[1889,7],[1890,7],[1891,7],[1892,7],[1893,7],[1040,7],[1894,7],[1895,7],[1488,7],[1896,7],[1897,7],[1898,7],[1560,7],[1899,7],[1900,7],[1901,7],[1902,7],[1903,7],[1904,7],[1905,7],[1906,7],[1907,7],[[1878,38],[[14,[94]]]],[[1038,38],[[14,[94]]]],[[1879,38],[[14,[94]]]],[[1039,38],[[14,[94]]]],[[1880,38],[[14,[94]]]],[[1881,38],[[14,[94]]]],[[1882,38],[[14,[94]]]],[[1883,38],[[14,[94]]]],[[1884,38],[[14,[94]]]],[[1885,38],[[14,[94]]]],[[1886,38],[[14,[94]]]],[[1887,38],[[14,[94]]]],[[1888,38],[[14,[94]]]],[[1494,38],[[14,[94]]]],[[1889,38],[[14,[94]]]],[[1890,38],[[14,[94]]]],[[1891,38],[[14,[94]]]],[[1892,38],[[14,[94]]]],[[1893,38],[[14,[94]]]],[[1040,38],[[14,[94]]]],[[1894,38],[[14,[94]]]],[[1895,7],[[14,[94]]]],[[1488,38],[[14,[94]]]],[[1896,38],[[14,[94]]]],[[1897,38],[[14,[94]]]],[[1898,38],[[14,[94]]]],[[1560,38],[[14,[94]]]],[[1899,38],[[14,[94]]]],[[1900,38],[[14,[94]]]],[[1901,38],[[14,[94]]]],[[1902,38],[[14,[94]]]],[[1903,38],[[14,[94]]]],[[1904,38],[[14,[94]]]],[[1905,38],[[14,[94]]]],[[1906,38],[[14,[94]]]],[[1907,38],[[14,[94]]]],0,[[1878,31],[[12,[32]]]],[[1038,31],[[12,[32]]]],[[1879,31],[[12,[32]]]],[[1039,31],[[12,[32]]]],[[1880,31],[[12,[32]]]],[[1881,31],[[12,[32]]]],[[1882,31],[[12,[32]]]],[[1883,31],[[12,[32]]]],[[1884,31],[[12,[32]]]],[[1885,31],[[12,[32]]]],[[1886,31],[[12,[32]]]],[[1887,31],[[12,[32]]]],[[1888,31],[[12,[32]]]],[[1494,31],[[12,[32]]]],[[1889,31],[[12,[32]]]],[[1890,31],[[12,[32]]]],[[1891,31],[[12,[32]]]],[[1892,31],[[12,[32]]]],[[1893,31],[[12,[32]]]],[[1909,31],[[12,[32]]]],[[1040,31],[[12,[32]]]],[[1894,31],[[12,[32]]]],[[1895,31],[[12,[32]]]],[[1488,31],[[12,[32]]]],[[1896,31],[[12,[32]]]],[[1897,31],[[12,[32]]]],[[1898,31],[[12,[32]]]],[[1560,31],[[12,[32]]]],[[1899,31],[[12,[32]]]],[[1900,31],[[12,[32]]]],[[1901,31],[[12,[32]]]],[[1902,31],[[12,[32]]]],[[1903,31],[[12,[32]]]],[[1904,31],[[12,[32]]]],[[1905,31],[[12,[32]]]],[[1906,31],[[12,[32]]]],[[1907,31],[[12,[32]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[47,[[77,[53]]]]],1560],[719,1560],[[],1560],[[]],[636,1560],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[25],[25],[25],[94,[[14,[1878]]]],[94,[[14,[1038]]]],[94,[[14,[1879]]]],[94,[[14,[1039]]]],[94,[[14,[1880]]]],[94,[[14,[1881]]]],[94,[[14,[1882]]]],[94,[[14,[1883]]]],[94,[[14,[1884]]]],[94,[[14,[1885]]]],[94,[[14,[1886]]]],[94,[[14,[1887]]]],[94,[[14,[1888]]]],[94,[[14,[1494]]]],[94,[[14,[1889]]]],[94,[[14,[1890]]]],[94,[[14,[1891]]]],[94,[[14,[1892]]]],[94,[[14,[1893]]]],[94,[[14,[1040]]]],[94,[[14,[1894]]]],[94,[[14,[1895]]]],[94,[[14,[1488]]]],[94,[[14,[1896]]]],[94,[[14,[1897]]]],[94,[[14,[1898]]]],[94,[[14,[1560]]]],[94,[[14,[1899]]]],[94,[[14,[1900]]]],[94,[[14,[1901]]]],[94,[[14,[1902]]]],[94,[[14,[1903]]]],[94,[[14,[1904]]]],[94,[[14,[1905]]]],[94,[[14,[1906]]]],[94,[[14,[1907]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[25],[25],[25],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[7,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[7,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[38,[[14,[94]]]],[1909,1911],[1878,[[14,[99]]]],[1038,[[14,[99]]]],[1879,[[14,[99]]]],[1039,[[14,[99]]]],[1880,[[14,[99]]]],[1881,[[14,[99]]]],[1882,[[14,[99]]]],[1883,[[14,[99]]]],[1884,[[14,[99]]]],[1885,[[14,[99]]]],[1886,[[14,[99]]]],[1887,[[14,[99]]]],[1888,[[14,[99]]]],[1494,[[14,[99]]]],[1889,[[14,[99]]]],[1890,[[14,[99]]]],[1891,[[14,[99]]]],[1892,[[14,[99]]]],[1893,[[14,[99]]]],[1040,[[14,[99]]]],[1894,[[14,[99]]]],[1895,[[14,[99]]]],[1488,[[14,[99]]]],[1896,[[14,[99]]]],[1897,[[14,[99]]]],[1898,[[14,[99]]]],[1560,[[14,[99]]]],[1899,[[14,[99]]]],[1900,[[14,[99]]]],[1901,[[14,[99]]]],[1902,[[14,[99]]]],[1903,[[14,[99]]]],[1904,[[14,[99]]]],[1905,[[14,[99]]]],[1906,[[14,[99]]]],[1907,[[14,[99]]]],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],[[],100],0,[[1878,30]],[[1895,30]],[[1902,30]],[[1903,30]],[1488,53],[1560,53],0,0,0,0,0,[[1878,38],[[14,[7]]]],[[1887,38],[[14,[7]]]],[[1890,38],[[14,[7]]]],[[1893,38],[[14,[7]]]],[[1894,38],[[14,[7]]]],[[1898,38],[[14,[7]]]],[[1899,38],[[14,[7]]]],[[1901,38],[[14,[7]]]],[[1902,38],[[14,[7]]]],[[1903,38],[[14,[7]]]],[[1904,38],[[14,[7]]]],[[1905,38],[[14,[7]]]],[[1906,38],[[14,[7]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1878,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1038,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1879,8]]],[[9,[1,8]]]],[[[9,[1039,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1880,8]]],[[9,[1,8]]]],[[[9,[1881,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1882,8]]],[[9,[1,8]]]],[[[9,[1883,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1884,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1885,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1886,8]]],[[9,[1,8]]]],[[[9,[1887,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1888,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1494,8]]],[[9,[1,8]]]],[[[9,[1889,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1890,8]]],[[9,[1,8]]]],[[[9,[1891,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1892,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1893,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1040,8]]],[[9,[1,8]]]],[[[9,[1894,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1895,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1488,8]]],[[9,[1,8]]]],[[[9,[1896,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1897,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1898,8]]],[[9,[1,8]]]],[[[9,[1560,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1899,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1900,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1901,8]]],[[9,[1,8]]]],[[[9,[1902,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1903,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1904,8]]],[[9,[1,8]]]],[[[9,[1905,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[1906,8]]],[[9,[1,8]]]],[[[9,[1907,8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[9,[1878,8]]],[[9,[94,8]]]],[[[9,[1038,8]]],[[9,[94,8]]]],[[[9,[1879,8]]],[[9,[94,8]]]],[[[9,[1039,8]]],[[9,[94,8]]]],[[[9,[1880,8]]],[[9,[94,8]]]],[[[9,[1881,8]]],[[9,[94,8]]]],[[[9,[1882,8]]],[[9,[94,8]]]],[[[9,[1883,8]]],[[9,[94,8]]]],[[[9,[1884,8]]],[[9,[94,8]]]],[[[9,[1885,8]]],[[9,[94,8]]]],[[[9,[1886,8]]],[[9,[94,8]]]],[[[9,[1887,8]]],[[9,[94,8]]]],[[[9,[1888,8]]],[[9,[94,8]]]],[[[9,[1494,8]]],[[9,[94,8]]]],[[[9,[1889,8]]],[[9,[94,8]]]],[[[9,[1890,8]]],[[9,[94,8]]]],[[[9,[1891,8]]],[[9,[94,8]]]],[[[9,[1892,8]]],[[9,[94,8]]]],[[[9,[1893,8]]],[[9,[94,8]]]],[[[9,[1040,8]]],[[9,[94,8]]]],[[[9,[1894,8]]],[[9,[94,8]]]],[[[9,[1895,8]]],[[9,[94,8]]]],[[[9,[1488,8]]],[[9,[94,8]]]],[[[9,[1896,8]]],[[9,[94,8]]]],[[[9,[1897,8]]],[[9,[94,8]]]],[[[9,[1898,8]]],[[9,[94,8]]]],[[[9,[1560,8]]],[[9,[94,8]]]],[[[9,[1899,8]]],[[9,[94,8]]]],[[[9,[1900,8]]],[[9,[94,8]]]],[[[9,[1901,8]]],[[9,[94,8]]]],[[[9,[1902,8]]],[[9,[94,8]]]],[[[9,[1903,8]]],[[9,[94,8]]]],[[[9,[1904,8]]],[[9,[94,8]]]],[[[9,[1905,8]]],[[9,[94,8]]]],[[[9,[1906,8]]],[[9,[94,8]]]],[[[9,[1907,8]]],[[9,[94,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1878,102],[1038,103],[1879,103],[1039,103],[1880,103],[1881,103],[1882,103],[1883,103],[1884,103],[1885,103],[1886,103],[1887,102],[1888,103],[1494,103],[1889,103],[1890,102],[1891,103],[1892,103],[1893,102],[1040,103],[1894,102],[1895,368],[1488,103],[1896,103],[1897,103],[1898,102],[1560,103],[1899,102],[1900,103],[1901,102],[1902,102],[1903,102],[1904,102],[1905,102],[1906,102],[1907,103],[[1894,480]],0,0,0,0,0,0,0,[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[1878,7],[[14,[38]]]],[[1038,7],[[14,[38]]]],[[1879,7],[[14,[38]]]],[[1039,7],[[14,[38]]]],[[1880,7],[[14,[38]]]],[[1881,7],[[14,[38]]]],[[1882,7],[[14,[38]]]],[[1883,7],[[14,[38]]]],[[1884,7],[[14,[38]]]],[[1885,7],[[14,[38]]]],[[1886,7],[[14,[38]]]],[[1887,7],[[14,[38]]]],[[1888,7],[[14,[38]]]],[[1494,7],[[14,[38]]]],[[1889,7],[[14,[38]]]],[[1890,7],[[14,[38]]]],[[1891,7],[[14,[38]]]],[[1892,7],[[14,[38]]]],[[1893,7],[[14,[38]]]],[[1040,7],[[14,[38]]]],[[1894,7],[[14,[38]]]],[[1488,7],[[14,[38]]]],[[1896,7],[[14,[38]]]],[[1897,7],[[14,[38]]]],[[1898,7],[[14,[38]]]],[[1560,7],[[14,[38]]]],[[1899,7],[[14,[38]]]],[[1900,7],[[14,[38]]]],[[1901,7],[[14,[38]]]],[[1902,7],[[14,[38]]]],[[1903,7],[[14,[38]]]],[[1904,7],[[14,[38]]]],[[1905,7],[[14,[38]]]],[[1906,7],[[14,[38]]]],[[1907,7],[[14,[38]]]],[744,1898],[[53,53],1560],[[1894,[14,[343]]],[[14,[1895]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1040,1040],[[14,[74]]]],[[1895,1895],[[14,[74]]]],[1488,[[14,[636]]]],[1488,49],[1560,49],[1488,49],[1560,49],0,0,0,0,0,0,0,[1911,1912],[1911,1913],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[1878,[[14,[75]]]],[1887,[[14,[75]]]],[1890,[[14,[75]]]],[1893,[[14,[75]]]],[1894,[[14,[75]]]],[1898,[[14,[75]]]],[1899,[[14,[75]]]],[1901,[[14,[75]]]],[1902,[[14,[75]]]],[1903,[[14,[75]]]],[1904,[[14,[75]]]],[1905,[[14,[75]]]],[1906,[[14,[75]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[1878,105],[1038,105],[1879,105],[1039,105],[1880,105],[1881,105],[1882,105],[1883,105],[1884,105],[1885,105],[1886,105],[1887,105],[1888,105],[1494,105],[1889,105],[1890,105],[1891,105],[1892,105],[1893,105],[1040,105],[1894,105],[1895,105],[1488,105],[1896,105],[1897,105],[1898,105],[1560,105],[1899,105],[1900,105],[1901,105],[1902,105],[1903,105],[1904,105],[1905,105],[1906,105],[1907,105],[[[9,[1878,8]]],106],[[[9,[1038,8]]],106],[[[9,[1879,8]]],106],[[[9,[1039,8]]],106],[[[9,[1880,8]]],106],[[[9,[1881,8]]],106],[[[9,[1882,8]]],106],[[[9,[1883,8]]],106],[[[9,[1884,8]]],106],[[[9,[1885,8]]],106],[[[9,[1886,8]]],106],[[[9,[1887,8]]],106],[[[9,[1888,8]]],106],[[[9,[1494,8]]],106],[[[9,[1889,8]]],106],[[[9,[1890,8]]],106],[[[9,[1891,8]]],106],[[[9,[1892,8]]],106],[[[9,[1893,8]]],106],[[[9,[1040,8]]],106],[[[9,[1894,8]]],106],[[[9,[1895,8]]],106],[[[9,[1488,8]]],106],[[[9,[1896,8]]],106],[[[9,[1897,8]]],106],[[[9,[1898,8]]],106],[[[9,[1560,8]]],106],[[[9,[1899,8]]],106],[[[9,[1900,8]]],106],[[[9,[1901,8]]],106],[[[9,[1902,8]]],106],[[[9,[1903,8]]],106],[[[9,[1904,8]]],106],[[[9,[1905,8]]],106],[[[9,[1906,8]]],106],[[[9,[1907,8]]],106],[[1878,94],[[14,[29]]]],[[1038,94],[[14,[29]]]],[[1879,94],[[14,[29]]]],[[1039,94],[[14,[29]]]],[[1880,94],[[14,[29]]]],[[1881,94],[[14,[29]]]],[[1882,94],[[14,[29]]]],[[1883,94],[[14,[29]]]],[[1884,94],[[14,[29]]]],[[1885,94],[[14,[29]]]],[[1886,94],[[14,[29]]]],[[1887,94],[[14,[29]]]],[[1888,94],[[14,[29]]]],[[1494,94],[[14,[29]]]],[[1889,94],[[14,[29]]]],[[1890,94],[[14,[29]]]],[[1891,94],[[14,[29]]]],[[1892,94],[[14,[29]]]],[[1893,94],[[14,[29]]]],[[1040,94],[[14,[29]]]],[[1894,94],[[14,[29]]]],[[1895,94],[[14,[29]]]],[[1488,94],[[14,[29]]]],[[1896,94],[[14,[29]]]],[[1897,94],[[14,[29]]]],[[1898,94],[[14,[29]]]],[[1560,94],[[14,[29]]]],[[1899,94],[[14,[29]]]],[[1900,94],[[14,[29]]]],[[1901,94],[[14,[29]]]],[[1902,94],[[14,[29]]]],[[1903,94],[[14,[29]]]],[[1904,94],[[14,[29]]]],[[1905,94],[[14,[29]]]],[[1906,94],[[14,[29]]]],[[1907,94],[[14,[29]]]],[1878,107],[1038,107],[1879,107],[1039,107],[1880,107],[1881,107],[1882,107],[1883,107],[1884,107],[1885,107],[1886,107],[1887,107],[1888,107],[1494,107],[1889,107],[1890,107],[1891,107],[1892,107],[1893,107],[1040,107],[1894,107],[1895,107],[1488,107],[1896,107],[1897,107],[1898,107],[1560,107],[1899,107],[1900,107],[1901,107],[1902,107],[1903,107],[1904,107],[1905,107],[1906,107],[1907,107],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],0,0,0,[1488,44],[1560,44],0,0,[1560,[[14,[44]]]],[[1878,226],12],[[1038,226],12],[[1879,226],12],[[1039,226],12],[[1880,226],12],[[1881,226],12],[[1882,226],12],[[1883,226],12],[[1884,226],12],[[1885,226],12],[[1886,226],12],[[1887,226],12],[[1888,226],12],[[1494,226],12],[[1889,226],12],[[1890,226],12],[[1891,226],12],[[1892,226],12],[[1893,226],12],[[1894,226],12],[[1895,226],12],[[1488,226],12],[[1896,226],12],[[1897,226],12],[[1898,226],12],[[1560,226],12],[[1899,226],12],[[1900,226],12],[[1901,226],12],[[1902,226],12],[[1903,226],12],[[1904,226],12],[[1905,226],12],[[1906,226],12],[[1907,226],12],[[1878,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1038,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1879,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1039,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1880,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1881,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1882,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1883,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1884,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1885,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1886,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1887,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1888,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1494,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1889,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1890,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1891,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1892,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1893,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1040,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1894,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1895,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1488,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1896,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1897,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1898,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1898,744]],[[1560,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1560,53,53]],[[1899,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1900,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1901,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1902,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1903,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1904,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1905,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1906,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1907,[9,[94,8]]],[[12,[[9,[94,8]]]]]],[[1488,[14,[636]]]],[[1488,29]],[[1488,29]],[[1488,[14,[719]]]],[[1560,49,49]],[[1560,44]],[[1560,[14,[44]]]],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[1900,[[14,[29]]]],[1900,[[14,[29]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],[[14,[38]]]],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[1878,7],[1887,7],[1890,7],[1893,7],[1894,7],[1898,7],[1899,7],[1901,7],[1902,7],[1903,7],[1904,7],[1905,7],[1906,7],[1878,38],[1887,38],[1890,38],[1893,38],[1894,38],[1898,38],[1899,38],[1901,38],[1902,38],[1903,38],[1904,38],[1905,38],[1906,38],[1878,108],[1887,108],[1890,108],[1893,108],[1894,108],[1898,108],[1899,108],[1901,108],[1902,108],[1903,108],[1904,108],[1905,108],[1906,108],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1488,53],[1560,53],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1560,44],1560],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1914,17]],[1915,1915],[[]],[[],[[9,[22,8]]]],[[1916,1917,343,1488,1918,1919,18],1920],[[],1921],[[],1916],[[],1914],[7],[7],[7],[7],[7],[7],[7],[7],[[],1921],[[]],[[]],[[]],[[]],[7],[7],[7],[7],0,[[1921,31],[[12,[32]]]],[[1915,31],[[12,[32]]]],[[1916,31],[[12,[32]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[34],[34],[34],[[],1921],[1922,1923],[[1922,49,49],1923],[[1916,343],[[14,[1920]]]],[[1916,1924],[[14,[343]]]],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1916,343],[[14,[1920]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],0,[[],14],[[],14],[[],14],[[],14],[[1921,29],1915],[[]],[[]],[[]],[[]],0,[17],0,[[1898,1560,215,[14,[1922]],[14,[1922]]],[[14,[[1925,[760]]]]]],0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1926,17]],[1927,1927],[[]],[[],[[9,[22,8]]]],[[],1918],[[],1919],[[],1927],[7],[1918],[7],[7],[1919],[1927],[7],[7],[7],[1918],[1919],[7],[7],[1927],[[1927,73]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[34],[34],[34],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[10,[8]]],[[10,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[[11,[8]]],[[11,[1,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]]],"c":[3105,12886,12887,13058,13059,13061,13062,13233,13237,13241,13246,13288,13290,13666,14734,14735,15051,40955,41004,41096,41112,41368,41422,41425,41475,42486,42487,42488,42489,42490,42491,42492,44584,45160,75288,78882,78883,79939],"p":[[8,"Any"],[3,"Image"],[3,"RenderAssets"],[3,"DefaultPlugins"],[3,"PluginGroupBuilder"],[3,"MinimalPlugins"],[15,"usize"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[4,"Result"],[3,"TypeId"],[4,"Option"],[8,"DynEq"],[3,"AccessibilityPlugin"],[3,"App"],[3,"AccessibilityRequested"],[3,"ManageAccessibilityUpdates"],[3,"AccessibilityNode"],[4,"AccessibilitySystem"],[8,"TypeData"],[3,"Components"],[3,"Storages"],[8,"FnMut"],[3,"Focus"],[3,"ActionRequest"],[8,"SystemSet"],[15,"bool"],[8,"Hasher"],[3,"Formatter"],[3,"Error"],[3,"NodeBuilder"],[3,"World"],[4,"NodeConfigs"],[3,"Rect"],[3,"Node"],[15,"str"],[3,"NodeId"],[3,"Point"],[3,"Vec2"],[3,"Size"],[4,"Action"],[15,"f64"],[4,"AriaCurrent"],[3,"Affine"],[15,"array"],[4,"AutoComplete"],[15,"u32"],[3,"NodeClassSet"],[15,"u8"],[15,"slice"],[15,"f32"],[4,"Checked"],[4,"Role"],[4,"Orientation"],[4,"TextDirection"],[4,"Invalid"],[4,"DefaultActionVerb"],[4,"SortDirection"],[4,"Live"],[4,"HasPopup"],[4,"ListStyle"],[4,"TextAlign"],[4,"VerticalOffset"],[4,"TextDecoration"],[3,"CustomAction"],[3,"TextPosition"],[3,"TextSelection"],[3,"Tree"],[3,"TreeUpdate"],[4,"ActionData"],[3,"ActionRequest"],[4,"Ordering"],[15,"u64"],[8,"FnOnce"],[8,"Into"],[8,"DerefMut"],[3,"Vec"],[3,"AnimationClip"],[3,"EntityPath"],[3,"VariableCurve"],[3,"AnimationPlayer"],[4,"Handle"],[3,"Time"],[3,"Res"],[3,"Assets"],[3,"Children"],[3,"Query"],[3,"Name"],[3,"Transform"],[3,"MorphWeights"],[4,"Keyframes"],[8,"Reflect"],[4,"RepeatAnimation"],[3,"AnimationPlugin"],[3,"DynamicEnum"],[3,"DynamicStruct"],[4,"TypeInfo"],[3,"TypeRegistration"],[4,"UntypedAssetId"],[3,"VariantFieldIter"],[3,"FieldIter"],[3,"Duration"],[4,"ReflectMut"],[4,"ReflectOwned"],[4,"ReflectRef"],[4,"VariantType"],[8,"Plugin"],[8,"Plugins"],[3,"Schedule"],[8,"ScheduleLabel"],[8,"IntoSystemConfigs"],[3,"Main"],[3,"PreStartup"],[3,"Startup"],[3,"PostStartup"],[3,"First"],[3,"PreUpdate"],[3,"StateTransition"],[3,"RunFixedUpdateLoop"],[3,"FixedUpdate"],[3,"Update"],[3,"SpawnScene"],[3,"PostUpdate"],[3,"Last"],[3,"AppLabelId"],[3,"MainSchedulePlugin"],[3,"ScheduleRunnerPlugin"],[4,"PluginsState"],[3,"AppExit"],[4,"RunMode"],[3,"ScheduleBuildSettings"],[8,"IntoSystemSetConfigs"],[3,"MainScheduleOrder"],[3,"SubApp"],[8,"AppLabel"],[8,"Resource"],[3,"OsStr"],[8,"AsRef"],[3,"String"],[8,"Fn"],[8,"Send"],[8,"AssetLoader"],[8,"Process"],[4,"AssetSourceId"],[3,"AssetSourceBuilder"],[3,"Diagnostic"],[3,"Local"],[8,"Deserializer"],[3,"CiTestingConfig"],[8,"Asset"],[3,"ReflectAsset"],[4,"UntypedHandle"],[3,"AssetServer"],[3,"LoadContext"],[4,"CowArc"],[3,"LoadedAsset"],[3,"AssetIndex"],[8,"TypePath"],[4,"AssetId"],[3,"AssetPath"],[3,"UpdateAssets"],[3,"AssetEvents"],[3,"ResMut"],[4,"AssetEvent"],[3,"EventWriter"],[3,"ErasedLoadedAsset"],[3,"ReflectHandle"],[8,"Sized"],[8,"AsyncRead"],[3,"Pin"],[8,"AsyncWrite"],[3,"AssetPlugin"],[3,"Bytes"],[3,"Chain"],[3,"AssetHandleProvider"],[4,"AssetServerMode"],[4,"LoadState"],[4,"DependencyLoadState"],[4,"RecursiveDependencyLoadState"],[3,"TrackAssets"],[8,"Unpin"],[3,"CloseFuture"],[8,"AssetMetaDyn"],[4,"DeserializeMetaError"],[8,"AssetContainer"],[3,"StrongHandle"],[4,"ParseAssetPathError"],[8,"Serializer"],[3,"Ok"],[3,"Error"],[3,"FlushFuture"],[3,"InvalidGenerationError"],[3,"LoadDirectError"],[4,"ReadAssetBytesError"],[4,"AssetLoadError"],[3,"MissingAssetLoaderForExtensionError"],[3,"MissingAssetLoaderForTypeNameError"],[15,"never"],[3,"Uuid"],[3,"SpannedError"],[3,"Error"],[3,"MissingProcessedAssetReaderError"],[4,"AssetReaderError"],[3,"MissingAssetSourceError"],[3,"PathBuf"],[3,"Path"],[3,"OwnedFd"],[8,"IntoFilelike"],[8,"IntoSocketlike"],[8,"Future"],[3,"AssetSource"],[3,"UnsafeWorldCell"],[8,"Iterator"],[3,"AssetsMutIterator"],[3,"LoadedFolder"],[8,"Sync"],[3,"AssetSources"],[3,"ReadFuture"],[3,"ReadExactFuture"],[3,"ReadToEndFuture"],[3,"ReadToStringFuture"],[3,"IoSliceMut"],[3,"ReadVectoredFuture"],[8,"Serializer"],[8,"Error"],[3,"Take"],[15,"u128"],[3,"WriteFuture"],[3,"WriteAllFuture"],[3,"IoSlice"],[3,"WriteVectoredFuture"],[3,"AssetSourceBuilders"],[4,"AssetSourceEvent"],[3,"Receiver"],[3,"MissingAssetWriterError"],[3,"MissingProcessedAssetWriterError"],[4,"AssetWriterError"],[3,"AssetProcessorData"],[3,"VecReader"],[3,"Context"],[4,"Poll"],[8,"AssetReader"],[8,"AssetWriter"],[3,"EmbeddedAssetRegistry"],[4,"Value"],[3,"Dir"],[3,"RawRwLock"],[3,"AHasher"],[3,"BuildHasherDefault"],[3,"Global"],[3,"HashMap"],[3,"RwLock"],[3,"Sender"],[3,"EmbeddedWatcher"],[3,"FileAssetReader"],[3,"FileWatcher"],[3,"Error"],[3,"FileAssetWriter"],[8,"Clone"],[3,"GatedReader"],[3,"GateOpener"],[3,"MemoryAssetReader"],[3,"Data"],[3,"DirStream"],[3,"ProcessorGatedReader"],[3,"TransactionLockedReader"],[3,"ProcessedInfo"],[3,"ProcessDependencyInfo"],[3,"AssetMeta"],[8,"Deserialize"],[4,"AssetAction"],[3,"AssetMetaMinimal"],[4,"AssetActionMinimal"],[3,"ProcessedInfoMinimal"],[8,"Settings"],[8,"Serialize"],[3,"ProcessContext"],[3,"AssetProcessor"],[4,"ProcessResult"],[4,"ProcessStatus"],[4,"ProcessorState"],[8,"Default"],[3,"LoadAndSaveSettings"],[3,"ProcessorAssetInfos"],[4,"ReadLogError"],[3,"WriteLogError"],[4,"ValidateLogError"],[4,"LogEntryError"],[4,"ProcessError"],[4,"InitializeError"],[8,"AssetSaver"],[3,"LoadAndSave"],[8,"ErasedProcessor"],[3,"SavedAsset"],[3,"Amplify"],[3,"AudioSource"],[3,"Buffered"],[3,"AudioPlugin"],[15,"u16"],[4,"Volume"],[3,"VolumeLevel"],[4,"PlaybackMode"],[3,"PlaybackSettings"],[3,"SpatialListener"],[3,"GlobalVolume"],[3,"SpatialScale"],[3,"Pitch"],[8,"Sample"],[3,"SamplesConverter"],[8,"Decodable"],[3,"AudioSourceBundle"],[3,"AudioLoader"],[3,"Delay"],[3,"AudioSink"],[3,"SpatialAudioSink"],[15,"char"],[8,"FromIterator"],[3,"FadeIn"],[8,"FromSample"],[8,"Source"],[3,"BltFilter"],[3,"Mix"],[3,"Pausable"],[3,"PeriodicAccess"],[3,"Repeat"],[3,"Vec3"],[3,"SkipDuration"],[3,"Skippable"],[3,"Speed"],[3,"Stoppable"],[3,"TakeDuration"],[8,"ToSample"],[3,"TypeRegistrationPlugin"],[3,"TaskPoolPlugin"],[3,"FrameCountPlugin"],[8,"NoUninit"],[8,"AnyBitPattern"],[3,"TaskPoolThreadAssignmentPolicy"],[3,"TaskPoolOptions"],[3,"FrameCount"],[3,"Entity"],[3,"TableRow"],[3,"DebugNameItem"],[3,"Tick"],[3,"DebugNameState"],[4,"Cow"],[3,"Archetype"],[3,"Table"],[3,"ArchetypeComponentId"],[3,"Access"],[3,"ComponentId"],[3,"FilteredAccess"],[3,"CorePipelinePlugin"],[3,"Skybox"],[3,"BlitPlugin"],[3,"BlitPipelineKey"],[3,"BlitPipeline"],[3,"RenderPipelineDescriptor"],[3,"BloomSettings"],[3,"BloomPrefilterSettings"],[4,"BloomCompositeMode"],[3,"BloomPlugin"],[4,"ClearColorConfig"],[3,"ClearColor"],[3,"DynamicTupleStruct"],[3,"TupleStructFieldIter"],[3,"ContrastAdaptiveSharpeningSettings"],[3,"DenoiseCAS"],[3,"CASPlugin"],[3,"CASPipelineKey"],[3,"CASNode"],[3,"CASPipeline"],[3,"RenderGraphContext"],[3,"RenderContext"],[4,"NodeRunError"],[3,"Camera2d"],[3,"Transparent2d"],[3,"Range"],[3,"Core2dPlugin"],[3,"CachedRenderPipelineId"],[3,"Camera2dBundle"],[3,"DrawFunctionId"],[3,"NonMaxU32"],[3,"Commands"],[3,"With"],[3,"Extract"],[3,"MainPass2dNode"],[3,"Camera3d"],[3,"Camera3dDepthTextureUsage"],[4,"Camera3dDepthLoadOp"],[3,"Opaque3d"],[3,"AlphaMask3d"],[3,"Transparent3d"],[3,"Core3dPlugin"],[4,"Msaa"],[3,"Camera3dBundle"],[3,"MainOpaquePass3dNode"],[3,"MainTransparentPass3dNode"],[3,"TextureUsages"],[3,"TextureCache"],[3,"RenderDevice"],[3,"Opaque3dDeferred"],[3,"AlphaMask3dDeferred"],[3,"CopyDeferredLightingIdPlugin"],[3,"CopyDeferredLightingIdNode"],[3,"DeferredGBufferPrepassNode"],[3,"TemporalAntiAliasSettings"],[3,"TemporalAntiAliasPlugin"],[3,"TemporalAntiAliasBundle"],[3,"VertexState"],[4,"Sensitivity"],[3,"Fxaa"],[3,"FxaaPlugin"],[3,"FxaaPipelineKey"],[3,"FxaaNode"],[3,"FxaaPipeline"],[3,"PipelineCache"],[3,"SpecializedRenderPipelines"],[3,"MsaaWritebackPlugin"],[3,"MsaaWritebackNode"],[3,"DepthPrepass"],[3,"NormalPrepass"],[3,"MotionVectorPrepass"],[3,"DeferredPrepass"],[3,"Opaque3dPrepass"],[3,"AlphaMask3dPrepass"],[3,"PrepassNode"],[4,"Tonemapping"],[4,"DebandDither"],[3,"TonemappingPlugin"],[3,"TonemappingLuts"],[3,"TonemappingPipelineKey"],[3,"TonemappingNode"],[3,"TonemappingPipeline"],[3,"BindGroupLayoutEntry"],[3,"ViewTarget"],[3,"UpscalingPlugin"],[3,"UpscalingNode"],[3,"DiagnosticsStore"],[3,"DiagnosticMeasurement"],[3,"Diagnostics"],[3,"DiagnosticId"],[3,"SystemMeta"],[3,"LogDiagnosticsPlugin"],[3,"EntityCountDiagnosticsPlugin"],[3,"FrameTimeDiagnosticsPlugin"],[3,"SystemInformationDiagnosticsPlugin"],[3,"DiagnosticsPlugin"],[3,"Entities"],[3,"Real"],[4,"DynamicPluginLoadError"],[3,"Archetypes"],[3,"ArchetypeRow"],[3,"ArchetypeId"],[3,"ArchetypeGeneration"],[3,"Edges"],[3,"ArchetypeEntity"],[3,"BundleId"],[4,"StorageType"],[3,"RangeFrom"],[3,"TableId"],[3,"BundleInfo"],[3,"Bundles"],[3,"MutUntyped"],[3,"Aligned"],[3,"PtrMut"],[3,"Ptr"],[3,"Mut"],[3,"ComponentTicks"],[3,"ComponentInfo"],[3,"ComponentDescriptor"],[3,"TickCells"],[8,"Component"],[3,"ComponentIdFor"],[3,"Layout"],[3,"EntityLocation"],[3,"RemovedComponentEntity"],[3,"EntityMapper"],[3,"ReserveEntitiesIterator"],[8,"Event"],[3,"Events"],[3,"EventReader"],[3,"ManualEventReader"],[3,"EventId"],[3,"EventIterator"],[3,"EventIteratorWithId"],[8,"IntoIterator"],[8,"Debug"],[8,"ExactSizeIterator"],[8,"IntoSystemSet"],[8,"System"],[8,"Condition"],[3,"AndThenMarker"],[3,"CombinatorSystem"],[3,"In"],[8,"States"],[3,"AdapterSystem"],[8,"Not"],[8,"IntoSystem"],[3,"NotMarker"],[3,"OrElseMarker"],[3,"Pipe"],[8,"PartialEq"],[3,"NonZeroUsize"],[3,"NonNull"],[8,"Copy"],[8,"SparseSetIndex"],[3,"FilteredAccessSet"],[8,"WorldQuery"],[8,"ReadOnlyWorldQuery"],[3,"QueryState"],[3,"NopWorldQuery"],[3,"BatchingStrategy"],[3,"QueryParIter"],[4,"QueryEntityError"],[4,"QueryComponentError"],[3,"QueryManyIter"],[3,"QueryCombinationIter"],[4,"QuerySingleError"],[3,"QueryIter"],[8,"ArchetypeFilter"],[3,"WorldId"],[3,"ReflectBundle"],[3,"EntityWorldMut"],[3,"TypeRegistry"],[3,"ReflectComponent"],[3,"ReflectResource"],[3,"ReflectBundleFns"],[3,"ReflectComponentFns"],[3,"ReflectMapEntities"],[3,"ReflectResourceFns"],[3,"AppTypeRegistry"],[3,"EntityRef"],[3,"UnsafeEntityCell"],[3,"RemovedComponents"],[3,"RemovedComponentReader"],[3,"RemovedComponentEvents"],[3,"Cloned"],[3,"IntoIter"],[3,"Flatten"],[3,"Map"],[3,"Schedules"],[8,"FromReflect"],[3,"State"],[3,"NextState"],[3,"OnEnter"],[3,"OnExit"],[3,"OnTransition"],[3,"ScheduleGraph"],[3,"BTreeSet"],[3,"SystemSchedule"],[4,"ScheduleBuildError"],[3,"Dag"],[4,"NodeId"],[3,"SystemTypeSet"],[3,"MainThreadExecutor"],[4,"ExecutorKind"],[4,"LogLevel"],[3,"AnonymousSet"],[3,"MultiThreadedExecutor"],[3,"SimpleExecutor"],[3,"SingleThreadedExecutor"],[4,"Directed"],[3,"GraphMap"],[8,"Hash"],[8,"ReadOnlySystem"],[3,"SparseSet"],[3,"Resources"],[3,"Column"],[3,"ComponentSparseSet"],[3,"Tables"],[3,"SparseSets"],[3,"ResourceData"],[3,"UnsafeCell"],[3,"Iter"],[3,"EntityCommands"],[8,"EntityCommand"],[8,"Command"],[3,"WithEntity"],[3,"SpawnBatch"],[8,"Bundle"],[3,"InsertOrSpawnBatch"],[3,"Insert"],[3,"TryInsert"],[8,"FromWorld"],[3,"InitResource"],[3,"InsertResource"],[3,"RemoveResource"],[3,"LogComponents"],[8,"SystemParam"],[3,"SystemState"],[3,"CommandQueue"],[3,"Spawn"],[3,"Despawn"],[3,"Remove"],[3,"RunSystem"],[8,"Combine"],[8,"ExclusiveSystemParamFunction"],[3,"ExclusiveFunctionSystem"],[8,"SystemParamFunction"],[3,"FunctionSystem"],[8,"Adapt"],[3,"NonSendMut"],[3,"SystemName"],[3,"SystemId"],[3,"ParallelCommands"],[8,"SystemBuffer"],[3,"Deferred"],[3,"NonSend"],[3,"StaticSystemParam"],[3,"SystemChangeTick"],[4,"RegisteredSystemError"],[8,"ReadOnlySystemParam"],[3,"RemovedSystem"],[3,"AncestorIter"],[3,"DescendantIter"],[3,"ParamSet"],[3,"EntityMut"],[3,"Ref"],[3,"WorldCell"],[3,"WorldBorrow"],[3,"WorldBorrowMut"],[3,"SpawnBatchIter"],[3,"RefFetch"],[3,"OwningPtr"],[3,"TryRunScheduleError"],[3,"GilrsPlugin"],[3,"RumbleSystem"],[3,"AabbGizmo"],[3,"GizmoPlugin"],[3,"GizmoConfig"],[3,"AabbGizmoConfig"],[3,"Gizmos"],[3,"Vec2"],[4,"Color"],[3,"Arc2dBuilder"],[3,"CircleBuilder"],[3,"Circle2dBuilder"],[3,"SphereBuilder"],[8,"TransformPoint"],[3,"Quat"],[3,"GltfPlugin"],[3,"MeshVertexAttribute"],[3,"GltfExtras"],[3,"GltfNode"],[3,"GltfMesh"],[3,"GltfPrimitive"],[3,"GltfLoader"],[4,"GltfError"],[3,"Gltf"],[4,"MorphBuildError"],[4,"TextureError"],[4,"GenerateTangentsError"],[4,"Error"],[4,"DecodeError"],[3,"ChildBuilder"],[3,"RemoveChildren"],[3,"ClearChildren"],[3,"ReplaceChildren"],[3,"RemoveParent"],[3,"Parent"],[3,"DespawnRecursive"],[3,"DespawnChildrenRecursive"],[3,"AddChild"],[3,"InsertChildren"],[3,"PushChildren"],[3,"ValidParentCheckPlugin"],[3,"HierarchyPlugin"],[3,"HashSet"],[4,"HierarchyEvent"],[3,"ReportHierarchyIssue"],[3,"WorldChildBuilder"],[8,"Eq"],[3,"Input"],[4,"ButtonState"],[3,"InputPlugin"],[3,"InputSystem"],[3,"Axis"],[3,"Gamepad"],[3,"GamepadInfo"],[4,"GamepadButtonType"],[3,"GamepadButton"],[3,"GamepadButtonInput"],[4,"GamepadAxisType"],[3,"GamepadAxis"],[3,"GamepadSettings"],[3,"ButtonSettings"],[3,"AxisSettings"],[3,"ButtonAxisSettings"],[4,"GamepadConnection"],[3,"GamepadConnectionEvent"],[3,"GamepadAxisChangedEvent"],[3,"GamepadButtonChangedEvent"],[4,"GamepadEvent"],[3,"GamepadRumbleIntensity"],[4,"GamepadRumbleRequest"],[3,"Gamepads"],[4,"AxisSettingsError"],[4,"ButtonSettingsError"],[3,"KeyboardInput"],[4,"KeyCode"],[3,"ScanCode"],[3,"MouseButtonInput"],[4,"MouseButton"],[3,"MouseMotion"],[4,"MouseScrollUnit"],[3,"MouseWheel"],[3,"Touches"],[3,"TouchInput"],[4,"ForceTouch"],[4,"TouchPhase"],[3,"Touch"],[3,"TouchpadMagnify"],[3,"TouchpadRotate"],[3,"LogPlugin"],[3,"Vec3A"],[3,"DVec2"],[3,"DVec3"],[3,"DVec4"],[3,"I64Vec2"],[3,"I64Vec3"],[3,"I64Vec4"],[3,"Affine2"],[3,"Affine3A"],[3,"Mat3A"],[3,"DAffine2"],[3,"DAffine3"],[3,"DMat2"],[3,"DMat3"],[3,"DMat4"],[3,"DQuat"],[15,"i64"],[3,"U64Vec2"],[3,"U64Vec3"],[3,"U64Vec4"],[3,"BVec3A"],[3,"BVec4A"],[3,"IRect"],[3,"Rect"],[3,"URect"],[4,"EulerRot"],[3,"IVec2"],[3,"IVec3"],[3,"IVec4"],[3,"Mat2"],[3,"Mat3"],[3,"Mat4"],[3,"UVec2"],[3,"UVec3"],[3,"UVec4"],[3,"Vec4"],[3,"Ray"],[3,"BVec2"],[3,"BVec3"],[3,"BVec4"],[3,"Affine3"],[3,"__m128"],[15,"i32"],[15,"i8"],[15,"i16"],[8,"Point"],[3,"CubicSegment"],[3,"CubicCurve"],[3,"CubicBezier"],[3,"Hermite"],[3,"CardinalSpline"],[3,"BSpline"],[8,"BufferRef"],[3,"Reader"],[8,"BufferMut"],[3,"Writer"],[3,"StandardMaterialFlags"],[3,"MeshFlags"],[3,"MeshPipelineKey"],[3,"MeshPipelineViewLayoutKey"],[4,"AlphaMode"],[8,"Material"],[8,"MaterialExtension"],[3,"ExtendedMaterial"],[3,"StandardMaterial"],[3,"CubemapVisibleEntities"],[3,"CascadesVisibleEntities"],[3,"EnvironmentMapLight"],[3,"FogSettings"],[4,"FogFalloff"],[3,"PointLight"],[3,"PointLightShadowMap"],[3,"SpotLight"],[3,"DirectionalLight"],[3,"DirectionalLightShadowMap"],[3,"CascadeShadowConfig"],[3,"Cascades"],[3,"Cascade"],[3,"AmbientLight"],[3,"NotShadowCaster"],[3,"NotShadowReceiver"],[4,"ShadowFilteringMethod"],[4,"ClusterFarZMode"],[3,"ClusterZConfig"],[4,"ClusterConfig"],[3,"DefaultOpaqueRendererMethod"],[4,"OpaqueRendererMethod"],[4,"ParallaxMappingMethod"],[3,"ScreenSpaceAmbientOcclusionSettings"],[4,"ScreenSpaceAmbientOcclusionQualityLevel"],[3,"StandardMaterialUniform"],[3,"Shadow"],[4,"GpuPointLights"],[4,"BindingResource"],[3,"CascadeShadowConfigBuilder"],[3,"MaterialPlugin"],[3,"PrepassPipelinePlugin"],[3,"PrepassPlugin"],[3,"FogPlugin"],[3,"ScreenSpaceAmbientOcclusionPlugin"],[3,"PbrPlugin"],[3,"MeshRenderPlugin"],[3,"NonZeroU64"],[3,"VisiblePointLights"],[3,"Without"],[3,"ViewClusterBindings"],[3,"MaterialPipelineKey"],[3,"MaterialMeshBundle"],[4,"SimulationLightSystems"],[3,"MaterialPipeline"],[3,"MaterialBindGroupId"],[3,"StandardMaterialKey"],[3,"PreviousViewProjection"],[3,"GpuFog"],[3,"GpuPointLight"],[3,"GpuDirectionalCascade"],[3,"GpuDirectionalLight"],[3,"GpuLights"],[3,"ShadowSamplers"],[3,"MeshUniform"],[3,"MeshPipeline"],[3,"MeshLayouts"],[3,"MeshPipelineViewLayout"],[3,"GlobalVisiblePointLights"],[3,"GpuPointLightsUniform"],[3,"GpuPointLightsStorage"],[3,"PrepareNextFrameMaterials"],[3,"PointLightBundle"],[3,"SpotLightBundle"],[3,"DirectionalLightBundle"],[3,"Clusters"],[3,"ExtractedMaterials"],[3,"RenderMaterials"],[3,"PreviousViewProjectionUniforms"],[3,"PrepassViewBindGroup"],[3,"FogMeta"],[3,"LightMeta"],[3,"RenderMeshInstances"],[3,"MeshBindGroups"],[3,"SkinUniform"],[3,"ScreenSpaceAmbientOcclusionBundle"],[4,"ShaderRef"],[3,"Camera"],[3,"Cell"],[3,"ThreadLocal"],[3,"SkinIndices"],[3,"SkinnedMeshInverseBindposes"],[3,"GlobalTransform"],[3,"ExtractedDirectionalLight"],[3,"MeshTransforms"],[3,"ViewPrepassTextures"],[4,"PrimitiveTopology"],[3,"PrepassPipeline"],[3,"GlobalLightMeta"],[4,"BufferBindingType"],[3,"VisibleEntities"],[3,"Mesh"],[3,"BindGroup"],[3,"PreparedMaterial"],[3,"SmallVec"],[3,"TextureView"],[3,"BindGroupLayout"],[8,"DoubleEndedIterator"],[3,"Iter"],[3,"IterNames"],[3,"Buffer"],[3,"ShadowPassNode"],[3,"RenderQueue"],[3,"RenderPhase"],[3,"ExtractedView"],[3,"FallbackImage"],[4,"GpuArrayBuffer"],[3,"MorphUniform"],[3,"ViewUniforms"],[3,"GlobalsBuffer"],[3,"DrawFunctions"],[3,"SpecializedMeshPipelines"],[3,"ExtractedInstances"],[3,"Or"],[3,"ExtractedPointLight"],[8,"PhaseItem"],[3,"TrackedRenderPass"],[4,"RenderCommandResult"],[3,"InnerMeshVertexBufferLayout"],[3,"FixedState"],[3,"Hashed"],[4,"ShaderDefVal"],[3,"VertexAttributeDescriptor"],[3,"MaterialExtensionPipeline"],[3,"MaterialExtensionKey"],[4,"SpecializedMeshPipelineError"],[3,"UnpreparedBindGroup"],[4,"AsBindGroupError"],[3,"DeferredPbrLightingPlugin"],[3,"PbrDeferredLightingDepthId"],[3,"DeferredOpaquePass3dPbrLightingNode"],[3,"DeferredLightingLayout"],[3,"Wireframe"],[3,"WireframeColor"],[3,"NoWireframe"],[3,"WireframeConfig"],[3,"WireframePlugin"],[3,"WireframeMaterial"],[4,"ReflectPathError"],[8,"ReflectPath"],[4,"Serializable"],[3,"Cube"],[3,"Box"],[3,"Quad"],[3,"Plane"],[3,"Capsule"],[4,"CapsuleUvProfile"],[3,"Cylinder"],[3,"Icosphere"],[3,"RegularPolygon"],[3,"Circle"],[3,"Torus"],[3,"UVSphere"],[8,"IsAligned"],[15,"isize"],[3,"ThinSlicePtr"],[3,"Unaligned"],[3,"DynamicArray"],[3,"DynamicList"],[3,"DynamicMap"],[3,"DynamicTuple"],[8,"Array"],[3,"ReflectFromPtr"],[3,"ArrayInfo"],[3,"NamedField"],[3,"UnnamedField"],[3,"ReflectFromReflect"],[3,"ListInfo"],[3,"MapInfo"],[3,"ParsedPath"],[3,"StructInfo"],[3,"TupleInfo"],[3,"TupleStructInfo"],[3,"ValueInfo"],[3,"TypePathTable"],[3,"TypeRegistryArc"],[3,"ReflectSerialize"],[3,"ReflectDeserialize"],[4,"DynamicVariant"],[3,"EnumInfo"],[4,"VariantInfo"],[3,"StructVariantInfo"],[3,"TupleVariantInfo"],[3,"UnitVariantInfo"],[8,"Enum"],[3,"ParseError"],[3,"AccessError"],[8,"Struct"],[8,"Tuple"],[8,"TupleStruct"],[3,"ArrayIter"],[3,"ListIter"],[3,"MapIter"],[3,"TupleFieldIter"],[8,"List"],[8,"Map"],[4,"VariantField"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[8,"Display"],[8,"Deserializer"],[8,"Visitor"],[3,"Deserializer"],[3,"Serializer"],[8,"Visitor"],[3,"Out"],[15,"i128"],[3,"Map"],[8,"Serialize"],[3,"Seq"],[3,"Struct"],[3,"StructVariant"],[3,"Tuple"],[3,"TupleStruct"],[3,"TupleVariant"],[3,"SerializationData"],[3,"SkippedField"],[3,"UntypedReflectDeserializer"],[3,"TypeRegistrationDeserializer"],[3,"TypedReflectDeserializer"],[3,"Iter"],[3,"ReflectSerializer"],[3,"TypedReflectSerializer"],[3,"ReflectValueSerializer"],[3,"StructSerializer"],[3,"TupleStructSerializer"],[3,"EnumSerializer"],[3,"TupleSerializer"],[3,"MapSerializer"],[3,"ListSerializer"],[3,"ArraySerializer"],[3,"ReflectDefault"],[8,"TypedProperty"],[3,"GenericTypeCell"],[3,"NonGenericTypeCell"],[3,"Render"],[3,"ExtractSchedule"],[3,"RenderApp"],[3,"RenderPlugin"],[4,"RenderSet"],[3,"MainWorld"],[8,"CachedRenderPipelinePhaseItem"],[3,"Viewport"],[3,"CameraRenderGraph"],[4,"RenderTarget"],[4,"NormalizedRenderTarget"],[3,"ManualTextureViewHandle"],[4,"Projection"],[3,"PerspectiveProjection"],[4,"ScalingMode"],[3,"OrthographicProjection"],[8,"CameraProjection"],[8,"GetTypeRegistration"],[3,"CameraProjectionPlugin"],[3,"CameraPlugin"],[3,"WindowResized"],[3,"WindowCreated"],[3,"PrimaryWindow"],[3,"ManualTextureViews"],[3,"RenderTargetInfo"],[3,"ComputedCameraValues"],[4,"CameraOutputMode"],[3,"TemporalJitter"],[3,"ManualTextureView"],[3,"CameraUpdateSystem"],[3,"SortedCameras"],[3,"ExtractedCamera"],[3,"ExtractedWindows"],[4,"TextureFormat"],[3,"CameraDriverNode"],[4,"HexColorError"],[8,"ShaderType"],[8,"WriteInto"],[3,"UniformComponentPlugin"],[8,"ExtractComponent"],[3,"ExtractComponentPlugin"],[3,"ComponentUniforms"],[3,"DynamicUniformIndex"],[3,"DynamicUniformBuffer"],[8,"ExtractInstance"],[3,"ExtractInstancesPlugin"],[8,"ExtractResource"],[3,"ExtractResourcePlugin"],[3,"GlobalsUniform"],[3,"GlobalsPlugin"],[8,"GpuArrayBufferable"],[3,"GpuComponentArrayBufferPlugin"],[4,"Indices"],[4,"VertexAttributeValues"],[3,"MeshVertexAttributeId"],[3,"MeshPlugin"],[3,"GpuMesh"],[4,"GpuBufferInfo"],[3,"Aabb"],[3,"MissingVertexAttributeError"],[3,"VertexBufferLayout"],[4,"VertexFormat"],[4,"PrepareAssetError"],[3,"MeshMorphWeights"],[3,"MorphPlugin"],[3,"MorphAttributes"],[3,"MorphTargetImage"],[3,"SkinnedMesh"],[3,"RenderExtractApp"],[3,"PipelinedRenderingPlugin"],[3,"SpatialBundle"],[3,"Frustum"],[3,"CubemapFrusta"],[3,"CascadesFrusta"],[3,"Sphere"],[3,"HalfSpace"],[8,"RenderAsset"],[8,"RenderAssetDependency"],[3,"RenderAssetPlugin"],[3,"ExtractedAssets"],[3,"PrepareNextFrameAssets"],[3,"RenderGraph"],[8,"Node"],[3,"NodeId"],[4,"NodeLabel"],[4,"SlotLabel"],[4,"Edge"],[4,"SlotValue"],[4,"SlotType"],[3,"SlotInfo"],[3,"EmptyNode"],[3,"SlotInfos"],[4,"RunSubGraphError"],[4,"OutputSlotError"],[4,"InputSlotError"],[4,"EdgeExistence"],[4,"RenderGraphError"],[3,"RunSubGraph"],[3,"NodeState"],[3,"Edges"],[3,"Sampler"],[8,"ViewNode"],[3,"ViewNodeRunner"],[3,"GraphInputNode"],[3,"RunGraphOnViewNode"],[3,"DrawFunctionsInternal"],[8,"Draw"],[3,"ViewRangefinder3d"],[8,"RenderCommand"],[3,"RenderCommandState"],[3,"RenderPass"],[8,"SliceIndex"],[3,"BufferSlice"],[4,"IndexFormat"],[3,"ShaderStages"],[3,"RenderPipeline"],[3,"StorageBuffer"],[3,"BufferUsages"],[3,"DynamicStorageBuffer"],[3,"UniformBuffer"],[3,"ColorWrites"],[8,"Pod"],[3,"BufferVec"],[3,"PreparedBindGroup"],[4,"Source"],[4,"TextureAspect"],[3,"CommandEncoder"],[3,"ComputePassDescriptor"],[3,"ComputePass"],[3,"QuerySet"],[3,"RenderPassDescriptor"],[3,"Buffer"],[3,"Texture"],[3,"ImageSubresourceRange"],[3,"WgpuAdapterInfo"],[3,"BufferInitDescriptor"],[4,"TextureViewDimension"],[4,"ShaderSource"],[4,"BlendFactor"],[3,"ShaderModuleDescriptor"],[4,"BlendOperation"],[3,"BlendComponent"],[3,"BlendState"],[3,"ColorTargetState"],[3,"BufferBinding"],[4,"FrontFace"],[4,"LoadOp"],[4,"Face"],[3,"Operations"],[4,"PolygonMode"],[3,"RenderPassColorAttachment"],[3,"RenderPassDepthStencilAttachment"],[3,"PrimitiveState"],[3,"MultisampleState"],[3,"TextureViewDescriptor"],[3,"PipelineLayoutDescriptor"],[3,"SamplerDescriptor"],[3,"BindGroupEntry"],[3,"BindGroupDescriptor"],[3,"RawVertexBufferLayout"],[3,"RawVertexState"],[3,"RawFragmentState"],[3,"RawRenderPipelineDescriptor"],[3,"RawComputePipelineDescriptor"],[3,"BindGroupLayoutDescriptor"],[4,"MapMode"],[3,"StencilState"],[3,"DepthBiasState"],[3,"DepthStencilState"],[4,"StencilOperation"],[3,"StencilFaceState"],[4,"CompareFunction"],[4,"VertexStepMode"],[3,"VertexAttribute"],[4,"TextureDimension"],[3,"Origin3d"],[3,"Extent3d"],[4,"AddressMode"],[4,"FilterMode"],[3,"PushConstantRange"],[3,"ImageDataLayout"],[4,"TextureSampleType"],[4,"StorageTextureAccess"],[4,"SamplerBindingType"],[4,"BindingType"],[3,"ImageCopyBufferBase"],[3,"ImageCopyTextureBase"],[3,"BindGroupId"],[3,"ErasedBindGroup"],[3,"BindGroupLayoutId"],[3,"ErasedBindGroupLayout"],[3,"BufferId"],[3,"ErasedBuffer"],[3,"GpuArrayBufferIndex"],[3,"RenderPipelineId"],[3,"ErasedRenderPipeline"],[3,"ComputePipelineId"],[3,"ErasedComputePipeline"],[3,"ComputePipeline"],[3,"FragmentState"],[3,"ComputePipelineDescriptor"],[3,"ErasedShaderModule"],[3,"ErasedPipelineLayout"],[3,"CachedComputePipelineId"],[3,"ShaderId"],[3,"Shader"],[4,"ShaderImport"],[3,"TextureId"],[3,"ErasedTexture"],[3,"Texture"],[3,"TextureViewId"],[3,"ErasedTextureView"],[3,"ErasedSurfaceTexture"],[3,"SamplerId"],[3,"ErasedSampler"],[4,"ShaderStage"],[8,"SpecializedRenderPipeline"],[8,"SpecializedComputePipeline"],[3,"SpecializedComputePipelines"],[8,"SpecializedMeshPipeline"],[3,"ShaderLoader"],[3,"BindGroupEntries"],[3,"DynamicBindGroupEntries"],[3,"SurfaceTexture"],[3,"ShaderModule"],[3,"PipelineLayout"],[8,"IntoBindingArray"],[8,"IntoIndexedBindingArray"],[3,"CommandBuffer"],[4,"OwnedBindingResource"],[4,"PipelineDescriptor"],[4,"Pipeline"],[4,"CachedPipelineState"],[4,"PipelineCacheError"],[4,"ShaderReflectError"],[4,"ShaderLoaderError"],[3,"SurfaceTexture"],[3,"BindGroup"],[3,"BindGroupLayout"],[3,"RenderPipeline"],[3,"ComputePipeline"],[3,"ComposerError"],[4,"ValidationError"],[3,"WithSpan"],[3,"ParseError"],[4,"Error"],[3,"FromUtf8Error"],[3,"TextureView"],[3,"Sampler"],[3,"DynamicUniformBufferWriter"],[3,"WgpuFeatures"],[3,"TextureFormatFeatures"],[8,"IntoBinding"],[8,"RangeBounds"],[3,"Origin2d"],[4,"PredefinedColorSpace"],[3,"ImageCopyTextureTagged"],[3,"StorageBuffer"],[3,"UniformBuffer"],[3,"DynamicStorageBuffer"],[3,"DynamicUniformBuffer"],[3,"ArrayLength"],[8,"CreateFrom"],[4,"Error"],[8,"ReadFrom"],[3,"AlignmentValue"],[3,"EnlargeError"],[3,"SizeValue"],[3,"TryReserveError"],[3,"ErasedRenderDevice"],[3,"RenderAdapter"],[3,"RenderInstance"],[3,"RenderAdapterInfo"],[3,"Surface"],[3,"SurfaceConfiguration"],[3,"BufferDescriptor"],[3,"CommandEncoderDescriptor"],[3,"RenderBundleEncoderDescriptor"],[3,"RenderBundleEncoder"],[3,"TextureDescriptor"],[4,"RenderGraphRunnerError"],[3,"Device"],[3,"Instance"],[3,"WgpuSettings"],[3,"RequestAdapterOptions"],[3,"WgpuLimits"],[3,"BufferSlice"],[3,"SubmissionIndex"],[4,"Maintain"],[3,"Backends"],[4,"PowerPreference"],[4,"Dx12Compiler"],[4,"WgpuSettingsPriority"],[4,"RenderCreation"],[4,"Backend"],[3,"CompressedImageFormats"],[4,"ImageFormat"],[4,"ImageFormat"],[3,"ImagePlugin"],[3,"ExrTextureLoader"],[3,"HdrTextureLoader"],[4,"ImageSampler"],[3,"DefaultImageSampler"],[4,"DataFormat"],[4,"TranscodeFormat"],[3,"GpuImage"],[3,"ImageLoader"],[3,"CachedTexture"],[3,"Dds"],[3,"FallbackImageFormatMsaaCache"],[4,"ImageFormatSetting"],[3,"ImageLoaderSettings"],[3,"FallbackImageZero"],[3,"FallbackImageCubemap"],[4,"CompressedImageSaverError"],[4,"ExrTextureLoaderError"],[4,"HdrTextureLoaderError"],[4,"ImageType"],[4,"ImageLoaderError"],[3,"FileTextureError"],[4,"ImageError"],[4,"DynamicImage"],[3,"FallbackImageMsaa"],[3,"BasicDataFormatDescriptor"],[3,"SampleInformation"],[3,"Format"],[3,"Reader"],[3,"CompressedImageSaver"],[4,"IntoDynamicImageError"],[3,"RenderLayers"],[4,"Visibility"],[3,"InheritedVisibility"],[3,"ViewVisibility"],[3,"NoFrustumCulling"],[3,"ColorGrading"],[3,"VisibilityPlugin"],[3,"WindowRenderPlugin"],[3,"ViewPlugin"],[4,"VisibilitySystems"],[3,"ViewUniform"],[3,"VisibilityBundle"],[3,"NonSendMarker"],[3,"WindowSurfaces"],[3,"Color"],[3,"PostProcessWrite"],[3,"ScreenshotToScreenPipeline"],[3,"ScreenshotPlugin"],[3,"ScreenshotManager"],[3,"ScreenshotAlreadyRequestedError"],[3,"DynamicSceneBuilder"],[4,"SceneFilter"],[3,"DynamicScene"],[3,"ScenePlugin"],[3,"InstanceId"],[3,"Scene"],[4,"SceneSpawnError"],[3,"SceneBundle"],[3,"DynamicSceneBundle"],[3,"SceneSpawner"],[3,"SceneInstance"],[3,"SceneLoader"],[4,"SceneLoaderError"],[3,"InstanceInfo"],[4,"Error"],[3,"SceneDeserializer"],[3,"SceneEntitiesDeserializer"],[3,"SceneEntityDeserializer"],[3,"SceneMapDeserializer"],[3,"SceneSerializer"],[3,"EntitiesSerializer"],[3,"EntitySerializer"],[3,"SceneMapSerializer"],[3,"DynamicTextureAtlasBuilder"],[3,"TextureAtlas"],[3,"TextureAtlasBuilder"],[3,"ColorMaterialFlags"],[3,"MeshFlags"],[3,"Mesh2dPipelineKey"],[3,"SpritePipelineKey"],[3,"ColorMaterial"],[3,"Mesh2dHandle"],[3,"Sprite"],[4,"Anchor"],[3,"TextureAtlasSprite"],[3,"ColorMaterialUniform"],[8,"Material2d"],[3,"Material2dPlugin"],[3,"ColorMaterialPlugin"],[3,"Mesh2dRenderPlugin"],[3,"SpritePlugin"],[3,"Material2dKey"],[3,"SpriteBundle"],[3,"SpriteSheetBundle"],[3,"Material2dPipeline"],[3,"Material2dBindGroupId"],[3,"MaterialMesh2dBundle"],[3,"Mesh2dUniform"],[3,"Mesh2dPipeline"],[3,"SpriteBatch"],[4,"SpriteSystem"],[3,"PrepareNextFrameMaterials"],[3,"RenderMaterial2dInstances"],[3,"ExtractedMaterials2d"],[3,"RenderMaterials2d"],[3,"RenderMesh2dInstances"],[3,"ExtractedSprites"],[3,"SpriteAssetEvents"],[3,"SpriteMeta"],[3,"ImageBindGroups"],[4,"TextureAtlasBuilderError"],[3,"Mesh2dTransforms"],[3,"SpritePipeline"],[3,"PreparedMaterial2d"],[3,"FixedBitSet"],[3,"ViewUniformOffset"],[4,"Collision"],[3,"TaskPool"],[3,"TaskPoolBuilder"],[3,"Task"],[8,"ParallelIterator"],[3,"Chain"],[3,"Cloned"],[3,"Copied"],[3,"Cycle"],[3,"ThreadExecutor"],[3,"ComputeTaskPool"],[3,"AsyncComputeTaskPool"],[3,"IoTaskPool"],[3,"Scope"],[3,"Filter"],[3,"FilterMap"],[3,"FlatMap"],[3,"Flatten"],[3,"ThreadExecutorTicker"],[3,"Fuse"],[3,"Inspect"],[3,"Map"],[3,"Task"],[8,"Product"],[8,"Sum"],[3,"GlyphBrush"],[3,"Font"],[3,"FontArc"],[3,"FontId"],[3,"FontAtlas"],[3,"GlyphId"],[3,"SubpixelOffset"],[3,"FontAtlasSet"],[3,"OutlinedGlyph"],[3,"GlyphAtlasInfo"],[4,"TextError"],[3,"PositionedGlyph"],[3,"TextLayoutInfo"],[3,"Text"],[3,"TextSection"],[4,"TextAlignment"],[3,"TextStyle"],[4,"BreakLineOn"],[3,"Text2dBounds"],[3,"TextPlugin"],[3,"TextMeasureSection"],[3,"TextMeasureInfo"],[3,"Text2dBundle"],[8,"ToSectionText"],[3,"SectionGlyph"],[3,"FontAtlasSets"],[3,"FontLoader"],[3,"TextPipeline"],[3,"TextSettings"],[3,"FontAtlasWarning"],[3,"Window"],[4,"FontLoaderError"],[3,"Point"],[3,"InvalidFont"],[3,"SectionText"],[4,"YAxisOrientation"],[3,"WindowScaleFactorChanged"],[3,"Fixed"],[3,"Stopwatch"],[3,"Timer"],[4,"TimerMode"],[3,"Virtual"],[3,"TimePlugin"],[3,"TimeSystem"],[4,"TrySendError"],[4,"TimeUpdateStrategy"],[3,"Instant"],[3,"SendError"],[3,"TransformPlugin"],[3,"TransformBundle"],[4,"TransformSystem"],[3,"AddChildInPlace"],[3,"RemoveParentInPlace"],[3,"TransformHelper"],[4,"ComputeGlobalTransformError"],[4,"Val"],[3,"UiRect"],[3,"ContentSize"],[4,"Interaction"],[3,"RelativeCursorPosition"],[4,"FocusPolicy"],[3,"Node"],[3,"Style"],[4,"AlignItems"],[4,"JustifyItems"],[4,"AlignSelf"],[4,"JustifySelf"],[4,"AlignContent"],[4,"JustifyContent"],[4,"Direction"],[4,"Display"],[4,"FlexDirection"],[3,"Overflow"],[4,"OverflowAxis"],[4,"PositionType"],[4,"FlexWrap"],[4,"GridAutoFlow"],[4,"MinTrackSizingFunction"],[4,"MaxTrackSizingFunction"],[3,"GridTrack"],[4,"GridTrackRepetition"],[3,"RepeatedGridTrack"],[3,"GridPlacement"],[3,"BackgroundColor"],[3,"UiTextureAtlasImage"],[3,"BorderColor"],[3,"Outline"],[3,"UiImage"],[3,"CalculatedClip"],[4,"ZIndex"],[3,"UiScale"],[8,"From"],[3,"TransparentUi"],[3,"UiPlugin"],[3,"FixedMeasure"],[4,"ValArithmeticError"],[3,"UiPipelineKey"],[4,"RenderUiSystem"],[4,"AvailableSpace"],[4,"GridPlacementError"],[4,"UiSystem"],[3,"UiSurface"],[3,"WindowResolution"],[3,"ExtractedUiNodes"],[3,"UiMeta"],[3,"UiImageBindGroups"],[3,"UiStack"],[4,"LayoutError"],[3,"UiPipeline"],[3,"Layout"],[3,"NodeQueryState"],[3,"UiPassNode"],[3,"UiBatch"],[8,"Measure"],[3,"State"],[3,"NodeQuery"],[4,"MeasureFunc"],[3,"LayoutContext"],[3,"UiCameraConfig"],[3,"NodeBundle"],[3,"ButtonBundle"],[3,"ImageBundle"],[3,"AtlasImageBundle"],[3,"TextBundle"],[3,"Button"],[3,"UiImageSize"],[3,"Label"],[3,"TextFlags"],[3,"ImageMeasure"],[3,"TextMeasure"],[3,"Braced"],[3,"Hyphenated"],[3,"Simple"],[3,"Urn"],[3,"PassHash"],[3,"EntityHash"],[3,"RandomState"],[3,"FloatOrd"],[8,"Ord"],[3,"PassHasher"],[3,"EntityHasher"],[3,"Signature"],[8,"TryInto"],[4,"Error"],[3,"OnDrop"],[3,"Delay"],[3,"TimeSpec"],[3,"TimeSpec"],[3,"TimeSpec"],[3,"Error"],[3,"Timestamp"],[4,"Variant"],[4,"Version"],[8,"BuildHasher"],[8,"PartialOrd"],[3,"TryFromFloatSecsError"],[8,"Allocator"],[3,"HashTable"],[4,"TryReserveError"],[8,"Equivalent"],[3,"Difference"],[3,"Drain"],[3,"Drain"],[3,"Drain"],[4,"Entry"],[4,"Entry"],[4,"Entry"],[4,"EntryRef"],[3,"ExtractIf"],[3,"ExtractIf"],[3,"ExtractIf"],[3,"OccupiedEntry"],[3,"AbsentEntry"],[8,"ToOwned"],[3,"Intersection"],[3,"IntoIter"],[3,"IterMut"],[3,"Iter"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"IntoKeys"],[3,"IntoValues"],[3,"Keys"],[3,"RawEntryBuilder"],[3,"RawEntryBuilderMut"],[3,"RawTable"],[3,"SymmetricDifference"],[3,"OccupiedError"],[3,"Union"],[3,"Values"],[3,"ValuesMut"],[4,"RawEntryMut"],[3,"RawOccupiedEntryMut"],[3,"RawVacantEntryMut"],[3,"OccupiedEntry"],[3,"VacantEntry"],[8,"Borrow"],[3,"OccupiedEntryRef"],[3,"VacantEntryRef"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"VacantEntry"],[3,"Bucket"],[3,"RawIter"],[3,"RawDrain"],[3,"RawIntoIter"],[3,"InsertSlot"],[3,"RawIterHash"],[3,"NonMaxI8"],[3,"NonMaxI16"],[3,"NonMaxI32"],[3,"NonMaxI64"],[3,"NonMaxI128"],[3,"NonMaxIsize"],[3,"NonMaxU8"],[3,"NonMaxU16"],[3,"NonMaxU64"],[3,"NonMaxU128"],[3,"NonMaxUsize"],[3,"TryFromIntError"],[3,"ParseIntError"],[4,"Infallible"],[3,"TryFromIntError"],[3,"ParseIntError"],[8,"EdgeType"],[8,"IndexType"],[3,"Graph"],[3,"NodeIndex"],[3,"EdgeIndex"],[4,"EdgeDirection"],[4,"Undirected"],[3,"EdgeIndices"],[3,"EdgeReferences"],[3,"EdgeWeights"],[3,"EdgeWeightsMut"],[3,"Edges"],[3,"EdgesConnecting"],[3,"Externals"],[3,"StableGraph"],[4,"CompactDirection"],[8,"GraphIndex"],[3,"Neighbors"],[3,"NodeIndices"],[3,"NodeWeights"],[3,"NodeWeightsMut"],[3,"Edge"],[3,"Node"],[3,"List"],[3,"EdgeIndex"],[3,"OutgoingEdgeIndices"],[3,"Neighbors"],[3,"EdgeReference"],[3,"EdgeIndices"],[3,"NodeIndices"],[3,"EdgeReferences"],[3,"OutgoingEdgeReferences"],[8,"NodeCount"],[8,"IntoNeighborsDirected"],[8,"IntoEdges"],[8,"Visitable"],[8,"IntoNodeIdentifiers"],[8,"NodeIndexable"],[3,"Paths"],[3,"NegativeCycle"],[3,"DfsSpace"],[8,"Data"],[8,"IntoNodeReferences"],[3,"MinSpanningTree"],[3,"Cycle"],[8,"NodeCompactIndexable"],[8,"IntoEdgeReferences"],[3,"Matching"],[8,"VisitMap"],[3,"TarjanScc"],[8,"Measure"],[3,"RandomState"],[3,"HashMap"],[3,"MatchedEdges"],[8,"GraphProp"],[8,"BoundedMeasure"],[8,"IntoNeighbors"],[8,"GraphRef"],[8,"EdgeCount"],[8,"GetAdjacencyMatrix"],[8,"DataMap"],[8,"IntoEdgesDirected"],[3,"MatchedNodes"],[3,"Dominators"],[3,"DominatorsIter"],[3,"DominatedByIter"],[8,"GraphBase"],[3,"Csr"],[3,"EdgesNotSorted"],[3,"Edges"],[3,"EdgeReference"],[3,"EdgeReferences"],[3,"Neighbors"],[3,"NodeIdentifiers"],[3,"NodeReferences"],[8,"IntoWeightedEdge"],[4,"Element"],[3,"FilterElements"],[4,"Config"],[3,"Dot"],[3,"Frozen"],[3,"WalkNeighbors"],[3,"EdgeReference"],[3,"NodeReferences"],[8,"EdgeIndexable"],[8,"DataMapMut"],[8,"Index"],[8,"IndexMut"],[3,"Ptr"],[8,"NodeTrait"],[3,"Nodes"],[3,"Neighbors"],[3,"NeighborsDirected"],[3,"Edges"],[3,"EdgesDirected"],[3,"AllEdges"],[3,"NodeIdentifiers"],[3,"NodeReferences"],[3,"AllEdgesMut"],[8,"Nullable"],[3,"MatrixGraph"],[3,"NodeIdentifiers"],[3,"NodeReferences"],[3,"EdgeReferences"],[3,"Neighbors"],[3,"Edges"],[8,"Zero"],[3,"NotZero"],[3,"Dfs"],[3,"DfsPostOrder"],[3,"Bfs"],[3,"HashSet"],[3,"WalkNeighbors"],[3,"NodeReferences"],[3,"EdgeReference"],[3,"Edges"],[3,"EdgesConnecting"],[3,"EdgeReferences"],[3,"Externals"],[3,"Neighbors"],[3,"NodeIndices"],[3,"EdgeIndices"],[3,"UnionFind"],[3,"Reversed"],[3,"ReversedEdgeReference"],[4,"Control"],[3,"Time"],[4,"DfsEvent"],[3,"Topo"],[3,"WalkerIter"],[3,"NodeFiltered"],[3,"NodeFilteredNeighbors"],[3,"NodeFilteredNodes"],[3,"NodeFilteredEdgeReferences"],[3,"NodeFilteredEdges"],[3,"EdgeFiltered"],[3,"EdgeFilteredNeighbors"],[3,"EdgeFilteredEdges"],[3,"EdgeFilteredNeighborsDirected"],[3,"ReversedEdges"],[3,"ReversedEdgeReferences"],[8,"Walker"],[8,"ControlFlow"],[8,"FilterNode"],[8,"FilterEdge"],[8,"EdgeRef"],[3,"SyncCell"],[3,"SyncUnsafeCell"],[3,"Metadata"],[3,"Level"],[4,"Level"],[3,"Identifier"],[3,"Id"],[3,"ValueSet"],[3,"Span"],[3,"Dispatch"],[3,"Current"],[8,"Subscriber"],[3,"WeakDispatch"],[3,"Entered"],[3,"EnteredSpan"],[3,"LevelFilter"],[3,"Event"],[8,"AsField"],[3,"Field"],[3,"FieldSet"],[8,"Value"],[8,"FormatFields"],[3,"Registry"],[8,"FormatEvent"],[8,"MakeWriter"],[3,"Layer"],[3,"Layered"],[8,"Layer"],[3,"SubscriberBuilder"],[3,"ParseLevelError"],[3,"Instrumented"],[3,"Kind"],[3,"Attributes"],[8,"Visit"],[3,"Record"],[3,"Interest"],[3,"DefaultCallsite"],[8,"Callsite"],[3,"DefaultGuard"],[3,"SetGlobalDefaultError"],[3,"Iter"],[3,"DisplayValue"],[3,"DebugValue"],[3,"Empty"],[3,"WithDispatch"],[3,"ParseLevelFilterError"],[3,"Context"],[3,"NoSubscriber"],[4,"CursorIcon"],[3,"RequestRedraw"],[3,"WindowCloseRequested"],[3,"WindowClosed"],[3,"WindowDestroyed"],[3,"CursorMoved"],[3,"CursorEntered"],[3,"CursorLeft"],[3,"ReceivedCharacter"],[4,"Ime"],[3,"WindowFocused"],[3,"WindowBackendScaleFactorChanged"],[4,"FileDragAndDrop"],[3,"WindowMoved"],[3,"WindowThemeChanged"],[4,"ApplicationLifetime"],[4,"WindowRef"],[3,"NormalizedWindowRef"],[3,"WindowResizeConstraints"],[3,"Cursor"],[4,"WindowPosition"],[4,"CursorGrabMode"],[3,"InternalWindowState"],[4,"MonitorSelection"],[4,"PresentMode"],[4,"CompositeAlphaMode"],[4,"WindowMode"],[4,"WindowLevel"],[4,"WindowTheme"],[3,"EnabledButtons"],[3,"WindowPlugin"],[3,"RawHandleWrapper"],[4,"ExitCondition"],[3,"ThreadLockedRawWindowHandleWrapper"],[4,"RawDisplayHandle"],[4,"RawWindowHandle"],[3,"WinitPlugin"],[4,"UpdateMode"],[3,"WinitWindows"],[3,"EventLoopWindowTarget"],[3,"AccessKitAdapters"],[3,"WinitActionHandlers"],[3,"Window"],[3,"WinitSettings"],[3,"MonitorHandle"],[3,"VideoMode"],[3,"WindowId"],[3,"PhysicalPosition"],[3,"AccessibilityPlugin"],[3,"WinitActionHandler"],[8,"ActionHandler"],[8,"PluginGroup"],[13,"Loop"],[4,"AssetMode"],[8,"ErasedAssetLoader"],[8,"AsyncReadExt"],[8,"AsyncWriteExt"],[8,"AssetApp"],[8,"VisitAssetDependencies"],[13,"Added"],[13,"Modified"],[13,"Removed"],[13,"LoadedWithDependencies"],[13,"Index"],[13,"Uuid"],[13,"RequestedHandleTypeMismatch"],[13,"MissingLabel"],[13,"DeserializeMeta"],[13,"AssetLoaderError"],[13,"CannotLoadProcessedAsset"],[13,"CannotLoadIgnoredAsset"],[13,"Index"],[13,"Uuid"],[13,"RemovedUnknown"],[13,"RenamedAsset"],[13,"RenamedMeta"],[13,"RenamedFolder"],[13,"Load"],[13,"Process"],[13,"Load"],[13,"Process"],[3,"ProcessorTransactionLog"],[13,"AssetReaderError"],[13,"AssetWriterError"],[13,"ReadAssetMetaError"],[8,"ErasedAssetSaver"],[8,"CpalSample"],[8,"AddAudioSource"],[8,"AudioSinkPlayback"],[3,"NonSendMarker"],[3,"DebugName"],[8,"Zeroable"],[3,"ViewCASPipeline"],[3,"DeferredLightingIdDepthTexture"],[3,"CameraFxaaPipeline"],[3,"MsaaWritebackBlitPipeline"],[3,"ViewTonemappingPipeline"],[3,"ViewUpscalingPipeline"],[8,"RegisterDiagnostic"],[8,"DynamicPluginExt"],[8,"DetectChangesMut"],[8,"DetectChanges"],[8,"ComponentStorage"],[3,"TableStorage"],[3,"SparseStorage"],[8,"MapEntities"],[8,"UnsafeCellDeref"],[3,"Has"],[3,"AnyOf"],[3,"Added"],[3,"Changed"],[8,"ReflectCommandExt"],[3,"NodeConfig"],[13,"Configs"],[8,"ExclusiveSystemParam"],[8,"RunSystemOnce"],[13,"UnsupportedPrimitive"],[8,"BuildChildren"],[8,"BuildWorldChildren"],[8,"DespawnRecursiveExt"],[8,"HierarchyQueryExt"],[13,"ChildAdded"],[13,"ChildRemoved"],[13,"ChildMoved"],[13,"LiveZoneLowerBoundGreaterThanDeadZoneLowerBound"],[13,"DeadZoneUpperBoundGreaterThanLiveZoneUpperBound"],[13,"ReleaseThresholdGreaterThanPressThreshold"],[13,"Add"],[13,"Stop"],[13,"Calibrated"],[8,"Vec3Swizzles"],[8,"Vec4Swizzles"],[8,"Vec2Swizzles"],[8,"CubicGenerator"],[4,"LightEntity"],[3,"MaterialProperties"],[3,"SetMaterialBindGroup"],[3,"SetPrepassViewBindGroup"],[3,"RenderMeshInstance"],[3,"SetMeshViewBindGroup"],[3,"SetMeshBindGroup"],[3,"DrawMesh"],[3,"PreviousGlobalTransform"],[3,"PreviousViewProjectionUniformOffset"],[3,"ViewFogUniformOffset"],[3,"ExtractedClusterConfig"],[3,"ExtractedClustersPointLights"],[3,"ShadowView"],[3,"ViewShadowBindings"],[3,"ViewLightEntities"],[3,"ViewLightsUniformOffset"],[3,"Mesh3d"],[3,"MeshViewBindGroup"],[3,"SkinIndex"],[3,"ScreenSpaceAmbientOcclusionTextures"],[13,"XYZ"],[13,"FixedZ"],[13,"Exponential"],[13,"ExponentialSquared"],[13,"Linear"],[13,"Atmospheric"],[13,"Directional"],[13,"Point"],[13,"Spot"],[13,"Relief"],[13,"Custom"],[3,"DeferredLightingPipeline"],[8,"GetField"],[8,"GetTupleStructField"],[8,"GetPath"],[8,"BuildChildrenTransformExt"],[13,"Rgba"],[13,"RgbaLinear"],[13,"Hsla"],[13,"Lcha"],[13,"DroppedFile"],[13,"HoveredFile"],[13,"HoveredFileCanceled"],[13,"Preedit"],[13,"Commit"],[13,"Enabled"],[13,"Disabled"],[8,"TypeUuid"],[8,"FromType"],[8,"GetTupleField"],[8,"DynamicTypePath"],[8,"Typed"],[8,"TypeUuidDynamic"],[13,"InvalidAccess"],[13,"ParseError"],[8,"DeserializeValue"],[3,"TypePathComponent"],[8,"GetBatchData"],[3,"NoAutomaticBatching"],[3,"SortedCamera"],[3,"MipBias"],[13,"Write"],[13,"Fixed"],[13,"AutoMax"],[13,"AutoMin"],[3,"HslRepresentation"],[3,"LchRepresentation"],[8,"SrgbColorSpace"],[8,"VertexFormatSize"],[13,"Indexed"],[13,"TooManyAttributes"],[13,"TooManyTargets"],[3,"MainToRenderAppSender"],[3,"RenderToMainAppReceiver"],[8,"RenderGraphApp"],[13,"SlotEdge"],[13,"NodeEdge"],[13,"MismatchedSlotType"],[13,"MismatchedSlotType"],[13,"MismatchedNodeSlots"],[13,"UnconnectedNodeInputSlot"],[13,"NodeInputSlotAlreadyOccupied"],[13,"UnconnectedNodeOutputSlot"],[13,"MismatchedInputSlotType"],[13,"MissingInput"],[8,"AddRenderCommand"],[3,"SetItemPipeline"],[8,"AsBindGroup"],[8,"ShaderSize"],[3,"CachedPipeline"],[8,"AsBindGroupShaderType"],[13,"StorageTexture"],[13,"Buffer"],[13,"Texture"],[13,"Storage"],[13,"Astc"],[13,"Float"],[8,"CalculateSizeFor"],[3,"WriteContext"],[3,"ReadContext"],[13,"BufferTooSmall"],[8,"AsMutMatrixParts"],[8,"AsRefMatrixParts"],[8,"FromMatrixParts"],[8,"Length"],[8,"Truncate"],[8,"AsMutVectorParts"],[8,"AsRefVectorParts"],[8,"FromVectorParts"],[13,"MismatchedInputSlotType"],[13,"MissingInput"],[13,"MismatchedInputCount"],[13,"EmptyNodeOutputSlot"],[13,"Dxc"],[8,"BevyDefault"],[8,"TextureFormatPixelInfo"],[8,"Volume"],[3,"ExtractedWindow"],[3,"ViewDepthTexture"],[3,"ScreenshotPreparedState"],[3,"DynamicEntity"],[3,"SceneInstanceReady"],[13,"NonExistentScene"],[13,"NonExistentRealScene"],[13,"UnregisteredType"],[13,"UnregisteredComponent"],[13,"UnregisteredResource"],[13,"UnregisteredButReflectedType"],[13,"NoRepresentedType"],[3,"ExtractedSprite"],[3,"SetMaterial2dBindGroup"],[3,"RenderMesh2dInstance"],[3,"SetMesh2dViewBindGroup"],[3,"SetMesh2dBindGroup"],[3,"DrawMesh2d"],[3,"SetSpriteViewBindGroup"],[3,"SetSpriteTextureBindGroup"],[3,"DrawSpriteBatch"],[3,"Mesh2d"],[3,"Mesh2dBindGroup"],[3,"Mesh2dViewBindGroup"],[8,"ParallelSlice"],[8,"ParallelSliceMut"],[3,"TimeReceiver"],[3,"TimeSender"],[3,"SetUiViewBindGroup"],[3,"SetUiTextureBindGroup"],[3,"DrawUiNode"],[3,"ExtractedUiNode"],[3,"NodeQueryReadOnly"],[3,"NodeQueryItem"],[3,"NodeQueryReadOnlyItem"],[3,"DefaultCameraView"],[8,"PreHashMapExt"],[13,"AllocError"],[8,"DynHash"],[8,"FloatMeasure"],[8,"Build"],[8,"ElementIterator"],[8,"FromElements"],[8,"Create"],[13,"Edge"],[13,"Node"],[8,"NodeRef"],[8,"Instrument"],[8,"WithSubscriber"],[8,"AsId"],[13,"Reactive"],[13,"ReactiveLowPower"]],"a":{"apply_system_buffers":[13222,14856,40868],"cross":[25587,25588,30198,31471],"determinant":[25587,25588,30198,31471],"force feedback":[19941],"haptic feedback":[19941],"llogo":[21528,22374,40718],"lmeta":[21528,22374,40718],"lwin":[21528,22374,40718],"magnitude":[25271,25272,25273,25274,25275,30067,30068,30069,30070],"magnitude2":[25281,25282,25283,25284,25285,25286,25287,25288,25289,25290,25291,30075,30076,30077,30078,31425,31426,31427,33599,33600,33601],"mix":[25292,25293,25294,25295,25296,30079,30080,30081,30082],"pivot":[61354],"repeating":[65862],"rlogo":[21529,22375,40719],"rmeta":[21529,22375,40719],"rwin":[21529,22375,40719],"scale":[24643,24644,24645,24646,29863,29864,29865],"specular_intensity":[38390,39668,41275],"transparent":[47355],"vibrate":[19941],"vibration":[19941],"vsync":[80112],"wedge":[25587,25588,30198,31471],"world_to_screen":[47317]}}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
